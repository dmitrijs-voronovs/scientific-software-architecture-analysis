id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/openbabel/openbabel/pull/2008:465,Energy Efficiency,charge,charges,465,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:1053,Integrability,depend,dependency,1053,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:37,Safety,redund,redundant,37,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:1040,Safety,avoid,avoid,1040,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:15,Testability,test,test,15,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:123,Testability,test,testroundtrip,123,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:857,Testability,test,tests,857,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:884,Testability,test,testing,884,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/pull/2008:966,Testability,test,test,966,"I've created a test suite of 14k non-redundant ligands from the pdb. These are provided as reasonably processed sdf files. testroundtrip.py verifies that they can be read in and roundtripped (with hydrogens) through sdf, mol2, and pdb file formats without mucking things up. . Initially there were thousands of failures. Now there are none. You can go through all the commits for the details, but here are the bigger changes:. - mol2 file format now outputs formal charges with a UNIT_ATOM_ATTR record (there is an option to disable its output); - pdb files now output bond orders through the popular but non-standard convention of duplicating CONECT records; - sdf files will only have aliases treated as substructure replacements if the target atom is a wildcard; - numerous adjustments to bond typing rules to make them more conservative. The additional tests add a few minutes to testing, but I think it's very important that we include them. This sort of large test set is needed. Plans for the future:; - port python driver to c++ to avoid python dependency; - make things work without having to roundtrip the molecules with hydrogens; - compare protonation states to rdkit, find and fix errors; - additional file formats for roundtripping",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008
https://github.com/openbabel/openbabel/issues/2009:312,Energy Efficiency,allocate,allocated,312,"I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: win10, centos7. In SHELX format all atoms are per default in PART 0 unless stated differently.; If there is a disorder in crystal structure atoms belonging to disordered residues are allocated in different parts. Atoms from these parts do not ""see"" each other -- they should not be bound.; e.g. if there is a disorder of solvent molecule (toulene), one would expect that SMILES should have a single ""c1(ccccc1)C"" string, however because of overlap of two molecules in the same space a ""[C]([C]C)C[C][C@@H]([CH])[C]([C]C)C/[C]=[C]/[CH].[H].[H].[H]"" smiles is generated. ## Steps to Reproduce; Try to convert the input below (only disordered toluene left):. TITL sad_a.res in P2(1)/n; CELL 0.71073 10.7618 16.4437 22.3018 90.000 100.437 90.000; ZERR 4.000 0.0003 0.0004 0.0005 0.000 0.001 0.000; LATT 1; SYMM 1/2-X, 1/2+Y, 1/2-Z; SFAC C H N AL P CL PT; UNIT 148 212 8 0 8 12 4; L.S. 10; FMAP 2; WGHT 0.100000; FVAR 0.21682; SIMU 0.005 c1_9 > c7_10; PART 1 10.5; RESI 9 TOL; AFIX 6; C1 1 0.281906 0.174048 0.513612 10.50000 0.02798; C2 1 0.276265 0.237667 0.554749 10.50000 0.02807; AFIX 43; H2 2 0.340139 0.242955 0.590006 10.50000 -1.20000; AFIX 5; C3 1 0.176491 0.293496 0.543929 10.50000 0.03168; AFIX 43; H3 2 0.172663 0.336667 0.571844 10.50000 -1.20000; AFIX 5; C4 1 0.082363 0.285705 0.491972 10.50000 0.03155; AFIX 43; H4 2 0.014662 0.323590 0.484629 10.50000 -1.20000; AFIX 5; C5 1 0.088004 0.222083 0.450835 10.50000 0.03071; AFIX 43; H5 2 0.024128 0.216794 0.415579 10.50000 -1.20000; AFIX 5; C6 1 0.187777 0.166255 0.461654 10.50000 0.02654; AFIX 43; H6 2 0.191608 0.123086 0.433738 10.50000 -1.20000; AFIX 5; C7 1 0.390230 0.113433 0.525358 10.50000 0.03712; AFIX 33; H7A 2 0.379791 0.073196 0.492410 10.50000 -1.50000; H7B 2 0.470512 0.142197 0.526935 10.50000 -1.50000; H7C 2 0.390226 0.085825 0.564301 10.50000 -1.50000; AFIX 0; RESI 0; PART 2 10.5; RESI 10 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2009
https://github.com/openbabel/openbabel/pull/2010:220,Deployability,update,updated,220,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:765,Deployability,update,updated,765,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:1089,Deployability,update,update,1089,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:1000,Energy Efficiency,charge,charge,1000,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:1103,Energy Efficiency,charge,charges,1103,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:829,Performance,perform,perform,829,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:782,Testability,test,testing,782,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/pull/2010:956,Testability,test,test,956,"This is an alternative fix to generating crazy hydrogens. Instead of defaulting to a hybridization 2 kind of bond, if the builder doesn't think there is a reasonable bond vector, then the hydrogen isn't added. I've also updated the documentation for GetNewBondVector to state that a non-finite vector can be returned if there isn't a reasonable location for another atom. This restores the old behavior of GetNewBondVector (return non-finite bond vectors), which is good in the off chance anyone was relying on it while still fixing the problem. In the corner case that a molecule has multiple conformers, some where the hydrogen can be added and some where it can't the hydrogen is added at (0,0,0), but I'm not sure this can actually happen. This also comes with updated hydrogen testing code. The goal is to eventually always perform consistent and reasonable protonation and this PR is a baby step in that direction. Incidentally, the problem with the test molecule is that it has had the formal charge information stripped from the azide. In my perfect world, AddHydrogens would also update formal charges if doing so resulted in a more reasonable molecule than adding a hydrogen.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010
https://github.com/openbabel/openbabel/issues/2011:230,Deployability,update,updated,230,"As part of Avogadro2, I wrote a script to get ""canonical"" residue information from PDB ligand expo: https://github.com/OpenChemistry/avogadrolibs/blob/master/scripts/getresdata.py. I think it's worth updating data/resdata.txt ; - updated atom names; - new residues; - official bond orders. Some of the OB residues aren't canonical and I'm not sure if we should retire them.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2011
https://github.com/openbabel/openbabel/issues/2013:657,Integrability,depend,depending,657,"It seems that Open Babel in some cases does not correctly convert Gaussian input files to SMILES. Nitrogen may get two double bonds. I cannot place a several MB Gaussian file here. Which is the actual part Open Babel is extracting (start/end keywords)?; It looks like if I convert first to InChI and then this InChI to SMILES I get a higher success rate of correct molecules. ; - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Win7, Win10. ## Expected Behavior; Get correct SMILES from Gaussian output files. ## Actual Behavior; Get quite some number of incorrect SMILES depending on structure/aromatic bonds, e.g. =N= ; e.g. Diphenylbenzimidazole; N1(c2ccccc2)[C]2C=CC=CC2=[N]=C1c1ccccc1; Quite a few molecules containing Benzimidazole were wrong.; For illustration see [https://chemistry.stackexchange.com/q/118683/81125](https://chemistry.stackexchange.com/q/118683/81125)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2013
https://github.com/openbabel/openbabel/issues/2014:150,Availability,fault,fault,150,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:492,Availability,error,error,492,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:532,Availability,fault,fault,532,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:675,Availability,fault,fault,675,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:326,Deployability,install,installed,326,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:348,Deployability,install,install,348,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:416,Deployability,install,installed,416,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2014:101,Usability,learn,learning,101,"Dear Administrator, . scPDB dataset provides protein structures by mol2 format.; To generate machine learning features I used pybel, but Segmentation fault has been occurred for large protein file. - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: openbabel 2.4.1 (conda-forge) installed with `conda install`; Operating system and version: CentOS7, anaconda3-2018.12 (installed by pyenv). ## Expected Behavior; Reading protein.mol2 without any error. ## Actual Behavior; Segmentation fault was occurred. ## Steps to Reproduce; ```py; import pybel; mol = next(pybel.readfile(""mol2"", ""scPDB/1e1q_4/protein.mol2"")) # Segmentation fault; ```. corresponding URL to scPDB:; http://bioinfo-pharma.u-strasbg.fr/scPDB/SITE=1e1q_4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2014
https://github.com/openbabel/openbabel/issues/2016:1548,Testability,test,test,1548,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016
https://github.com/openbabel/openbabel/issues/2016:1614,Testability,test,test,1614,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016
https://github.com/openbabel/openbabel/issues/2016:2235,Testability,test,test,2235,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016
https://github.com/openbabel/openbabel/issues/2016:2402,Testability,test,test,2402,"ourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. This issue is similar to issue #780 but not the same. The problematic atom names occur in DNA strands not in proteins. ## Environment Information; Open Babel version: 2.4.1 ; Operating system and version: Linux 2.6.32-220.el6.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am converting a PDB file containing two strands of DNA into the XYZ format. The terminal bases in the DNA strands have hydrogen atoms labeled HO3' and HO5'. In the XYZ file produced they should be labeled as H for Hydrogen. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; The atoms labeled HO3' and HO5' in the PDB file are translated into Ho (Holmium) instead of into Hydrogen. This produces rather unnatural DNA. As I have about 6000 structures to convert I don't want to fix this by hand. - [test.pdb.gz](https://github.com/openbabel/openbabel/files/3530515/test.pdb.gz) The PDB file with the offending atoms numbered 7715, 8313, 8314, and 8918.; - [test_wrong.xyz.gz](https://github.com/openbabel/openbabel/files/3530517/test_wrong.xyz.gz) The XYZ file produced by OpenBabel.; - [test_expected.xyz.gz](https://github.com/openbabel/openbabel/files/3530520/test_expected.xyz.gz) The XYZ file corrected by hand. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The incorrect XYZ file was produced by running:; `obabel -ipdb test.pdb -O test_wrong.xyz`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2016
https://github.com/openbabel/openbabel/pull/2017:3,Deployability,update,update,3,"…s update maxgrad; proposed fix for github issue 1366. I think this fixes issue #1366 ; The problem was that the maxgrad variable was never being updated (and thus was never found to be lower than its initial value of 1.0e20). Therefore, the energetic criteria for convergence could be satisfied, but not the gradient condition. This change affects the steepest descent and conjugate gradients (N steps) methods.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2017
https://github.com/openbabel/openbabel/pull/2017:146,Deployability,update,updated,146,"…s update maxgrad; proposed fix for github issue 1366. I think this fixes issue #1366 ; The problem was that the maxgrad variable was never being updated (and thus was never found to be lower than its initial value of 1.0e20). Therefore, the energetic criteria for convergence could be satisfied, but not the gradient condition. This change affects the steepest descent and conjugate gradients (N steps) methods.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2017
https://github.com/openbabel/openbabel/pull/2017:121,Modifiability,variab,variable,121,"…s update maxgrad; proposed fix for github issue 1366. I think this fixes issue #1366 ; The problem was that the maxgrad variable was never being updated (and thus was never found to be lower than its initial value of 1.0e20). Therefore, the energetic criteria for convergence could be satisfied, but not the gradient condition. This change affects the steepest descent and conjugate gradients (N steps) methods.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2017
https://github.com/openbabel/openbabel/issues/2018:47,Availability,Down,Downloading,47,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:350,Availability,error,error,350,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:358,Availability,ERROR,ERROR,358,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:373,Availability,error,errored,373,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:1781,Availability,Error,Error,1781,"'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please se",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2080,Availability,ERROR,ERROR,2080,"t (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature reques",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2095,Availability,error,errored,2095,"t (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature reques",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:6,Deployability,install,install,6,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:197,Deployability,Install,Installing,197,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:256,Deployability,install,install,256,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:305,Deployability,install,install,305,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:559,Deployability,install,install-,559,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:662,Deployability,install,install-,662,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:866,Deployability,install,install,866,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:939,Deployability,install,install-record,939,"$ pip install openbabel; Collecting openbabel; Downloading https://files.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:1050,Deployability,install,install-,1050,"iles.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; -------------------------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:1116,Deployability,install,install,1116,"iles.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; -------------------------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:1815,Deployability,install,installed,1815,"'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2029,Deployability,install,install,2029,"t (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature reques",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2271,Deployability,install,install-,2271,"n37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2374,Deployability,install,install-,2374,"ry_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2578,Deployability,install,install,2578,"templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2651,Deployability,install,install-record,2651,"templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:1157,Modifiability,config,config,1157,"iles.pythonhosted.org/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); Installing collected packages: openbabel; Running setup.py install for openbabel: started; Running setup.py install for openbabel: finished with status 'error'; ERROR: Command errored out with exit status 1:; command: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile; cwd: C:\Users\kovalp\AppData\Local\Temp\pip-install-ia976ty6\openbabel\; Complete output (14 lines):; running install; running build_ext; Warning: pkg-config could not be found.; Guessing Open Babel location:; - include_dirs: ['c:\\program files\\python37\\include', 'c:\\program files\\python37\\include', '/usr/local/include/openbabel-2.0']; - library_dirs: ['c:\\program files\\python37\\libs', 'c:\\program files\\python37\\PCbuild\\amd64', '/usr/local/lib']; building '_openbabel' extension; swigging openbabel-python.i to openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-Ic:\program files\python37\include"" ""-Ic:\program files\python37\include"" -I/usr/local/include/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; -------------------------------",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:2727,Testability,log,logs,2727,"nclude/openbabel-2.0 -o openbabel-python_wrap.cpp openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel-2.0 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2018:3971,Testability,test,test,3971,"-----; ERROR: Command errored out with exit status 1: 'c:\program files\python37\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\kovalp\\AppData\\Local\\Temp\\pip-install-ia976ty6\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\kovalp\AppData\Local\Temp\pip-record-o_uehc4w\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018
https://github.com/openbabel/openbabel/issues/2020:1214,Testability,test,test,1214,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2020
https://github.com/openbabel/openbabel/pull/2022:103,Energy Efficiency,energy,energy,103,"Needs unit tests, but supported for MMFF94, GAFF, and Ghemical; force fields. Enables minimization and energy evaluation with; decreased electrostatic components (e.g., set epsilon to 500); or dielectric of different solvents.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2022
https://github.com/openbabel/openbabel/pull/2022:11,Testability,test,tests,11,"Needs unit tests, but supported for MMFF94, GAFF, and Ghemical; force fields. Enables minimization and energy evaluation with; decreased electrostatic components (e.g., set epsilon to 500); or dielectric of different solvents.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2022
https://github.com/openbabel/openbabel/issues/2023:70,Performance,load,load,70,"Dear all,; I seek support for an issue where I try to programmaticaly load an fingerprint which is generated in the OpenBabel GUI and saved to a text file. The fingerprint looks like that:; ```; > 1535 bits set ; f78f653f f788fbd1 f788fbd1 f788fbd1 f483f4e7 ef8b7e2f ; e9e5be3f e9e5be3f e9e5be3f e2d45009 dfe49bdf dfe49bdf ; d9934563 d6e3f7a2 d6e0861f d6e0861f c7a9894e c691f1d5 ; c5a51b2f c38b3152 c38b3152 c18d73f0 ba1039b8 ba1039b8 ; b6c804e7 b1ce8ba1 acaf0910 a795d505 9e35e385 9933b3d4 ; 9630d053 8ded7546 7a817362 76258d45 72c49066 6ff1d590 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6ab48711 69a2560a 69a2560a 69a2560a ; 69a2560a 5faf488d 5faf488d 5faf488d 572f25d6 565a47ac ; 530075b3 4e8b69b6 4a7b5d42 4a7b5d42 4a7b5d42 4a7b5d42 ; 468e2b3d 45b91d6a 45b91d6a 45b91d6a 45b91d6a 44a4d88c ; 439d6fa4 4236ab98 41f91858 3e57602f 3cd9ba8b 3cd9ba8b ; 3cd9ba8b 3cd9ba8b 3cd9ba8b 3b1ca892 3b1ca892 385eeb12 ; 372c3bca 3579bb6d 3579bb6d 2cf5676b 21451a2d 20afc63a ; 20afc63a 1f92b832 1d8532eb 1c66c562 1170108b 1170108b ; 1170108b 1170108b 1170108b 1170108b 1170108b 015cf378 ; ```; I try to read this fingerprint from the textfile using OBDotNet Version=0.5.0.0 in C#.; I have read the posting from [Andrew Dalke](http://www.dalkescientific.com/writings/diary/archive/2008/06/27/generating_fingerprints_with_openbabel.html); and I lerned that I need to pay attention to BigEndian and LowEndian conversions. Essentially, I read each block as a hexadecimal formatted Unsigned integer, do a BigEndian to LowEndian conversion and add the result to a list of `unsigned Integers`. After that loop I reverse the `list<uint>` to generate the `OpenBabel.VectorUInt`. However, while some positions of the generated fingerprint are correct, many positions (without any pattern I can recognize) do not match to a `OpenBabel.VectorUInt` which is directly generated from the identical structure using the OpenBabel.Net library. What am I doing wrong? Can somebody share some code on ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023
https://github.com/openbabel/openbabel/issues/2023:3297,Testability,test,test,3297,"to BigEndian and LowEndian conversions. Essentially, I read each block as a hexadecimal formatted Unsigned integer, do a BigEndian to LowEndian conversion and add the result to a list of `unsigned Integers`. After that loop I reverse the `list<uint>` to generate the `OpenBabel.VectorUInt`. However, while some positions of the generated fingerprint are correct, many positions (without any pattern I can recognize) do not match to a `OpenBabel.VectorUInt` which is directly generated from the identical structure using the OpenBabel.Net library. What am I doing wrong? Can somebody share some code on how to shuffle the bytes?. Thank you very much in advance!; Jan. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023
https://github.com/openbabel/openbabel/issues/2024:249,Performance,load,load,249,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024
https://github.com/openbabel/openbabel/issues/2024:411,Testability,test,test,411,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024
https://github.com/openbabel/openbabel/issues/2024:424,Testability,test,test,424,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024
https://github.com/openbabel/openbabel/issues/2024:466,Testability,test,test,466,"I don't understand why the residue number gets appended to the residue name here:; https://github.com/openbabel/openbabel/blob/90739b4c5caf8f1af41c968354a5bfbb1f3aa630/src/formats/mol2format.cpp#L672-L673. This in fact leads to an issue that if you load and save *.mol2, the residue number gets appended to the residue name every time. For instance, use obabel on the same file multiple times:; ```sh; $ obabel test.mol2 -O test.mol2; ```. Example file:; ```; $ cat test.mol2; @<TRIPOS>MOLECULE; *****; 9 9 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 C -1.1751 -0.1984 0.0000 C.3 1 MYRES 0.1808; 2 N -2.3491 0.6420 0.0000 N.pl3 1 MYRES -0.3222; 3 C -1.9564 1.9915 0.0000 C.2 1 MYRES 0.0049; 4 C -0.5897 2.0518 0.0000 C.2 1 MYRES 0.0049; 5 N -0.0796 0.7422 0.0000 N.pl3 1 MYRES -0.3222; 6 R1 -3.3224 0.3062 0.0000 H 1 MYRES 0.1478; 7 R2 -2.6318 2.8365 0.0000 H 1 MYRES 0.0791; 8 R2 0.0087 2.9530 0.0000 H 1 MYRES 0.0791; 9 R1 0.9195 0.4933 0.0000 H 1 MYRES 0.1478; @<TRIPOS>BOND; 1 1 2 1; 2 2 3 1; 3 2 6 1; 4 3 4 2; 5 3 7 1; 6 4 5 1; 7 4 8 1; 8 5 1 1; 9 5 9 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2024
https://github.com/openbabel/openbabel/issues/2025:874,Availability,echo,echo,874,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04. `OBSmartsPattern` does not match itself for some SMARTS.; The simplest example was `[c]1ccc[c]c1`. ```; $ echo '[c]1ccc[c]c1' | obgrep -c '[c]1ccc[c]c1'; 0; ```. I know there are limitations in the current implementation ([Wiki](https://openbabel.org/wiki/SMARTS)), but this does not seem to be reported.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2025
https://github.com/openbabel/openbabel/issues/2025:830,Usability,simpl,simplest,830,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04. `OBSmartsPattern` does not match itself for some SMARTS.; The simplest example was `[c]1ccc[c]c1`. ```; $ echo '[c]1ccc[c]c1' | obgrep -c '[c]1ccc[c]c1'; 0; ```. I know there are limitations in the current implementation ([Wiki](https://openbabel.org/wiki/SMARTS)), but this does not seem to be reported.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2025
https://github.com/openbabel/openbabel/pull/2026:122,Deployability,Update,UpdateCoordinates,122,"When 3D coordinates were generated with obabel, `fast` and `fastest` options yielded the same structure. This is because `UpdateCoordinates()` was missing after force field cleanup when ` fast` is specified. This pull request solves this issue.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2026
https://github.com/openbabel/openbabel/pull/2027:17,Deployability,install,installation,17,Ignore in-source installation within `install/`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2027
https://github.com/openbabel/openbabel/pull/2027:38,Deployability,install,install,38,Ignore in-source installation within `install/`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2027
https://github.com/openbabel/openbabel/pull/2031:189,Integrability,message,message,189,"When both of `-p` and `-h` options are set, the `obabel` will behave as adding all implicit atoms without considering the pH environment, just like using `-h` only.; This PR adds a warning message to warn users when both of these options are set.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2031
https://github.com/openbabel/openbabel/issues/2033:2078,Availability,error,error,2078,"or; make -j2; Scanning dependencies of target maeparser; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeBlock.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Buffer.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeParser.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Reader.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Writer.cpp.o; [ 2%] Linking CXX shared library ../../lib/libmaeparser.so; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::after(char const*&, char*&, bool)':; zlib.cpp:(.text+0x13c): undefined reference to `crc32'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::reset(bool, bool)':; zlib.cpp:(.text+0x1b1): undefined reference to `deflateReset'; zlib.cpp:(.text+0x1c6): undefined reference to `inflateEnd'; zlib.cpp:(.text+0x1d9): undefined reference to `inflateReset'; zlib.cpp:(.text+0x1f1): undefined reference to `deflateEnd'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::do_init(boost::iostreams::zlib_params const&, bool, void* (*)(void*, unsigned int, unsigned int), void (*)(void*, void*), void*)':; zlib.cpp:(.text+0x510): undefined reference to `inflateInit2_'; zlib.cpp:(.text+0x543): undefined reference to `deflateInit2_'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xdeflate(int)':; zlib.cpp:(.text+0x184): undefined reference to `deflate'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xinflate(int)':; zlib.cpp:(.text+0x194): undefined reference to `inflate'; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libmaeparser.so.1.1] Error 1; make[1]: *** [external/maeparser-1.1/CMakeFiles/maeparser.dir/all] Error 2; make: *** [all] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033
https://github.com/openbabel/openbabel/issues/2033:2151,Availability,Error,Error,2151,"or; make -j2; Scanning dependencies of target maeparser; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeBlock.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Buffer.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeParser.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Reader.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Writer.cpp.o; [ 2%] Linking CXX shared library ../../lib/libmaeparser.so; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::after(char const*&, char*&, bool)':; zlib.cpp:(.text+0x13c): undefined reference to `crc32'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::reset(bool, bool)':; zlib.cpp:(.text+0x1b1): undefined reference to `deflateReset'; zlib.cpp:(.text+0x1c6): undefined reference to `inflateEnd'; zlib.cpp:(.text+0x1d9): undefined reference to `inflateReset'; zlib.cpp:(.text+0x1f1): undefined reference to `deflateEnd'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::do_init(boost::iostreams::zlib_params const&, bool, void* (*)(void*, unsigned int, unsigned int), void (*)(void*, void*), void*)':; zlib.cpp:(.text+0x510): undefined reference to `inflateInit2_'; zlib.cpp:(.text+0x543): undefined reference to `deflateInit2_'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xdeflate(int)':; zlib.cpp:(.text+0x184): undefined reference to `deflate'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xinflate(int)':; zlib.cpp:(.text+0x194): undefined reference to `inflate'; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libmaeparser.so.1.1] Error 1; make[1]: *** [external/maeparser-1.1/CMakeFiles/maeparser.dir/all] Error 2; make: *** [all] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033
https://github.com/openbabel/openbabel/issues/2033:2227,Availability,Error,Error,2227,"or; make -j2; Scanning dependencies of target maeparser; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeBlock.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Buffer.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeParser.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Reader.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Writer.cpp.o; [ 2%] Linking CXX shared library ../../lib/libmaeparser.so; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::after(char const*&, char*&, bool)':; zlib.cpp:(.text+0x13c): undefined reference to `crc32'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::reset(bool, bool)':; zlib.cpp:(.text+0x1b1): undefined reference to `deflateReset'; zlib.cpp:(.text+0x1c6): undefined reference to `inflateEnd'; zlib.cpp:(.text+0x1d9): undefined reference to `inflateReset'; zlib.cpp:(.text+0x1f1): undefined reference to `deflateEnd'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::do_init(boost::iostreams::zlib_params const&, bool, void* (*)(void*, unsigned int, unsigned int), void (*)(void*, void*), void*)':; zlib.cpp:(.text+0x510): undefined reference to `inflateInit2_'; zlib.cpp:(.text+0x543): undefined reference to `deflateInit2_'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xdeflate(int)':; zlib.cpp:(.text+0x184): undefined reference to `deflate'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xinflate(int)':; zlib.cpp:(.text+0x194): undefined reference to `inflate'; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libmaeparser.so.1.1] Error 1; make[1]: *** [external/maeparser-1.1/CMakeFiles/maeparser.dir/all] Error 2; make: *** [all] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033
https://github.com/openbabel/openbabel/issues/2033:2252,Availability,Error,Error,2252,"or; make -j2; Scanning dependencies of target maeparser; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeBlock.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Buffer.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeParser.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Reader.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Writer.cpp.o; [ 2%] Linking CXX shared library ../../lib/libmaeparser.so; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::after(char const*&, char*&, bool)':; zlib.cpp:(.text+0x13c): undefined reference to `crc32'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::reset(bool, bool)':; zlib.cpp:(.text+0x1b1): undefined reference to `deflateReset'; zlib.cpp:(.text+0x1c6): undefined reference to `inflateEnd'; zlib.cpp:(.text+0x1d9): undefined reference to `inflateReset'; zlib.cpp:(.text+0x1f1): undefined reference to `deflateEnd'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::do_init(boost::iostreams::zlib_params const&, bool, void* (*)(void*, unsigned int, unsigned int), void (*)(void*, void*), void*)':; zlib.cpp:(.text+0x510): undefined reference to `inflateInit2_'; zlib.cpp:(.text+0x543): undefined reference to `deflateInit2_'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xdeflate(int)':; zlib.cpp:(.text+0x184): undefined reference to `deflate'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xinflate(int)':; zlib.cpp:(.text+0x194): undefined reference to `inflate'; collect2: error: ld returned 1 exit status; make[2]: *** [lib/libmaeparser.so.1.1] Error 1; make[1]: *** [external/maeparser-1.1/CMakeFiles/maeparser.dir/all] Error 2; make: *** [all] Error 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033
https://github.com/openbabel/openbabel/issues/2033:282,Integrability,depend,dependencies,282,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: latest git clone; Operating system and version: RHEL7, latest cmake from source. ## Expected Behavior; compile. ## Actual Behavior; make -j2; Scanning dependencies of target maeparser; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeBlock.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Buffer.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/MaeParser.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Reader.cpp.o; [ 1%] Building CXX object external/maeparser-1.1/CMakeFiles/maeparser.dir/Writer.cpp.o; [ 2%] Linking CXX shared library ../../lib/libmaeparser.so; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::after(char const*&, char*&, bool)':; zlib.cpp:(.text+0x13c): undefined reference to `crc32'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::reset(bool, bool)':; zlib.cpp:(.text+0x1b1): undefined reference to `deflateReset'; zlib.cpp:(.text+0x1c6): undefined reference to `inflateEnd'; zlib.cpp:(.text+0x1d9): undefined reference to `inflateReset'; zlib.cpp:(.text+0x1f1): undefined reference to `deflateEnd'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::do_init(boost::iostreams::zlib_params const&, bool, void* (*)(void*, unsigned int, unsigned int), void (*)(void*, void*), void*)':; zlib.cpp:(.text+0x510): undefined reference to `inflateInit2_'; zlib.cpp:(.text+0x543): undefined reference to `deflateInit2_'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xdeflate(int)':; zlib.cpp:(.text+0x184): undefined reference to `deflate'; /usr/local/lib/libboost_iostreams.a(zlib.o): In function `boost::iostreams::detail::zlib_base::xinflate",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033
https://github.com/openbabel/openbabel/pull/2035:60,Performance,perform,performed,60,This should fix #2021. Problem was that alias expansion was performed while looping over the atoms.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2035
https://github.com/openbabel/openbabel/pull/2036:27,Availability,mainten,maintenance,27,"Here are my notes from the maintenance repo:; ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel-3.0"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.0.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.0.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.0.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.0.pc.cmake openbabel-3.0.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2036
https://github.com/openbabel/openbabel/pull/2036:438,Deployability,install,install,438,"Here are my notes from the maintenance repo:; ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel-3.0"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.0.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.0.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.0.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.0.pc.cmake openbabel-3.0.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2036
https://github.com/openbabel/openbabel/pull/2036:308,Modifiability,config,config,308,"Here are my notes from the maintenance repo:; ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel-3.0"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.0.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.0.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.0.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.0.pc.cmake openbabel-3.0.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2036
https://github.com/openbabel/openbabel/pull/2036:1010,Modifiability,Config,Config,1010,"Here are my notes from the maintenance repo:; ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel-3.0"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.0.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.0.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.0.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.0.pc.cmake openbabel-3.0.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2036
https://github.com/openbabel/openbabel/pull/2036:1021,Modifiability,Config,ConfigVersion,1021,"Here are my notes from the maintenance repo:; ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel-3.0"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.0.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.0.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.0.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.0.pc.cmake openbabel-3.0.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2036
https://github.com/openbabel/openbabel/pull/2038:48,Integrability,depend,depends,48,"Valgrind was reporting Conditional jump or move depends on uninitialised value(s); I am pretty sure that initializing to zeroes is the right thing to do,; but don't really grok the kekulize code so perhaps this is a symptom of; a larger problem. It's certainly an improvement over reading; uninitialized values.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2038
https://github.com/openbabel/openbabel/pull/2039:72,Deployability,release,release,72,"The original description of the SMILES 'k' option, which is new in this release, caused the GUI to turn it on by default. That was not intended.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2039
https://github.com/openbabel/openbabel/pull/2040:586,Deployability,install,install,586,"A follow-up to #2036. From my brief Googling, I think the .pc file is now named as it should be. And I left the hyphen out of the include folder - I don't think it's usually there. My notes now read:. ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel3"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.pc.cmake openbabel-3.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2040
https://github.com/openbabel/openbabel/pull/2040:460,Modifiability,config,config,460,"A follow-up to #2036. From my brief Googling, I think the .pc file is now named as it should be. And I left the hyphen out of the include folder - I don't think it's usually there. My notes now read:. ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel3"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.pc.cmake openbabel-3.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2040
https://github.com/openbabel/openbabel/pull/2040:1152,Modifiability,Config,Config,1152,"A follow-up to #2036. From my brief Googling, I think the .pc file is now named as it should be. And I left the hyphen out of the include folder - I don't think it's usually there. My notes now read:. ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel3"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.pc.cmake openbabel-3.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2040
https://github.com/openbabel/openbabel/pull/2040:1163,Modifiability,Config,ConfigVersion,1163,"A follow-up to #2036. From my brief Googling, I think the .pc file is now named as it should be. And I left the hyphen out of the include folder - I don't think it's usually there. My notes now read:. ```; On going from 2.x to 3.x, for example, you should make a few more changes:. 1. CMakeLists.txt::; ; set(OB_INCLUDE_DIRS ""include/openbabel3"") in CMakeLists.txt; and; set(OB_EXPORTS_FILE ""${openbabel_BINARY_DIR}/OpenBabel3_EXPORTS.cmake"") . 2. The package config section::. configure_file(${openbabel_SOURCE_DIR}/openbabel-3.pc.cmake; ${openbabel_BINARY_DIR}/openbabel-3.pc @ONLY); install(FILES ${openbabel_BINARY_DIR}/openbabel-3.pc; DESTINATION ${LIB_INSTALL_DIR}/pkgconfig). and::. git mv openbabel-2.pc.cmake openbabel-3.pc.cmake. 3. dlhandler_win32.cpp::. handle = GetModuleHandle(""openbabel-3.dll"");//CMake/VC++2008 build will use this. 4. src/CMakeLists.txt::. # Set the output name to openbabel-3 (preserves old behaviour). Is this desired?; set_target_properties(openbabel PROPERTIES; OUTPUT_NAME openbabel-3); remove_definitions(_UNICODE UNICODE); ; 5. Then there's a whole bunch of lines in CMakeLists.txt starting with::. # Create the Config and ConfigVersion files in the build directory, useful to; ; and the associated files::. git mv OpenBabel2Config.cmake.in OpenBabel3Config.cmake.in; git mv OpenBabel2ConfigVersion.cmake.in OpenBabel3ConfigVersion.cmake.in; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2040
https://github.com/openbabel/openbabel/issues/2041:179,Availability,failure,failure,179,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041
https://github.com/openbabel/openbabel/issues/2041:496,Availability,failure,failure,496,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041
https://github.com/openbabel/openbabel/issues/2041:4,Testability,assert,assertion,4,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041
https://github.com/openbabel/openbabel/issues/2041:207,Testability,test,test,207,"The assertion at line 295 of cifspacegrouptest.cpp fails. It has:; ```; OB_ASSERT(pdb.find(""HETATM 17 O UNL 8 1.954 8.956 3.035 1.00"") != string::npos);; ```; I can reproduce the failure with:; ```; >obabel test\files\test08.cif -opdb -xo > tmp.pdb; ```; which gives a PDB file with the line:; ```; HETATM 17 O UNL 13 1.954 8.956 3.035 1.00 0.00 O ; ```; The problem is that the residue number is different (13 versus 8) - everything else is the same. I note that the ""-xo"" has no affect on this failure. There must be something funny about how residue numbers are being assigned...",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2041
https://github.com/openbabel/openbabel/pull/2043:217,Deployability,release,release,217,`CMAKE_CXX_STANDARD` is currently used. https://github.com/openbabel/openbabel/blob/41730e2d82d01eb52cc5a58ed60000c533ee8ce9/CMakeLists.txt#L474. But it was introduced in [CMake 3.1](https://cmake.org/cmake/help/v3.1/release/3.1.0.html#properties).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2043
https://github.com/openbabel/openbabel/pull/2045:4,Modifiability,variab,variable,4,"The variable was called as Boltzmann's constant but actually gas constant, and the value was incorrect.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2045
https://github.com/openbabel/openbabel/issues/2046:1111,Availability,failure,failure,1111,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1779,Deployability,install,install,1779,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1887,Deployability,install,installed,1887,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:325,Testability,test,test,325,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:405,Testability,test,test,405,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:517,Testability,test,test,517,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:572,Testability,test,test,572,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1106,Testability,test,test,1106,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1729,Testability,test,test,1729,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1801,Testability,test,test,1801,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:1857,Testability,test,test,1857,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2046:987,Usability,learn,learn,987,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. [cloud_init_openbabel.txt](https://github.com/openbabel/openbabel/files/3648942/cloud_init_openbabel.txt). ## Environment Information; Open Babel version: 2.4.1 and HEAD; Operating system and version: Ubuntu 18.04. ## Expected Behavior; make test to pass, pybel to work. ## Actual Behavior; pybindtest_bindings fails make test. Trying to import Pybel fails with:. > PYTHONPATH=/usr/local/lib/python2.7/dist-packages/openbabel/ python test.py; > Traceback (most recent call last):; > File ""test.py"", line 3, in <module>; > import pybel; > File ""/usr/local/lib/python2.7/dist-packages/openbabel/pybel.py"", line 51, in <module>; > from . import openbabel as ob; > ValueError: Attempted relative import in non-package; > . I wanted to verify that #1557 was fixed in HEAD, figure out what commit fixed it, and see if it the same issue as one I ran into in a different context (obabel command line), and maybe learn a little pybel at the same time. But I can't get pybel to run at all, and there is a possibly related regression test failure. . ## Steps to Reproduce. I've seen similar reports before, but they don't seem to go anywhere often due to reproducibility issues or problems with finding multiple libraries from different versions. To try to get around that I've attached a file that can be sent as ""user data"" to a AWS instance, this should make it very reproducible to anyone that uses AWS. I used Ubuntu 18.04 ami-05c1fa8df71875112 (64-bit x86), and m4.large or m4.xlarge size. If you aren't an AWS user, I hope it is easy enough to parse this file out into the steps. In the past I had issues with getting the environment right for ""make test"" to find the right .so files. By doing ""make install"" before ""make test"", I think it should get around that, and the final test I do should only use the installed files anyway.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046
https://github.com/openbabel/openbabel/issues/2048:45,Testability,test,testing,45,"There's interest in revisiting the roundtrip testing, e.g., #2008 - I suspect there's a need to create a separate repository for a larger subset of testing, including SMILES, SDF/Mol, PDB, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048
https://github.com/openbabel/openbabel/issues/2048:148,Testability,test,testing,148,"There's interest in revisiting the roundtrip testing, e.g., #2008 - I suspect there's a need to create a separate repository for a larger subset of testing, including SMILES, SDF/Mol, PDB, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048
https://github.com/openbabel/openbabel/pull/2049:153,Performance,perform,performance,153,"In the current implementation, when a rigid fragment is included in other fragments, it caused strange bonds. This pull request avoids this problem. The performance improved slightly judging by the Platinum dataset evaluation.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2049
https://github.com/openbabel/openbabel/pull/2049:128,Safety,avoid,avoids,128,"In the current implementation, when a rigid fragment is included in other fragments, it caused strange bonds. This pull request avoids this problem. The performance improved slightly judging by the Platinum dataset evaluation.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2049
https://github.com/openbabel/openbabel/issues/2050:148,Deployability,install,installed,148,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.4.1 (installed via pip); Operating system and version: Ubuntu 18.04. ## Expected Behavior; Water bonding to be perceived. ## Actual Behavior; No bonds are perceived for water. ## Steps to Reproduce; Hi All! . I seem to have ran into an issue with Open Babel where water bonds are not being perceived. More details are posted [here](https://github.com/OpenChemistry/mongochemserver/issues/145) along with an example. Do you have any ideas as to what the problem might be?. Thanks,; Patrick",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2050
https://github.com/openbabel/openbabel/pull/2057:52,Deployability,install,installed,52,"`babel` is gone but man `babel.1` is still used and installed, which is renamed to `obabel.1` in this PR; `babel.html` is also renamed to `obabel.html`. Links and signatures are updated accordingly.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2057
https://github.com/openbabel/openbabel/pull/2057:178,Deployability,update,updated,178,"`babel` is gone but man `babel.1` is still used and installed, which is renamed to `obabel.1` in this PR; `babel.html` is also renamed to `obabel.html`. Links and signatures are updated accordingly.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2057
https://github.com/openbabel/openbabel/pull/2060:2,Deployability,Update,Update,2,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:9,Deployability,INSTALL,INSTALL,9,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:154,Deployability,release,release,154,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:208,Deployability,install,install,208,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:265,Deployability,Update,Update,265,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:284,Deployability,release,release,284,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:307,Deployability,Update,Update,307,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:355,Deployability,Update,Update,355,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/pull/2060:314,Modifiability,variab,variables,314,- Update INSTALL and READMEs under scripts/; - perl; - assume perl-binding version is different from Open Babel's; - python; - assume tarball from github release page; - note: `python scripts/python/setup.py install` does not work since `__init__.py` is missing; - Update version and release date of man; - Update variables in CMake files to version 3; - Update scripts/python/setup.py,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2060
https://github.com/openbabel/openbabel/issues/2061:957,Availability,Error,Error,957,"- [ ] I believe this to be a bug with Open Babel - molecules with several linked six-member and five-member rings cannot be converted to .smi files that are able to be read back into 3D forms. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Oct 12 2016 -- 00:36:21; Operating system and version: macOS Sierra 10.12.6; Darwin Kernel Version 16.7.0. ## Expected Behavior; (Starting from a 3D structure of a molecule - a chemically-acceptable geometry). `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi`; Output:; C[C@@H]1[C@H]([C@H](C[C@@H](O1)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@H]1CC[C@]2([C@@H](C1)CC[C@@H]1[C@@H]2CC[C@]2([C@@]1(CC[C@@H]2C1=CC(=O)OC1)O)C)C)C)C)O)O; (This was fine). `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb`. <!-- Describe the intended output or what you expected to see. -->; (From the last command I expect to see a 3D configuration generated). ## Actual Behavior; Error:; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (digitoxin2.pdb); with Atom Ids as follows: 40 41 52; Warning: Stereochemistry is wrong, using the distance geometry method instead. The original molecule (attached) does not have incorrect stereochemistry, so somewhere in open babel the code either cannot make the correct SMILES format, or cannot convert the SMILES format into the correct 3D structure. ## Steps to Reproduce; `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi` (CORRECT); `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb` (WRONG). (Attaching digitoxin2.pdb as a .txt file to allow attachment) Do `mv digitoxin2.txt digitoxin2.pdb` before the above commands. [digitoxin2.txt](https://github.com/openbabel/openbabel/files/3726767/digitoxin2.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2061
https://github.com/openbabel/openbabel/issues/2061:911,Deployability,configurat,configuration,911,"- [ ] I believe this to be a bug with Open Babel - molecules with several linked six-member and five-member rings cannot be converted to .smi files that are able to be read back into 3D forms. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Oct 12 2016 -- 00:36:21; Operating system and version: macOS Sierra 10.12.6; Darwin Kernel Version 16.7.0. ## Expected Behavior; (Starting from a 3D structure of a molecule - a chemically-acceptable geometry). `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi`; Output:; C[C@@H]1[C@H]([C@H](C[C@@H](O1)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@H]1CC[C@]2([C@@H](C1)CC[C@@H]1[C@@H]2CC[C@]2([C@@]1(CC[C@@H]2C1=CC(=O)OC1)O)C)C)C)C)O)O; (This was fine). `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb`. <!-- Describe the intended output or what you expected to see. -->; (From the last command I expect to see a 3D configuration generated). ## Actual Behavior; Error:; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (digitoxin2.pdb); with Atom Ids as follows: 40 41 52; Warning: Stereochemistry is wrong, using the distance geometry method instead. The original molecule (attached) does not have incorrect stereochemistry, so somewhere in open babel the code either cannot make the correct SMILES format, or cannot convert the SMILES format into the correct 3D structure. ## Steps to Reproduce; `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi` (CORRECT); `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb` (WRONG). (Attaching digitoxin2.pdb as a .txt file to allow attachment) Do `mv digitoxin2.txt digitoxin2.pdb` before the above commands. [digitoxin2.txt](https://github.com/openbabel/openbabel/files/3726767/digitoxin2.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2061
https://github.com/openbabel/openbabel/issues/2061:911,Modifiability,config,configuration,911,"- [ ] I believe this to be a bug with Open Babel - molecules with several linked six-member and five-member rings cannot be converted to .smi files that are able to be read back into 3D forms. ## Environment Information; Open Babel version: Open Babel 2.4.1 -- Oct 12 2016 -- 00:36:21; Operating system and version: macOS Sierra 10.12.6; Darwin Kernel Version 16.7.0. ## Expected Behavior; (Starting from a 3D structure of a molecule - a chemically-acceptable geometry). `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi`; Output:; C[C@@H]1[C@H]([C@H](C[C@@H](O1)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@@H]1[C@H](O[C@H](C[C@@H]1O)O[C@H]1CC[C@]2([C@@H](C1)CC[C@@H]1[C@@H]2CC[C@]2([C@@]1(CC[C@@H]2C1=CC(=O)OC1)O)C)C)C)C)O)O; (This was fine). `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb`. <!-- Describe the intended output or what you expected to see. -->; (From the last command I expect to see a 3D configuration generated). ## Actual Behavior; Error:; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (digitoxin2.pdb); with Atom Ids as follows: 40 41 52; Warning: Stereochemistry is wrong, using the distance geometry method instead. The original molecule (attached) does not have incorrect stereochemistry, so somewhere in open babel the code either cannot make the correct SMILES format, or cannot convert the SMILES format into the correct 3D structure. ## Steps to Reproduce; `babel -ipdb digitoxin2.pdb -osmi digitoxin2.smi` (CORRECT); `babel -ismi digitoxin2.smi --gen3d --h -opdb digitoxin2-2.pdb` (WRONG). (Attaching digitoxin2.pdb as a .txt file to allow attachment) Do `mv digitoxin2.txt digitoxin2.pdb` before the above commands. [digitoxin2.txt](https://github.com/openbabel/openbabel/files/3726767/digitoxin2.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2061
https://github.com/openbabel/openbabel/issues/2062:1684,Availability,Error,Error,1684,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062
https://github.com/openbabel/openbabel/issues/2062:1451,Deployability,install,installed,1451,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062
https://github.com/openbabel/openbabel/issues/2062:1690,Integrability,Message,Message,1690,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062
https://github.com/openbabel/openbabel/issues/2062:1345,Testability,test,test,1345,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062
https://github.com/openbabel/openbabel/issues/2062:1906,Usability,clear,clear,1906,"osed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Cygwin, Python 3.7.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Expected to import openbabel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior —>; Openbabel cannot be properly imported due to missing ""_clear"" attributes. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I installed the new OpenBabel 3.0.0 with python bindings and swig on but there is an issue with the import of openbabel into python code now. OpenBabel 2.4.1 was working correctly before. Perhaps I am missing something?. Stack Trace & Error Message:; File ""/usr/lib/python3.7/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/lib/python3.7/site-packages/openbabel/openbabel.py"", line 166, in <module>; vectorInt.clear = new_instancemethod(_openbabel.vectorInt_clear, None, vectorInt); AttributeError: module '_openbabel' has no attribute 'vectorInt_clear'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2062
https://github.com/openbabel/openbabel/issues/2063:829,Availability,Error,Error,829,"The LINUX commandline version (Open Babel 3.0.0 -- Oct 19 2019 -- 15:23:09) can not convert tmol files to inchikey. The tmol file was created using openbabel (with low caps element symbols). propane.tmol; ```; $coord; 2.02871026746136 0.00016096463521 0.09107555338913 c; 4.89930048862534 0.04854048717752 0.11762901668325 c; 5.90748259036722 2.39968480185142 1.42109501042332 c; 1.34938005428171 -1.70839952555376 -0.85607794562344 h; 1.26886043300105 1.63876093409995 -0.91749501051641 h; 1.26913011943130 0.01286165737104 2.01525659069294 h; 5.60784060607910 -0.01912944162451 -1.82662623368806 h; 5.60811561474418 -1.63627235546083 1.09011360983431 h; 5.27020211768512 4.11415935313881 0.45463376946747 h; 7.97573431608248 2.39090324576822 1.41600146807434 h; 5.27052201944755 2.48814711866854 3.38732271725103 h; $end; ```. Error openbabel commandline version (LINUX):; ````; obabel -itmol propane.tmol -oinchikey; ==============================; *** Open Babel Warning in InChI code; #1 :Unknown element(s): *; ==============================; *** Open Babel Error in InChI code; InChI generation failed; 0 molecules converted; ````; The GUI version (WIN) converts above molecule correctly to ATUOYWHBWRKTHZ-UHFFFAOYSA-N. . When changing the elements to large caps, the command line (LINUX) version succeeds. ```; $coord; 2.02871026746136 0.00016096463521 0.09107555338913 C; 4.89930048862534 0.04854048717752 0.11762901668325 C; 5.90748259036722 2.39968480185142 1.42109501042332 C; 1.34938005428171 -1.70839952555376 -0.85607794562344 H; 1.26886043300105 1.63876093409995 -0.91749501051641 H; 1.26913011943130 0.01286165737104 2.01525659069294 H; 5.60784060607910 -0.01912944162451 -1.82662623368806 H; 5.60811561474418 -1.63627235546083 1.09011360983431 H; 5.27020211768512 4.11415935313881 0.45463376946747 H; 7.97573431608248 2.39090324576822 1.41600146807434 H; 5.27052201944755 2.48814711866854 3.38732271725103 H; $end. $ obabel -itmol propane.tmol -oinchikey; ATUOYWHBWRKTHZ-UHFFFAOYSA-N",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2063
https://github.com/openbabel/openbabel/issues/2063:1064,Availability,Error,Error,1064,"UX commandline version (Open Babel 3.0.0 -- Oct 19 2019 -- 15:23:09) can not convert tmol files to inchikey. The tmol file was created using openbabel (with low caps element symbols). propane.tmol; ```; $coord; 2.02871026746136 0.00016096463521 0.09107555338913 c; 4.89930048862534 0.04854048717752 0.11762901668325 c; 5.90748259036722 2.39968480185142 1.42109501042332 c; 1.34938005428171 -1.70839952555376 -0.85607794562344 h; 1.26886043300105 1.63876093409995 -0.91749501051641 h; 1.26913011943130 0.01286165737104 2.01525659069294 h; 5.60784060607910 -0.01912944162451 -1.82662623368806 h; 5.60811561474418 -1.63627235546083 1.09011360983431 h; 5.27020211768512 4.11415935313881 0.45463376946747 h; 7.97573431608248 2.39090324576822 1.41600146807434 h; 5.27052201944755 2.48814711866854 3.38732271725103 h; $end; ```. Error openbabel commandline version (LINUX):; ````; obabel -itmol propane.tmol -oinchikey; ==============================; *** Open Babel Warning in InChI code; #1 :Unknown element(s): *; ==============================; *** Open Babel Error in InChI code; InChI generation failed; 0 molecules converted; ````; The GUI version (WIN) converts above molecule correctly to ATUOYWHBWRKTHZ-UHFFFAOYSA-N. . When changing the elements to large caps, the command line (LINUX) version succeeds. ```; $coord; 2.02871026746136 0.00016096463521 0.09107555338913 C; 4.89930048862534 0.04854048717752 0.11762901668325 C; 5.90748259036722 2.39968480185142 1.42109501042332 C; 1.34938005428171 -1.70839952555376 -0.85607794562344 H; 1.26886043300105 1.63876093409995 -0.91749501051641 H; 1.26913011943130 0.01286165737104 2.01525659069294 H; 5.60784060607910 -0.01912944162451 -1.82662623368806 H; 5.60811561474418 -1.63627235546083 1.09011360983431 H; 5.27020211768512 4.11415935313881 0.45463376946747 H; 7.97573431608248 2.39090324576822 1.41600146807434 H; 5.27052201944755 2.48814711866854 3.38732271725103 H; $end. $ obabel -itmol propane.tmol -oinchikey; ATUOYWHBWRKTHZ-UHFFFAOYSA-N; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2063
https://github.com/openbabel/openbabel/pull/2064:214,Availability,down,downloads,214,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:589,Availability,down,downloaded,589,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:833,Availability,down,download,833,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:872,Availability,avail,available,872,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:208,Deployability,patch,patch,208,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:686,Modifiability,variab,variables,686,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/pull/2064:935,Testability,test,test,935,"This is meant as an improvement: with these changes, CMake first checks if there is a build of Schrödinger's maeparser and coordgen libraries that can be used in openbabel's build. If there isn't, then, this patch downloads the sources and builds them. This means that it addresses #2015. Some notes:; - CMake will, by default, look in standard library and include directories for the built library and the required headers. Other directories can be specified for the lookup by using ""maeparser_DIR"" and ""coordgen_DIR"".; - By default, the ""master"" branch of maeparser and coordgen will be downloaded from GitHub. This can be changed using the ""MAEPARSER_VERSION"" and ""COORDGEN_VERSION"" variables, pointing them to specific tags, branches or commits.; - If sources are already present at the directory where CMake would put them, the download step will be skipped, and the available sources will be used.; - Both maeparser and coordgen test executables will not be built. In case they are, ctest won't be able to find them, since they will be put in the ""bin"" directory, together with the rest of the openbabel executables.; - Boost threads need to be disabled in case of a static build, or the build will fail (I haven't investigated this too much, but probably the Boost libraries are not built using --static-libgcc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064
https://github.com/openbabel/openbabel/issues/2065:124,Deployability,update,update,124,"COPYING contains the GPLv2.0 license, which does not match some sources that specify their own (different) licenses. Please update COPYING to include all of these licenses, or re-license the affected sources:. - src/zipstreamimpl.h (looks BSD-like); - tools/getopt.c (GPLv2.1)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2065
https://github.com/openbabel/openbabel/issues/2066:891,Availability,fault,fault,891,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 or 3.0.0; Operating system and version: macOS High Sierra, CentOS 7. ## Expected Behavior; Conformer scoring methods to work properly. ## Actual Behavior; Segmentation fault after conformer search. ## Steps to Reproduce. The following is self contained and should demonstrate the error:. ```python; try:; from openbabel import openbabel as ob; except ImportError:; import openbabel as ob; import os. AF = """"""COMPND AF; AUTHOR Generated procedurally.; ATOM 1 N ALA 1A -3.763 0.633 1.306 1.00 0.00 N1+; ATOM 2 HT1 ALA 1A -4.732 0.958 1.534 1.00 0.00 H; ATOM 3 HT2 ALA 1A -3.119 1.452 1.157 1.00 0.00 H; ATOM 4 HT3 ALA 1A -3.350 0.072 2.077 1.00 0.00 H; ATOM 5 CA ALA 1A -3.725 -0.167 0.100 1.00 0.00 C; ATOM 6 HA ALA 1A -4.393 -1.054 0.211 1.00 0.00 H; ATOM 7 CB ALA 1A -4.153 0.670 -1.107 1.00 0.00 C; ATOM 8 HB1 ALA 1A -4.395 1.687 -0.745 1.00 0.00 H; ATOM 9 HB2 ALA 1A -3.357 0.776 -1.855 1.00 0.00 H; ATOM 10 HB3 ALA 1A -5.005 0.168 -1.568 1.00 0.00 H; ATOM 11 C ALA 1A -2.323 -0.554 -0.141 1.00 0.00 C; ATOM 12 O ALA 1A -2.084 -1.258 -1.152 1.00 0.00 O; ATOM 13 N PHE 2A -1.288 -0.152 0.725 1.00 0.00 N; ATOM 14 HN PHE 2A -1.426 0.431 1.576 1.00 0.00 H; ATOM 15 CA PHE 2A 0.093 -0.557 0.450 1.00 0.00 C; ATOM 16 HA PHE 2A 0.095 -1.184 -0.502 1.00 0.00 H; ATOM 17 CB PHE 2A 0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2066
https://github.com/openbabel/openbabel/issues/2066:1003,Availability,error,error,1003,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 or 3.0.0; Operating system and version: macOS High Sierra, CentOS 7. ## Expected Behavior; Conformer scoring methods to work properly. ## Actual Behavior; Segmentation fault after conformer search. ## Steps to Reproduce. The following is self contained and should demonstrate the error:. ```python; try:; from openbabel import openbabel as ob; except ImportError:; import openbabel as ob; import os. AF = """"""COMPND AF; AUTHOR Generated procedurally.; ATOM 1 N ALA 1A -3.763 0.633 1.306 1.00 0.00 N1+; ATOM 2 HT1 ALA 1A -4.732 0.958 1.534 1.00 0.00 H; ATOM 3 HT2 ALA 1A -3.119 1.452 1.157 1.00 0.00 H; ATOM 4 HT3 ALA 1A -3.350 0.072 2.077 1.00 0.00 H; ATOM 5 CA ALA 1A -3.725 -0.167 0.100 1.00 0.00 C; ATOM 6 HA ALA 1A -4.393 -1.054 0.211 1.00 0.00 H; ATOM 7 CB ALA 1A -4.153 0.670 -1.107 1.00 0.00 C; ATOM 8 HB1 ALA 1A -4.395 1.687 -0.745 1.00 0.00 H; ATOM 9 HB2 ALA 1A -3.357 0.776 -1.855 1.00 0.00 H; ATOM 10 HB3 ALA 1A -5.005 0.168 -1.568 1.00 0.00 H; ATOM 11 C ALA 1A -2.323 -0.554 -0.141 1.00 0.00 C; ATOM 12 O ALA 1A -2.084 -1.258 -1.152 1.00 0.00 O; ATOM 13 N PHE 2A -1.288 -0.152 0.725 1.00 0.00 N; ATOM 14 HN PHE 2A -1.426 0.431 1.576 1.00 0.00 H; ATOM 15 CA PHE 2A 0.093 -0.557 0.450 1.00 0.00 C; ATOM 16 HA PHE 2A 0.095 -1.184 -0.502 1.00 0.00 H; ATOM 17 CB PHE 2A 0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2066
https://github.com/openbabel/openbabel/issues/2066:3664,Integrability,wrap,wrappers,3664,"52 1.00 0.00 O; ATOM 13 N PHE 2A -1.288 -0.152 0.725 1.00 0.00 N; ATOM 14 HN PHE 2A -1.426 0.431 1.576 1.00 0.00 H; ATOM 15 CA PHE 2A 0.093 -0.557 0.450 1.00 0.00 C; ATOM 16 HA PHE 2A 0.095 -1.184 -0.502 1.00 0.00 H; ATOM 17 CB PHE 2A 0.921 0.626 0.133 1.00 0.00 C; ATOM 18 HB1 PHE 2A 0.918 1.414 0.915 1.00 0.00 H; ATOM 19 HB2 PHE 2A 0.463 1.117 -0.764 1.00 0.00 H; ATOM 20 CG PHE 2A 2.332 0.332 -0.168 1.00 0.00 C; ATOM 21 CD1 PHE 2A 2.658 -0.081 -1.471 1.00 0.00 C; ATOM 22 HD1 PHE 2A 1.839 -0.184 -2.190 1.00 0.00 H; ATOM 23 CE1 PHE 2A 3.962 -0.333 -1.783 1.00 0.00 C; ATOM 24 HE1 PHE 2A 4.237 -0.655 -2.788 1.00 0.00 H; ATOM 25 CZ PHE 2A 5.000 -0.207 -0.886 1.00 0.00 C; ATOM 26 HZ PHE 2A 6.027 -0.408 -1.140 1.00 0.00 H; ATOM 27 CE2 PHE 2A 4.706 0.194 0.385 1.00 0.00 C; ATOM 28 HE2 PHE 2A 5.431 0.326 1.165 1.00 0.00 H; ATOM 29 CD2 PHE 2A 3.375 0.458 0.724 1.00 0.00 C; ATOM 30 HD2 PHE 2A 3.137 0.798 1.731 1.00 0.00 H; ATOM 31 C PHE 2A 0.522 -1.454 1.509 1.00 0.00 C; ATOM 32 OT1 PHE 2A -0.019 -2.622 1.495 1.00 0.00 O; ATOM 33 OT2 PHE 2A 1.416 -1.244 2.524 1.00 0.00 O1-; MASTER 0 0 0 0 0 0 0 0 33 0 0 0; END; """""". with open('AF.pdb', 'w') as pdb_file:; pdb_file.write(AF). mol = ob.OBMol(); reader = ob.OBConversion(); reader.SetInAndOutFormats('pdb', 'pdb'); reader.ReadFile(mol, 'AF.pdb'); os.remove('AF.pdb'). n_conformers = 10; n_children = 5; mutability = 5; convergence = 10; conformer_search = ob.OBConformerSearch(); conformer_search.Setup(mol, n_conformers, n_children,; mutability, convergence). # Without the following two lines, this works.; conformer_score = ob.OBRMSDConformerScore(); conformer_search.SetScore(conformer_score). conformer_search.Search(); # SEGFAULT here; conformer_search.GetConformers(mol); ```. OBRMSDConformerScore was just an example - this also occurs with OBEnergyConformerScore and OBMinimizingEnergyConformerScore. I'm fairly new to using the Python wrappers to OpenBabel, so there's a good chance I'm doing something wrong when setting up the score!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2066
https://github.com/openbabel/openbabel/issues/2069:4565,Availability,error,error,4565,3.73502; C 7.02726 -1.73482 -3.82342; C 8.30053 -2.21612 -4.61007; C 9.49029 -1.22526 -4.42203; C 10.19016 -1.38317 -3.07186; C 10.73313 -2.79339 -2.81663; H 10.93685 -2.87504 -1.73998; C 12.07062 -3.03905 -3.51611; C 9.71511 -3.87795 -3.17838; C 8.94015 -3.62097 -4.47685; C 6.49146 -2.42719 -2.69493; C 6.60191 -3.82542 -2.48188; C 6.38290 -4.45514 -1.24729; C 6.58692 -5.82793 -1.02343; C 6.44494 -6.39033 0.25681; C 6.65146 -7.75648 0.49679; C 6.50630 -8.28781 1.78063; C 6.15508 -7.45984 2.84312; C 5.94982 -6.09945 2.62430; C 6.09071 -5.55365 1.34065; C 5.87831 -4.19345 1.10626; C 6.00348 -3.64842 -0.17874; C 5.71573 -2.30879 -0.43941; C 5.77918 -1.70023 -1.70871; H 0.60293 -2.19365 1.47178; H -0.18110 -1.98939 -0.09694; H 0.26323 -0.56395 0.86082; H 3.58148 -1.86351 1.24601; H 2.52007 -0.63273 1.78623; H 4.92475 0.06302 0.93275; H 3.52400 1.03299 0.77723; H 0.85087 -0.64856 -1.73961; H 2.18618 -1.65105 -2.23185; H 2.20249 1.19653 -1.26611; H 2.73227 0.53771 -2.79148; H 4.53806 1.33653 -1.13208; H 7.47923 -0.23615 -6.09450; H 7.34373 1.62852 -7.64124; H 7.11839 3.51574 -9.24391; H 5.96845 5.57860 -9.94877; H 4.14630 6.52791 -8.55916; H 3.51688 5.44743 -6.43612; H 3.89184 3.67728 -4.74602; H 4.30851 1.97550 -3.09844; H 7.99329 -2.18670 -5.66432; H 9.19114 -0.17910 -4.52511; H 10.22203 -1.39764 -5.22336; H 9.48167 -1.12419 -2.27565; H 11.00633 -0.65333 -3.00284; H 12.80910 -2.28991 -3.21158; H 11.97947 -3.01158 -4.60511; H 12.47029 -4.02045 -3.23449; H 9.03559 -3.96599 -2.33202; H 10.20913 -4.85518 -3.24891; H 8.21847 -4.41500 -4.68096; H 9.66463 -3.72645 -5.29887; H 6.87371 -4.47068 -3.30807; H 6.88265 -6.46393 -1.85764; H 6.92748 -8.42107 -0.31928; H 6.66762 -9.34904 1.94963; H 6.04013 -7.87224 3.84195; H 5.67528 -5.46492 3.46460; H 5.59293 -3.54565 1.93496; H 5.47943 -1.71800 0.42707; 1 molecule converted`. Since obabel doesn't provide any error I cannot provide any more useful information I'm afraid.; Open babel GUI just exits after some seconds if I try it there.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2069
https://github.com/openbabel/openbabel/issues/2070:410,Availability,Down,Downloaded,410,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from https://github.com/openbabel/openbabel/archive/openbabel-3-0-0.tar.gz; Operating system and version: CentOS 7. ## Expected Behavior; The cmake command should create a subdirectory to host external source of MaeParser. ## Actual Behavior; -- Boost version: 1.60.0; -- Downloaded MaeParser to /builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1.; -- Maestro formats will be supported. Using MaeParser 1.1 at ; CMake Error at CMakeLists.txt:503 (add_subdirectory):; add_subdirectory given source; ""/builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1""; which is not an existing directory.; ...; -- Configuring incomplete, errors occurred!. ## Steps to Reproduce; cmake -DCMAKE_INSTALL_PREFIX:PATH=/software/Cheminformatics/openbabel/3.0.0 -DEIGEN3_INCLUDE_DIR=/software/include/ -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:PATH=/software/bin/python3 -DPYTHON_BINDINGS:BOOL=ON -DPERL_BINDINGS:BOOL=ON -DRUBY_BINDINGS:BOOL=OFF -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON ..",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2070
https://github.com/openbabel/openbabel/issues/2070:576,Availability,Error,Error,576,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from https://github.com/openbabel/openbabel/archive/openbabel-3-0-0.tar.gz; Operating system and version: CentOS 7. ## Expected Behavior; The cmake command should create a subdirectory to host external source of MaeParser. ## Actual Behavior; -- Boost version: 1.60.0; -- Downloaded MaeParser to /builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1.; -- Maestro formats will be supported. Using MaeParser 1.1 at ; CMake Error at CMakeLists.txt:503 (add_subdirectory):; add_subdirectory given source; ""/builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1""; which is not an existing directory.; ...; -- Configuring incomplete, errors occurred!. ## Steps to Reproduce; cmake -DCMAKE_INSTALL_PREFIX:PATH=/software/Cheminformatics/openbabel/3.0.0 -DEIGEN3_INCLUDE_DIR=/software/include/ -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:PATH=/software/bin/python3 -DPYTHON_BINDINGS:BOOL=ON -DPERL_BINDINGS:BOOL=ON -DRUBY_BINDINGS:BOOL=OFF -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON ..",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2070
https://github.com/openbabel/openbabel/issues/2070:799,Availability,error,errors,799,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from https://github.com/openbabel/openbabel/archive/openbabel-3-0-0.tar.gz; Operating system and version: CentOS 7. ## Expected Behavior; The cmake command should create a subdirectory to host external source of MaeParser. ## Actual Behavior; -- Boost version: 1.60.0; -- Downloaded MaeParser to /builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1.; -- Maestro formats will be supported. Using MaeParser 1.1 at ; CMake Error at CMakeLists.txt:503 (add_subdirectory):; add_subdirectory given source; ""/builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1""; which is not an existing directory.; ...; -- Configuring incomplete, errors occurred!. ## Steps to Reproduce; cmake -DCMAKE_INSTALL_PREFIX:PATH=/software/Cheminformatics/openbabel/3.0.0 -DEIGEN3_INCLUDE_DIR=/software/include/ -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:PATH=/software/bin/python3 -DPYTHON_BINDINGS:BOOL=ON -DPERL_BINDINGS:BOOL=ON -DRUBY_BINDINGS:BOOL=OFF -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON ..",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2070
https://github.com/openbabel/openbabel/issues/2070:775,Modifiability,Config,Configuring,775,"- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from https://github.com/openbabel/openbabel/archive/openbabel-3-0-0.tar.gz; Operating system and version: CentOS 7. ## Expected Behavior; The cmake command should create a subdirectory to host external source of MaeParser. ## Actual Behavior; -- Boost version: 1.60.0; -- Downloaded MaeParser to /builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1.; -- Maestro formats will be supported. Using MaeParser 1.1 at ; CMake Error at CMakeLists.txt:503 (add_subdirectory):; add_subdirectory given source; ""/builddir/build/BUILD/openbabel-openbabel-3-0-0/external/maeparser-1.1""; which is not an existing directory.; ...; -- Configuring incomplete, errors occurred!. ## Steps to Reproduce; cmake -DCMAKE_INSTALL_PREFIX:PATH=/software/Cheminformatics/openbabel/3.0.0 -DEIGEN3_INCLUDE_DIR=/software/include/ -DBUILD_GUI:BOOL=OFF -DPYTHON_EXECUTABLE:PATH=/software/bin/python3 -DPYTHON_BINDINGS:BOOL=ON -DPERL_BINDINGS:BOOL=ON -DRUBY_BINDINGS:BOOL=OFF -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON ..",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2070
https://github.com/openbabel/openbabel/issues/2071:1266,Availability,fault,fault,1266,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071
https://github.com/openbabel/openbabel/issues/2071:1320,Availability,fault,fault,1320,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071
https://github.com/openbabel/openbabel/issues/2071:949,Integrability,message,message,949,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071
https://github.com/openbabel/openbabel/issues/2071:1520,Testability,test,test,1520,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071
https://github.com/openbabel/openbabel/issues/2071:943,Usability,clear,clear,943,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `Open Babel 3.0.0 -- Oct 20 2019 -- 15:03:24`; Operating system and version: `macOS 10.15.1`. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ```; obrms --a; ```; should fail with the clear message; ```; obrms: invalid option -- a; Unrecognized option: 63; ``` ; as it happens with `obrms -a`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A segmentation fault occurs:; ```; obrms --a; [1] 17978 segmentation fault obrms --a; ```; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2071
https://github.com/openbabel/openbabel/pull/2074:125,Testability,test,test,125,The stack array kLeast_rho_fix is initiated as an array with; MAX_LAYERS entries. It was used as a pointer in statements to; test whether the pointer is NULL. The clang compiler did not; like this and therefore an alternative test for MAX_LAYERS>0; is used.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074
https://github.com/openbabel/openbabel/pull/2074:226,Testability,test,test,226,The stack array kLeast_rho_fix is initiated as an array with; MAX_LAYERS entries. It was used as a pointer in statements to; test whether the pointer is NULL. The clang compiler did not; like this and therefore an alternative test for MAX_LAYERS>0; is used.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074
https://github.com/openbabel/openbabel/pull/2076:66,Availability,error,error,66,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:993,Availability,error,error,993,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:877,Integrability,message,messages,877,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:999,Integrability,message,messages,999,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:180,Testability,log,logs,180,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:819,Testability,log,logs,819,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/pull/2076:980,Usability,clear,clear,980,"When working on the Windows conda-forge versions, I got a compile error on the maeparser code (https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=90306&view=logs&jobId=171a126d-c574-5c8c-1269-ff3b989e923d&taskId=7225e372-3a5e-5b11-c153-719d50bbeacd&lineStart=510&lineEnd=528&colStart=1&colEnd=1) due to a mismatch between the calls to find_package in OpenBabel and Maeparser. In OB, there was a check for plain Boost to decide if Maeparser should be built but in the building of Maeparser, there were some component required. This PR will check for those components also in the OB code. That way, if the required components are missing, OB will just drop mae support instead of failing to compile. There are still several checks for Boost libraries in CmakeLists.txt, leading to rather unhelpful logs with alternating ""Boost found"" and ""Boost NOT found"" messages in unfortunate cases. There could probably be done more to alleviate this or at least be more clear in the error messages but I'll leave that to someone more experienced with Cmake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2076
https://github.com/openbabel/openbabel/issues/2078:983,Availability,Error,Error,983,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1353,Availability,Error,Error,1353,".; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConvers",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:2541,Availability,Error,Error,2541,"le>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either uplo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:3727,Deployability,install,install,3727,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1033,Modifiability,plugin,plugins,1033,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1083,Modifiability,variab,variable,1083,"ttps://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1403,Modifiability,plugin,plugins,1403,".; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConvers",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1453,Modifiability,variab,variable,1453,"rge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:2591,Modifiability,plugin,plugins,2591,"le>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either uplo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:2641,Modifiability,variab,variable,2641,"ormats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test yo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:2886,Modifiability,plugin,plugins,2886,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:992,Performance,Load,LoadAllPlugins,992,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:1362,Performance,Load,LoadAllPlugins,1362,".; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I imported pybel, but forgot to set BABEL_LIBDIR. As a result, I expected to get a warning when importing pybel (`*** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.`). . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I get the previously described warning, but also an exception:. ```; >>> from openbabel import pybel; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConvers",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:2550,Performance,Load,LoadAllPlugins,2550,"le>; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 87, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either uplo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2078:3618,Testability,test,test,3618,"for x, y in broken]; File ""/usr/lib64/python3.6/site-packages/openbabel/pybel.py"", line 66, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); ```. <!--- If suggesting a change/improvement, explain the difference from current behavior —>. Digging a bit, I tried using the openbabel method that generates the list of data processed by this function:. ```; In [2]: from openbabel import openbabel as ob . In [3]: ob.OBConversion() ; Out[3]: <openbabel.openbabel.OBConversion; proxy of <Swig Object of type 'OpenBabel::OBConversion *' at 0x7f9bfc78b150> >. In [4]: o = ob.OBConversion() . In [5]: o.GetSupportedInputFormat() ; ==============================; *** Open Babel Error in LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Out[5]: ('ops',); ```; But the ops string returned here does not contain a ' -- ' as expected by the python code to split the string (see https://github.com/openbabel/openbabel/blob/master/scripts/python/openbabel/pybel.py#L64). When plugins are there, the behavior for this method is the following:. ```; In [1]: from openbabel import openbabel as ob . In [2]: o = ob.OBConversion() . In [3]: o.GetSupportedInputFormat() ; Out[3]: ; ('abinit -- ABINIT Output Format',; 'acesout -- ACES output format',; 'acr -- ACR format',; [...]; 'xtc -- XTC format',; 'xyz -- XYZ cartesian coordinates format',; 'yob -- YASARA.org YOB format'); ```; An easy fix (which I could provide) would be to handle the absence of the ' -- ' by omitting the entry, but I don't think this is what should be done. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Just install openbabel v3.0.0 and run the above code with a bad BABEL_LIBDIR.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2078
https://github.com/openbabel/openbabel/issues/2080:1810,Availability,error,error,1810,"ub.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took forever to complete and freeze without any exception information everytime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080
https://github.com/openbabel/openbabel/issues/2080:1063,Deployability,upgrade,upgrade,1063,"sues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took f",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080
https://github.com/openbabel/openbabel/issues/2080:1124,Security,Access,AccessViolationException,1124,"ub.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took forever to complete and freeze without any exception information everytime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080
https://github.com/openbabel/openbabel/issues/2080:1169,Security,Access,AccessViolationException,1169,"ub.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 pro. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am using the NET bindings in my project. I used to use OBBuild class to generate 3d coordinates in mol file (2.4.1 version), which worked prefectly fine in my case. ## Actual Behavior; However, when I upgrade to openbabel-3.0.0, the same code give me an ""System.AccessViolationException"" as below: ; System.AccessViolationException:“Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”. ## Steps to Reproduce; My code was like this, which worked perfectly fine under version 2.4.1. ```; public static string Generate3D(string molString); {; OBConversion conversion = new OBConversion();; OBMol mol = new OBMol();; conversion.SetInFormat(""smi"");; conversion.SetOutFormat(""mol"");; conversion.ReadString(mol, molString);; OBBuilder builder = new OBBuilder();; builder.Build(mol); // Here is where the Exception happen. return conversion.WriteString(mol);; }; ```; Whenever this method is called, the error happens. By the way, I did try to use some code like this to replace the OBBuilder.; ```; OBOp gen3d = OBOp.FindType(""Gen3D""); gen3d.Do(mol); ```; However, this nerver worked for me in both 2.4.1 and 3.0.0 version. The operation just took forever to complete and freeze without any exception information everytime.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2080
https://github.com/openbabel/openbabel/issues/2081:329,Deployability,release,release,329,"Just wanted to make sure that this is intentional: scripts/CMakeLists.txt looks for SWIG-generated Python bindings under `scripts/python/openbabel-python.cpp`, but when their generation is requested with `RUN_SWIG=ON`, Python bindings are generated at `scripts/python/openbabel/openbabel-python.cpp` (and this file is shipped in release tarballs). Is the difference here intentional?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2081
https://github.com/openbabel/openbabel/issues/2083:769,Testability,test,tested,769,**Description:**; When converting this file (regardless of end-of-line style and encoding) there is an infinite loop:; https://pastebin.com/6W56gJ9r; Changing the format of the penultimate line (222) of the file solves the problem:; https://pastebin.com/NUBUSLkd. **Steps to reproduce:** obabel -ipdb bug.pdb -ocml -O bug.cml (or any other format).; [source_files.zip](https://github.com/openbabel/openbabel/files/3848593/source_files.zip). I think there is some problem with parsing the file when reading. This problem always occurs on >=222 lines of the file in the original formatting (the first file). If there are less than 222 lines in the file then the problem does not occur. **OpenBabel verison:** 3.0.0 (2.4.1 – works fine).; **OS:** Linux x86_64 (others not tested),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2083
https://github.com/openbabel/openbabel/issues/2085:248,Availability,Error,Error,248,"```obabel --append``` does not recognise a field in an SDF file entitled ""Cat. No."", despite replacing the space by an underscore. Instead it says:. ```; $ obabel myfile.sdf -osmi --append ""Cat._No.""; ==============================; *** Open Babel Error in GetValues; Cat not recognized as a property or a descriptor; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2085
https://github.com/openbabel/openbabel/pull/2086:72,Modifiability,variab,variable,72,Every cmake package I've used exports the location of the library as a; variable. Perhaps this is no longer considered best practice(?) but it; is certainly common and expected practice. This addes an OpenBabel3_LIBRARY variable to the cmake config file which; is defined to be the generator expression $<TARGET_FILE:openbabel>. I could not figure out how to get the location of the library relative; OpenBabel3_INSTALL_PREFIX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086
https://github.com/openbabel/openbabel/pull/2086:220,Modifiability,variab,variable,220,Every cmake package I've used exports the location of the library as a; variable. Perhaps this is no longer considered best practice(?) but it; is certainly common and expected practice. This addes an OpenBabel3_LIBRARY variable to the cmake config file which; is defined to be the generator expression $<TARGET_FILE:openbabel>. I could not figure out how to get the location of the library relative; OpenBabel3_INSTALL_PREFIX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086
https://github.com/openbabel/openbabel/pull/2086:242,Modifiability,config,config,242,Every cmake package I've used exports the location of the library as a; variable. Perhaps this is no longer considered best practice(?) but it; is certainly common and expected practice. This addes an OpenBabel3_LIBRARY variable to the cmake config file which; is defined to be the generator expression $<TARGET_FILE:openbabel>. I could not figure out how to get the location of the library relative; OpenBabel3_INSTALL_PREFIX,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086
https://github.com/openbabel/openbabel/issues/2088:1782,Safety,Predict,Predict,1782,".0; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No floating point exception. I think there needs to be a check in vector3::normalize() for zero vectors since it is very hard to guarantee that no callers ever have a zero vector. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> . vector3::normalize() gets a zero vector. Thread 3 ""bfd-server-debu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2088:2939,Safety,Predict,Predict,2939,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2088:2074,Testability,test,test,2074,".0; Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; No floating point exception. I think there needs to be a check in vector3::normalize() for zero vectors since it is very hard to guarantee that no callers ever have a zero vector. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior --> . vector3::normalize() gets a zero vector. Thread 3 ""bfd-server-debu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2088:2302,Testability,log,logP,2302,"bu"" received signal SIGFPE, Arithmetic exception.; [Switching to Thread 0x7ffff5fc2700 (LWP 9010)]; 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); (gdb) bt; #0 0x0000000000dc98c9 in OpenBabel::vector3::normalize() (); #1 0x0000000000e0543f in OpenBabel::OBBuilder::GetNewBondVector(OpenBabel::OBAtom*, double) (); #2 0x0000000000b4723b in OpenBabel::OBMol::AddNewHydrogens(OpenBabel::HydrogenType, bool, double); (); #3 0x0000000000d1b06f in OpenBabel::OBGroupContrib::Predict(OpenBabel::OBBase*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.08",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2088:2900,Testability,log,logP,2900,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2088:2923,Testability,Log,LogP,2923,"td::char_traits<char>, std::allocator<char> >*) (); ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This happens with any PDB structure containing the PA0 ligand (e.g. 3E3Z), a phenyl ring with arsenic attached. Getting the logP property. Example code (the 'content' string contains a mol format string with the PA0 compound:. std::ios_base::openmode imode = std::ios_base::in|std::ios_base::binary;; std::ios_base::openmode omode = std::ios_base::out|std::ios_base::binary;; std::stringstream ssi(content, imode);; std::stringstream sso("""", omode);; OpenBabel::OBConversion conv(&ssi, &sso);; OpenBabel::OBFormat* molformat = conv.FindFormat(""mol"");; conv.SetInFormat(molformat);; OpenBabel::OBMol mol;; molformat->ReadMolecule(&mol, &conv);; json js;; OpenBabel::OBDescriptor* pDesc = OpenBabel::OBDescriptor::FindType(""logP"");; if(pDesc) js[""LogP""] = pDesc->Predict(&mol);. mol string for PA0.178:A:; PA0; JL BFD1119190613; Written by the BioLeap Fragment Displayer(TM)[BioLeap, Inc.]; 12 12 0 0 0 0 0 0 0 0999 V2000; 7.2100 -10.0520 2.6110 As 0 3 0 0 0 0 0 0 0 1 0 0; 7.1560 -10.0390 1.2400 C 0 0 0 0 0 0 0 0 0 2 0 0; 6.2490 -9.2320 0.5650 C 0 0 0 0 0 0 0 0 0 3 0 0; 6.2170 -9.2220 -0.8210 C 0 0 0 0 0 0 0 0 0 4 0 0; 7.0890 -10.0140 -1.5640 C 0 0 0 0 0 0 0 0 0 5 0 0; 8.0000 -10.8330 -0.9030 C 0 0 0 0 0 0 0 0 0 6 0 0; 8.0240 -10.8420 0.4890 C 0 0 0 0 0 0 0 0 0 7 0 0; 8.6560 -11.4170 0.9490 H 0 0 0 0 0 0 0 0 0 8 0 0; 8.6120 -11.3920 -1.4070 H 0 0 0 0 0 0 0 0 0 9 0 0; 7.0620 -9.9950 -2.5330 H 0 0 0 0 0 0 0 0 0 10 0 0; 5.5780 -8.6550 -1.2800 H 0 0 0 0 0 0 0 0 0 11 0 0; 5.6350 -8.6730 1.0660 H 0 0 0 0 0 0 0 0 0 12 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 2 7 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 7 6 2 0 0 0 0; 3 12 1 0 0 0 0; 4 11 1 0 0 0 0; 5 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2088
https://github.com/openbabel/openbabel/issues/2089:1190,Availability,error,error,1190,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version:Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The libmaeparser library should get statically built when BUILD_SHARED=OFF. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Gets built as a dynamic library, resulting in a link time error linking with other static libraries. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Temporary workaround was to; remove SHARED from ; add_library(maeparser SHARED Buffer.cpp MaeBlock.cpp MaeParser.cpp Reader.cpp Writer.cpp); in openbabel-3.0.0/external/maeparser-1.1/CMakeLists.txt; but the right fix is probably to make it dependent on BUILD_SHARED.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2089
https://github.com/openbabel/openbabel/issues/2089:1755,Integrability,depend,dependent,1755,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version:Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The libmaeparser library should get statically built when BUILD_SHARED=OFF. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Gets built as a dynamic library, resulting in a link time error linking with other static libraries. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Temporary workaround was to; remove SHARED from ; add_library(maeparser SHARED Buffer.cpp MaeBlock.cpp MaeParser.cpp Reader.cpp Writer.cpp); in openbabel-3.0.0/external/maeparser-1.1/CMakeLists.txt; but the right fix is probably to make it dependent on BUILD_SHARED.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2089
https://github.com/openbabel/openbabel/issues/2089:1411,Testability,test,test,1411,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version:Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The libmaeparser library should get statically built when BUILD_SHARED=OFF. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Gets built as a dynamic library, resulting in a link time error linking with other static libraries. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Temporary workaround was to; remove SHARED from ; add_library(maeparser SHARED Buffer.cpp MaeBlock.cpp MaeParser.cpp Reader.cpp Writer.cpp); in openbabel-3.0.0/external/maeparser-1.1/CMakeLists.txt; but the right fix is probably to make it dependent on BUILD_SHARED.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2089
https://github.com/openbabel/openbabel/issues/2090:1585,Testability,test,test,1585," -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v2.3.1; Operating system and version: MacOS Mojave v10.14.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When I convert the following xyz file into sdf file with openbabel on Jupyter notebook, the output sdf sees the molecule as a radical instead of the expected structure. **xyz file**; ```; 13. N -0.0622 -0.1867 -0.0074 ; N -3.3957 -0.5192 0.0030 ; C -1.1333 0.8052 -0.0003 ; C 1.1224 0.3173 0.0007 ; C 2.3297 -0.5309 0.0000 ; C 3.5321 0.0493 0.0030 ; C -2.3930 0.0649 0.0010 ; H -1.0764 1.4443 -0.8888 ; H -1.0713 1.4385 0.8921 ; H 1.2902 1.4096 0.0100 ; H 2.2149 -1.6079 -0.0044 ; H 4.4298 -0.5598 0.0018 ; H 3.6559 1.1268 0.0067; ```. **Python code**. ```; import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""xyz"", ""sdf""). mol = openbabel.OBMol(); obConversion.ReadFile(mol, ""test.xyz""); outSDF = obConversion.WriteString(mol); print(outSDF); ```. **Expected output**. ```; 549110; -OEChem-11191917383D. 13 12 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; wh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090
https://github.com/openbabel/openbabel/issues/2090:3083,Testability,test,test,3083,"0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090
https://github.com/openbabel/openbabel/issues/2090:4184,Testability,test,test,4184,"0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 2 0 0 0 0; 2 7 3 0 0 0 0; 3 7 1 0 0 0 0; 3 8 1 0 0 0 0; 3 9 1 0 0 0 0; 4 5 1 0 0 0 0; 4 10 1 0 0 0 0; 5 6 2 0 0 0 0; 5 11 1 0 0 0 0; 6 12 1 0 0 0 0; 6 13 1 0 0 0 0; M END; ```; which is from the following reference website:; [PubChem molecule page](https://pubchem.ncbi.nlm.nih.gov/compound/549110#section=3D-Conformer); [SDF file](https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/CID/549110/record/SDF/?record_type=3d&response_type=display). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; **Actual result from OpenBabel**; ```; test.xyz; OpenBabel11191917433D. 13 12 0 0 0 0 0 0 0 0999 V2000; -0.0622 -0.1867 -0.0074 N 0 0 0 0 0 0 0 0 0 0 0 0; -3.3957 -0.5192 0.0030 N 0 0 0 0 0 0 0 0 0 0 0 0; -1.1333 0.8052 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.1224 0.3173 0.0007 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.3297 -0.5309 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.5321 0.0493 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -2.3930 0.0649 0.0010 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.0764 1.4443 -0.8888 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.0713 1.4385 0.8921 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.2902 1.4096 0.0100 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.2149 -1.6079 -0.0044 H 0 0 0 0 0 0 0 0 0 0 0 0; 4.4298 -0.5598 0.0018 H 0 0 0 0 0 0 0 0 0 0 0 0; 3.6559 1.1268 0.0067 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; 3 7 1 0 0 0 0; 3 9 1 0 0 0 0; 4 10 1 0 0 0 0; 5 4 2 0 0 0 0; 5 6 1 0 0 0 0; 6 13 1 0 0 0 0; 7 2 3 0 0 0 0; 8 3 1 0 0 0 0; 11 5 1 0 0 0 0; 12 6 1 0 0 0 0; M RAD 2 1 2 6 2; M END; $$$$; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Please see above description for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2090
https://github.com/openbabel/openbabel/issues/2092:198,Deployability,patch,patches,198,"Open Babel version: 3.0.0; Operating system and version: NetBSD-8.1_STABLE using pkgsrc-HEAD. I've just successfully built openbabel-3.0.0 on NetBSD thanks to the help of Kamil, a NetBSD dev.; Four patches were required to build it successfully and it would be great to upstream these to you. Thank you for this. The chemistry world needs you!. Best Regards,; pin",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2092
https://github.com/openbabel/openbabel/issues/2095:608,Availability,fault,fault,608,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:717,Availability,echo,echo,717,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:899,Availability,echo,echo,899,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:1033,Availability,fault,fault,1033,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:563,Testability,test,test,563,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:672,Testability,test,test,672,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:737,Testability,test,test,737,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2095:988,Testability,test,test,988,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Openbabel 3.0.0 built from git today; Operating system and version: MacOS X 10.14.5. ## Expected Behavior; I am trying to convert a molecule with an alias from .smi into an .svg file. Without aliases, everything works fine. I was able to convert the molecules with some default aliases, but sometimes it broke and I got segfault. I created a minimalistic example to reproduce the behavior, see below. ## Actual Behavior; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11. ## Steps to Reproduce; 0. Build openbabel; 1. Create test.smi file with smiles for thioanisole; $ echo 'c1ccccc1SC' > test.smi; 2. --genalias uses superatom.txt file, so modify it to make it minimalistic. I left only a thiomethyl group in it. In my setup, superatom.txt is here:; echo 'SMe MeS SC red' > /usr/local/share/openbabel/3.0.0/superatom.txt ; 3. ; $ ./obabel test.smi -Otest.svg --genalias; Segmentation fault: 11",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2095
https://github.com/openbabel/openbabel/issues/2096:945,Energy Efficiency,charge,charges,945,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from conda-forge, python 3.6; Operating system and version: Ubuntu 18.04.3 LTS. ## Expected Behavior; Hi,. I would like to know if it was possible to force the internal OBMol copy in OBForceField to have the same partial charges as defined in mol2 file? And also the same for the atom types (that are of course also defined in GAFF)?. I put some python codes below as an example. That's how far I can go... Also I am not restricted to Python only. The solution can be also in C++ (if there is one). Thanks for your help!. Jerome. ## Actual Behavior; The partial charges (and Atom types) contained in the internal OBMol of OBForceField are different from the input file. ## Steps to Reproduce; Molecule file (to rename in .mol2): [molecule.txt](https://github.com/openbabel/openbabel/files/3888996/molecule.txt). ```python; from openbabel import openbabel as ob. obconv = ob.OBConversion(); obconv.SetInFormat(""mol2""); OBMol = ob.OBMol(); obconv.ReadFile(OBMol, ""molecule.mol2""). # Force OB to keep them?; OBMol.SetPartialChargesPerceived(); OBMol.SetAutomaticPartialCharge(False); OBMol.SetAutomaticFormalCharge(False). forcefield = ob.OBForceField.FindForceField(""GAFF""); forcefield.Setup(OBMol). forcefield.SetLogLevel(ob.OBFF_LOGLVL_HIGH); forcefield.SetLogToStdErr(); force",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2096
https://github.com/openbabel/openbabel/issues/2096:1286,Energy Efficiency,charge,charges,1286,"for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 from conda-forge, python 3.6; Operating system and version: Ubuntu 18.04.3 LTS. ## Expected Behavior; Hi,. I would like to know if it was possible to force the internal OBMol copy in OBForceField to have the same partial charges as defined in mol2 file? And also the same for the atom types (that are of course also defined in GAFF)?. I put some python codes below as an example. That's how far I can go... Also I am not restricted to Python only. The solution can be also in C++ (if there is one). Thanks for your help!. Jerome. ## Actual Behavior; The partial charges (and Atom types) contained in the internal OBMol of OBForceField are different from the input file. ## Steps to Reproduce; Molecule file (to rename in .mol2): [molecule.txt](https://github.com/openbabel/openbabel/files/3888996/molecule.txt). ```python; from openbabel import openbabel as ob. obconv = ob.OBConversion(); obconv.SetInFormat(""mol2""); OBMol = ob.OBMol(); obconv.ReadFile(OBMol, ""molecule.mol2""). # Force OB to keep them?; OBMol.SetPartialChargesPerceived(); OBMol.SetAutomaticPartialCharge(False); OBMol.SetAutomaticFormalCharge(False). forcefield = ob.OBForceField.FindForceField(""GAFF""); forcefield.Setup(OBMol). forcefield.SetLogLevel(ob.OBFF_LOGLVL_HIGH); forcefield.SetLogToStdErr(); forcefield.PrintFormalCharges(); forcefield.PrintTypes(). forcefield.GetAtomTypes(OBMol); forcefield.GetPartialCharges(OBMol). print(""idx FFPartialCharge Mol2PartialCharge""); for atom in ob.OBMolAtomIter(OBMol):; print(atom.GetIdx(), atom.GetData(""FFPartialCharge"").GetValue(), atom.GetPartialCharge()); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2096
https://github.com/openbabel/openbabel/issues/2097:107,Deployability,install,installed,107,"* [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:410,Testability,test,test,410,"* [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:799,Testability,test,test,799,"* [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1082,Testability,Assert,AssertionError,1082,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1111,Testability,Assert,AssertionError,1111,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1213,Testability,assert,assert,1213,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1238,Testability,Assert,AssertionError,1238,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1453,Testability,test,test,1453,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1600,Testability,test,test,1600,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1619,Testability,test,test,1619,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1635,Testability,test,test,1635,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2097:1833,Testability,test,test,1833,"n Babel. ## Environment Information; Open Babel version: `3.0.0` (installed using `conda` and the `conda-forge` channel); Operating system and version: macOS 10.15. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I expect `pybel.readfile` to work with multi-model PDB files as it does for SDF and MOL2 files. For the following test PDD; ```text; MODEL 1; HETATM 1 C UNL 1 5.100 4.809 -9.314 1.00 0.00 C; HETATM 2 C UNL 1 4.758 6.074 -9.583 1.00 0.00 C; ENDMDL; MODEL 2; HETATM 1 C UNL 1 5.125 4.901 -9.530 1.00 0.00 C; HETATM 2 C UNL 1 4.570 6.075 -9.852 1.00 0.00 C; ENDMDL; END; ```. I expect the following code to work:; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]. asseret len(obmols) == 2; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The previous code snippet fails with an `AssertionError`:; ```python; AssertionError Traceback (most recent call last); <ipython-input-3-119b3d6fa691> in <module>; ----> 1 assert len(obmols) == 2. AssertionError:. ```. The reason is that `len(obmols)` is equal to `3` and the last molecule is empty. The following code; ```python; from openbabel import pybel. obmols = [obmol for obmol in pybel.readfile(""pdb"", ""test.pdb"")]; for obmol in obmols:; print(obmol, obmol.OBMol.NumAtoms(), obmol.OBMol.NumBonds()); ```. produces the following output:. ```text; C#C	test.pdb; 2 1; C#C	test.pdb; 2 1; 	test.pdb; 0 0. ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. See above. ## Comments. The code failing above works as expected with multi-molecule MOL2 and SDF files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2097
https://github.com/openbabel/openbabel/issues/2098:1106,Availability,error,error,1106,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:1114,Availability,error,error,1114,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:348,Deployability,install,installed,348,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:1324,Deployability,install,installed,1324,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:1361,Deployability,install,install,1361,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:761,Testability,test,test,761,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2098:1069,Testability,test,test,1069,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Current master (`6d774e8`); Operating system and version: Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; We can use `OpenBabel::OBDistanceGeometry` if Eigen is installed properly. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; We can't use it. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; When we try to compile; ```cpp; #include <openbabel/distgeom.h>. int main(){; OpenBabel::OBDistanceGeometry dg;; }; ```; by ; ```; g++ -I /usr/local/include/openbabel3/ -L /usr/local/lib/openbabel/3.0.0/ test.cpp -lopenbabel; ```; we get an error: `error: ‘OBDistanceGeometry’ is not a member of ‘OpenBabel’`. There are two problems:; - `HAVE_EIGEN` is not defined when this code is compiled, so most of `openbabel/distgeom.h` is ignored.; - `LBFGS.h` is not installed properly when we run `make install`. If we define `HAVE_EIGEN` manually and specify the local pass of `LBFGS.h`, this code can be compiled, but I don't think it is an expected behavior.; ; I'm not sure how to fix these problems. Do you have any suggestions?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098
https://github.com/openbabel/openbabel/issues/2099:776,Energy Efficiency,power,powershell,776,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our abili",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099
https://github.com/openbabel/openbabel/issues/2099:1712,Testability,test,test-Example,1712,"you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. run command obabel -icdx 'Example.cdx' -O 'Example.rxn'. use rdkit to visualize Example.rxn within a python shell with; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import Draw; rxn = AllChem.ReactionFromRxnFile('Example.rxn'); k = Draw.ReactionToImage(rxn); k.save('test-Example.png'). [Example.zip](https://github.com/openbabel/openbabel/files/3894075/Example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099
https://github.com/openbabel/openbabel/issues/2099:2007,Testability,test,test,2007,"you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. run command obabel -icdx 'Example.cdx' -O 'Example.rxn'. use rdkit to visualize Example.rxn within a python shell with; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import Draw; rxn = AllChem.ReactionFromRxnFile('Example.rxn'); k = Draw.ReactionToImage(rxn); k.save('test-Example.png'). [Example.zip](https://github.com/openbabel/openbabel/files/3894075/Example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099
https://github.com/openbabel/openbabel/issues/2099:2419,Testability,test,test-Example,2419,"you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10; anaconda3 powershell. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. When trying to convert a single step reaction scheme from cdx, one should obtain the same scheme in rxn format. The command being. obabel -icdx 'Example.cdx' -O 'Example.rxn'. There should be the same amount of molecules. Molecules above the arrow should be maintained there. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. A catalyst molecule is lost, going from 6 total molecules to 5 (see Example.rxn in the zip file). . Example_Eric.jpg (first picture) is what the input scheme looks like. Whereas Example.png is what is output to the rxn (second picture). . ![Example_Eric](https://user-images.githubusercontent.com/57144474/69673530-1c8b0880-1060-11ea-8a96-a283412e1c17.jpg); ![test-Example](https://user-images.githubusercontent.com/57144474/69673532-1d239f00-1060-11ea-9235-1ac811ae57ba.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. run command obabel -icdx 'Example.cdx' -O 'Example.rxn'. use rdkit to visualize Example.rxn within a python shell with; import rdkit; from rdkit import Chem; from rdkit.Chem import AllChem; from rdkit.Chem import Draw; rxn = AllChem.ReactionFromRxnFile('Example.rxn'); k = Draw.ReactionToImage(rxn); k.save('test-Example.png'). [Example.zip](https://github.com/openbabel/openbabel/files/3894075/Example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2099
https://github.com/openbabel/openbabel/pull/2100:33,Testability,test,test,33,Fixes #2063....I believe. Let me test this directly before this is merged.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2100
https://github.com/openbabel/openbabel/issues/2101:440,Testability,test,test,440,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101
https://github.com/openbabel/openbabel/issues/2101:507,Testability,test,test,507,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101
https://github.com/openbabel/openbabel/issues/2101:543,Testability,test,test,543,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101
https://github.com/openbabel/openbabel/issues/2101:579,Testability,test,test,579,- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10. Version 3.0.0 and master worked correct on Debian Linux. ## Expected Behavior; A PDBQT output file. ## Actual Behavior; A PDBQT with mangled coordinates. Record example:. ATOM 1 N UNL 1 2261608.7291334600.251 0.000 0.00 0.00 +0.000 NA. ## Steps to Reproduce. [test.smi.txt](https://github.com/openbabel/openbabel/files/3898807/test.smi.txt). ```sh; obabel -i smi test.smi.txt --ph 7.0 --gen3d -m -O test.pdbqt; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2101
https://github.com/openbabel/openbabel/pull/2102:461,Availability,error,error,461,"alias.cpp contains code that replaces some groups defined in superatom.txt file, with the corresponding aliases, like C(=O)C with Ac. The aliases from superatom.txt are always considered protonated, and implicit hydrogens are added to them to avoid replacing fragments in the middle of the molecule, so e.g. C(=O)CC should not be replaced with Ac. However, the molecule of interest can lack implicit hydrogens. In case of non-protonated molecules, out of range error can happen here:. `int id =(pmol->GetAtom(idx))->GetId();`. when it tries to find and remove all atoms found in alias including hydrogens lacking in the molecule. So idx can easily exceed the number of atoms in pmol. It causes out of bounds error and segfault as shown in my minimal example in issue description. Guess that incorrect behavior rather than segfault can also be a result.; The fix creates a protonated copy of the molecule to find numbers of all atoms that should be stripped and replaced with aliases. Hydrogens that have numbers above number of atoms in original molecule are ignored. This should ensure that hydrogens present in the original molecule are retained.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102
https://github.com/openbabel/openbabel/pull/2102:708,Availability,error,error,708,"alias.cpp contains code that replaces some groups defined in superatom.txt file, with the corresponding aliases, like C(=O)C with Ac. The aliases from superatom.txt are always considered protonated, and implicit hydrogens are added to them to avoid replacing fragments in the middle of the molecule, so e.g. C(=O)CC should not be replaced with Ac. However, the molecule of interest can lack implicit hydrogens. In case of non-protonated molecules, out of range error can happen here:. `int id =(pmol->GetAtom(idx))->GetId();`. when it tries to find and remove all atoms found in alias including hydrogens lacking in the molecule. So idx can easily exceed the number of atoms in pmol. It causes out of bounds error and segfault as shown in my minimal example in issue description. Guess that incorrect behavior rather than segfault can also be a result.; The fix creates a protonated copy of the molecule to find numbers of all atoms that should be stripped and replaced with aliases. Hydrogens that have numbers above number of atoms in original molecule are ignored. This should ensure that hydrogens present in the original molecule are retained.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102
https://github.com/openbabel/openbabel/pull/2102:243,Safety,avoid,avoid,243,"alias.cpp contains code that replaces some groups defined in superatom.txt file, with the corresponding aliases, like C(=O)C with Ac. The aliases from superatom.txt are always considered protonated, and implicit hydrogens are added to them to avoid replacing fragments in the middle of the molecule, so e.g. C(=O)CC should not be replaced with Ac. However, the molecule of interest can lack implicit hydrogens. In case of non-protonated molecules, out of range error can happen here:. `int id =(pmol->GetAtom(idx))->GetId();`. when it tries to find and remove all atoms found in alias including hydrogens lacking in the molecule. So idx can easily exceed the number of atoms in pmol. It causes out of bounds error and segfault as shown in my minimal example in issue description. Guess that incorrect behavior rather than segfault can also be a result.; The fix creates a protonated copy of the molecule to find numbers of all atoms that should be stripped and replaced with aliases. Hydrogens that have numbers above number of atoms in original molecule are ignored. This should ensure that hydrogens present in the original molecule are retained.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102
https://github.com/openbabel/openbabel/issues/2103:174,Deployability,install,install,174,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:258,Deployability,install,installed,258,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:544,Deployability,install,install,544,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:567,Deployability,install,installing,567,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:608,Deployability,install,installing,608,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:654,Deployability,install,installed,654,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:735,Deployability,install,installed,735,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:907,Deployability,install,installed,907,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:928,Deployability,install,installing,928,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:1009,Deployability,install,install,1009,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:1060,Deployability,install,installed,1060,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:1150,Deployability,install,installed,1150,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:1174,Deployability,install,install,1174,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2103:436,Integrability,depend,depends,436,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: all; Operating system and version: all. ## Expected Behavior. when i do pip install openbabel and then run pip freeze, I expect to see openbabel in the list of installed packages. this would then enable me to save pip freeze > requirements.txt and get the name openbabel in the requirements.txt file. in the same way, with a package that depends on the openbabel python bindings, I could write in setup.py install_requires openbabel and have pip install openbabel when installing the package in question. when installing a package and openbabel is already installed, I'd expect the stup.py process to recognize that openbabel is already installed. ## Actual Behavior. instead of saving as openbabel, the package saves as openbabel-python. over and over this breaks things for me when checking if openbabel is installed and if not installing openbabel. either i check for openbabel, in which case it attempts to install regardless of whether openbabel is already installed or not, or i check for openbabel-python, and it successfully identifies it when installed, but fails to install when missing because no such package exists in pypi. ## Steps to Fix. Please please please change the name of the openbabel python package to either consistently be openbabel or consistently be openbabel-python.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2103
https://github.com/openbabel/openbabel/issues/2104:1282,Availability,error,error,1282,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/issues/2104:1357,Availability,error,error,1357,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/issues/2104:1427,Availability,Error,Error,1427,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/issues/2104:1484,Availability,Error,Error,1484,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/issues/2104:1509,Availability,Error,Error,1509,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/issues/2104:913,Integrability,depend,dependencies,913,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-2.3.1; Operating system and version: MacOS Mojave 10.14.5. ## Expected Behavior; Compilation. ## Actual Behavior. aloshbaugh at LYMAC079 in ~/Documents/openbabel-build; ○ make; Scanning dependencies of target openbabel; [ 0% ] Building CXX object src/CMakeFiles/openbabel.dir/alias.o; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/src/alias.cpp:17:; In file included from /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/alias.h:19:; /Users/aloshbaugh/Documents/openbabel-2.3.1/include/openbabel/shared_ptr.h:25:14: fatal error: 'tr1/memory' file not found; #include <tr1/memory>; ^~~~~~~~~~~~; 1 error generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/alias.o] Error 1; make[1]: *** [src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [all] Error 2. ## Steps to Reproduce",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2104
https://github.com/openbabel/openbabel/pull/2105:53,Deployability,install,install,53,"This pull request try to solve #2098. I made sure to install LBFGS headers, but `HAVE_EIGEN` problem remains yet.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2105
https://github.com/openbabel/openbabel/issues/2107:444,Energy Efficiency,consumption,consumption,444,- [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 & 3; Operating system and version:; - openSUSE 10.3; `2.6.22.18-0.2-default #1 SMP 2008-06-09 13:53:20 +0200 x86_64`; - openSUSE Leap15.1; `4.12.14-lp151.28.32-default #1 SMP Wed Nov 13 07:50:15 UTC 2019 (6e1aaad) x86_64`. ## Expected Behavior; Upon SMILES canonicalization:; - no crash; - no heavy memory consumption. The given SMILES (see below) are of rather academical type. But obabel should not choke on these and continue. ## Actual Behavior; 1.) Openbabel 2.4.1 - openSUSE 10.3 & Leap15.1; Problem description:; `obabel -ismi -ocan -e` CRASHES for some SMILES and consumes ALL RAM for some others until oom kills/reaps it. - Openbabel 2.4.1 crashes with the following two input SMILES; ```text; CC1CC2C3(C)C4C5C6C7C8C9C%10C%11C%12C%13C%14C%15C%16C%17C%18CC%19C%20C%21C%22C%23C%24C%25C%26C%27C%28C%29C%30C%31C%32C%33CC%34C%35C%36C%37C%38C%39C%40C%41C%42C%43C%44C%45C%46C%47C%48[C@@]%49(C)C%50C[C@@H](C)[C@@H]%51CC%52%50C%50%53C[C@@H]%51[C@@H]%51CC%54%50[C@@]%50%55[C@@]%56%57C%58%59C%60%61C%62%63C%64%58C%58%65C%66%67C%47(C%47%48[C@@]%49%52[C@@]%53%50C%66%47C%55%59%65)C%47%46C%46%67C%48%58C%49%64C%50%52C%53%55C%58%59C%64%65C%66%67C%68%69C%70%71C%72%73C%74%75C%76%77C%78%73C%73%79C%80%76C%76%81C%82%83C%84%85C%86%87C%88%89C%90%91C%92%86C%86%84C%84%82C%82%93C%94%95C%96%97C%98%82C%82%99C%100%101C%102%103C%104%105[C@@]%106%107[C@@]%108%109C%110%111C[C@@H]([C@@H]%112CC%106%111C2(C[C@@H]1%112)[C@@]3%107C4%104C5%103C16C%82%102C2%98C3%96C45C9(C6%10C9%11C%10%11C%82%96C%129C9%13C%12%14C%13%14C%98%102C%103%104C%106%107C%111%98C%98%112C%113%114C%115%116C%117%118C%119%120C%121%122C%123%117C%117%115C%115%124C%125%126C%127%128C%129%130C%131%132C%133%134C%135%130C%130%136C%137%138C%139%140C%141%142C%143%144C%145%146C%147%148C%27(C%27%26C%26%25C%25%149C%150%151C%152%153C%154%25C%115(C%117%152C%98%116C%25%153C%106%112C%98%106C%151%25C%23(C%24%26%150)C%22%106C%,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2107
https://github.com/openbabel/openbabel/issues/2108:241,Availability,echo,echo,241,"## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: Ubuntu 18.04, Python 2.7.17. I want to generate a reasonable 3D structure from SMILES string (take 'C1CCCC1' for example here). The command line ""echo C1CCCC1 | obabel -ismi -omol -Otemplate.mol --gen3D"" works well. But when I try to do that in Python, ""Segmentation fault"" occured. The code is shown below:; >>> from openbabel import openbabel as ob; >>> line = 'C1CCCC1'; >>> format = 'smi'; >>> mol = ob.OBMol(); >>> conv = ob.OBConversion(); >>> conv.SetInFormat(format) # it returns True; >>> conv.ReadString(mol, line) # it returns True; >>> gen3d = ob.OBOp.FindType(""Gen3D""); >>> gen3d.Do(mol); Segmentation fault (core dumped). I'm not sure if there is something wrong in my code or there is a bug.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2108
https://github.com/openbabel/openbabel/issues/2108:362,Availability,fault,fault,362,"## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: Ubuntu 18.04, Python 2.7.17. I want to generate a reasonable 3D structure from SMILES string (take 'C1CCCC1' for example here). The command line ""echo C1CCCC1 | obabel -ismi -omol -Otemplate.mol --gen3D"" works well. But when I try to do that in Python, ""Segmentation fault"" occured. The code is shown below:; >>> from openbabel import openbabel as ob; >>> line = 'C1CCCC1'; >>> format = 'smi'; >>> mol = ob.OBMol(); >>> conv = ob.OBConversion(); >>> conv.SetInFormat(format) # it returns True; >>> conv.ReadString(mol, line) # it returns True; >>> gen3d = ob.OBOp.FindType(""Gen3D""); >>> gen3d.Do(mol); Segmentation fault (core dumped). I'm not sure if there is something wrong in my code or there is a bug.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2108
https://github.com/openbabel/openbabel/issues/2108:710,Availability,fault,fault,710,"## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: Ubuntu 18.04, Python 2.7.17. I want to generate a reasonable 3D structure from SMILES string (take 'C1CCCC1' for example here). The command line ""echo C1CCCC1 | obabel -ismi -omol -Otemplate.mol --gen3D"" works well. But when I try to do that in Python, ""Segmentation fault"" occured. The code is shown below:; >>> from openbabel import openbabel as ob; >>> line = 'C1CCCC1'; >>> format = 'smi'; >>> mol = ob.OBMol(); >>> conv = ob.OBConversion(); >>> conv.SetInFormat(format) # it returns True; >>> conv.ReadString(mol, line) # it returns True; >>> gen3d = ob.OBOp.FindType(""Gen3D""); >>> gen3d.Do(mol); Segmentation fault (core dumped). I'm not sure if there is something wrong in my code or there is a bug.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2108
https://github.com/openbabel/openbabel/pull/2109:324,Energy Efficiency,charge,charge-simple-approach-to,324,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:411,Energy Efficiency,charge,charges,411,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:616,Energy Efficiency,charge,charges,616,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:673,Energy Efficiency,charge,charge,673,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:821,Energy Efficiency,charge,charge,821,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:839,Energy Efficiency,charge,charges,839,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:969,Energy Efficiency,charge,charged,969,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:1088,Energy Efficiency,charge,charge-separated,1088,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:1264,Energy Efficiency,charge,charge,1264,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:1305,Energy Efficiency,charge,charge,1305,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:1072,Safety,avoid,avoid,1072,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:331,Usability,simpl,simple-approach-to,331,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:523,Usability,simpl,simple,523,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:628,Usability,simpl,simply,628,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/pull/2109:768,Usability,simpl,simply,768,"Together with the ``-r`` option for ""strip all but the largest component"", neutralize is often an essential first step for standardising a dataset of molecules (especially as provided by vendors). Here's the help text from ```obabel -L neutralize``` (some additional background at https://baoilleach.blogspot.com/2019/12/no-charge-simple-approach-to.html):. ```; One of the ops; neutralize Neutralize +1 and -1 charges. Note: this method accepts an optional argument 'changed' which is; described below. This method uses a simple procedure to generate the neutral form of a; molecule. It does not attempt to balance charges but simply to convert; all atoms with a +1 or -1 charge to neutral by addition or subtraction; of H+. To a first approximation the procedure is simply to identify all atoms with; either a +1 or -1 charge, set their charges to zero and adjust their; hydrogen counts by -1 or +1 (i.e. we are adding/removing H+). The first; minor issue is that +1 charged atoms must have a hydrogen, or otherwise; we can't remove H+. The second issue is that we must avoid altering; charge-separated representations of multiple bonds, such as nitro which; is often represented as [N+](=O)[O-]. It does this by checking whether a; neighbor atom has a negative charge (for the +1 atoms) or a positive; charge (for the -1 atoms). If specified, the optional argument 'changed' causes the method to return; True if the molecule was changed by the neutralize operation, and False; otherwise. This is mostly useful if using the API, but for command-line; usage (e.g. via obabel) this filters out molecules that are unchanged; by the operation and only retains those that are changed.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2109
https://github.com/openbabel/openbabel/issues/2111:71,Availability,fault,fault,71,"With OB 3.0:; ```; $ obabel -:""[H][C@@H](I)F"" -d -oinchi; Segmentation fault (core dumped); ```; Presumably some interplay between the explicit and implicit H messes up the stereo object...?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111
https://github.com/openbabel/openbabel/issues/2112:287,Availability,avail,available,287,"With OB 3.0, it's possible to write out a molfile where the title has more than 80 characters. The ctfile.pdf spec states that it should be limited to 80:. ```; Molecule name. This line is unformatted, but like all other lines in a molfile cannot; extend beyond column 80. If no name is available, a blank line must be present.; ```. This might be one of those cases where we allow this as an option (for those programs that accept titles of this length). However, the default should be to write files that conform to the spec. Here's an example:; ```; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C""); mol.title = ""*""*100. digits = ""0123456789""; mol.title = digits * 10; print(mol.write(""mol"")); ```; ...the full title of 100 characters is written to the molfile.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2112
https://github.com/openbabel/openbabel/issues/2112:248,Modifiability,extend,extend,248,"With OB 3.0, it's possible to write out a molfile where the title has more than 80 characters. The ctfile.pdf spec states that it should be limited to 80:. ```; Molecule name. This line is unformatted, but like all other lines in a molfile cannot; extend beyond column 80. If no name is available, a blank line must be present.; ```. This might be one of those cases where we allow this as an option (for those programs that accept titles of this length). However, the default should be to write files that conform to the spec. Here's an example:; ```; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C""); mol.title = ""*""*100. digits = ""0123456789""; mol.title = digits * 10; print(mol.write(""mol"")); ```; ...the full title of 100 characters is written to the molfile.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2112
https://github.com/openbabel/openbabel/pull/2114:118,Testability,test,test,118,- data/UFF.prm: Add line for atom type 'D'.; - src/forcefields/forcefielduff.cpp: Add checks to prevent segfaults.; - test/regressiontest.cpp: Add test case.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2114
https://github.com/openbabel/openbabel/pull/2114:147,Testability,test,test,147,- data/UFF.prm: Add line for atom type 'D'.; - src/forcefields/forcefielduff.cpp: Add checks to prevent segfaults.; - test/regressiontest.cpp: Add test case.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2114
https://github.com/openbabel/openbabel/issues/2117:1409,Testability,test,test,1409,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Win 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Openbabel 2.4.1 generates such structures correctly, 3.0.0 crashes every time. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; Generate 3D coordinates for a structure ""c1ccc(F)cc1"" using either the GUI or using python bindings.; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2117
https://github.com/openbabel/openbabel/issues/2118:1248,Deployability,Install,Install,1248,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version: windows 10 / 7 . ## Expected Behavior; pybel should have readString() method. ## Actual Behavior. C:\Windows\system32>python; Python 2.7.17 (v2.7.17:c2f86d86e6, Oct 19 2019, 21:01:17) [MSC v.1500 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import pybel; >>> pybel.readstring(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; AttributeError: 'module' object has no attribute 'readstring'; >>>. ## Steps to Reproduce; Install openbabel in windows",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2118
https://github.com/openbabel/openbabel/pull/2119:93,Deployability,release,release,93,This hopefully fixes #2081 so that the Python bindings can be built directly from the source release (i.e. without SWIG).,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2119
https://github.com/openbabel/openbabel/issues/2120:403,Safety,avoid,avoid,403,"I am using openbabel 3.0.0 and I would like to convert a mol2 file to a cml file whilst maintaining the atom names in the mol2 file. For instance in the example below I would like the label 'O1' for atom 1 in the mol2 file to carry over to the cml file. However, when I do the conversion using openbabel, the names of the atoms are overwritten, so for instance ""O1"" becomes ""a1"". Is there any way I can avoid this? . Maintaining the atom names should compatible with the CML [schema](http://www.xml-cml.org/schema/schema3/), since they conform to the pattern value ""[A-Za-z][A-Za-z0-9_\.\-]*"" . My INPUT MOL2 FILE is:. @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O1 -8.7156 2.6803 0.0000 O.3 1 HOH1 -0.4105; 2 H2 -7.7456 2.6803 0.0000 H 0 HOH0 0.2052; 3 H3 -9.0389 1.9702 0.5763 H 0 HOH0 0.2052; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1. The CURRENT CML OUTPUT FILE is:; ```xml; <?xml version=""1.0""?>; <molecule id=""id*****"" xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O"" hydrogenCount=""2"" x3=""-8.715600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a2"" elementType=""H"" hydrogenCount=""0"" x3=""-7.745600"" y3=""2.680300"" z3=""0.000000""/>; <atom id=""a3"" elementType=""H"" hydrogenCount=""0"" x3=""-9.038900"" y3=""1.970200"" z3=""0.576300""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a1 a3"" order=""1""/>; </bondArray>; </molecule>; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2120
https://github.com/openbabel/openbabel/pull/2121:53,Availability,failure,failure,53,Previously ```O=s1(=O)cccn1``` caused a kekulization failure. Now it's read as ```O=S1(=O)C=CC=N1```.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2121
https://github.com/openbabel/openbabel/issues/2122:428,Availability,avail,available,428,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:18,Deployability,install,install,18,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:76,Deployability,install,installed,76,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:95,Deployability,install,install,95,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:255,Deployability,install,install,255,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:493,Deployability,install,install,493,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:503,Deployability,upgrade,upgrade,503,"Windows 10; Fresh install of Python 3.6 and OpenBabel 3.0.; Python bindings installed via 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2122:2027,Performance,load,load,2027,"ia 'pip install -U openbabel'. ```; Microsoft Windows [Versione 10.0.17763.973]; (c) 2018 Microsoft Corporation. Tutti i diritti sono riservati. C:\Users\alombardo>pip install -U openbabel; Requirement already up-to-date: openbabel in c:\python\python36\lib\site-packages (3.0.0); You are using pip version 10.0.1, however version 20.0.2 is available.; You should consider upgrading via the 'python -m pip install --upgrade pip' command. C:\Users\alombardo>py; Python 3.6.6 (v3.6.6:4cf1f54eb7, Jun 27 2018, 03:37:03) [MSC v.1900 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; Traceback (most recent call last):; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 994, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 971, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 953, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python\Python36\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python\Python36\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python\Python36\lib\importlib\__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ImportError: DLL load failed: Impossibile trovare il modulo specificato.; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2122
https://github.com/openbabel/openbabel/issues/2123:2289,Testability,test,test,2289," C UNL 1 4.666 -0.812 0.925 1.00 0.00 C ; HETATM 5 C UNL 1 5.386 -1.689 1.812 1.00 0.00 C ; HETATM 6 C UNL 1 0.345 0.942 -0.848 1.00 0.00 C ; HETATM 7 H UNL 1 0.550 -0.563 0.674 1.00 0.00 H ; HETATM 8 H UNL 1 3.022 0.694 -0.597 1.00 0.00 H ; HETATM 9 H UNL 1 2.710 -1.441 1.561 1.00 0.00 H ; HETATM 10 H UNL 1 5.182 -0.184 0.290 1.00 0.00 H ; HETATM 11 H UNL 1 6.073 -2.231 2.360 1.00 0.00 H ; HETATM 12 H UNL 1 -0.341 1.484 -1.396 1.00 0.00 H ; CONECT 1 2 6 6 7 ; CONECT 2 1 3 3 8 ; CONECT 3 2 2 4 9 ; CONECT 4 3 5 5 10 ; CONECT 5 4 4 6 11 ; CONECT 6 5 1 1 12 ; CONECT 7 1 ; CONECT 8 2 ; CONECT 9 3 ; CONECT 10 4 ; CONECT 11 5 ; CONECT 12 6 ; MASTER 0 0 0 0 0 0 0 0 12 0 12 0; END; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2123
https://github.com/openbabel/openbabel/pull/2124:274,Safety,avoid,avoid,274,"In order to know whether a stereo OBData object is a CisTrans, etc., you need to first cast it to StereoBase and check its type. This adds the ability to cast to StereoBase to the Python bindings (there are many other casts there already). Note that users of OBStereoFacade avoid this need as there are specific functions that return the CisTrans subclass, etc. I think it's still useful to plug this hole.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2124
https://github.com/openbabel/openbabel/issues/2125:407,Deployability,Update,Update,407,"Dear OpenBabel developers.; Many thanks for your program, and sorry for avoiding the template. The problem appears in commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b and now in master.; The issue is that the CIF file occupancy values can be treated incorrectly. ```; commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b; Author: Alexandr Fonari <alexandr.fonari@gmail.com>; Date: Mon Mar 19 11:39:33 2018 -0400. Update mmcifformat.cpp. diff --git a/src/formats/mmcifformat.cpp b/src/formats/mmcifformat.cpp; --- a/src/formats/mmcifformat.cpp; +++ b/src/formats/mmcifformat.cpp; @@ -777,1 +777,3 @@; - occup->SetValue(token.as_number());; + double occup = token.as_number();; + if (occup <= 0.0 || occup > 1.0){; + occup = 1.0;. ```; The occupancy become 1.0 if it is 0.0. This affect supercell program. https://github.com/orex/supercell/issues/28; I would like to get a comment from @afonari about the reason of such behaviour. If there are no ""strong"" reasons for this, I propose to change the code to; ```; occup = std::max(0.0, std::min(1.0, occup));; ```. Sincerely yours,; Kirill.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2125
https://github.com/openbabel/openbabel/issues/2125:72,Safety,avoid,avoiding,72,"Dear OpenBabel developers.; Many thanks for your program, and sorry for avoiding the template. The problem appears in commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b and now in master.; The issue is that the CIF file occupancy values can be treated incorrectly. ```; commit bf2204231bfc2bf1a97bf193fa56c3d72ff0c97b; Author: Alexandr Fonari <alexandr.fonari@gmail.com>; Date: Mon Mar 19 11:39:33 2018 -0400. Update mmcifformat.cpp. diff --git a/src/formats/mmcifformat.cpp b/src/formats/mmcifformat.cpp; --- a/src/formats/mmcifformat.cpp; +++ b/src/formats/mmcifformat.cpp; @@ -777,1 +777,3 @@; - occup->SetValue(token.as_number());; + double occup = token.as_number();; + if (occup <= 0.0 || occup > 1.0){; + occup = 1.0;. ```; The occupancy become 1.0 if it is 0.0. This affect supercell program. https://github.com/orex/supercell/issues/28; I would like to get a comment from @afonari about the reason of such behaviour. If there are no ""strong"" reasons for this, I propose to change the code to; ```; occup = std::max(0.0, std::min(1.0, occup));; ```. Sincerely yours,; Kirill.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2125
https://github.com/openbabel/openbabel/issues/2127:837,Energy Efficiency,Energy,Energy,837,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: all. ## Expected Behavior; Openbabel so far supports several types of force field. For each FF, they should yield different atom types. . ## Actual Behavior; From the python wrapper, different FFs yield different geometry and energies. However, they seem to output the same atom type like `[S2, Car, ....]` for the following example. ## Steps to Reproduce; ```python; from openbabel import pybel. # Read the file.; mol = pybel.readstring('smi', 's1c(Nc2c(N(=O)=O)cccc2)c(cc1C)C#N'); mol.make3D(). for forcefield in ['gaff', 'uff']:; ff = pybel._forcefields[forcefield]; ff.Setup(mol.OBMol); ff.SteepestDescent(100); ff.GetCoordinates(mol.OBMol); ; print(forcefield, ff.Energy()); for at in mol.atoms:; print(at.type, at.coords); ```. ```; gaff 81.31788597102525; S2 (-1.344651855071387, -1.0941465061515634, 0.029828838805379832); Car (0.39474351513488315, -1.176445608784946, 0.024689107366453734); Npl (1.0552883977237264, -2.3758008961884935, 0.0030222872080245995); Car (2.404094018439659, -2.6221940623408817, 0.00014124412942007893); Car (3.0738051826598114, -3.241201070463821, -1.0797200431076022); Ntr (2.392247088783623, -3.667828050819176, -2.3488978003162138); O2 (3.0832225275140552, -4.131218731127551, -3.241970716302695); O2 (1.220363586815227, -3.388728356889909, -2.540326040583687); Car (4.466363891781698, -3.396860043350516, -0.9918173939751465); Car (5.183138200588895, -2.8978341735694664, 0.0922739258386591); Car (4.516808099056409, -2.2696412295211617, 1.1357066720061701); Car (3.1321879506708443, -2.1634835920931277, 1.1017141041590433); Car (0.9636489749319206, 0.07721139642874196, -0.040173414434700176); Car (-0.01302278148816442, 1.1214907147260933, -0.029163835526625544); Car (-1.29497785609341, 0.641591198505824, 0.015370203705637148); C3 (-2.5132498315387215, 1.520856479911642, -0.000747082142",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2127
https://github.com/openbabel/openbabel/issues/2127:342,Integrability,wrap,wrapper,342,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: all. ## Expected Behavior; Openbabel so far supports several types of force field. For each FF, they should yield different atom types. . ## Actual Behavior; From the python wrapper, different FFs yield different geometry and energies. However, they seem to output the same atom type like `[S2, Car, ....]` for the following example. ## Steps to Reproduce; ```python; from openbabel import pybel. # Read the file.; mol = pybel.readstring('smi', 's1c(Nc2c(N(=O)=O)cccc2)c(cc1C)C#N'); mol.make3D(). for forcefield in ['gaff', 'uff']:; ff = pybel._forcefields[forcefield]; ff.Setup(mol.OBMol); ff.SteepestDescent(100); ff.GetCoordinates(mol.OBMol); ; print(forcefield, ff.Energy()); for at in mol.atoms:; print(at.type, at.coords); ```. ```; gaff 81.31788597102525; S2 (-1.344651855071387, -1.0941465061515634, 0.029828838805379832); Car (0.39474351513488315, -1.176445608784946, 0.024689107366453734); Npl (1.0552883977237264, -2.3758008961884935, 0.0030222872080245995); Car (2.404094018439659, -2.6221940623408817, 0.00014124412942007893); Car (3.0738051826598114, -3.241201070463821, -1.0797200431076022); Ntr (2.392247088783623, -3.667828050819176, -2.3488978003162138); O2 (3.0832225275140552, -4.131218731127551, -3.241970716302695); O2 (1.220363586815227, -3.388728356889909, -2.540326040583687); Car (4.466363891781698, -3.396860043350516, -0.9918173939751465); Car (5.183138200588895, -2.8978341735694664, 0.0922739258386591); Car (4.516808099056409, -2.2696412295211617, 1.1357066720061701); Car (3.1321879506708443, -2.1634835920931277, 1.1017141041590433); Car (0.9636489749319206, 0.07721139642874196, -0.040173414434700176); Car (-0.01302278148816442, 1.1214907147260933, -0.029163835526625544); Car (-1.29497785609341, 0.641591198505824, 0.015370203705637148); C3 (-2.5132498315387215, 1.520856479911642, -0.000747082142",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2127
https://github.com/openbabel/openbabel/issues/2128:1410,Availability,error,error,1410,"- [x] I believe this to be a bug with Open Babel. ## Environment Information. `conda info`. ```; active environment : mnx; active env location : ~/.local/share/miniconda3/envs/mnx; shell level : 1; user config file : ~/.condarc; populated config files : ~/.condarc; conda version : 4.8.2; conda-build version : 3.18.11; python version : 3.7.3.final.0; virtual packages : __glibc=2.27; base environment : ~/.local/share/miniconda3 (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : ~/.local/share/miniconda3/pkgs; ~/.conda/pkgs; envs directories : ~/.local/share/miniconda3/envs; ~/.conda/envs; platform : linux-64; user-agent : conda/4.8.2 requests/2.22.0 CPython/3.7.3 Linux/5.3.0-7625-generic ubuntu/18.04 glibc/2.27; netrc file : None; offline mode : False; ```. Open Babel version 3.0.0. ## Expected Behavior. I want to parse an InChI string to a `pybel.Molecule`. I can understand that this may fail but I believe it should be handled more transparently rather than terminating my program. ## Actual Behavior. When I run below code, I get the following error. ```; terminate called after throwing an instance of 'std::logic_error' ; what(): basic_string::_M_construct null not valid; ```. ## Steps to Reproduce. ```python; from openbabel import pybel. molecule = pybel.readstring(; ""inchi"",; ""InChI=1S/C26H37N7O19P3S/c1-26(2,20(37)23(38)29-6-5-15(34)28-7-8-56-25(39)13-3-4-16(35)49-13)10-48-55(45,46)52-54(43,44)47-9-14-19(51-53(40,41)42)18(36)24(50-14)33-12-32-17-21(27)30-11-31-22(17)33/h3-4,11-12,14,18-20,24,36-37H,5-10H2,1-2H3,(H,28,34)(H,29,38)(H,43,44)(H,45,46)(H2,27,30,31)(H2,40,41,42)/t14-,18?,19?,20-,24-/m0/s1/CRV:16.5"",; ); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2128
https://github.com/openbabel/openbabel/issues/2128:203,Modifiability,config,config,203,"- [x] I believe this to be a bug with Open Babel. ## Environment Information. `conda info`. ```; active environment : mnx; active env location : ~/.local/share/miniconda3/envs/mnx; shell level : 1; user config file : ~/.condarc; populated config files : ~/.condarc; conda version : 4.8.2; conda-build version : 3.18.11; python version : 3.7.3.final.0; virtual packages : __glibc=2.27; base environment : ~/.local/share/miniconda3 (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : ~/.local/share/miniconda3/pkgs; ~/.conda/pkgs; envs directories : ~/.local/share/miniconda3/envs; ~/.conda/envs; platform : linux-64; user-agent : conda/4.8.2 requests/2.22.0 CPython/3.7.3 Linux/5.3.0-7625-generic ubuntu/18.04 glibc/2.27; netrc file : None; offline mode : False; ```. Open Babel version 3.0.0. ## Expected Behavior. I want to parse an InChI string to a `pybel.Molecule`. I can understand that this may fail but I believe it should be handled more transparently rather than terminating my program. ## Actual Behavior. When I run below code, I get the following error. ```; terminate called after throwing an instance of 'std::logic_error' ; what(): basic_string::_M_construct null not valid; ```. ## Steps to Reproduce. ```python; from openbabel import pybel. molecule = pybel.readstring(; ""inchi"",; ""InChI=1S/C26H37N7O19P3S/c1-26(2,20(37)23(38)29-6-5-15(34)28-7-8-56-25(39)13-3-4-16(35)49-13)10-48-55(45,46)52-54(43,44)47-9-14-19(51-53(40,41)42)18(36)24(50-14)33-12-32-17-21(27)30-11-31-22(17)33/h3-4,11-12,14,18-20,24,36-37H,5-10H2,1-2H3,(H,28,34)(H,29,38)(H,43,44)(H,45,46)(H2,27,30,31)(H2,40,41,42)/t14-,18?,19?,20-,24-/m0/s1/CRV:16.5"",; ); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2128
https://github.com/openbabel/openbabel/issues/2128:239,Modifiability,config,config,239,"- [x] I believe this to be a bug with Open Babel. ## Environment Information. `conda info`. ```; active environment : mnx; active env location : ~/.local/share/miniconda3/envs/mnx; shell level : 1; user config file : ~/.condarc; populated config files : ~/.condarc; conda version : 4.8.2; conda-build version : 3.18.11; python version : 3.7.3.final.0; virtual packages : __glibc=2.27; base environment : ~/.local/share/miniconda3 (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : ~/.local/share/miniconda3/pkgs; ~/.conda/pkgs; envs directories : ~/.local/share/miniconda3/envs; ~/.conda/envs; platform : linux-64; user-agent : conda/4.8.2 requests/2.22.0 CPython/3.7.3 Linux/5.3.0-7625-generic ubuntu/18.04 glibc/2.27; netrc file : None; offline mode : False; ```. Open Babel version 3.0.0. ## Expected Behavior. I want to parse an InChI string to a `pybel.Molecule`. I can understand that this may fail but I believe it should be handled more transparently rather than terminating my program. ## Actual Behavior. When I run below code, I get the following error. ```; terminate called after throwing an instance of 'std::logic_error' ; what(): basic_string::_M_construct null not valid; ```. ## Steps to Reproduce. ```python; from openbabel import pybel. molecule = pybel.readstring(; ""inchi"",; ""InChI=1S/C26H37N7O19P3S/c1-26(2,20(37)23(38)29-6-5-15(34)28-7-8-56-25(39)13-3-4-16(35)49-13)10-48-55(45,46)52-54(43,44)47-9-14-19(51-53(40,41)42)18(36)24(50-14)33-12-32-17-21(27)30-11-31-22(17)33/h3-4,11-12,14,18-20,24,36-37H,5-10H2,1-2H3,(H,28,34)(H,29,38)(H,43,44)(H,45,46)(H2,27,30,31)(H2,40,41,42)/t14-,18?,19?,20-,24-/m0/s1/CRV:16.5"",; ); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2128
https://github.com/openbabel/openbabel/issues/2128:825,Performance,cache,cache,825,"- [x] I believe this to be a bug with Open Babel. ## Environment Information. `conda info`. ```; active environment : mnx; active env location : ~/.local/share/miniconda3/envs/mnx; shell level : 1; user config file : ~/.condarc; populated config files : ~/.condarc; conda version : 4.8.2; conda-build version : 3.18.11; python version : 3.7.3.final.0; virtual packages : __glibc=2.27; base environment : ~/.local/share/miniconda3 (writable); channel URLs : https://conda.anaconda.org/conda-forge/linux-64; https://conda.anaconda.org/conda-forge/noarch; https://conda.anaconda.org/bioconda/linux-64; https://conda.anaconda.org/bioconda/noarch; https://repo.anaconda.com/pkgs/main/linux-64; https://repo.anaconda.com/pkgs/main/noarch; https://repo.anaconda.com/pkgs/r/linux-64; https://repo.anaconda.com/pkgs/r/noarch; package cache : ~/.local/share/miniconda3/pkgs; ~/.conda/pkgs; envs directories : ~/.local/share/miniconda3/envs; ~/.conda/envs; platform : linux-64; user-agent : conda/4.8.2 requests/2.22.0 CPython/3.7.3 Linux/5.3.0-7625-generic ubuntu/18.04 glibc/2.27; netrc file : None; offline mode : False; ```. Open Babel version 3.0.0. ## Expected Behavior. I want to parse an InChI string to a `pybel.Molecule`. I can understand that this may fail but I believe it should be handled more transparently rather than terminating my program. ## Actual Behavior. When I run below code, I get the following error. ```; terminate called after throwing an instance of 'std::logic_error' ; what(): basic_string::_M_construct null not valid; ```. ## Steps to Reproduce. ```python; from openbabel import pybel. molecule = pybel.readstring(; ""inchi"",; ""InChI=1S/C26H37N7O19P3S/c1-26(2,20(37)23(38)29-6-5-15(34)28-7-8-56-25(39)13-3-4-16(35)49-13)10-48-55(45,46)52-54(43,44)47-9-14-19(51-53(40,41)42)18(36)24(50-14)33-12-32-17-21(27)30-11-31-22(17)33/h3-4,11-12,14,18-20,24,36-37H,5-10H2,1-2H3,(H,28,34)(H,29,38)(H,43,44)(H,45,46)(H2,27,30,31)(H2,40,41,42)/t14-,18?,19?,20-,24-/m0/s1/CRV:16.5"",; ); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2128
https://github.com/openbabel/openbabel/issues/2129:310,Deployability,Install,Install,310,"## Environment Information; Open Babel version: 3.0; Operating system and version: win 32. python 2.7. ## Expected Behavior; I suppose to import openbabel. ## Actual Behavior; ![image](https://user-images.githubusercontent.com/5137598/74587536-c0f66880-5019-11ea-8585-7ff44fab13b3.png). ## Steps to Reproduce; Install Openbabel 3.0.0; pip install openbabel. ( python version 2.7 ); import openbabel. Thanks,; Raja K",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2129
https://github.com/openbabel/openbabel/issues/2129:339,Deployability,install,install,339,"## Environment Information; Open Babel version: 3.0; Operating system and version: win 32. python 2.7. ## Expected Behavior; I suppose to import openbabel. ## Actual Behavior; ![image](https://user-images.githubusercontent.com/5137598/74587536-c0f66880-5019-11ea-8585-7ff44fab13b3.png). ## Steps to Reproduce; Install Openbabel 3.0.0; pip install openbabel. ( python version 2.7 ); import openbabel. Thanks,; Raja K",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2129
https://github.com/openbabel/openbabel/issues/2130:141,Availability,error,error,141,"When reading a large SMILES file (for example), the output is silently truncated if an empty line is encountered due to the default ""stop on error"" behavior. This causes lost time trying to work out what's happening and has tripped me up on occasion. I end up running everything twice, the second time with ""-e"" to get past the problematic SMILES. Much better would be the ""-e"" behavior by default, which is ""continue despite error"" and just write a warning message to stdout (e.g. file contains empty line, or ""problem reading SMILES XXXX""). We could retain the current behavior as an option (e.g. --stop-on-error).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2130
https://github.com/openbabel/openbabel/issues/2130:426,Availability,error,error,426,"When reading a large SMILES file (for example), the output is silently truncated if an empty line is encountered due to the default ""stop on error"" behavior. This causes lost time trying to work out what's happening and has tripped me up on occasion. I end up running everything twice, the second time with ""-e"" to get past the problematic SMILES. Much better would be the ""-e"" behavior by default, which is ""continue despite error"" and just write a warning message to stdout (e.g. file contains empty line, or ""problem reading SMILES XXXX""). We could retain the current behavior as an option (e.g. --stop-on-error).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2130
https://github.com/openbabel/openbabel/issues/2130:609,Availability,error,error,609,"When reading a large SMILES file (for example), the output is silently truncated if an empty line is encountered due to the default ""stop on error"" behavior. This causes lost time trying to work out what's happening and has tripped me up on occasion. I end up running everything twice, the second time with ""-e"" to get past the problematic SMILES. Much better would be the ""-e"" behavior by default, which is ""continue despite error"" and just write a warning message to stdout (e.g. file contains empty line, or ""problem reading SMILES XXXX""). We could retain the current behavior as an option (e.g. --stop-on-error).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2130
https://github.com/openbabel/openbabel/issues/2130:458,Integrability,message,message,458,"When reading a large SMILES file (for example), the output is silently truncated if an empty line is encountered due to the default ""stop on error"" behavior. This causes lost time trying to work out what's happening and has tripped me up on occasion. I end up running everything twice, the second time with ""-e"" to get past the problematic SMILES. Much better would be the ""-e"" behavior by default, which is ""continue despite error"" and just write a warning message to stdout (e.g. file contains empty line, or ""problem reading SMILES XXXX""). We could retain the current behavior as an option (e.g. --stop-on-error).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2130
https://github.com/openbabel/openbabel/issues/2131:234,Availability,avail,available,234,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux. I found a possible issue with the function MatchesSMARTS() available at OBAtom when dealing with cyclic/symmetric molecules. A simple example is the molecule ""NC(=O)CCC1O[Mg]O1"". If I search for a pattern like ""[OX2][C;X4,X3][OX2]"" the result I got was False, but of course the pattern exists. Then, I took a look at the file atom.cpp and I observed that MatchesSMARTS() is using the function GetUMapList() from OBSmartsPattern. The problem here is that GetUMapList() returns only unique matched patterns, so when we have cyclic/symmetric molecules, not all patterns are returned, but only one of them. As a consequence, the first atom of the unique list may not correspond to the target atom, so the pattern above works only for one of the Oxygens. To solve this problem, I made my own function to match patterns by using GetMapList(). So, it returns all possible patterns, which means I can find all oxygens. Therefore, I think you guys may update the function MatchesSMARTS by exchanging GetUMapList by GetMapList. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2131
https://github.com/openbabel/openbabel/issues/2131:1118,Deployability,update,update,1118,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux. I found a possible issue with the function MatchesSMARTS() available at OBAtom when dealing with cyclic/symmetric molecules. A simple example is the molecule ""NC(=O)CCC1O[Mg]O1"". If I search for a pattern like ""[OX2][C;X4,X3][OX2]"" the result I got was False, but of course the pattern exists. Then, I took a look at the file atom.cpp and I observed that MatchesSMARTS() is using the function GetUMapList() from OBSmartsPattern. The problem here is that GetUMapList() returns only unique matched patterns, so when we have cyclic/symmetric molecules, not all patterns are returned, but only one of them. As a consequence, the first atom of the unique list may not correspond to the target atom, so the pattern above works only for one of the Oxygens. To solve this problem, I made my own function to match patterns by using GetMapList(). So, it returns all possible patterns, which means I can find all oxygens. Therefore, I think you guys may update the function MatchesSMARTS by exchanging GetUMapList by GetMapList. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2131
https://github.com/openbabel/openbabel/issues/2131:302,Usability,simpl,simple,302,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux. I found a possible issue with the function MatchesSMARTS() available at OBAtom when dealing with cyclic/symmetric molecules. A simple example is the molecule ""NC(=O)CCC1O[Mg]O1"". If I search for a pattern like ""[OX2][C;X4,X3][OX2]"" the result I got was False, but of course the pattern exists. Then, I took a look at the file atom.cpp and I observed that MatchesSMARTS() is using the function GetUMapList() from OBSmartsPattern. The problem here is that GetUMapList() returns only unique matched patterns, so when we have cyclic/symmetric molecules, not all patterns are returned, but only one of them. As a consequence, the first atom of the unique list may not correspond to the target atom, so the pattern above works only for one of the Oxygens. To solve this problem, I made my own function to match patterns by using GetMapList(). So, it returns all possible patterns, which means I can find all oxygens. Therefore, I think you guys may update the function MatchesSMARTS by exchanging GetUMapList by GetMapList. bests",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2131
https://github.com/openbabel/openbabel/pull/2132:65,Testability,test,tests,65,"Previously the following were parsed (copied and pasted from the tests) - now they are rejected as invalid:; ```; ""[CH2++2]"",; ""[C+-+-]"",; ""[C+2+]""; ""[CH2--2]"",; ""[C-+-+]"",; ""[C-2-]""; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2132
https://github.com/openbabel/openbabel/issues/2133:873,Availability,error,errors,873,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:937,Availability,Error,Error,937,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1034,Availability,Error,Error,1034,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1144,Deployability,install,installed,1144,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1172,Deployability,install,install,1172,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1209,Deployability,install,installed,1209,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1247,Deployability,install,install,1247,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2133:1018,Performance,load,load,1018,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04. ## Expected Behavior. ## Actual Behavior; import openbabel after importing pyqt5 produces the following errors. However the other way around works fine. *** Open Babel Error in openLib; /home/user/anaconda3/lib/openbabel/3.0.0/png2format.so did not load properly.; Error: /home/user/anaconda3/lib/openbabel/3.0.0/../../libcairo.so.2: undefined symbol: FT_Done_MM_Var. I have installed cairo with; conda install -c conda-forge cairo; I have installed openbabel 3.0.0 with; conda install -c conda-forge openbabel. ## Steps to Reproduce; <!--; importing pyqt5 libraries before importing openbabel libraries will reproduce the problem... without any other code. ; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2133
https://github.com/openbabel/openbabel/issues/2134:155,Modifiability,plugin,plugin,155,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134
https://github.com/openbabel/openbabel/issues/2134:633,Modifiability,plugin,plugin,633,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134
https://github.com/openbabel/openbabel/issues/2134:814,Modifiability,plugin,plugin,814,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134
https://github.com/openbabel/openbabel/issues/2134:737,Testability,test,test,737,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134
https://github.com/openbabel/openbabel/issues/2134:909,Usability,simpl,simply,909,"Hi everybody. I apologize in advance if my question is dumb, and thank anyone that could help me out. I'm quite new to C++ and cmake. I have written a new plugin format, PDBT, which at the moment is nothing more than a copy of pdbqt format, but which will change once I can get it to work. When compiling normally everything works, I am able to use the new file format. However, I need an executable that can be distributed for use on different machines. When compiling using -DBUILD_SHARED=OFF -DBUILD_MIXED=ON, I can compile libopenbabel.a which I can then use to compile a static obabel binary. This executable works, but the new plugin (PDBT) is absent from obabel -L formats list, and fails when I try to use it doing ""obabel -isdf test/pdb_ligands_sdf/966c_rs2.sdf -opdbt"". Does anyone have any idea why the plugin is not working on the mixed compiled executable?. Here is my fork with the PDBT format (simply copied the pdbqt file in formats folder and modified formats.cmake to add pdbt format):. https://github.com/rquiroga7/openbabel.git. I am attaching my CMakeLists file which I use to compile the obabel executable:; [CMakeLists.txt](https://github.com/openbabel/openbabel/files/4268993/CMakeLists.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2134
https://github.com/openbabel/openbabel/issues/2135:172,Deployability,integrat,integrate,172,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:325,Deployability,continuous,continuous-fuzzing,325,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:497,Deployability,Continuous,Continuously,497,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1038,Deployability,integrat,integrations,1038,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1146,Deployability,patch,patch-rewards,1146,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1367,Deployability,integrat,integrates,1367,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1608,Deployability,integrat,integrating,1608,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:172,Integrability,integrat,integrate,172,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1038,Integrability,integrat,integrations,1038,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1367,Integrability,integrat,integrates,1367,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1608,Integrability,integrat,integrating,1608,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:855,Safety,remediat,remediate,855,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:418,Security,secur,security,418,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:984,Security,Secur,Security,984,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2135:1290,Security,secur,secure,1290,"Greetings openbabel developers and contributors,. We’re reaching out because your project is an important part of the open source ecosystem, and we’d like to invite you to integrate with our [fuzzing](https://www.owasp.org/index.php/Fuzzing) service, [OSS-Fuzz]( https://opensource.googleblog.com/2016/12/announcing-oss-fuzz-continuous-fuzzing.html ). OSS-Fuzz is a free fuzzing infrastructure you can use to identify security vulnerabilities and stability bugs in your project. OSS-Fuzz will:. - Continuously run at scale all the fuzzers you write.; - Alert you when it finds issues.; - Automatically close issues after they’ve been fixed by a commit. Many widely used [open source projects]( https://github.com/google/oss-fuzz/tree/master/projects ) like OpenSSL, FFmpeg, LibreOffice, and ImageMagick are fuzzing via OSS-Fuzz, which helps them find and remediate [critical issues]( https://bugs.chromium.org/p/oss-fuzz/issues/list?can=1&q=status%3AFixed%2CVerified+Type%3ABug%2CBug-Security+-component%3AInfra+ ). . Even though typical integrations can be done in < 100 LoC, we have a [reward program]( https://www.google.com/about/appsecurity/patch-rewards/ ) in place which aims to recognize folks who are not just contributing to open source, but are also working hard to make it more secure. We want to stress that anyone who meets the eligibility criteria and integrates a project with OSS-Fuzz is eligible for a reward. To help you getting started, we can attach our internal fuzzer for your project that you are welcome to use directly, or to use it as a starting point. If you're not interested in integrating with OSS-Fuzz, it would be helpful for us to understand why—lack of interest, lack of time, or something else—so we can better support projects like yours in the future. If we’ve missed your question in our [FAQ]( https://google.github.io/oss-fuzz/faq/ ), feel free to reply or reach out to us at oss-fuzz-outreach@googlegroups.com. Thanks!. Tommy; OSS-Fuzz Team",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135
https://github.com/openbabel/openbabel/issues/2137:341,Deployability,install,install,341,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:369,Deployability,install,install,369,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:444,Deployability,Install,Installing,444,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:632,Deployability,Install,Installing,632,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:709,Deployability,Install,Installing,709,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:787,Deployability,Install,Installing,787,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:899,Deployability,install,installed,899,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2137:968,Modifiability,config,config,968,"Hi,. I try to compile the openbabel with python-binding as following for my python virtualenv:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build ; $ cd build ; $ pyenv shell hpc; $ cmake ../ -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON; $ sudo make install; ```. But this will install the python oenbabel bindings into the following location:. ```; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so; -- Set runtime path of ""/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.so"" to ""/usr/local/lib""; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/__init__.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/openbabel.py; -- Installing: /usr/local/lib/python3.8/site-packages/openbabel/pybel.py; ```. I want to let the python binding be installed into the virtualenv's site-packages diretory, how should I config the cmake?. Regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137
https://github.com/openbabel/openbabel/issues/2138:302,Availability,down,down,302,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:543,Availability,error,error,543,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:3628,Availability,Error,Error,3628,"eaction component Ids. All atoms in a particular connected component should have the same value.; ==============================; *** Open Babel Warning in IsValid; The molecule contains a connected component that contains atoms with different reaction roles. All atoms in a particular connected component should have the same role.; ...........==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 0 that is; less than the observed explicit valence 1. .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; .........==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ==============================; *** Open Babel Error in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:3755,Availability,Error,Error,3755,"eaction component Ids. All atoms in a particular connected component should have the same value.; ==============================; *** Open Babel Warning in IsValid; The molecule contains a connected component that contains atoms with different reaction roles. All atoms in a particular connected component should have the same role.; ...........==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 0 that is; less than the observed explicit valence 1. .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; .........==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ==============================; *** Open Babel Error in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:3857,Availability,Error,Error,3857,"eaction component Ids. All atoms in a particular connected component should have the same value.; ==============================; *** Open Babel Warning in IsValid; The molecule contains a connected component that contains atoms with different reaction roles. All atoms in a particular connected component should have the same role.; ...........==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 0 that is; less than the observed explicit valence 1. .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; .........==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ==============================; *** Open Babel Error in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:4247,Availability,Error,Error,4247,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:4373,Availability,Error,Error,4373,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:4499,Availability,Error,Error,4499,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:4626,Availability,Error,Error,4626,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:4870,Availability,Error,Error,4870,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:5233,Availability,Error,Error,5233,"rror in ParseComplex; Element number must be <= 255); ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character '#' which is invalid; ..==============================; *** Open Babel Warning in ParseRingBond; Warning: Tetrahedral stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. ...==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Error in ParseComplex; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseComplex; The atom class following : must be a number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ==============================; *** Open Babel Warning in ParseRingBond; Two digits expected after %; ==============================; *** Open Babel Warning in ParseRingBond; Matching close parenthesis not found for ring closure number; ==============================; *** Open Babel Error in ParseSimple; SMILES string contains a character ',' which is invalid; ...........==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 D 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecule; Ignoring mass difference field for explicit hydrogen isotope.; 0.0000 0.0000 0.0000 T 1 0 0 0 0 0 0 0 0 0 0 0; ==============================; *** Open Babel Warning in ReadMolecu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7183,Availability,Error,Error,7183,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7222,Integrability,MESSAGE,MESSAGE,7222,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7239,Safety,abort,aborted,7239,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:202,Testability,test,tests,202,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:234,Testability,test,test,234,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:251,Testability,test,testTemplates,251,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:270,Testability,test,testbindings,270,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:466,Testability,test,tested,466,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:578,Testability,Test,Test,578,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS-7.7. ## Expected Behavior; tests pass. ## Actual Behavior; test crashes at `testTemplates` in `testbindings.py`. I narrowed it down to the draw() function on the first and last smiles strings:; ""O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2""; ""O=C(CCN1C=CN=C1)N1C2CCC1CN(CC1CC3CCC1C3)C2"". I also tested with the most recent checkout from master, with the same results. The error is as follows:; ```; 186/190 Test #186: pybindtest_bindings ..............***Failed 0.29 sec; /tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/openbabel-openbabel-3-0-0/scripts/python:/tmp/vsc10009/build/OpenBabel/3.0.0/GCC-8.3.0-Python-3.7.4/easybuild_obj/lib; ...==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ....==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Too many greater-than signs in SMILES string. ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ==============================; *** Open Babel Warning in ParseSmiles; Invalid reaction SMILES string: only a single '>' sign found (two required to be valid).; ..==============================; *** Open Babel Warning in IsValid; The molecule is not marked ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7286,Testability,Test,Test,7286,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7388,Testability,Test,Test,7388,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7495,Testability,Test,Test,7495,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7602,Testability,Test,Test,7602,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7669,Testability,test,tests,7669,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7685,Testability,test,tests,7685,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7886,Testability,test,tests,7886,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2138:7908,Testability,test,test,7908,"Babel Warning in ReadMolecule; Invalid value for mass difference. It should be between -3 and 4.; 0.0000 0.0000 0.0000 C -4 0 0 0 0 0 0 0 0 0 0 0; .==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D.; ..==============================; *** Open Babel Warning in GetSmilesElement; Isotope value larger than 9999. Ignoring value.; ..==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in ParseComplex; Square planar stereochemistry must be one of SP1, SP2 or SP3; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ==============================; *** Open Babel Warning in InsertSquarePlanarRef; Warning: Square planar stereo specified for atom with more than 4 connections.; ..terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8). CMake Error at pybindtest_bindings.cmake:20 (MESSAGE):; Child aborted. Start 187: pybindtest__pybel; 187/190 Test #187: pybindtest__pybel ................ Passed 0.99 sec; Start 188: pybindtest_example; 188/190 Test #188: pybindtest_example ............... Passed 0.14 sec; Start 189: pybindtest_cdjsonformat; 189/190 Test #189: pybindtest_cdjsonformat .......... Passed 0.14 sec; Start 190: pybindtest_pcjsonformat; 190/190 Test #190: pybindtest_pcjsonformat .......... Passed 0.15 sec. 99% tests passed, 1 tests failed out of 190; ```. ## Steps to Reproduce; I first had to copy the file `lib/_openbabel.so` from the build directory to the source directory at `scripts/python/openbabel/` to make the python tests run.; ```; make test; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138
https://github.com/openbabel/openbabel/issues/2140:1890,Testability,test,test,1890,"?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Windows 10 version 1909 and Linux Mint 19.3 64-bit Xfce. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore can be used to generate Spectrophores vectors from a molecular file such as SDF. However, there is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; There is apparently no built-in way to then compute a distance metric (such as Euclidean distance) between a reference vector and the sample vectors corresponding to each compound in the SDF file. Instead, one has to export the vectors and use another program, such as python, to compute the distance metric.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; This limitation is present each time obspectrophore is used to generate Spectrophores; no futher processing of the data is possible from within obspectrophore or obabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2140
https://github.com/openbabel/openbabel/issues/2141:182,Availability,fault,fault,182,"system ubuntu-16.04 LTS; openbabel 3.0.0 compile from source (zip file); conversion of smile string of a ZINC15 biogenic compound to 3D mol2 ; encounters a reproducible segmentation fault error. obabel -:'CC(=O)OC[C@]12C[C@H]; (OC(=O)CC(C)C)C(C)=C[C@@H]1O[C@H]1[C@H](OC(C)=O)[C@H](OC(C)=O)[C@@]2(C)[C@@]12CO2' -omol2 --gen3D; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 5 33; Warning: Stereochemistry is wrong, using the distance geometry method instead; Segmentation fault (core dumped). gdb obabel core result shows . [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Core was generated by `obabel -ismi Z15-biogenic307814-sort85597276.smi --gen3D -omol2 -O Z15-biogenic'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00007f3778b694d5 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) () from /usr/local/lib/libopenbabel.so.6. help will be highly appreciated, Thanks. sincerely,; Jrhau",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2141
https://github.com/openbabel/openbabel/issues/2141:188,Availability,error,error,188,"system ubuntu-16.04 LTS; openbabel 3.0.0 compile from source (zip file); conversion of smile string of a ZINC15 biogenic compound to 3D mol2 ; encounters a reproducible segmentation fault error. obabel -:'CC(=O)OC[C@]12C[C@H]; (OC(=O)CC(C)C)C(C)=C[C@@H]1O[C@H]1[C@H](OC(C)=O)[C@H](OC(C)=O)[C@@]2(C)[C@@]12CO2' -omol2 --gen3D; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 5 33; Warning: Stereochemistry is wrong, using the distance geometry method instead; Segmentation fault (core dumped). gdb obabel core result shows . [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Core was generated by `obabel -ismi Z15-biogenic307814-sort85597276.smi --gen3D -omol2 -O Z15-biogenic'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00007f3778b694d5 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) () from /usr/local/lib/libopenbabel.so.6. help will be highly appreciated, Thanks. sincerely,; Jrhau",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2141
https://github.com/openbabel/openbabel/issues/2141:585,Availability,fault,fault,585,"system ubuntu-16.04 LTS; openbabel 3.0.0 compile from source (zip file); conversion of smile string of a ZINC15 biogenic compound to 3D mol2 ; encounters a reproducible segmentation fault error. obabel -:'CC(=O)OC[C@]12C[C@H]; (OC(=O)CC(C)C)C(C)=C[C@@H]1O[C@H]1[C@H](OC(C)=O)[C@H](OC(C)=O)[C@@]2(C)[C@@]12CO2' -omol2 --gen3D; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 5 33; Warning: Stereochemistry is wrong, using the distance geometry method instead; Segmentation fault (core dumped). gdb obabel core result shows . [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Core was generated by `obabel -ismi Z15-biogenic307814-sort85597276.smi --gen3D -omol2 -O Z15-biogenic'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00007f3778b694d5 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) () from /usr/local/lib/libopenbabel.so.6. help will be highly appreciated, Thanks. sincerely,; Jrhau",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2141
https://github.com/openbabel/openbabel/issues/2141:919,Availability,fault,fault,919,"system ubuntu-16.04 LTS; openbabel 3.0.0 compile from source (zip file); conversion of smile string of a ZINC15 biogenic compound to 3D mol2 ; encounters a reproducible segmentation fault error. obabel -:'CC(=O)OC[C@]12C[C@H]; (OC(=O)CC(C)C)C(C)=C[C@@H]1O[C@H]1[C@H](OC(C)=O)[C@H](OC(C)=O)[C@@]2(C)[C@@]12CO2' -omol2 --gen3D; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 5 33; Warning: Stereochemistry is wrong, using the distance geometry method instead; Segmentation fault (core dumped). gdb obabel core result shows . [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; Core was generated by `obabel -ismi Z15-biogenic307814-sort85597276.smi --gen3D -omol2 -O Z15-biogenic'.; Program terminated with signal SIGSEGV, Segmentation fault.; #0 0x00007f3778b694d5 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) () from /usr/local/lib/libopenbabel.so.6. help will be highly appreciated, Thanks. sincerely,; Jrhau",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2141
https://github.com/openbabel/openbabel/issues/2142:1796,Testability,test,test,1796,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142
https://github.com/openbabel/openbabel/issues/2142:1168,Usability,simpl,simply,1168,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Mint 19.3 64-bit Xfce and Windows 10 ver 1909. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; obspectrophore generates spectrophores that are decimal fractions. Consequently, comparisons must be done with distance measures such as Euclidean distances rather than Tanimoto distances or Tanimoto similarity coefficients. Could the spectrophore sets for each compound simply be multiplied by a constant (e.g., 10^5) to convert all the numbers to integers so that Tanimoto coefficients could then be computed? Would this be a legitimate procedure?; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Please see description above.; ## Steps to Reproduce; <!--; This is the current consistent behavior. If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2142
https://github.com/openbabel/openbabel/issues/2143:1215,Testability,test,test,1215,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2143
https://github.com/openbabel/openbabel/issues/2144:1526,Availability,fault,faults,1526,"rceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.0.0 -- Nov 8 2019 -- 05:50:31; Operating system and version: Linux 3.10.0-693.11.6.el7.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am trying to convert a bunch of SMILES strings into 3D molecular structures in the MOL2 format. For most SMILES strings the command I am running:; ```; obabel -h --gen3d -ismi xfl -omol2 > xfl.mol2; ```; produces MOL2 structures as one would expect. However, for 1 SMILES string this recipe fails. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When the file `xlf` contains the SMILES string:; ```; CC(C)OCC1=NOC(CS(=O)(=O)CC2=CC=CC=C2F)=N1 ; ```; Babel seg-faults:; ```; ==============================; *** Open Babel Warning in Build; There exists NaN in calculated coordinates.; Segmentation fault (core dumped); ```; Running Babel under the control of gdb suggests that the problem happens in:; ```; (gdb) where; #0 0x00007ffff7922c79 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) (); from /home/hvandam/.conda/envs/py3/bin/../lib/libopenbabel.so.6; #1 0x00007ffff785fd74 in OpenBabel::OBForceField::FastRotorSearch(bool) () from /home/hvandam/.conda/envs/py3/bin/../lib/libopenbabel.so.6; #2 0x00007ffff725ba1f in OpenBabel::OpGen3D::Do(OpenBabel::OBBase*, char const*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144
https://github.com/openbabel/openbabel/issues/2144:1663,Availability,fault,fault,1663,"ux 3.10.0-693.11.6.el7.x86_64. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I am trying to convert a bunch of SMILES strings into 3D molecular structures in the MOL2 format. For most SMILES strings the command I am running:; ```; obabel -h --gen3d -ismi xfl -omol2 > xfl.mol2; ```; produces MOL2 structures as one would expect. However, for 1 SMILES string this recipe fails. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When the file `xlf` contains the SMILES string:; ```; CC(C)OCC1=NOC(CS(=O)(=O)CC2=CC=CC=C2F)=N1 ; ```; Babel seg-faults:; ```; ==============================; *** Open Babel Warning in Build; There exists NaN in calculated coordinates.; Segmentation fault (core dumped); ```; Running Babel under the control of gdb suggests that the problem happens in:; ```; (gdb) where; #0 0x00007ffff7922c79 in OpenBabel::OBRotamerList::SetCurrentCoordinates(OpenBabel::OBMol&, std::vector<int, std::allocator<int> >) (); from /home/hvandam/.conda/envs/py3/bin/../lib/libopenbabel.so.6; #1 0x00007ffff785fd74 in OpenBabel::OBForceField::FastRotorSearch(bool) () from /home/hvandam/.conda/envs/py3/bin/../lib/libopenbabel.so.6; #2 0x00007ffff725ba1f in OpenBabel::OpGen3D::Do(OpenBabel::OBBase*, char const*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const*, OpenBabel::OBConversion*) (); from /home/hvandam/.conda/envs/py3/lib/openbabel/3.0.0/plugin_ops.so; #3 0x00007ffff793a",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144
https://github.com/openbabel/openbabel/pull/2145:72,Deployability,release,release,72,"I maintain the R package [ChemmineOB](https://bioconductor.org/packages/release/bioc/html/ChemmineOB.html) which provides an interface in R for OpenBabel. I just updated the package to use OpenBabel 3.0.0 and regenerated the SWIG code. . This pull request fixes several issues I encountered. ; In the openbabel-r.i file, there are three lines which fix a bug in the SWIG sources' std_vector.i file. See https://github.com/swig/swig/issues/1714 for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2145
https://github.com/openbabel/openbabel/pull/2145:162,Deployability,update,updated,162,"I maintain the R package [ChemmineOB](https://bioconductor.org/packages/release/bioc/html/ChemmineOB.html) which provides an interface in R for OpenBabel. I just updated the package to use OpenBabel 3.0.0 and regenerated the SWIG code. . This pull request fixes several issues I encountered. ; In the openbabel-r.i file, there are three lines which fix a bug in the SWIG sources' std_vector.i file. See https://github.com/swig/swig/issues/1714 for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2145
https://github.com/openbabel/openbabel/pull/2145:125,Integrability,interface,interface,125,"I maintain the R package [ChemmineOB](https://bioconductor.org/packages/release/bioc/html/ChemmineOB.html) which provides an interface in R for OpenBabel. I just updated the package to use OpenBabel 3.0.0 and regenerated the SWIG code. . This pull request fixes several issues I encountered. ; In the openbabel-r.i file, there are three lines which fix a bug in the SWIG sources' std_vector.i file. See https://github.com/swig/swig/issues/1714 for details.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2145
https://github.com/openbabel/openbabel/issues/2146:507,Availability,echo,echo,507,"- [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Fedora 30. ## Expected Behavior; Valid 3D molfile file should be created. Coordinates should be 'reasonable'. ## Actual Behavior; CTAB blocks are either invalid (containing '-nan' instead of coordinates) and with all or some coordinates at 0.000, or creates structures that are unreasonable. ## Steps to Reproduce. ### Problem 1; ```; $ echo 'Cc1ccsc1C1(O)CCOC1' | obabel -i smi -o mol --gen3D. OpenBabel03272011373D. 18 19 0 0 1 0 0 0 0 0999 V2000; 2.6191 -0.3198 0.0013 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.2344 -0.0253 0.0380 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5696 1.2219 0.0050 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.7972 1.2233 -0.0003 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.4123 -0.3511 0.0038 S 0 0 0 0 0 0 0 0 0 0 0 0; 0.2903 -1.0407 -0.3314 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.0541 -3.3907 0.0869 C 0 0 3 0 0 0 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.1818 -2.6278 -1.5272 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 C 0 0 0 0 0 2 0 0 0 0 0 0; 3.1478 0.6161 0.0046 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.8965 -0.8795 -0.8720 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.8905 -0.8791 0.8801 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.1181 2.0974 0.0068 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.3761 2.0734 -0.0078 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9774 -2.4581 0.2308 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 13 1 0 0 0 0; 1 14 1 0 0 0 0; 1 15 1 0 0 0 0; 2 3 1 0 0 0 0; 2 6 2 0 0 0 0; 3 4 2 0 0 0 0; 3 16 1 0 0 0 0; 4 5 1 0 0 0 0; 4 17 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 7 9 1 0 0 0 0; 7 12 1 0 0 0 0; 8 18 1 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **Valid CTAB is created but molecule is distorted when viewer in 3D**. ### Problem 2; ```; $ echo 'OC1CCOC1Cc1ccsc1' | obabel -i smi -o mol --gen3D; ===========",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146
https://github.com/openbabel/openbabel/issues/2146:1934,Availability,echo,echo,1934,0 0 0 0 0; 0.1818 -2.6278 -1.5272 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.5536 -2.5620 -0.2560 C 0 0 0 0 0 2 0 0 0 0 0 0; 3.1478 0.6161 0.0046 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.8965 -0.8795 -0.8720 H 0 0 0 0 0 0 0 0 0 0 0 0; 2.8905 -0.8791 0.8801 H 0 0 0 0 0 0 0 0 0 0 0 0; 1.1181 2.0974 0.0068 H 0 0 0 0 0 0 0 0 0 0 0 0; -1.3761 2.0734 -0.0078 H 0 0 0 0 0 0 0 0 0 0 0 0; -0.9774 -2.4581 0.2308 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 13 1 0 0 0 0; 1 14 1 0 0 0 0; 1 15 1 0 0 0 0; 2 3 1 0 0 0 0; 2 6 2 0 0 0 0; 3 4 2 0 0 0 0; 3 16 1 0 0 0 0; 4 5 1 0 0 0 0; 4 17 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 7 9 1 0 0 0 0; 7 12 1 0 0 0 0; 8 18 1 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **Valid CTAB is created but molecule is distorted when viewer in 3D**. ### Problem 2; ```; $ echo 'OC1CCOC1Cc1ccsc1' | obabel -i smi -o mol --gen3D; ==============================; *** Open Babel Warning in Build; There exists NaN in calculated coordinates. OpenBabel03272011403D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 6 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 8 9 1 0 0 0 0; 8 12 2 0 0 0 0; 9 10 2 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **Invalid output with -nan as coordiantes and other atoms all being at 0.000,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146
https://github.com/openbabel/openbabel/issues/2146:3030,Availability,echo,echo,3030,nBabel03272011403D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 6 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 8 9 1 0 0 0 0; 8 12 2 0 0 0 0; 9 10 2 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **Invalid output with -nan as coordiantes and other atoms all being at 0.0000**. ### Problem 3; ```; echo 'OC1COC(Cc2ccsc2)C1' | obabel -i smi -o mol --gen3D; ==============================; *** Open Babel Warning in Build; There exists NaN in calculated coordinates. OpenBabel03272011423D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 12 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 5 6 1 0 0 0 0; 5 12 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 7 11 2 0 0 0 0; 8 9 2 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; M END; 1 molecule converted; ```; **same problem**. ### Problem 4; ```; $ echo 'OC1(Cc2ccsc2)CCOC1' | obabel -,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146
https://github.com/openbabel/openbabel/issues/2146:4067,Availability,echo,echo,4067,ning in Build; There exists NaN in calculated coordinates. OpenBabel03272011423D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 12 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 5 6 1 0 0 0 0; 5 12 1 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 7 11 2 0 0 0 0; 8 9 2 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; M END; 1 molecule converted; ```; **same problem**. ### Problem 4; ```; $ echo 'OC1(Cc2ccsc2)CCOC1' | obabel -i smi -o mol --gen3D; ==============================; *** Open Babel Warning in Build; There exists NaN in calculated coordinates. OpenBabel03272011433D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 9 1 0 0 0 0; 2 12 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 4 8 2 0 0 0 0; 5 6 2 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **same problem**. ### Problem 5; ```; $ echo 'NC1[C@@H]2C[C@@H]2[C@H]2C[C@@,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146
https://github.com/openbabel/openbabel/issues/2146:5104,Availability,echo,echo,5104,"433D. 12 13 0 0 1 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0 1 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 2 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; -nan -nan -nan S 0 0 0 0 0 0 0 0 0 0 0 0; -nan -nan -nan C 0 0 0 0 0 3 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 0.0000 0.0000 0.0000 O 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 2 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; 2 9 1 0 0 0 0; 2 12 1 0 0 0 0; 3 4 1 0 0 0 0; 4 5 1 0 0 0 0; 4 8 2 0 0 0 0; 5 6 2 0 0 0 0; 6 7 1 0 0 0 0; 7 8 1 0 0 0 0; 9 10 1 0 0 0 0; 10 11 1 0 0 0 0; 11 12 1 0 0 0 0; M END; 1 molecule converted; ```; **same problem**. ### Problem 5; ```; $ echo 'NC1[C@@H]2C[C@@H]2[C@H]2C[C@@H]12' | obabel -i smi -o mol --gen3D; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 4; Warning: Stereochemistry is wrong, using the distance geometry method instead. OpenBabel03272011433D. 19 21 0 0 1 0 0 0 0 0999 V2000; 0.0000 -0.0000 0.0000 N 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 3 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 2 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 2 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 1 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 -0.0000 C 0 0 1 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 0.0000 0.0000 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146
https://github.com/openbabel/openbabel/issues/2147:182,Deployability,update,updated,182,"In the documentation it appears `--splitinto` was a possible flag such that `babel bigfile.sdf -osdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147
https://github.com/openbabel/openbabel/issues/2147:1401,Testability,test,test,1401,"sdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In my conda env entering:. `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147
https://github.com/openbabel/openbabel/issues/2147:1894,Testability,test,test,1894,"sdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In my conda env entering:. `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147
https://github.com/openbabel/openbabel/issues/2147:2072,Testability,test,test,2072,"sdf --splitinto 3` yielded **""bigfile1.sdf, bigfile2.sdf and bigfile3.sdf"".** In the updated documentation for obabel I only see -m as a possible flag. Yet in either case, I have tried splitting my_big.sdf into 400 smaller files with --splitinto 400 and -m 400, but without success. Is the ability to split large sdf files into additional files depreciated? . <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: openbabel 3.0.0; Operating system and version: ; NAME=""CentOS Linux""; VERSION=""7 (Core)"". ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`. (400 files such as 01test.sdf, 02test.sdf ...). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Copying input > output without splitting. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; In my conda env entering:. `obabel -isd lig_SARSCOV2_Protease_HTVS.sdf -O test.sdf --splitinto 400`",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2147
https://github.com/openbabel/openbabel/issues/2148:373,Deployability,release,release,373,"Hello,. OpenBabel 3.0 had a couple issues that seems to make it difficult to use in projects with CMake, but it looks like they've been fixed in Git ~~long~~ some time ago. The [projects](https://github.com/openbabel/openbabel/projects/3) and [milestones](https://github.com/openbabel/openbabel/milestones) look empty, and I was wondering if there were plans to make a new release?. I'm not familiar with OpenBabel, but this prohibits [KDE's Kalzium](https://bugs.kde.org/show_bug.cgi?id=416856) from upgrading in the time being.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2148
https://github.com/openbabel/openbabel/pull/2150:98,Safety,avoid,avoid,98,Rebuilt database from COD 'clean' subset from DataWarrior; and Platinum subset. Fix obfragment to avoid saving empty fragments.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2150
https://github.com/openbabel/openbabel/issues/2151:25,Availability,avail,available,25,"(OpenBabel 3.0.0 will be available on Ubuntu repositories from the next version: 20.04). On Ubuntu 18.04 I've installed openbabel_3.0.0 via snap, but python bindings don't come along.; So I was thinking to compile them, but on the doc looks like if I can compile the bindings only as an option while compiling openbabel itself (I cannot compile the bindings for my actual snap version of openbabel, I should compile everything together). Is that correct?. Another option would be to force an early upgrade to Ubuntu 20.04. Is this the present situation, or am I missing something?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2151
https://github.com/openbabel/openbabel/issues/2151:110,Deployability,install,installed,110,"(OpenBabel 3.0.0 will be available on Ubuntu repositories from the next version: 20.04). On Ubuntu 18.04 I've installed openbabel_3.0.0 via snap, but python bindings don't come along.; So I was thinking to compile them, but on the doc looks like if I can compile the bindings only as an option while compiling openbabel itself (I cannot compile the bindings for my actual snap version of openbabel, I should compile everything together). Is that correct?. Another option would be to force an early upgrade to Ubuntu 20.04. Is this the present situation, or am I missing something?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2151
https://github.com/openbabel/openbabel/issues/2151:498,Deployability,upgrade,upgrade,498,"(OpenBabel 3.0.0 will be available on Ubuntu repositories from the next version: 20.04). On Ubuntu 18.04 I've installed openbabel_3.0.0 via snap, but python bindings don't come along.; So I was thinking to compile them, but on the doc looks like if I can compile the bindings only as an option while compiling openbabel itself (I cannot compile the bindings for my actual snap version of openbabel, I should compile everything together). Is that correct?. Another option would be to force an early upgrade to Ubuntu 20.04. Is this the present situation, or am I missing something?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2151
https://github.com/openbabel/openbabel/pull/2152:48,Energy Efficiency,reduce,reduce,48,* clang-format; * use continue appropriately to reduce nesting levels,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2152
https://github.com/openbabel/openbabel/pull/2153:63,Modifiability,variab,variables,63,- check if input file is passed to avoid SEGV; - remove unused variables; - clang-format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2153
https://github.com/openbabel/openbabel/pull/2153:35,Safety,avoid,avoid,35,- check if input file is passed to avoid SEGV; - remove unused variables; - clang-format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2153
https://github.com/openbabel/openbabel/pull/2154:65,Modifiability,variab,variables,65,* Enable to accept forcefield (default: MMFF94); * remove unused variables; * clang-format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2154
https://github.com/openbabel/openbabel/issues/2156:45,Availability,failure,failures,45,"I am faced with a set of strange SMART query failures across different molecules and I wonder if I am encountering something like [this](https://github.com/openbabel/openbabel/issues/1034) or it is a new bug entirely (?). Specifically, I am trying to match just the atoms of the backbone with: `[NH0,NH1,NH2,NR5]~[C,CR5]-[CX3](=O)`. (That is a Nitrogen at the start of a chain (NH2), a Nitrogen somewhere along the chain (NH0, NH1), a Nitrogen on the ring of a PROline aminoacid, followed by a carbon (or carbon of a PROline aminoacid, followed by the final carbon of the main chain atoms). I have two molecules that I am trying this query on, a simple one (1GCN) and a more complex one (6QWY). This query matches ALL residues on 1GCN but skips residues 63,72,83,84 (**zero based index used here**) . The residues that are there are CYS, ARG, LEU, SER. So, it is not even the same residue it skips. When I am quering the atoms of the residues that are skipped (and I would expect that the query would have picked up), they are not any different than others that have produced a positive match. Their **types** are still ""Nam, C3, C2, O2"". Am I missing something here or could this be some sort of a bug?. ** Environment Information:**. Open Babel version: 2.3.2; Operating system and version: Linux (Ubuntu 18.04)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156
https://github.com/openbabel/openbabel/issues/2156:646,Usability,simpl,simple,646,"I am faced with a set of strange SMART query failures across different molecules and I wonder if I am encountering something like [this](https://github.com/openbabel/openbabel/issues/1034) or it is a new bug entirely (?). Specifically, I am trying to match just the atoms of the backbone with: `[NH0,NH1,NH2,NR5]~[C,CR5]-[CX3](=O)`. (That is a Nitrogen at the start of a chain (NH2), a Nitrogen somewhere along the chain (NH0, NH1), a Nitrogen on the ring of a PROline aminoacid, followed by a carbon (or carbon of a PROline aminoacid, followed by the final carbon of the main chain atoms). I have two molecules that I am trying this query on, a simple one (1GCN) and a more complex one (6QWY). This query matches ALL residues on 1GCN but skips residues 63,72,83,84 (**zero based index used here**) . The residues that are there are CYS, ARG, LEU, SER. So, it is not even the same residue it skips. When I am quering the atoms of the residues that are skipped (and I would expect that the query would have picked up), they are not any different than others that have produced a positive match. Their **types** are still ""Nam, C3, C2, O2"". Am I missing something here or could this be some sort of a bug?. ** Environment Information:**. Open Babel version: 2.3.2; Operating system and version: Linux (Ubuntu 18.04)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156
https://github.com/openbabel/openbabel/pull/2157:117,Deployability,install,installation,117,"While following the example at https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation, noticed that the `mol.draw()` step fails on importing of `Tkinter` in Python 3.7. The module was renamed to `tkinter` in Python 3+ versions, and the `six` library supports the proper handling of the change: https://six.readthedocs.io/#module-six.moves (thanks to @tacaswell for the reference). I added `six` as the install requirement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157
https://github.com/openbabel/openbabel/pull/2157:446,Deployability,install,install,446,"While following the example at https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation, noticed that the `mol.draw()` step fails on importing of `Tkinter` in Python 3.7. The module was renamed to `tkinter` in Python 3+ versions, and the `six` library supports the proper handling of the change: https://six.readthedocs.io/#module-six.moves (thanks to @tacaswell for the reference). I added `six` as the install requirement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157
https://github.com/openbabel/openbabel/pull/2157:108,Testability,test,test-the-installation,108,"While following the example at https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonInstall.html#test-the-installation, noticed that the `mol.draw()` step fails on importing of `Tkinter` in Python 3.7. The module was renamed to `tkinter` in Python 3+ versions, and the `six` library supports the proper handling of the change: https://six.readthedocs.io/#module-six.moves (thanks to @tacaswell for the reference). I added `six` as the install requirement.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2157
https://github.com/openbabel/openbabel/issues/2161:850,Testability,test,tests,850,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161
https://github.com/openbabel/openbabel/issues/2161:910,Testability,test,test,910,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161
https://github.com/openbabel/openbabel/issues/2161:1028,Testability,test,tests,1028,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161
https://github.com/openbabel/openbabel/issues/2161:1102,Testability,test,test,1102,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161
https://github.com/openbabel/openbabel/issues/2161:1111,Testability,test,tests,1111,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: CentOS 8.1.1911. ## Expected Behavior; After building OpenBabel I expected ctest to run all the tests and for them all to pass. ## Actual Behavior; The 1st test (unittest) is skipped (Not Run). This appears to be because ctest expects the unittest executable to be in build/tests whereas it's actually in build/bin. After copying unittest to build/test all tests are run and pass.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161
https://github.com/openbabel/openbabel/pull/2171:196,Testability,test,test,196,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171
https://github.com/openbabel/openbabel/pull/2171:294,Testability,test,test,294,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171
https://github.com/openbabel/openbabel/pull/2171:432,Testability,test,test,432,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171
https://github.com/openbabel/openbabel/pull/2171:566,Testability,test,testing,566,"Various improvements and fixes for the tautomer code. - Fix issue #227 ; - Fix various backtracking issues (rewritten using RAII); - Perceive aromaticity for each tautomer (fixes failing antralin test); - Mark atoms that have initially have all bonds assigned as Other (fixes failing tenoxicam test which contains sulfon group); - Add support for enumerating unique tautomers only (duplicates may be present due to symmetry); - Add test cases from slides, all are working now (see https://www.daylight.com/meetings/emug99/Delany/taut_html/sld030.htm). TODO:; - More testing with special functional groups (e.g., N-oxide, conjugated carbanion/carbocation, conjugated nitrogen); - Add support for keto/enol tautomerism?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171
https://github.com/openbabel/openbabel/issues/2174:135,Energy Efficiency,energy,energy,135,"Sorry don't know where else to ask this. Is there a plugin or something that lets you GPU accelerate MMFF94 force field minimizations, energy calculations, etc?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2174
https://github.com/openbabel/openbabel/issues/2174:52,Modifiability,plugin,plugin,52,"Sorry don't know where else to ask this. Is there a plugin or something that lets you GPU accelerate MMFF94 force field minimizations, energy calculations, etc?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2174
https://github.com/openbabel/openbabel/pull/2176:126,Deployability,update,update,126,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2176:519,Safety,avoid,avoided,519,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2176:145,Testability,test,tests,145,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2176:211,Testability,test,tests,211,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2176:298,Testability,test,tests,298,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2176:491,Testability,test,test,491,"See discussion over at #1923. This is a merge of work by @adalke. I needed to rebase, hence the separate PR. I also needed to update some of the tests for changes in the interim. I've made an attempt to get the tests working on Windows (e.g. normalizing line endings), but I think that some of the tests genuinely fail on that platform, e.g. the binary file handling, but presumably these never worked in the first place. I haven't made the change described by @fredrikw over at #1923. That test passes for me, so I've avoided making the change - I'm not sure why it's passing now.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2176
https://github.com/openbabel/openbabel/pull/2177:18,Deployability,update,updated,18,"At the same time, updated comment to current website",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2177
https://github.com/openbabel/openbabel/issues/2178:92,Integrability,wrap,wrapper,92,"Hello,; I am trying to emulate the conversion of a PDB file to a mol2 file using the Python wrapper of OpenBabel.; I have a small molecule with 11 atoms. When I convert it using obabel (v2.3.2) . obabel -ipdb bad.pdb -omol2 bad_babel.mol2. C and N in rings are aromatic. However, if I use the Python code below they are all C..2 and N.2; What am I missing ?. badsrc = [; 'HETATM 1 F A2F A 91 -11.661 -11.789 10.626 1.00 35.98 F',; 'HETATM 2 C2 A2F A 91 -11.647 -11.140 9.446 1.00 36.07 C',; 'HETATM 3 N3 A2F A 91 -11.218 -11.795 8.356 1.00 35.26 N',; 'HETATM 4 N1 A2F A 91 -12.060 -9.865 9.375 1.00 34.52 N',; 'HETATM 5 C6 A2F A 91 -12.054 -9.212 8.203 1.00 34.11 C',; 'HETATM 6 N6 A2F A 91 -12.392 -7.927 8.148 1.00 31.63 N',; 'HETATM 7 C5 A2F A 91 -11.626 -9.872 7.057 1.00 34.33 C',; 'HETATM 8 C4 A2F A 91 -11.199 -11.188 7.163 1.00 34.93 C',; 'HETATM 9 N7 A2F A 91 -11.502 -9.521 5.780 1.00 34.42 N',; 'HETATM 10 C8 A2F A 91 -11.013 -10.561 5.109 1.00 34.57 C',; 'HETATM 11 N9 A2F A 91 -10.826 -11.579 5.948 1.00 34.76 N',; ]. import openbabel as ob. obmol = ob.OBMol(); obconv = ob.OBConversion(); obconv.SetInAndOutFormats('pdb', 'mol2'); notatend = obconv.ReadString(obmol, '\n'.join(badsrc)); mol2str = obconv.WriteString(obmol)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2178
https://github.com/openbabel/openbabel/issues/2179:317,Availability,error,errors,317,"# Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04.4 64 bit . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:873,Availability,avail,available,873,"# Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04.4 64 bit . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:240,Deployability,Install,Installation,240,"# Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04.4 64 bit . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:253,Deployability,install,install,253,"# Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 18.04.4 64 bit . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:1074,Deployability,install,install,1074," 18.04.4 64 bit . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:1766,Deployability,install,installed,1766,"it . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3. Please help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:2011,Deployability,install,installed,2011,"it . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3. Please help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:1665,Modifiability,Config,Configuring,1665,"it . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3. Please help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2179:2066,Modifiability,config,config,2066,"it . I am trying to compile openbabel 3.0.0 in Ubuntu 18 following the instruction posted in https://open-babel.readthedocs.io/en/latest/Installation/install.html#compiling-open-babel. However, i got the following errors: ; CMake Deprecation Warning at CMakeLists.txt:12 (cmake_policy):; The OLD behavior for policy CMP0042 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS) ; -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") ; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/sukis/openbabel-openbabel-3-0-0/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found suitable version ""1.72.0"", minimum required is ""1.45.0"") found components: system ; -- Found Boost: /usr/lib/cmake/Boost-1.72.0/BoostConfig.cmake (found version ""1.72.0"") found components: program_options iostreams ; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Configuring done; -- Generating done; -- Build files have been written to: /home/sukis/build. I have installed wxwidgets and boost correctly according to the instructions. Moreover, I have added /usr/local/lib to the /etc/ld.so.conf file and run ldconfig as root. But i don't know why i still had this problem. ; PS: evidence of having wxwidgets installed correctly; sukis@sukis-virtual-machine:~$ wx-config --version; 3.1.3. Please help!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2179
https://github.com/openbabel/openbabel/issues/2180:1846,Availability,error,error,1846,"ected to see. -->. Build is successful. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Build fails. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ rm -rf external/maeparser-master; $ cmake -GNinja -Bbuild .; $ cmake --build build -- src/formats/CMakeFiles/maeformat.dir/maeformat.cpp.o; ../src/formats/maeformat.cpp: In member function ‘virtual bool OpenBabel::MAEFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; ../src/formats/maeformat.cpp:332:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(atom_block->getName(), atom_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::IndexedBlockMap::addIndexedBlock(const string&, std::shared_ptr<schrodinger::mae::IndexedBlock>&&)’; void addIndexedBlock(const std::string& name,; ^~~~~~~~~~~~~~~; ../src/formats/maeformat.cpp:333:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(bond_block->getName(), bond_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2180
https://github.com/openbabel/openbabel/issues/2180:2514,Availability,error,error,2514,"ovement, explain the difference from current behavior -->. Build fails. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ rm -rf external/maeparser-master; $ cmake -GNinja -Bbuild .; $ cmake --build build -- src/formats/CMakeFiles/maeformat.dir/maeformat.cpp.o; ../src/formats/maeformat.cpp: In member function ‘virtual bool OpenBabel::MAEFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; ../src/formats/maeformat.cpp:332:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(atom_block->getName(), atom_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::IndexedBlockMap::addIndexedBlock(const string&, std::shared_ptr<schrodinger::mae::IndexedBlock>&&)’; void addIndexedBlock(const std::string& name,; ^~~~~~~~~~~~~~~; ../src/formats/maeformat.cpp:333:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(bond_block->getName(), bond_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::IndexedBlockMap::addIndexedBlock(const string&, std::shared_ptr<schrodinger::mae::IndexedBlock>&&)’; void addIndexedBlock(const std::string& name,; ^~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2180
https://github.com/openbabel/openbabel/issues/2180:1398,Testability,test,test,1398,"s and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. Just for notification: recent maeparser change breaks compatibility (schrodinger/maeparser#62). - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 7684a772e6b60e6b37aa70ad05764d526ab9b00c; Operating system and version: Debian 10.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. Build is successful. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Build fails. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shellsession; $ rm -rf external/maeparser-master; $ cmake -GNinja -Bbuild .; $ cmake --build build -- src/formats/CMakeFiles/maeformat.dir/maeformat.cpp.o; ../src/formats/maeformat.cpp: In member function ‘virtual bool OpenBabel::MAEFormat::WriteMolecule(OpenBabel::OBBase*, OpenBabel::OBConversion*)’:; ../src/formats/maeformat.cpp:332:49: error: cannot bind rvalue reference of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>&&’ to lvalue of type ‘std::shared_ptr<schrodinger::mae::IndexedBlock>’; ibm->addIndexedBlock(atom_block->getName(), atom_block);; ^~~~~~~~~~; In file included from ../external/maeparser-master/maeparser/Reader.hpp:8,; from ../src/formats/maeformat.cpp:33:; ../external/maeparser-master/maeparser/MaeBlock.hpp:72:10: note: initializing argument 2 of ‘void schrodinger::mae::Indexe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2180
https://github.com/openbabel/openbabel/issues/2181:1215,Testability,test,test,1215,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2181
https://github.com/openbabel/openbabel/pull/2182:15,Deployability,release,release,15,Drafts initial release notes based on pull request merges; https://probot.github.io/apps/release-drafter/,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2182
https://github.com/openbabel/openbabel/pull/2182:89,Deployability,release,release-drafter,89,Drafts initial release notes based on pull request merges; https://probot.github.io/apps/release-drafter/,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2182
https://github.com/openbabel/openbabel/pull/2183:107,Deployability,update,updated,107,"This will be a separate build script because eventually this; will generate the *source* with all bindings updated, not a binary; (e.g. to automate releases)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2183
https://github.com/openbabel/openbabel/pull/2183:148,Deployability,release,releases,148,"This will be a separate build script because eventually this; will generate the *source* with all bindings updated, not a binary; (e.g. to automate releases)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2183
https://github.com/openbabel/openbabel/issues/2191:388,Availability,ERROR,ERROR,388,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 - 3.0.0; Operating system and version: Linux 19.10. ## Expected Behavior; ``pip install openbabel`` should fetch and install 3.0.0. ## Actual Behavior; ``pip install openbabel`` fetches 2.4.1 no matter what.; ``pip install openbabel==3.0.0`` returns ""ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1)"". [pypi seems to have version 3.0.0 anyway (?)](https://pypi.org/project/openbabel/). ## Steps to Reproduce; N/A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2191
https://github.com/openbabel/openbabel/issues/2191:217,Deployability,install,install,217,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 - 3.0.0; Operating system and version: Linux 19.10. ## Expected Behavior; ``pip install openbabel`` should fetch and install 3.0.0. ## Actual Behavior; ``pip install openbabel`` fetches 2.4.1 no matter what.; ``pip install openbabel==3.0.0`` returns ""ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1)"". [pypi seems to have version 3.0.0 anyway (?)](https://pypi.org/project/openbabel/). ## Steps to Reproduce; N/A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2191
https://github.com/openbabel/openbabel/issues/2191:254,Deployability,install,install,254,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 - 3.0.0; Operating system and version: Linux 19.10. ## Expected Behavior; ``pip install openbabel`` should fetch and install 3.0.0. ## Actual Behavior; ``pip install openbabel`` fetches 2.4.1 no matter what.; ``pip install openbabel==3.0.0`` returns ""ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1)"". [pypi seems to have version 3.0.0 anyway (?)](https://pypi.org/project/openbabel/). ## Steps to Reproduce; N/A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2191
https://github.com/openbabel/openbabel/issues/2191:295,Deployability,install,install,295,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 - 3.0.0; Operating system and version: Linux 19.10. ## Expected Behavior; ``pip install openbabel`` should fetch and install 3.0.0. ## Actual Behavior; ``pip install openbabel`` fetches 2.4.1 no matter what.; ``pip install openbabel==3.0.0`` returns ""ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1)"". [pypi seems to have version 3.0.0 anyway (?)](https://pypi.org/project/openbabel/). ## Steps to Reproduce; N/A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2191
https://github.com/openbabel/openbabel/issues/2191:352,Deployability,install,install,352,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 - 3.0.0; Operating system and version: Linux 19.10. ## Expected Behavior; ``pip install openbabel`` should fetch and install 3.0.0. ## Actual Behavior; ``pip install openbabel`` fetches 2.4.1 no matter what.; ``pip install openbabel==3.0.0`` returns ""ERROR: Could not find a version that satisfies the requirement openbabel==3.0.0 (from versions: 1.8, 1.8.1, 1.8.2, 1.8.4, 2.4.0, 2.4.1)"". [pypi seems to have version 3.0.0 anyway (?)](https://pypi.org/project/openbabel/). ## Steps to Reproduce; N/A",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2191
https://github.com/openbabel/openbabel/issues/2192:1001,Availability,Error,Error,1001,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 20.04 updated from 19.10. ## Expected Behavior. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d. 1 molecule converted. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenAndSetFormat; Cannot open a.pdb. It happens every time regardless the file format. I tried with small mol2 files, pdb files downloaded straight from PDB, files generated by AMBER. I partly overcome it with "">"" sign at the end of command:. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d > a.pdb. Then it gives proper albeit doubled result. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; -->; Have a fresh install of openbabel on Ubuntu 20.04 any convert any file with obabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192
https://github.com/openbabel/openbabel/issues/2192:1138,Availability,down,downloaded,1138,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 20.04 updated from 19.10. ## Expected Behavior. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d. 1 molecule converted. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenAndSetFormat; Cannot open a.pdb. It happens every time regardless the file format. I tried with small mol2 files, pdb files downloaded straight from PDB, files generated by AMBER. I partly overcome it with "">"" sign at the end of command:. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d > a.pdb. Then it gives proper albeit doubled result. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; -->; Have a fresh install of openbabel on Ubuntu 20.04 any convert any file with obabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192
https://github.com/openbabel/openbabel/issues/2192:768,Deployability,update,updated,768,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 20.04 updated from 19.10. ## Expected Behavior. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d. 1 molecule converted. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenAndSetFormat; Cannot open a.pdb. It happens every time regardless the file format. I tried with small mol2 files, pdb files downloaded straight from PDB, files generated by AMBER. I partly overcome it with "">"" sign at the end of command:. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d > a.pdb. Then it gives proper albeit doubled result. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; -->; Have a fresh install of openbabel on Ubuntu 20.04 any convert any file with obabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192
https://github.com/openbabel/openbabel/issues/2192:1492,Deployability,install,install,1492,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 20.04 updated from 19.10. ## Expected Behavior. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d. 1 molecule converted. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenAndSetFormat; Cannot open a.pdb. It happens every time regardless the file format. I tried with small mol2 files, pdb files downloaded straight from PDB, files generated by AMBER. I partly overcome it with "">"" sign at the end of command:. <add r> $ obabel -ipdb file.pdb -opdb a.pdb -d > a.pdb. Then it gives proper albeit doubled result. <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; -->; Have a fresh install of openbabel on Ubuntu 20.04 any convert any file with obabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2192
https://github.com/openbabel/openbabel/issues/2194:1073,Availability,Error,Error,1073,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version:windows anaconda python2.7.18. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `Error; Traceback (most recent call last):; File ""D:\anaconda\envs\my-python2.7\lib\unittest\case.py"", line 329, in run; testMethod(); File ""E:\plip-stable\plip\test\test_literature_validated.py"", line 469, in test_1aku; tmpmol.characterize_complex(ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1409, in characterize_complex; lig_obj = Ligand(self, ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1003, in __init__; self.inchikey = self.molecule.write(format='inchikey'); File ""D:\anaconda\envs\my-python2.7\lib\site-packages\pybel.py"", line 527, in write; format). **ValueError: inchikey is not a recognised Open Babel format`**. environment info:; ![image](https://user-images.githubusercontent.com/32454333/81146499-fec8b480-8faa-11ea-9433-65d6ea99796b.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194
https://github.com/openbabel/openbabel/issues/2194:1193,Testability,test,testMethod,1193,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version:windows anaconda python2.7.18. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `Error; Traceback (most recent call last):; File ""D:\anaconda\envs\my-python2.7\lib\unittest\case.py"", line 329, in run; testMethod(); File ""E:\plip-stable\plip\test\test_literature_validated.py"", line 469, in test_1aku; tmpmol.characterize_complex(ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1409, in characterize_complex; lig_obj = Ligand(self, ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1003, in __init__; self.inchikey = self.molecule.write(format='inchikey'); File ""D:\anaconda\envs\my-python2.7\lib\site-packages\pybel.py"", line 527, in write; format). **ValueError: inchikey is not a recognised Open Babel format`**. environment info:; ![image](https://user-images.githubusercontent.com/32454333/81146499-fec8b480-8faa-11ea-9433-65d6ea99796b.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194
https://github.com/openbabel/openbabel/issues/2194:1233,Testability,test,test,1233,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version:windows anaconda python2.7.18. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `Error; Traceback (most recent call last):; File ""D:\anaconda\envs\my-python2.7\lib\unittest\case.py"", line 329, in run; testMethod(); File ""E:\plip-stable\plip\test\test_literature_validated.py"", line 469, in test_1aku; tmpmol.characterize_complex(ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1409, in characterize_complex; lig_obj = Ligand(self, ligand); File ""E:\plip-stable\plip\modules\preparation.py"", line 1003, in __init__; self.inchikey = self.molecule.write(format='inchikey'); File ""D:\anaconda\envs\my-python2.7\lib\site-packages\pybel.py"", line 527, in write; format). **ValueError: inchikey is not a recognised Open Babel format`**. environment info:; ![image](https://user-images.githubusercontent.com/32454333/81146499-fec8b480-8faa-11ea-9433-65d6ea99796b.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2194
https://github.com/openbabel/openbabel/issues/2195:311,Testability,test,test,311,I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Linux Slackware 14.2. ## Expected Behavior; Image created by openbabel. ## Actual Behavior; Useless file. ## Steps to Reproduce; obabel -C -i sdf Conformer3D_CID_60961.sdf -o png -O test.png; I do not believe it is limited to that file I get the same issue with another file too.; You can get that file from PubChem:; https://pubchem.ncbi.nlm.nih.gov/compound/60961,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195
https://github.com/openbabel/openbabel/issues/2197:231,Integrability,depend,depends,231,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux x86_64. ## Expected Behavior; The openbabel cmake target depends on Boost::system, but that target is not defined unless the Boost cmake config is imported. There should be a find_dependency(Boost) in openbabel cmake config.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197
https://github.com/openbabel/openbabel/issues/2197:311,Modifiability,config,config,311,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux x86_64. ## Expected Behavior; The openbabel cmake target depends on Boost::system, but that target is not defined unless the Boost cmake config is imported. There should be a find_dependency(Boost) in openbabel cmake config.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197
https://github.com/openbabel/openbabel/issues/2197:391,Modifiability,config,config,391,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux x86_64. ## Expected Behavior; The openbabel cmake target depends on Boost::system, but that target is not defined unless the Boost cmake config is imported. There should be a find_dependency(Boost) in openbabel cmake config.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2197
https://github.com/openbabel/openbabel/issues/2201:65,Availability,Error,Error,65,"The configure target fails:. ```; -- Found Threads: TRUE ; CMake Error at src/CMakeLists.txt:258 (target_compile_options):; Cannot specify compile options for target ""PUBLIC"" which is not built by; this project. -- Found Boost: /usr/local/include (found version ""1.72.0"") found components: program_options iostreams regex ; ```. Version 3.1.0; OS: FreeBSD 12.1; Compiler: clang-9; cmake-3.17.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2201
https://github.com/openbabel/openbabel/issues/2201:4,Modifiability,config,configure,4,"The configure target fails:. ```; -- Found Threads: TRUE ; CMake Error at src/CMakeLists.txt:258 (target_compile_options):; Cannot specify compile options for target ""PUBLIC"" which is not built by; this project. -- Found Boost: /usr/local/include (found version ""1.72.0"") found components: program_options iostreams regex ; ```. Version 3.1.0; OS: FreeBSD 12.1; Compiler: clang-9; cmake-3.17.1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2201
https://github.com/openbabel/openbabel/issues/2202:1601,Availability,error,error,1601,"ader(const StreamLoader&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:134:52: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; StreamLoader& operator=(const StreamLoader&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:136:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:157:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:173:19: error: function definition does not declare parameters; BufferLoader* m_loader{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:1809,Availability,error,error,1809,"xtension [-Wc++11-extensions]; StreamLoader& operator=(const StreamLoader&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:136:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:157:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:173:19: error: function definition does not declare parameters; BufferLoader* m_loader{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:2013,Availability,error,error,2013,"59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:157:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:173:19: error: function definition does not declare parameters; BufferLoader* m_loader{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 exte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:2210,Availability,error,error,2210,"-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:157:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:173:19: error: function definition does not declare parameters; BufferLoader* m_loader{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:2405,Availability,error,error,2405, ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:173:19: error: function definition does not declare parameters; BufferLoader* m_loader{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-op,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:2604,Availability,error,error,2604,nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:174:12: error: function definition does not declare parameters; size_t m_starting_column{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:177:11: error: function definition does not declare parameters; char* begin{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:178:11: error: function definition does not declare parameters; char* end{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/w,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3279,Availability,error,error,3279,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3766,Availability,error,error,3766,"xtension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0);; ~~~~~~~~~~~~~~~~~~~ ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:372:46: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; const ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3986,Availability,error,error,3986,"re a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0);; ~~~~~~~~~~~~~~~~~~~ ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:372:46: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; const char* end) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:374:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:4208,Availability,error,error,4208," undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0);; ~~~~~~~~~~~~~~~~~~~ ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:372:46: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; const char* end) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:374:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; In file included from /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/formats/maeformat.cpp:33:; In file included from /usr/ports/science",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:4421,Availability,error,error,4421,"parser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0);; ~~~~~~~~~~~~~~~~~~~ ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:372:46: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; const char* end) const override;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:374:59: warning: 'override' keyword is a C++11 extension [-Wc++11-extensions]; virtual size_t readData(char* ptr, size_t size) const override;; ^; In file included from /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/formats/maeformat.cpp:33:; In file included from /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Reader.hpp:8:; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:22:5: warning: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:5965,Availability,error,error,5965,"ze_t readData(char* ptr, size_t size) const override;; ^; In file included from /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/formats/maeformat.cpp:33:; In file included from /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Reader.hpp:8:; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:22:5: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; auto iter = map.find(name);; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:35: warning: defaulted function definitions are a C++11 extension [-Wc++11-extensions]; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:50:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:48:24: error: exception specification of overriding function is more lax than base version; class EXPORT_MAEPARSER IndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/scien",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:6242,Availability,error,error,6242,"1.2.3/maeparser/Reader.hpp:8:; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:22:5: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; auto iter = map.find(name);; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:35: warning: defaulted function definitions are a C++11 extension [-Wc++11-extensions]; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:50:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:48:24: error: exception specification of overriding function is more lax than base version; class EXPORT_MAEPARSER IndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:81:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/sc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:7181,Availability,error,error,7181,"s more lax than base version; class EXPORT_MAEPARSER IndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:81:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:82:61: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlockBuffer>> m_indexed_buffer;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:78:24: error: exception specification of overriding function is more lax than base version; class EXPORT_MAEPARSER BufferedIndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; f",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:7458,Availability,error,error,7458,"apI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:81:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:82:61: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlockBuffer>> m_indexed_buffer;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:78:24: error: exception specification of overriding function is more lax than base version; class EXPORT_MAEPARSER BufferedIndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /us",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:7742,Availability,error,error,7742,"el/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:61:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_block) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:81:55: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlock>> m_indexed_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:82:61: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<IndexedBlockBuffer>> m_indexed_buffer;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:78:24: error: exception specification of overriding function is more lax than base version; class EXPORT_MAEPARSER BufferedIndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/scienc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:8692,Availability,error,error,8692,"e lax than base version; class EXPORT_MAEPARSER BufferedIndexedBlockMap : public IndexedBlockMapI; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:37:13: note: overridden virtual function is here; virtual ~IndexedBlockMapI() = default;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:20: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:93:28: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]; for (const auto& p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:9436,Availability,error,error,9436," p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:253:53: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>(const IndexedProperty<T>&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:254:64: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>& operator=(const IndexedProperty<T>&) = delete;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 19 warnings and 20 errors generated.; ```. OS: FreeBSD 12.1; Version: 3.1.0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:9713,Availability,error,error,9713," p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:253:53: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>(const IndexedProperty<T>&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:254:64: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>& operator=(const IndexedProperty<T>&) = delete;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 19 warnings and 20 errors generated.; ```. OS: FreeBSD 12.1; Version: 3.1.0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:10408,Availability,error,error,10408," p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:253:53: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>(const IndexedProperty<T>&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:254:64: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>& operator=(const IndexedProperty<T>&) = delete;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 19 warnings and 20 errors generated.; ```. OS: FreeBSD 12.1; Version: 3.1.0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:10424,Availability,error,errors,10424," p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:253:53: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>(const IndexedProperty<T>&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:254:64: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>& operator=(const IndexedProperty<T>&) = delete;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 19 warnings and 20 errors generated.; ```. OS: FreeBSD 12.1; Version: 3.1.0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:10490,Availability,error,errors,10490," p : m_indexed_buffer) {; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:120:48: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>> m_sub_block;; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:124:27: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:125:38: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Block& operator=(const Block&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:162:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:172:52: error: a space is required between consecutive right angle brackets (use '> >'); std::map<std::string, std::shared_ptr<Block>>::const_iterator iter =; ^~; > >; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:253:53: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>(const IndexedProperty<T>&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/MaeBlock.hpp:254:64: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; IndexedProperty<T>& operator=(const IndexedProperty<T>&) = delete;; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; 19 warnings and 20 errors generated.; ```. OS: FreeBSD 12.1; Version: 3.1.0",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3341,Performance,load,loader,3341,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3386,Performance,load,loader,3386,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3407,Performance,load,loader,3407,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3428,Performance,load,loader,3428,.hpp:179:11: error: function definition does not declare parameters; char* current{nullptr};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:180:12: error: function definition does not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/m,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3558,Performance,load,loader,3558,"not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3616,Performance,load,loader,3616,"not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/issues/2202:3637,Performance,load,loader,3637,"not declare parameters; size_t line_number{1};; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:206:29: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:207:40: warning: deleted function definitions are a C++11 extension [-Wc++11-extensions]; Buffer& operator=(const Buffer&) = delete;; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:50: error: use of undeclared identifier 'm_loader'; did you mean 'loader'?; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^~~~~~~~; loader; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:210:40: note: 'loader' declared here; void setBufferLoader(BufferLoader* loader) { m_loader = loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:212:46: error: use of undeclared identifier 'm_loader'; BufferLoader* getBufferLoader() { return m_loader; }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:253:49: error: use of undeclared identifier 'current'; size_t getColumn() const { return getColumn(current); }; ^; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:313:11: error: delegating constructors are permitted only in C++11; : TokenBufferList(); ^~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/external/maeparser-v1.2.3/maeparser/Buffer.hpp:317:33: error: no member named 'emplace_back' in 'std::__1::list<schrodinger::TokenBufferList::TokenBuffer, std::__1::allocator<schrodinger::TokenBufferList::TokenBuffer> >'; m_token_buffer_list.emplace_back(buffer_data, 0)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2202
https://github.com/openbabel/openbabel/pull/2203:0,Safety,Avoid,Avoid,0,Avoid `THREADS_HAVE_PTHREAD_ARG` since it is INTERNAL.; Fix #2201.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2203
https://github.com/openbabel/openbabel/pull/2204:112,Availability,error,errors,112,"It is arguable if this is strictly better (you won't see uninitialized; reads in valgrind when debugging memory errors) but seems like good; defensive programming to me. I don't know of any bugs that are fixed as; a result of not having uninitialized memory, but this was motivated by; another bug involving uninitializd memory and the changes have been; sitting in my fork for a while.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204
https://github.com/openbabel/openbabel/pull/2205:585,Deployability,install,installed,585,This in response to #2197. Don't include a dependencies on libboost_system in libopenbabel . Separate code for pulling in threads from boost check. I've also fixed the case of the cmake documentation (OpenBabel3 instead of OPENBABEL3). . I have questions though:. - OpenBabel3_INCLUDE_DIR or OpenBabel3_INCLUDE_DIRS? There is a mismatch between documentation and code; - Does cmake automatically define OpenBabel3_FOUND? I don't see where we define it in OpenBabel3Config.cmake.in; - Should the documentation no long describe FindOpenBabel3.cmake since we have the cmake.in file to be installed in the standard place?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2205
https://github.com/openbabel/openbabel/pull/2205:43,Integrability,depend,dependencies,43,This in response to #2197. Don't include a dependencies on libboost_system in libopenbabel . Separate code for pulling in threads from boost check. I've also fixed the case of the cmake documentation (OpenBabel3 instead of OPENBABEL3). . I have questions though:. - OpenBabel3_INCLUDE_DIR or OpenBabel3_INCLUDE_DIRS? There is a mismatch between documentation and code; - Does cmake automatically define OpenBabel3_FOUND? I don't see where we define it in OpenBabel3Config.cmake.in; - Should the documentation no long describe FindOpenBabel3.cmake since we have the cmake.in file to be installed in the standard place?,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2205
https://github.com/openbabel/openbabel/issues/2206:97,Availability,error,error,97,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:393,Availability,error,error,393,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:599,Availability,error,errors,599,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:715,Availability,error,error,715,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:920,Availability,error,error,920,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:1216,Availability,error,error,1216,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:1422,Availability,error,errors,1422,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2206:1647,Availability,error,errors,1647,"```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/align.cpp:448:14: error: C-style cast from 'nullptr_t' to 'double' is not allowed; return (double) NULL;; ^~~~~~~~~~~~~; ```. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:360:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-0/src/math/spacegroup.cpp:367:39: error: reinterpret_cast from 'nullptr_t' to 'OpenBabel::transform3d *' is not allowed; return (i == m_transforms.end())? reinterpret_cast<transform3d*>(NULL): *i++;; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 2 errors generated.; ```. There are a lot of warnings too, some of which might indicate serious problems. for example:; ```; while(p1!=s1.end() && isdigit(*p1++)); --p1;; ^; ```. Could you please rebuild with clang and fix all errors and warnings?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2206
https://github.com/openbabel/openbabel/issues/2207:86,Deployability,release,release,86,"Based on the recent compile / cmake / etc issues with 3.1.0, I'd like to spin a 3.1.1 release fixing the various issues. I'm going to wait for #2206 and @yurivict to resolve compile on FreeBSD and tag a new release. I doubt this will change anything with Windows binaries, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2207
https://github.com/openbabel/openbabel/issues/2207:207,Deployability,release,release,207,"Based on the recent compile / cmake / etc issues with 3.1.0, I'd like to spin a 3.1.1 release fixing the various issues. I'm going to wait for #2206 and @yurivict to resolve compile on FreeBSD and tag a new release. I doubt this will change anything with Windows binaries, etc.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2207
https://github.com/openbabel/openbabel/issues/2209:303,Energy Efficiency,charge,charge,303,When I convert the following molfile (anilinium ion) to smiles the smiles is wrong. This is the smiles generated [NH2+]c1ccccc1. Shouldn't it be [NH3+]c1ccccc1?. This is the command I use; obabel -imol -ocan --title. It seems to occur anytime there is an sp2 C connected to the N and the nitrogen has + charge and implied H's. Molecule Name; ChemDodl05082006282D 0 0.00000 0.00000 0; [Insert Comment Here]; 7 7 0 0 0 0 0 0 0 0 2 V2000; 0.0000 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 -1.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8660 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.0000 1.5000 0.0000 N 0 3 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 2 0 0 0 0; 3 4 1 0 0 0 0; 4 5 2 0 0 0 0; 5 6 1 0 0 0 0; 6 1 2 0 0 0 0; 1 7 1 0 0 0 0; M CHG 1 7 1; M END,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2209
https://github.com/openbabel/openbabel/issues/2210:1106,Availability,error,error,1106,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: CentOS Linux 7 and Windows 10. ## Expected Behavior; I am trying to use openbabel to convert molecules from their SMILES format to their gaussian input format (.gjf) with 3D coordinates (--gen3d enabled). Tried different versions of openbabel: 2.4.1, 3.0, and the recent 3.1.0 release but all of these versions fail to accurately convert a type of structures. I am using Python 3 and openbabel through the command line. . ## Steps to Reproduce; For example, this is the line used:; obabel -:""C(=Cc1c2scnc2cc2ncsc12)c1cncc2ccccc12"" -O mol.gjf --gen3d. The expected structure: ; ![image](https://user-images.githubusercontent.com/28598792/81405058-82c89b00-9169-11ea-9fd1-b2a49c3a7471.png). ## Actual Behavior; For the example above, after the gjf file is obtained, this is its structure when visualized on Chem3D:; ![image](https://user-images.githubusercontent.com/28598792/81404718-be169a00-9168-11ea-8aa2-020ab861ccde.png). This is the error log:; ![image](https://user-images.githubusercontent.com/28598792/81405308-f7033e80-9169-11ea-9371-7a8df1fe6a40.png). Rings containing nitrogen, particularly azoles, would lose its aromaticity after the gjf conversion. This is a repeated problem for similar structures as well. Thank you for your help and for developing this tool and package. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2210
https://github.com/openbabel/openbabel/issues/2210:445,Deployability,release,release,445,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: CentOS Linux 7 and Windows 10. ## Expected Behavior; I am trying to use openbabel to convert molecules from their SMILES format to their gaussian input format (.gjf) with 3D coordinates (--gen3d enabled). Tried different versions of openbabel: 2.4.1, 3.0, and the recent 3.1.0 release but all of these versions fail to accurately convert a type of structures. I am using Python 3 and openbabel through the command line. . ## Steps to Reproduce; For example, this is the line used:; obabel -:""C(=Cc1c2scnc2cc2ncsc12)c1cncc2ccccc12"" -O mol.gjf --gen3d. The expected structure: ; ![image](https://user-images.githubusercontent.com/28598792/81405058-82c89b00-9169-11ea-9fd1-b2a49c3a7471.png). ## Actual Behavior; For the example above, after the gjf file is obtained, this is its structure when visualized on Chem3D:; ![image](https://user-images.githubusercontent.com/28598792/81404718-be169a00-9168-11ea-8aa2-020ab861ccde.png). This is the error log:; ![image](https://user-images.githubusercontent.com/28598792/81405308-f7033e80-9169-11ea-9371-7a8df1fe6a40.png). Rings containing nitrogen, particularly azoles, would lose its aromaticity after the gjf conversion. This is a repeated problem for similar structures as well. Thank you for your help and for developing this tool and package. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2210
https://github.com/openbabel/openbabel/issues/2210:1112,Testability,log,log,1112,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: CentOS Linux 7 and Windows 10. ## Expected Behavior; I am trying to use openbabel to convert molecules from their SMILES format to their gaussian input format (.gjf) with 3D coordinates (--gen3d enabled). Tried different versions of openbabel: 2.4.1, 3.0, and the recent 3.1.0 release but all of these versions fail to accurately convert a type of structures. I am using Python 3 and openbabel through the command line. . ## Steps to Reproduce; For example, this is the line used:; obabel -:""C(=Cc1c2scnc2cc2ncsc12)c1cncc2ccccc12"" -O mol.gjf --gen3d. The expected structure: ; ![image](https://user-images.githubusercontent.com/28598792/81405058-82c89b00-9169-11ea-9fd1-b2a49c3a7471.png). ## Actual Behavior; For the example above, after the gjf file is obtained, this is its structure when visualized on Chem3D:; ![image](https://user-images.githubusercontent.com/28598792/81404718-be169a00-9168-11ea-8aa2-020ab861ccde.png). This is the error log:; ![image](https://user-images.githubusercontent.com/28598792/81405308-f7033e80-9169-11ea-9371-7a8df1fe6a40.png). Rings containing nitrogen, particularly azoles, would lose its aromaticity after the gjf conversion. This is a repeated problem for similar structures as well. Thank you for your help and for developing this tool and package. Cheers!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2210
https://github.com/openbabel/openbabel/pull/2211:479,Availability,error,error,479,"```; [92/558] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; In member function ‘void OpenBabel::OBMol::ConnectTheDots()’:; cc1plus: warning: ‘void* __builtin_memset(void*, int, long unsigned int)’: specified size 18446744073709551608 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]; ```; The change I've made is to guard against a negative value. I think the compiler is maybe being extra cautious. On the other hand, maybe it's a true logic error in the original code - can you take a quick look @ghutchis.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2211
https://github.com/openbabel/openbabel/pull/2211:473,Testability,log,logic,473,"```; [92/558] Building CXX object src/CMakeFiles/openbabel.dir/mol.cpp.o; In member function ‘void OpenBabel::OBMol::ConnectTheDots()’:; cc1plus: warning: ‘void* __builtin_memset(void*, int, long unsigned int)’: specified size 18446744073709551608 exceeds maximum object size 9223372036854775807 [-Wstringop-overflow=]; ```; The change I've made is to guard against a negative value. I think the compiler is maybe being extra cautious. On the other hand, maybe it's a true logic error in the original code - can you take a quick look @ghutchis.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2211
https://github.com/openbabel/openbabel/issues/2214:19,Deployability,install,installed,19,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214
https://github.com/openbabel/openbabel/issues/2214:101,Deployability,install,installs,101,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214
https://github.com/openbabel/openbabel/issues/2214:217,Deployability,release,release,217,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214
https://github.com/openbabel/openbabel/issues/2214:210,Modifiability,config,config-release,210,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214
https://github.com/openbabel/openbabel/issues/2214:263,Modifiability,config,config,263,"coordgen-1.4.0 (as installed from its GitHub repository https://github.com/schrodinger/coordgenlibs) installs these cmake files:; ```; $ pkg info -l coordgenlibs | grep -i cmake; 	/usr/local/lib/cmake/coordgen-config-release.cmake; 	/usr/local/lib/cmake/coordgen-config.cmake; ```. Yet, OpenBabel-3.1.1 doesn't find it.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2214
https://github.com/openbabel/openbabel/issues/2215:381,Integrability,depend,depending,381,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215
https://github.com/openbabel/openbabel/issues/2215:398,Performance,optimiz,optimization,398,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215
https://github.com/openbabel/openbabel/issues/2215:167,Security,access,access,167,"clang-9 found this issue:. ```; /usr/ports/science/openbabel/work/openbabel-openbabel-3-1-1/src/fingerprints/finger3.cpp:258:34: warning: unsequenced modification and access to 'div' [-Wunsequenced]; ngrp = (num + div -1)/div--; //rounds up; ~~~ ^; 1 warning generated.; ```. The first use of ""div"" is ambiguous according to the C++ standard: it would use either ""div"" or ""div-1"", depending on the optimization level or code surroundings.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2215
https://github.com/openbabel/openbabel/issues/2216:104,Deployability,update,update,104,"It used to be openbabel-2.0.pc, and now it is openbabel-3.pc. This practice just forces all projects to update their pkg-config arguments, whether this is needed or not. In case this isn't needed this is just an unnecessary disruption. In case there are changes that break this project the project still needs to be fixed. Encoding the version into .pc file doesn't accomplish anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216
https://github.com/openbabel/openbabel/issues/2216:121,Modifiability,config,config,121,"It used to be openbabel-2.0.pc, and now it is openbabel-3.pc. This practice just forces all projects to update their pkg-config arguments, whether this is needed or not. In case this isn't needed this is just an unnecessary disruption. In case there are changes that break this project the project still needs to be fixed. Encoding the version into .pc file doesn't accomplish anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216
https://github.com/openbabel/openbabel/issues/2217:460,Performance,Perform,Perform,460,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:232,Testability,test,tests,232,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:277,Testability,test,tests,277,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:293,Testability,test,tests,293,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:330,Testability,Test,Test,330,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:381,Testability,test,tests,381,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:542,Testability,test,test,542,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:590,Testability,test,test,590,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:690,Testability,test,test,690,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:716,Testability,test,test,716,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/issues/2217:852,Testability,test,test,852,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; After a successful build, all tests should pass. ## Actual Behavior. > 99% tests passed, 1 tests failed out of 229; > ; > Total Test time (real) = 137.16 sec; > ; > The following tests FAILED:; > 218 - pytest_distgeom (Failed); > . ## Steps to Reproduce; 1. Perform an ordinary `cmake` / `make` build.; 2. in the build directory, run `make test`. ## Additional Comments; On CentOS 8, the test runner apparently recognizes that the platform Python is Python 3.6, and uses that to run this test. Running the failing test directly with Python 3 also fails, and this shows that the issue arises from incorrect (for Python 3) character escaping. The same test passes in the same environment when run with Python 2.7.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2217
https://github.com/openbabel/openbabel/pull/2218:128,Availability,failure,failure,128,"When run with Python 3.6, test/testdistgeom.py fails with a SyntaxError; about a malformed character escape. This arises from a failure to escape; literal backslash characters in single-quoted SMILES strings (several; occurrences). Python 2 accepts this and does the right things with it,; but Python 3 rejects it. Fixes #2217",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218
https://github.com/openbabel/openbabel/pull/2218:26,Testability,test,test,26,"When run with Python 3.6, test/testdistgeom.py fails with a SyntaxError; about a malformed character escape. This arises from a failure to escape; literal backslash characters in single-quoted SMILES strings (several; occurrences). Python 2 accepts this and does the right things with it,; but Python 3 rejects it. Fixes #2217",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218
https://github.com/openbabel/openbabel/pull/2218:31,Testability,test,testdistgeom,31,"When run with Python 3.6, test/testdistgeom.py fails with a SyntaxError; about a malformed character escape. This arises from a failure to escape; literal backslash characters in single-quoted SMILES strings (several; occurrences). Python 2 accepts this and does the right things with it,; but Python 3 rejects it. Fixes #2217",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218
https://github.com/openbabel/openbabel/issues/2219:212,Availability,avail,available,212,"Hi All,. I got a free license from the PVS guys and ran their static checker on the code.; The report is attached [archive.tar.gz](https://github.com/openbabel/openbabel/files/4630071/archive.tar.gz), it is also available here:; https://afonari.github.io/openbabel-pvs-report/index.html. I ran it as:; ```; git clone ...; cd openbabel; mkdir build; cd build; cmake ..; make -j8; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..; pvs-studio-analyzer analyze -c -o ./pvs-output.log -j8; # V1042 flag is to disable the warning that GPL license is in the header of the files; plog-converter -a GA:1,2 -t fullhtml pvs-output.log -o ./pvs-report_dir -d V1042; tar -czvf archive.tar.gz ./pvs-report_dir; ```. I think some places are easier to fix than another. Happy quarantining! =)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2219
https://github.com/openbabel/openbabel/issues/2219:471,Testability,log,log,471,"Hi All,. I got a free license from the PVS guys and ran their static checker on the code.; The report is attached [archive.tar.gz](https://github.com/openbabel/openbabel/files/4630071/archive.tar.gz), it is also available here:; https://afonari.github.io/openbabel-pvs-report/index.html. I ran it as:; ```; git clone ...; cd openbabel; mkdir build; cd build; cmake ..; make -j8; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..; pvs-studio-analyzer analyze -c -o ./pvs-output.log -j8; # V1042 flag is to disable the warning that GPL license is in the header of the files; plog-converter -a GA:1,2 -t fullhtml pvs-output.log -o ./pvs-report_dir -d V1042; tar -czvf archive.tar.gz ./pvs-report_dir; ```. I think some places are easier to fix than another. Happy quarantining! =)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2219
https://github.com/openbabel/openbabel/issues/2219:615,Testability,log,log,615,"Hi All,. I got a free license from the PVS guys and ran their static checker on the code.; The report is attached [archive.tar.gz](https://github.com/openbabel/openbabel/files/4630071/archive.tar.gz), it is also available here:; https://afonari.github.io/openbabel-pvs-report/index.html. I ran it as:; ```; git clone ...; cd openbabel; mkdir build; cd build; cmake ..; make -j8; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=On ..; pvs-studio-analyzer analyze -c -o ./pvs-output.log -j8; # V1042 flag is to disable the warning that GPL license is in the header of the files; plog-converter -a GA:1,2 -t fullhtml pvs-output.log -o ./pvs-report_dir -d V1042; tar -czvf archive.tar.gz ./pvs-report_dir; ```. I think some places are easier to fix than another. Happy quarantining! =)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2219
https://github.com/openbabel/openbabel/pull/2220:151,Testability,test,test,151,"After this fix, valgrind reports no leaks ([valgrind-out.txt](https://github.com/openbabel/openbabel/files/4631753/valgrind-out.txt)) when running mol test (besides the dlopen ([supr.txt](https://github.com/openbabel/openbabel/files/4631752/supr.txt))):; ```; valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --log-file=valgrind-out.txt --suppressions=../supr.txt ./bin/test_runner mol 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2220
https://github.com/openbabel/openbabel/pull/2220:331,Testability,log,log-file,331,"After this fix, valgrind reports no leaks ([valgrind-out.txt](https://github.com/openbabel/openbabel/files/4631753/valgrind-out.txt)) when running mol test (besides the dlopen ([supr.txt](https://github.com/openbabel/openbabel/files/4631752/supr.txt))):; ```; valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes --log-file=valgrind-out.txt --suppressions=../supr.txt ./bin/test_runner mol 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2220
https://github.com/openbabel/openbabel/issues/2221:2010,Availability,fault,fault,2010,"babel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 and 3.1.0 (conda-forge labels `cf202003` and `main`); Operating system and version: Ubuntu 18.04 . ## Expected Behavior; Ability to set OBConformerSearch score inside and outside a function without a segfault. ## Actual Behavior; Setting score outside a function works at the time as expected but causes segfault later upon object deletion. Inside a function this segfault is instant. ## Steps to Reproduce. Working code:; ```; from openbabel import openbabel, pybel. smiles = ""c1c(N(=O)=O)cccc1"". mol = pybel.readstring(""smi"", smiles); mol.addh(); mol.make3D() ; search = openbabel.OBConformerSearch(); x = openbabel.OBRMSDConformerScore(); search.SetScore(x); search.Setup(mol.OBMol, 10); search.GetConformers(mol.OBMol); print(mol.OBMol.NumConformers()); ```. Segfaulting code:. ```; from openbabel import openbabel, pybel. smiles = ""c1c(N(=O)=O)cccc1"". def make_conformers(smiles_string):; mol = pybel.readstring(""smi"", smiles_string); mol.addh(); mol.make3D(); ; search = openbabel.OBConformerSearch(); x = openbabel.OBRMSDConformerScore(); search.SetScore(x); # search.Setup(mol.OBMol, 10); # search.GetConformers(mol.OBMol); # print(mol.OBMol.NumConformers()). make_conformers(smiles); ```. I have run the above code in a script and ipython which results in a blunt `Segmentation fault (core dumped)` and Jupyter which results in no output at all. Only issue that looked potentially connected on a quick search was #2066.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2221
https://github.com/openbabel/openbabel/issues/2222:459,Availability,error,error,459,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:434,Integrability,message,message,434,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:500,Integrability,depend,dependencies-master,500,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:225,Testability,test,tests,225,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:262,Testability,test,test,262,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:307,Testability,test,tests,307,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:359,Testability,test,test,359,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2222:409,Testability,test,test,409,"- [ ] I believe this to be a bug with Open Babel; - [X] I believe this to be a bug with Open Babel's CI framework; - [ ] This is a feature request. ## Environment Information; GitHub. ## Expected Behavior; Automated appveyor tests should evaluate the code under test. ## Actual Behavior; Automated appveyor tests of new PRs are failing over an issue with the test environment, independently of the code under test. Example diagnostic message:. > LINK : fatal error LNK1104: cannot open file 'C:\msvc-dependencies-master\libs-common\i386\zlib1.lib' [C:\openbabel\build\src\openbabel.vcxproj]. ## Steps to Reproduce; Submit a pull request.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2222
https://github.com/openbabel/openbabel/issues/2223:1207,Availability,failure,failures,1207,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:254,Security,access,accesses,254,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:466,Security,access,access,466,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:853,Security,access,access,853,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:280,Testability,test,tests,280,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:771,Testability,test,tests,771,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:1202,Testability,test,test,1202,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:1337,Testability,test,tests,1337,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/issues/2223:1456,Testability,test,test,1456,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.1. ## Expected Behavior; 1. OpenBabel should not attempt out-of-bounds array accesses.; 2. OpenBabel's tests should pass when compiled with GCC 8 and the `-Wp,-D__GLIBCXXX_ASSERTIONS` option. ## Actual Behavior; While parsing ""param"" lines, `OBForceFieldUFF::ParseParamFile()` attempts to access a third byte of each atom type string, even when there are only two (including C string terminator). The deuterium parameters in the default UFF.prm file provided by OpenBabel trigger this misbehavior in practice. If symbol `__GLIBCXX_ASSERTIONS` is defined when building OpenBabel with GCC 8 then tests `test_regressions_1794` and `test_ffuff_1` fail. ## Steps to Reproduce; The access attempt is visible by inspection at [forcefields/forcefielduff.cpp:1650](https://github.com/openbabel/openbabel/blob/master/src/forcefields/forcefielduff.cpp#L1650) (it's even commented), and the single-character deuterium atom type can be seen at [data/UFF.prm:152](https://github.com/openbabel/openbabel/blob/master/data/UFF.prm#L152). The test failures can be reproduced by building with g++ of GCC 8.3, and providing hardening options via the environment, then running the tests. For example,. ```; mkdir build; cd build; export CXXFLAGS=""-O2 -Wp,-D_GLIBCXX_ASSERTIONS""; cmake ..; make; make test; ```. ## Additional Comments; I discovered this while packaging OpenBabel into an RPM. By default, RedHat's rpm macros supply hardening options to software builds, including defining the `__GLIBCXX_ASSERTIONS` macro.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2223
https://github.com/openbabel/openbabel/pull/2224:104,Security,access,access,104,"When evaluating atom coordination number, method; OBForceFieldUFF::ParseParamFile() assumed that it may access a third character; of the atom type string, but in fact that produces undefined behavior if the; string is only one character long. A one-character atom type occurs in; practice with the default parameter file (for deuterium). This change addresses the issue by verifying that the second character of; each atom type string is not a C string terminator as a precondition for; accessing the third. If the second is a string terminator then the same; default behavior is provided as if the type were two characters long. Fixes #2223",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2224
https://github.com/openbabel/openbabel/pull/2224:487,Security,access,accessing,487,"When evaluating atom coordination number, method; OBForceFieldUFF::ParseParamFile() assumed that it may access a third character; of the atom type string, but in fact that produces undefined behavior if the; string is only one character long. A one-character atom type occurs in; practice with the default parameter file (for deuterium). This change addresses the issue by verifying that the second character of; each atom type string is not a C string terminator as a precondition for; accessing the third. If the second is a string terminator then the same; default behavior is provided as if the type were two characters long. Fixes #2223",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2224
https://github.com/openbabel/openbabel/pull/2225:0,Testability,Test,Tested,0,"Tested with valgrind, see https://github.com/openbabel/openbabel/pull/2220.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2225
https://github.com/openbabel/openbabel/pull/2227:34,Modifiability,polymorphi,polymorphic,34,Fixes three instances of catching polymorphic exceptions by value; instead of by reference.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2227
https://github.com/openbabel/openbabel/pull/2229:21,Deployability,release,release,21,"Instead callers must release objects.; Fix #2066, fix #2221.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2229
https://github.com/openbabel/openbabel/issues/2234:1436,Availability,avail,available,1436," to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1; Operating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2786,Availability,Error,Errors,2786,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2877,Availability,Error,Error,2877,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3171,Availability,down,download,3171,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:1598,Deployability,install,install,1598," bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1; Operating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:1709,Deployability,install,install,1709,"erating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cd",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3243,Deployability,install,install,3243,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3277,Deployability,install,install,3277,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3317,Deployability,install,install,3317,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3406,Deployability,install,install,3406,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2343,Modifiability,Config,Configuring,2343,"xWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:955,Testability,test,tests,955,"ssues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1; Operating system and version: Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After building OpenBabel I expected ctest to run all the tests and for them all to pass; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; run this command twice: **cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabe**. -- Using included inchi library.; -- Could NOT find wxWidgets (missing: wxWidgets_LIBRARIES wxWidgets_INCLUDE_DIRS); -- Checking available shared pointer...; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2441,Testability,test,test,2441,"; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2453,Testability,test,tests,2453,"; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2469,Testability,test,tests,2469,"; -- Use std::shared_ptr in memory; -- Could NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2500,Testability,Test,Test,2500," NOT find Boost; -- Could NOT find Boost; -- Maestro formats will NOT be supported. Please install Boost to enable Maestro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2544,Testability,test,tests,2544,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2846,Testability,test,test,2846,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:2871,Testability,test,test,2871,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3064,Testability,test,test,3064,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2234:3621,Testability,test,test,3621,"stro formats.; -- Coordinate generation with Coordgen will NOT be supported. Please install Boost to enable Maestro formats.; -- Could NOT find RapidJSON (missing: RAPIDJSON_INCLUDE_DIRS) (Required is at least version ""1.1.0""); -- JSON formats will be supported. Using RapidJSON 1.1.0 at /home/kk/openbabel-openbabel-3-1-1/external/rapidjson-1.1.0/include; -- Cairo found. PNG output will be supported.; -- Could NOT find Boost; -- Could NOT find Boost; -- Attempting to build the GUI; -- wxWidgets not found => GUI will not be built; -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR); -- Could NOT find SWIG (missing: SWIG_EXECUTABLE SWIG_DIR) (Required is at least version ""2.0""); -- SWIG 2.0 NOT found; -- Configuring done; -- Generating done; -- Build files have been written to: /home/kk/build. **make test**; 97% tests passed, 6 tests failed out of 227. Total Test time (real) = 64.56 sec. The following tests FAILED:; 221 - pybindtest_bindings (Failed); 222 - pybindtest__pybel (Failed); 223 - pybindtest_example (Failed); 224 - pybindtest_obconv_writers (Failed); 225 - pybindtest_cdjsonformat (Failed); 226 - pybindtest_pcjsonformat (Failed); Errors while running CTest; Makefile:72: recipe for target 'test' failed; make: *** [test] Error 8. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. 1. download the sourse code(openbabel-openbabel-3-1-1.tar.gz); 2. sudo apt install libboost-dev; 3. sudo apt install gcc g++ make cmake; 4. sudo apt install libxml2-dev zlib1g-dev libcairo2-dev libeigen3-dev libopenbabel-dev; 5. sudo apt install python3-dev; 6. tar -xzvf openbabel-openbabel-3-1-1.tar.gz; 7. mkdir build; 8. cd build; 9. cmake ../../openbabel-2.4.1 -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=~/softwares/openbabel ; 10. make; 11. make test",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2234
https://github.com/openbabel/openbabel/issues/2237:129,Safety,detect,detect,129,"Does openbabel provide a functionality to calculate atom chirality given a molfile representation? I guess the obchiral can only detect whether an atom is chiral or not without classification of R/S.; Thanks so much!; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2237
https://github.com/openbabel/openbabel/issues/2237:1433,Testability,test,test,1433,"Does openbabel provide a functionality to calculate atom chirality given a molfile representation? I guess the obchiral can only detect whether an atom is chiral or not without classification of R/S.; Thanks so much!; <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2237
https://github.com/openbabel/openbabel/issues/2238:532,Availability,echo,echo,532,"- [x] I believe this to be a bug with Open Babel; - [x ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Ubuntu 18.04. Python 3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; For heavy labeled compouds would like to see isotope number in PNG generated with gen2D; See: https://pubchem.ncbi.nlm.nih.gov/compound/11480819#section=Structures. ## Actual Behavior; Just get image without isotope labeling. ## Steps to Reproduce. echo ""InChI=1S/C6H12O6/c7-1-2-3(8)4(9)5(10)6(11)12-2/h2-11H,1H2/t2-,3-,4+,5-,6?/m1/s1/i3+1"" | obabel -iinchi --gen2D -opng",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2238
https://github.com/openbabel/openbabel/pull/2239:29,Deployability,install,installs,29,"``setup.py`` is used for pip installs on Linux. python 2.7 is the default Linux on Ubuntu 18.04 (for example), which has long-term support until 2023.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2239
https://github.com/openbabel/openbabel/pull/2241:50,Availability,avail,available,50,Mersenne twister is one of high-quality PRNGs and available on all platforms since C++11.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2241
https://github.com/openbabel/openbabel/pull/2242:179,Availability,error,error,179,SWIG 4.0 supports attaching the doxygen C++ docs to the Python bindings. This PR turns this on. Some minor tweaks were needed to the doxygen to ensure that it didn't fail with an error.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2242
https://github.com/openbabel/openbabel/issues/2244:1997,Testability,test,test,1997,"abel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Mojave. ## Expected Behavior; python3 -c 'import openbabel' <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. python3 -c 'import openbabel'; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/usr/local/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; Expected in: flat namespace; in /usr/local/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; python3 -c 'import openbabel' <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2244
https://github.com/openbabel/openbabel/issues/2245:1190,Availability,error,error,1190,"losed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: iOS 13.5. ## Expected Behavior; The `make` command should successfully compile. ## Actual Behavior; ```; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; [ 1%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:70:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local sto",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:1641,Availability,error,error,1641,0; Operating system and version: iOS 13.5. ## Expected Behavior; The `make` command should successfully compile. ## Actual Behavior; ```; [ 0%] Building CXX object src/CMakeFiles/openbabel.dir/alias.cpp.o; [ 1%] Building CXX object src/CMakeFiles/openbabel.dir/atom.cpp.o; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:70:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expand,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:1945,Availability,error,error,1945,oot/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:70:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:2246,Availability,error,error,2246,abel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; In file included from /var/root/obabel/ob-src/src/atom.cpp:28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:2543,Availability,error,error,2543,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:2793,Availability,error,errors,2793,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:2911,Availability,Error,Error,2911,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:2995,Availability,Error,Error,2995,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:3034,Availability,Error,Error,3034,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:3277,Deployability,Install,InstalledDir,3277,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2245:3401,Performance,multi-thread,multi-threading,3401,28:; In file included from /var/root/obabel/ob-src/include/openbabel/ring.h:29:; /var/root/obabel/ob-src/include/openbabel/typer.h:84:1: error: thread-local storage is not supported for the current target; THREAD_LOCAL OB_EXTERN OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:107:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAromaticTyper aromtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:108:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBAtomTyper atomtyper;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; /var/root/obabel/ob-src/src/atom.cpp:109:10: error: thread-local storage is not supported for the current target; extern THREAD_LOCAL OBPhModel phmodel;; ^; /var/root/obabel/ob-src/include/openbabel/mol.h:35:24: note: expanded from macro 'THREAD_LOCAL'; # define THREAD_LOCAL thread_local; ^; 5 errors generated.; make[2]: *** [src/CMakeFiles/openbabel.dir/build.make:76: src/CMakeFiles/openbabel.dir/atom.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:1085: src/CMakeFiles/openbabel.dir/all] Error 2; make: *** [Makefile:129: all] Error 2; ```. ## Steps to Reproduce; ```; cmake ../ob-src/ -DCMAKE_INSTALL_PREFIX=~/tree -DCMAKE_SYSROOT=/var/sdks/Latest.sdk 2>&1 | tee cmake.out; make; ```. Clang; ```; clang version 10.0.0 ; Target: arm64-apple-ios7.0; Thread model: posix; InstalledDir: /usr/bin; ```. SDK version: 13.5. ## Temporary Fix:; Commenting lines where thread local is being defined for multi-threading . Either a flag can be added to comment these or this issue can be investigated further,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2245
https://github.com/openbabel/openbabel/issues/2246:211,Deployability,release,release,211,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2359,Energy Efficiency,charge,charge,2359,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:242,Testability,Test,Test,242,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:310,Testability,test,test,310,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:586,Testability,Test,TestPCJSON,586,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:713,Testability,test,test,713,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:775,Testability,assert,assertWriters,775,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:811,Testability,test,test,811,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:853,Testability,assert,assertWriters,853,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:938,Testability,test,test,938,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:1009,Testability,assert,assertMultiLineEqual,1009," be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 + commit 7de27f309db5f7ec026ef5c5235e5b33bf7d1a85; Operating system and version:; Ubuntu 20.10 development release. ## Expected Behavior; Test succeed on arm64 and ppc64el. ## Actual Behavior; ```; Running test/testobconv_writers.py ...; ..........................................................................................F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:1100,Testability,Assert,AssertionError,1100,"..............F..................................................; ======================================================================; FAIL: test_default (__main__.TestPCJSON); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""test/testobconv_writers.py"", line 2761, in test_default; self.assertWriters(self.fmt, """"""\; File ""test/testobconv_writers.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2576,Testability,log,log,2576,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2743,Testability,log,log,2743,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2756,Testability,test,test,2756,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2761,Testability,test,testbindings,2761,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2781,Testability,test,test,2781,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2246:2786,Testability,test,testsym,2786,"rs.py"", line 258, in assertWriters; test_write_string(self, mol, conv, expected_output, normalize); File ""test/testobconv_writers.py"", line 165, in test_write_string; test_case.assertMultiLineEqual(output.replace(""\r\n"", ""\n""), expected_output.replace(""\r\n"", ""\n"")); AssertionError: '{\n [1926 chars]102014\n ],\n ""y"": [[1070 chars]]\n}' != '{\n [1926 chars]102012\n ],\n ""y"": [[1070 chars]]\n}'; {; ""PC_Compounds"": [; {; ""atoms"": {; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""element"": [; 6,; 6,; 6,; 6,; 6,; 6,; 8,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""bonds"": {; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5,; 6,; 1,; 2,; 3,; 4,; 5,; 7; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""order"": [; 2,; 1,; 2,; 1,; 2,; 1,; 1,; 1,; 1,; 1,; 1,; 1,; 1; ]; },; ""coords"": [; {; ""type"": [; 1; ],; ""aids"": [; 1,; 2,; 3,; 4,; 5,; 6,; 7,; 8,; 9,; 10,; 11,; 12,; 13; ],; ""conformers"": [; {; ""x"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""y"": [; 1.5846,; 1.5703,; 2.4295,; 3.3031,; 3.3175,; 0.0,; -1.0005,; 2.313816216007316,; 0.669250157347277,; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102014; ? ^; + -1.4648575597102012; ? ^; ],; ""style"": {; ""annotation"": [; 8,; 8,; 8,; 8,; 8,; 8; ],; ""aid1"": [; 1,; 1,; 2,; 3,; 4,; 5; ],; ""aid2"": [; 6,; 2,; 3,; 4,; 5,; 6; ]; }; }; ]; }; ],; ""charge"": 0; }; ]; }. ```. ## Steps to Reproduce; See e.g.:; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/arm64/o/openbabel/20200603_115438_23a53@/log.gz; https://objectstorage.prodstack4-5.canonical.com/v1/AUTH_77e2ada1e7a84929a74ba3b87153c0ac/autopkgtest-groovy/groovy/ppc64el/o/openbabel/20200603_110529_77a4e@/log.gz. Also test/testbindings.py and test/testsym.py have issues on non-amd64 platforms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246
https://github.com/openbabel/openbabel/issues/2247:1363,Availability,error,errors,1363,"sts.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:2059,Deployability,INSTALL,INSTALLDIRS,2059,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:2253,Security,hash,hash-style,2253,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:885,Testability,test,test,885,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1222,Testability,test,test,1222,"?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -W",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1309,Testability,Test,Tests,1309,"sts.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1395,Testability,test,tests,1395," post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1422,Testability,Test,Tests,1422,"ceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1529,Testability,test,test,1529,"ou see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElement",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:1744,Testability,test,test,1744,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/issues/2247:2283,Testability,test,test,2283,"see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Gentoo Linux, 5.6.15-gentoo. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Failed 0/8 test programs. 0/34 subtests failed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Can't call method ""GetMass"" on an undefined value at t/data.t line 21.; t/data.t ........... Dubious, test returned 255 (wstat 65280, 0xff00) ; Failed 1/2 subtests . t/data.t (Wstat: 65280 Tests: 1 Failed: 0); Non-zero exit status: 255; Parse errors: Bad plan. You planned 2 tests but ran 1.; Files=8, Tests=34, 0 wallclock secs ( 0.03 usr 0.01 sys + 0.39 cusr 0.06 csys = 0.49 CPU); Result: FAIL; Failed 1/8 test programs. 0/34 subtests failed. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; swig -perl5 -c++ -small -O -templatereduce -naturalvar -I/usr/include/openbabel3 -o scrips/perl/openbabel-perl.cpp -outdir scrips/perl scripts/openbabel-perl.i; cd scrips/perl; perl Makefile.PL PREFIX=/usr INSTALLDIRS=vendor INSTALLMAN3DIR=none DESTDIR=/var/tmp/portage/sci-chemistry/openbabel-perl-3.1.1/image INC=-I/usr/include/openbabel3; make -j17 -l4 'OTHERLDFLAGS=-Wl,-O1 -Wl,--as-needed -Wl,--hash-style=gnu; make -j17 -l4 test; ```. The offending line in `scrips/perl/t/data.t` is:; ```; my $mass = $Chemistry::OpenBabel::etab->GetMass(2);; ```; I don't know much about perl but it likely pertains to the shift from the use of `etab` to the use of `OBElements`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2247
https://github.com/openbabel/openbabel/pull/2248:112,Availability,error,errors,112,"It is arguable if this is strictly better (you won't see uninitialized; reads in valgrind when debugging memory errors) but seems like good; defensive programming to me. I don't know of any bugs that are fixed as; a result of not having uninitialized memory, but this was motivated by; another bug involving uninitializd memory and the changes have been; sitting in my fork for a while.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2248
https://github.com/openbabel/openbabel/issues/2249:258,Availability,error,error,258,"Hello,. I am using Open Babel to convert molecules in sdf format into pdbqt, then work on the pdbqt files, and the convert back to sdf. The approach works ok for most molecules, but fails for a few ones like the one attached. I use babel 2.4.1, but the same error seems to be happening in obabel 3.1.1. Thank you very much for your help,. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Linux. ## Expected Behavior; By running the code below I expected to get the original molecule back. ## Actual Behavior; Instead, I am getting back an incorrect molecule, as you can see when visualizing output.sdf in pymol (see screenshot). ![Screenshot output](https://user-images.githubusercontent.com/66529158/83950849-83913300-a7e2-11ea-874e-5dee2b9b06d7.png). ## Steps to Reproduce; babel -isdf original.sdf -opdbqt original.pdbqt; babel -ipdbqt original.pdbqt -osdf output.sdf. [original.zip](https://github.com/openbabel/openbabel/files/4740722/original.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2249
https://github.com/openbabel/openbabel/issues/2250:144,Availability,down,downloaded,144,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1786,Availability,Error,Errors,1786,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1831,Availability,Error,Error,1831,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1989,Availability,down,download,1989,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:24,Deployability,install,install,24,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:214,Deployability,Install,Install,214,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:268,Deployability,install,install,268,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:304,Deployability,install,install,304,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:377,Deployability,INSTALL,INSTALL,377,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:491,Deployability,install,install,491,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:552,Deployability,install,install,552,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:618,Deployability,install,install,618,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:681,Deployability,install,install,681,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:739,Deployability,install,install,739,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:826,Deployability,install,install,826,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:873,Deployability,install,installation,873,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:914,Deployability,install,installation,914,"Hi there,. Im trying to install OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:955,Deployability,install,installation,955,"stall OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:981,Deployability,INSTALL,INSTALL,981,"stall OpenBabel 2.4.1 as the latest version does not seem to be compatible with the program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patc",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1411,Deployability,Install,Install,1411,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1431,Deployability,install,install,1431,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:2022,Deployability,patch,patch,2022,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1525,Integrability,message,message,1525,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1232,Modifiability,Config,Configure,1232,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1375,Testability,Test,Test,1375,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1398,Testability,test,test,1398,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1495,Testability,test,test,1495,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1538,Testability,test,tests,1538,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1554,Testability,test,tests,1554,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1585,Testability,Test,Test,1585,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1629,Testability,test,tests,1629,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2250:1825,Testability,test,test,1825,"e program I want to use (VSpipe). I downloaded the 2.4.1 version and then followed these instructions. 2. Install cairo library and libpython-dev; sudo apt-get install libpython-dev; sudo apt-get install libcairo2-dev; # 3. There are some requirements specified in the INSTALL file in OpenBabel; # Even though there are some that are optional, here we are going to explain; # how to install them all:; # 3.1. CMake 2.4.8 or later; sudo apt-get install cmake; # 3.2. Eigen 3.0 or later (optional); sudo apt-get install libeigen3-dev; # 3.3. libxml2 (optional); sudo apt-get install libxml2-dev; # 3.4. zlib (optional); sudo apt-get install zlib1g-dev; # 3.5. wxWidgets 2.8 (optional, needed to build GUI); sudo apt-get install libwxgtk3.0-dev; # 4. Follow OpenBabel installation. Here we only add the basic installation.; # If you want an advanced installation, check their INSTALL file; # ; # The following instructions assume that the Open Babel source distribution is in; # the directory ~/Applications/openbabel-2.4.1.; # 4.1. Create a 'build' directory:; cd ~/Applications/openbabel-2.4.1; mkdir build; cd build; # 4.2. Configure the build system. You can specify additional build; # options at this time (see below):; cmake ..; # 4.3. Compile:; make -j2; # 4.4. Test (optional):; make test; # 4.5. Install:; sudo make install. Everything seems to work swell until I get to the make test stage. This returns this message. 98% tests passed, 4 tests failed out of 160. Total Test time (real) = 88.24 sec. The following tests FAILED:; 	157 - pytest_pdbformat (Failed); 	158 - pybindtest_bindings (Failed); 	159 - pybindtest__pybel (Failed); 	160 - pybindtest_example (Failed); Errors while running CTest; make: *** [test] Error 8. Does anyone know what I can do to get around this?. I tried following the suggestion raised on this following issue, but could not figure out how to download and apply the suggested patch. https://github.com/harryjubb/openbabel_python_docker/issues/1. Can anyone help?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2250
https://github.com/openbabel/openbabel/issues/2258:611,Availability,error,error,611,Hi. I have a problem converting some mol files from chemsketch to image format (svg by example). In the directory; https://mycore.core-cloud.net/index.php/s/8EGMfviPsUWYrQY. there are three files:; GAL-1-structure.mol The mol file from chemsketch; GAL-1-structure.svg The svg file when you convert with openbabel; mol2svg.svg The svg file when you convert with mol2svg. The problem is the bond between 14 and 7; 14 7 1 1 0 0 0; The bond should be forward. But openbabel chooses to put 14-15 backward instead. I have tried with latest git version of openbabel with the same result. Why this choice ? Is there an error in the mol file ? An option to openbabel ?. Thanks in advance,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2258
https://github.com/openbabel/openbabel/issues/2259:628,Availability,avail,available,628,- [x ] This is a feature request. I'm trying to use OBElements namespace that replaced OBElementTable in 3.x version of openbabel. I find the way of importing it into python quite confusing. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.5. ## Expected Behavior; I'd expect import to be something like; ```python; from openbabel.elements import OBElements. # so that the namespace/module methods can be accessed from a defined module; atomic_num = OBElements.GetAtomicNum('C'); ```; ## Actual Behavior; Instead OBElements is imported silently as a part of openbabel and all the available functionality is accessible from general openbabel namespace that makes it a bit confusing:. ```python; import openbabel.openbabel as ob; atomic_num = ob.GetAtomicNum('C'); ```; ## Steps to Reproduce; Try the import in any IDE of choice,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2259
https://github.com/openbabel/openbabel/issues/2259:453,Security,access,accessed,453,- [x ] This is a feature request. I'm trying to use OBElements namespace that replaced OBElementTable in 3.x version of openbabel. I find the way of importing it into python quite confusing. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.5. ## Expected Behavior; I'd expect import to be something like; ```python; from openbabel.elements import OBElements. # so that the namespace/module methods can be accessed from a defined module; atomic_num = OBElements.GetAtomicNum('C'); ```; ## Actual Behavior; Instead OBElements is imported silently as a part of openbabel and all the available functionality is accessible from general openbabel namespace that makes it a bit confusing:. ```python; import openbabel.openbabel as ob; atomic_num = ob.GetAtomicNum('C'); ```; ## Steps to Reproduce; Try the import in any IDE of choice,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2259
https://github.com/openbabel/openbabel/issues/2259:655,Security,access,accessible,655,- [x ] This is a feature request. I'm trying to use OBElements namespace that replaced OBElementTable in 3.x version of openbabel. I find the way of importing it into python quite confusing. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.5. ## Expected Behavior; I'd expect import to be something like; ```python; from openbabel.elements import OBElements. # so that the namespace/module methods can be accessed from a defined module; atomic_num = OBElements.GetAtomicNum('C'); ```; ## Actual Behavior; Instead OBElements is imported silently as a part of openbabel and all the available functionality is accessible from general openbabel namespace that makes it a bit confusing:. ```python; import openbabel.openbabel as ob; atomic_num = ob.GetAtomicNum('C'); ```; ## Steps to Reproduce; Try the import in any IDE of choice,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2259
https://github.com/openbabel/openbabel/issues/2260:976,Availability,Error,Error,976,"-->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- May 16 2020; Operating system and version: OS Name: Microsoft Windows 10 Home, Version: 10.0.18362 Build 18362; And I am using Command Prompt to work with Open Babel. ## Expected Behavior; I expect Open Babel to convert all ligands that are enclosed in .sdf files into a number of single .pdb files. ## Actual Behavior; Open Babel only converts some of the structures in .sdf files into .pdb files. Then it stops with following message:; (here I will copy the whole thing, starting with a command). C:\Users\siroj\Desktop\Research\L16 receptor Docking\Docking_HPCC\dock_perform\New folder>obabel -isdf E_0538+0591.sdf -m --gen3D -O lig.pdb; ==============================; *** Open Babel Warning in OpenBabel::OBBuilder::Build; There exists NaN in calculated coordinates.; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment C1CCCN1 in rigid-fragments.txt has all zero coordinates. ## Steps to Reproduce; I am sharing the files I'm working with for which I have observed aforementioned behavior of Open Babel at my Google.Drive folder here: https://drive.google.com/drive/folders/1S4ytzWerzIG-68v8vQLlbnLXB-s5zKYF?usp=sharing. Please, help.; With all due respect, Teriken (Yingxian)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2260
https://github.com/openbabel/openbabel/issues/2260:584,Integrability,message,message,584,"-->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- May 16 2020; Operating system and version: OS Name: Microsoft Windows 10 Home, Version: 10.0.18362 Build 18362; And I am using Command Prompt to work with Open Babel. ## Expected Behavior; I expect Open Babel to convert all ligands that are enclosed in .sdf files into a number of single .pdb files. ## Actual Behavior; Open Babel only converts some of the structures in .sdf files into .pdb files. Then it stops with following message:; (here I will copy the whole thing, starting with a command). C:\Users\siroj\Desktop\Research\L16 receptor Docking\Docking_HPCC\dock_perform\New folder>obabel -isdf E_0538+0591.sdf -m --gen3D -O lig.pdb; ==============================; *** Open Babel Warning in OpenBabel::OBBuilder::Build; There exists NaN in calculated coordinates.; ==============================; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment C1CCCN1 in rigid-fragments.txt has all zero coordinates. ## Steps to Reproduce; I am sharing the files I'm working with for which I have observed aforementioned behavior of Open Babel at my Google.Drive folder here: https://drive.google.com/drive/folders/1S4ytzWerzIG-68v8vQLlbnLXB-s5zKYF?usp=sharing. Please, help.; With all due respect, Teriken (Yingxian)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2260
https://github.com/openbabel/openbabel/issues/2261:389,Availability,error,error,389,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.3.2+dfsg-3build1; Operating system and version: Ubuntu 18.04.1. This is also reproducible on the [latest git revision](https://github.com/openbabel/openbabel/commit/4709b0752109db593f1bee6298ef3bfa718d260d). ## Expected Behavior; `obabel` throws a parsing error. ## Actual Behavior; `obabel` is stuck in an infinite loop. ## Steps to Reproduce. obabel -i cif example-bad.cif -o xyz. See attached CIF files and gdb backtrace. The only difference is the period at the end of the `_space_group_symop_operation_xyz` section:. '1/2-x,1/2-y,1/2+z. instead of a single quote:. '1/2-x,1/2-y,1/2+z'. [bug-report.zip](https://github.com/openbabel/openbabel/files/4955522/bug-report.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261
https://github.com/openbabel/openbabel/issues/2262:397,Availability,echo,echo,397,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; ```sh; $ obabel -V; Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not de",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:520,Availability,echo,echo,520,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; ```sh; $ obabel -V; Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not de",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:1392,Availability,avail,avail,1392,"; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a00",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:2067,Deployability,configurat,configuration,2067,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:484,Energy Efficiency,energy,energy,484,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; ```sh; $ obabel -V; Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not de",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:607,Energy Efficiency,energy,energy,607,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; ```sh; $ obabel -V; Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not de",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:1999,Integrability,depend,depend,1999,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:2067,Modifiability,config,configuration,2067,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:1094,Performance,load,load,1094,"1 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `str",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:1328,Performance,cache,cache,1328,"1 2020 -- 11:52:36; ```. Operating system and version:; ```sh; $ uname -a; Linux rivendell 5.4.0-33-generic #37-Ubuntu SMP Thu May 21 12:53:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; ```. ## Expected Behavior; ```sh; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_1.mol2 &; $ echo ""Cc1cccc(c1C)C(=O)N2CCCC(C2)O""| obabel -h --gen3d --conformer --nconf 100 --score energy -ismi -omol2 > t_2.mol2 &; ```. I expect the two output files to be generated. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Both instances hang. If one instance is killed manually, the other will continue. While hanging, each of the commands fully utilizes all cores on the node:; ```; top - 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `str",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2262:2042,Testability,test,test,2042,"- 01:08:00 up 49 days, 6:12, 1 user, load average: 4,45, 1,46, 1,11; Tasks: 362 total, 3 running, 357 sleeping, 1 stopped, 1 zombie; %Cpu(s): 98,8 us, 1,2 sy, 0,0 ni, 0,0 id, 0,0 wa, 0,0 hi, 0,0 si, 0,0 st; MiB Mem : 31656,0 total, 1710,4 free, 8584,8 used, 21360,8 buff/cache; MiB Swap: 2048,0 total, 264,9 free, 1783,1 used. 20925,8 avail Mem . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 2326554 merzky 20 0 127428 28980 16392 R 378,7 0,1 0:47.11 obabel ; 2326556 merzky 20 0 127428 28960 16372 R 367,1 0,1 0:46.73 obabel ; [...]; ```; (the node has 4 cores / 8 threads). ## Steps to Reproduce; Either use the commands above, or open two terminals and run two openbabel instances in quick succession. Since the command runtime itself is very short, getting the timing right can be tricky, but the hangup happens every time if the second command is started within about 0.3 seconds after the first command. The problem does not depend on the input SMILES - but I did not test any other parameter configuration, and thus do not know if other usage modes are affected. If I run the obabel instances under `strace`, I see both looping over `FUTEX_WAIT/FUTEX_WAKE` right after cloning the threads:; ```; [...]; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe909629000; mprotect(0x7fe90962a000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909e28cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343280], tls=0x7fe909e29700, child_tidptr=0x7fe909e299d0) = 2343280; mmap(NULL, 8392704, PROT_NONE, MAP_PRIVATE|MAP_ANONYMOUS|MAP_STACK, -1, 0) = 0x7fe908e28000; mprotect(0x7fe908e29000, 8388608, PROT_READ|PROT_WRITE) = 0; clone(child_stack=0x7fe909627cb0, flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID, parent_tid=[2343281], tls=0x7fe909628700, child_tidptr=0x",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2262
https://github.com/openbabel/openbabel/issues/2263:673,Safety,detect,detection,673,"Openbabel version 3.1, and perhaps former versions looking at ring-fragments.txt file, mis-identifies aromatics when O=C1C=COC=C1 ring fragments are present. Instead of the quinoidal structure, openbabel converts it to O=c1ccocc1, which is certainly wrong. With version 3.1 there is no way even to convert it to Kekule form, which could fix this problem as it could not distribute the bonds correctly. With increasing version number it is a step back in functionality. Wrong way to go honestly. Anyone knows if it is possible to fix this with modifying the bondtyp.txt file or some other?; The problem may originate from Geoff Huchinson's years back statement and aromatic detection implementation, that out-of ring double bonds to an aromatic carbon does not break aromaticity of the ring. It certainly does. That C1 carbon now has too many electrons and bonds of course. An xyz file is below that fails. If you would look at the same molecule with Avogadro, it detects the bonds perfectly. Perhaps they don't use openbabel for bond-detection, only for molecule conversion. ; ----; 17. C 2.55040 -0.73410 0.11530; C 1.24130 -0.01430 -0.01140; C 1.16330 1.30960 -0.24480; O -0.00100 1.99450 -0.36510; C -1.16460 1.30860 -0.24470; C -1.24140 -0.01540 -0.01130; C 0.00030 -0.79380 0.12670; O 0.00090 -2.00280 0.34090; C -2.54980 -0.73650 0.11560; H 3.39890 -0.05810 -0.00790; H 2.61890 -1.53020 -0.63070; H 2.62260 -1.22050 1.09180; H 2.01430 1.96810 -0.36130; H -2.01620 1.96620 -0.36110; H -2.61770 -1.53250 -0.63070; H -2.62140 -1.22310 1.09190; H -3.39900 -0.06120 -0.00740",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263
https://github.com/openbabel/openbabel/issues/2263:963,Safety,detect,detects,963,"Openbabel version 3.1, and perhaps former versions looking at ring-fragments.txt file, mis-identifies aromatics when O=C1C=COC=C1 ring fragments are present. Instead of the quinoidal structure, openbabel converts it to O=c1ccocc1, which is certainly wrong. With version 3.1 there is no way even to convert it to Kekule form, which could fix this problem as it could not distribute the bonds correctly. With increasing version number it is a step back in functionality. Wrong way to go honestly. Anyone knows if it is possible to fix this with modifying the bondtyp.txt file or some other?; The problem may originate from Geoff Huchinson's years back statement and aromatic detection implementation, that out-of ring double bonds to an aromatic carbon does not break aromaticity of the ring. It certainly does. That C1 carbon now has too many electrons and bonds of course. An xyz file is below that fails. If you would look at the same molecule with Avogadro, it detects the bonds perfectly. Perhaps they don't use openbabel for bond-detection, only for molecule conversion. ; ----; 17. C 2.55040 -0.73410 0.11530; C 1.24130 -0.01430 -0.01140; C 1.16330 1.30960 -0.24480; O -0.00100 1.99450 -0.36510; C -1.16460 1.30860 -0.24470; C -1.24140 -0.01540 -0.01130; C 0.00030 -0.79380 0.12670; O 0.00090 -2.00280 0.34090; C -2.54980 -0.73650 0.11560; H 3.39890 -0.05810 -0.00790; H 2.61890 -1.53020 -0.63070; H 2.62260 -1.22050 1.09180; H 2.01430 1.96810 -0.36130; H -2.01620 1.96620 -0.36110; H -2.61770 -1.53250 -0.63070; H -2.62140 -1.22310 1.09190; H -3.39900 -0.06120 -0.00740",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263
https://github.com/openbabel/openbabel/issues/2263:1034,Safety,detect,detection,1034,"Openbabel version 3.1, and perhaps former versions looking at ring-fragments.txt file, mis-identifies aromatics when O=C1C=COC=C1 ring fragments are present. Instead of the quinoidal structure, openbabel converts it to O=c1ccocc1, which is certainly wrong. With version 3.1 there is no way even to convert it to Kekule form, which could fix this problem as it could not distribute the bonds correctly. With increasing version number it is a step back in functionality. Wrong way to go honestly. Anyone knows if it is possible to fix this with modifying the bondtyp.txt file or some other?; The problem may originate from Geoff Huchinson's years back statement and aromatic detection implementation, that out-of ring double bonds to an aromatic carbon does not break aromaticity of the ring. It certainly does. That C1 carbon now has too many electrons and bonds of course. An xyz file is below that fails. If you would look at the same molecule with Avogadro, it detects the bonds perfectly. Perhaps they don't use openbabel for bond-detection, only for molecule conversion. ; ----; 17. C 2.55040 -0.73410 0.11530; C 1.24130 -0.01430 -0.01140; C 1.16330 1.30960 -0.24480; O -0.00100 1.99450 -0.36510; C -1.16460 1.30860 -0.24470; C -1.24140 -0.01540 -0.01130; C 0.00030 -0.79380 0.12670; O 0.00090 -2.00280 0.34090; C -2.54980 -0.73650 0.11560; H 3.39890 -0.05810 -0.00790; H 2.61890 -1.53020 -0.63070; H 2.62260 -1.22050 1.09180; H 2.01430 1.96810 -0.36130; H -2.01620 1.96620 -0.36110; H -2.61770 -1.53250 -0.63070; H -2.62140 -1.22310 1.09190; H -3.39900 -0.06120 -0.00740",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2263
https://github.com/openbabel/openbabel/issues/2264:254,Deployability,install,installation,254,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian sid. ## Expected Behavior; Open Babel's CMake files help locating Open Babel's installation. ## Actual Behavior; Open Babel's CMake files seem to be pointing to incorrect locations in Debian system. At least `OpenBabel3Config.cmake`:. ```; # The OpenBabel3 config file. To get the targets include the exports file.; get_filename_component(OpenBabel3_INSTALL_PREFIX ""${OpenBabel3_DIR}/../../..""; ABSOLUTE); ```; I know very little about CMake, but I cannot find where the value of `${OpenBabel3_DIR}` is set. On Debian systems, `OpenBabel3_INSTALL_PREFIX` most likely is `/usr`, but some other variables have to be adjusted too. ```; set(OpenBabel3_VERSION_MAJOR ""3""); set(OpenBabel3_VERSION_MINOR ""1""); set(OpenBabel3_VERSION_PATCH ""0""); set(OpenBabel3_VERSION ""3.1.0""); ```; These variables should not be hardcoded - I am using Open Babel 3.1.1, but their values indicate that this is 3.1.0. The same issue is in `OpenBabel3ConfigVersion.cmake` too. ```; set(OpenBabel3_INCLUDE_DIRS ""${OpenBabel3_INSTALL_PREFIX}/include/openbabel3""); ```; `OpenBabel3_INCLUDE_DIRS` is correct. ```; set(OpenBabel3_EXPORTS_FILE ""${OpenBabel3_INSTALL_PREFIX}/lib/cmake/openbabel3/OpenBabel3_EXPORTS.cmake""); ```; On Debian systems this is `/usr/lib/<arch-triplet>/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`, for example, `/usr/lib/x86_64-linux-gnu/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`. Maybe CMake files could be generated during the build according to the values of `CMAKE_INSTALL_PREFIX` and `CMAKE_INSTALL_LIBDIR` CMake variables?. ## Steps to Reproduce; Originally spotted while [building Kalzium with Open Babel support](https://phabricator.kde.org/D29482#674939).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2264
https://github.com/openbabel/openbabel/issues/2264:432,Modifiability,config,config,432,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian sid. ## Expected Behavior; Open Babel's CMake files help locating Open Babel's installation. ## Actual Behavior; Open Babel's CMake files seem to be pointing to incorrect locations in Debian system. At least `OpenBabel3Config.cmake`:. ```; # The OpenBabel3 config file. To get the targets include the exports file.; get_filename_component(OpenBabel3_INSTALL_PREFIX ""${OpenBabel3_DIR}/../../..""; ABSOLUTE); ```; I know very little about CMake, but I cannot find where the value of `${OpenBabel3_DIR}` is set. On Debian systems, `OpenBabel3_INSTALL_PREFIX` most likely is `/usr`, but some other variables have to be adjusted too. ```; set(OpenBabel3_VERSION_MAJOR ""3""); set(OpenBabel3_VERSION_MINOR ""1""); set(OpenBabel3_VERSION_PATCH ""0""); set(OpenBabel3_VERSION ""3.1.0""); ```; These variables should not be hardcoded - I am using Open Babel 3.1.1, but their values indicate that this is 3.1.0. The same issue is in `OpenBabel3ConfigVersion.cmake` too. ```; set(OpenBabel3_INCLUDE_DIRS ""${OpenBabel3_INSTALL_PREFIX}/include/openbabel3""); ```; `OpenBabel3_INCLUDE_DIRS` is correct. ```; set(OpenBabel3_EXPORTS_FILE ""${OpenBabel3_INSTALL_PREFIX}/lib/cmake/openbabel3/OpenBabel3_EXPORTS.cmake""); ```; On Debian systems this is `/usr/lib/<arch-triplet>/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`, for example, `/usr/lib/x86_64-linux-gnu/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`. Maybe CMake files could be generated during the build according to the values of `CMAKE_INSTALL_PREFIX` and `CMAKE_INSTALL_LIBDIR` CMake variables?. ## Steps to Reproduce; Originally spotted while [building Kalzium with Open Babel support](https://phabricator.kde.org/D29482#674939).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2264
https://github.com/openbabel/openbabel/issues/2264:768,Modifiability,variab,variables,768,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian sid. ## Expected Behavior; Open Babel's CMake files help locating Open Babel's installation. ## Actual Behavior; Open Babel's CMake files seem to be pointing to incorrect locations in Debian system. At least `OpenBabel3Config.cmake`:. ```; # The OpenBabel3 config file. To get the targets include the exports file.; get_filename_component(OpenBabel3_INSTALL_PREFIX ""${OpenBabel3_DIR}/../../..""; ABSOLUTE); ```; I know very little about CMake, but I cannot find where the value of `${OpenBabel3_DIR}` is set. On Debian systems, `OpenBabel3_INSTALL_PREFIX` most likely is `/usr`, but some other variables have to be adjusted too. ```; set(OpenBabel3_VERSION_MAJOR ""3""); set(OpenBabel3_VERSION_MINOR ""1""); set(OpenBabel3_VERSION_PATCH ""0""); set(OpenBabel3_VERSION ""3.1.0""); ```; These variables should not be hardcoded - I am using Open Babel 3.1.1, but their values indicate that this is 3.1.0. The same issue is in `OpenBabel3ConfigVersion.cmake` too. ```; set(OpenBabel3_INCLUDE_DIRS ""${OpenBabel3_INSTALL_PREFIX}/include/openbabel3""); ```; `OpenBabel3_INCLUDE_DIRS` is correct. ```; set(OpenBabel3_EXPORTS_FILE ""${OpenBabel3_INSTALL_PREFIX}/lib/cmake/openbabel3/OpenBabel3_EXPORTS.cmake""); ```; On Debian systems this is `/usr/lib/<arch-triplet>/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`, for example, `/usr/lib/x86_64-linux-gnu/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`. Maybe CMake files could be generated during the build according to the values of `CMAKE_INSTALL_PREFIX` and `CMAKE_INSTALL_LIBDIR` CMake variables?. ## Steps to Reproduce; Originally spotted while [building Kalzium with Open Babel support](https://phabricator.kde.org/D29482#674939).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2264
https://github.com/openbabel/openbabel/issues/2264:957,Modifiability,variab,variables,957,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian sid. ## Expected Behavior; Open Babel's CMake files help locating Open Babel's installation. ## Actual Behavior; Open Babel's CMake files seem to be pointing to incorrect locations in Debian system. At least `OpenBabel3Config.cmake`:. ```; # The OpenBabel3 config file. To get the targets include the exports file.; get_filename_component(OpenBabel3_INSTALL_PREFIX ""${OpenBabel3_DIR}/../../..""; ABSOLUTE); ```; I know very little about CMake, but I cannot find where the value of `${OpenBabel3_DIR}` is set. On Debian systems, `OpenBabel3_INSTALL_PREFIX` most likely is `/usr`, but some other variables have to be adjusted too. ```; set(OpenBabel3_VERSION_MAJOR ""3""); set(OpenBabel3_VERSION_MINOR ""1""); set(OpenBabel3_VERSION_PATCH ""0""); set(OpenBabel3_VERSION ""3.1.0""); ```; These variables should not be hardcoded - I am using Open Babel 3.1.1, but their values indicate that this is 3.1.0. The same issue is in `OpenBabel3ConfigVersion.cmake` too. ```; set(OpenBabel3_INCLUDE_DIRS ""${OpenBabel3_INSTALL_PREFIX}/include/openbabel3""); ```; `OpenBabel3_INCLUDE_DIRS` is correct. ```; set(OpenBabel3_EXPORTS_FILE ""${OpenBabel3_INSTALL_PREFIX}/lib/cmake/openbabel3/OpenBabel3_EXPORTS.cmake""); ```; On Debian systems this is `/usr/lib/<arch-triplet>/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`, for example, `/usr/lib/x86_64-linux-gnu/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`. Maybe CMake files could be generated during the build according to the values of `CMAKE_INSTALL_PREFIX` and `CMAKE_INSTALL_LIBDIR` CMake variables?. ## Steps to Reproduce; Originally spotted while [building Kalzium with Open Babel support](https://phabricator.kde.org/D29482#674939).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2264
https://github.com/openbabel/openbabel/issues/2264:1687,Modifiability,variab,variables,1687,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian sid. ## Expected Behavior; Open Babel's CMake files help locating Open Babel's installation. ## Actual Behavior; Open Babel's CMake files seem to be pointing to incorrect locations in Debian system. At least `OpenBabel3Config.cmake`:. ```; # The OpenBabel3 config file. To get the targets include the exports file.; get_filename_component(OpenBabel3_INSTALL_PREFIX ""${OpenBabel3_DIR}/../../..""; ABSOLUTE); ```; I know very little about CMake, but I cannot find where the value of `${OpenBabel3_DIR}` is set. On Debian systems, `OpenBabel3_INSTALL_PREFIX` most likely is `/usr`, but some other variables have to be adjusted too. ```; set(OpenBabel3_VERSION_MAJOR ""3""); set(OpenBabel3_VERSION_MINOR ""1""); set(OpenBabel3_VERSION_PATCH ""0""); set(OpenBabel3_VERSION ""3.1.0""); ```; These variables should not be hardcoded - I am using Open Babel 3.1.1, but their values indicate that this is 3.1.0. The same issue is in `OpenBabel3ConfigVersion.cmake` too. ```; set(OpenBabel3_INCLUDE_DIRS ""${OpenBabel3_INSTALL_PREFIX}/include/openbabel3""); ```; `OpenBabel3_INCLUDE_DIRS` is correct. ```; set(OpenBabel3_EXPORTS_FILE ""${OpenBabel3_INSTALL_PREFIX}/lib/cmake/openbabel3/OpenBabel3_EXPORTS.cmake""); ```; On Debian systems this is `/usr/lib/<arch-triplet>/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`, for example, `/usr/lib/x86_64-linux-gnu/cmake/openbabel3/OpenBabel3_EXPORTS.cmake`. Maybe CMake files could be generated during the build according to the values of `CMAKE_INSTALL_PREFIX` and `CMAKE_INSTALL_LIBDIR` CMake variables?. ## Steps to Reproduce; Originally spotted while [building Kalzium with Open Babel support](https://phabricator.kde.org/D29482#674939).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2264
https://github.com/openbabel/openbabel/issues/2265:561,Deployability,configurat,configuration,561,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1058,Energy Efficiency,green,greenCarbon,1058,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1316,Energy Efficiency,green,greenCarbon,1316,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1555,Energy Efficiency,energy,energy,1555,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1686,Energy Efficiency,energy,energy,1686,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:289,Integrability,wrap,wrapper,289,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:561,Modifiability,config,configuration,561,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:219,Performance,optimiz,optimize,219,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:300,Performance,optimiz,optimize,300,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:352,Performance,optimiz,optimization,352,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:502,Performance,optimiz,optimization,502,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:590,Performance,optimiz,optimization,590,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:797,Performance,Optimiz,Optimization,797,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1109,Performance,Optimiz,Optimization,1109,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1870,Performance,optimiz,optimization,1870,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2265:1769,Security,access,access,1769,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: MacOS; Operating system and version: 3.1.1.1 . ## Expected Behavior; I am trying to use optimize the 3D geometry of a rigid molecule. Below, I used the pybel wrapper to optimize the geometry twice, with 500 steps.; After optimization, the molecule is supposed to be nearly flat. ; However, **if you repeat running the following codes**. Sometimes, you will see the first optimization will yield a geometry with a somewhat twisted configuration. After further optimization, it yields a reasonable geometry. ```python; import py3Dmol; from openbabel import pybel. smi = ""s1ccc2cc3sc4cc5ccsc5cc4c3cc12"". m = pybel.readstring('smi', smi); m.addh(); m.localopt(); print(""Optimization after 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True). view = py3Dmol.view(height=200, width=400, viewergrid=(1,2)). view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,0)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,0)). m.localopt(); print(""Optimization after another 500 steps:"", m.OBMol.GetEnergies()). m.write('xyz', '1.xyz', overwrite=True); view.addModel(open('1.xyz', 'r').read(), 'xyz', viewer=(0,1)); view.setStyle({'stick':{'colorscheme':'greenCarbon'}},viewer=(0,1)); view.zoomTo(); ```. <img width=""523"" alt=""image"" src=""https://user-images.githubusercontent.com/29445366/89095525-b5a6b780-d383-11ea-85a8-b74f6588405b.png"">. I have two questions.; 1, I tried to print out the energy after `localopt`. In the previous version openbabel-3.0.0, it returned some value. But in the lastest version, 3.1.1.1, the energy field is empty. Do you know what is going on here. 2, Is it possible to get access to the information of atomic force? Basically, I want to know a strategy to check whether the optimization yields a reasonable geometry without visualizing the 3D structure.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2265
https://github.com/openbabel/openbabel/issues/2266:2120,Availability,avail,available,2120,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2266:1688,Energy Efficiency,CHARGE,CHARGE,1688,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2266:1731,Energy Efficiency,CHARGE,CHARGE,1731,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2266:1773,Energy Efficiency,CHARGE,CHARGE,1773,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2266:1393,Testability,test,test,1393,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2266:2089,Usability,clear,clear,2089,"://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS 10.15.5. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel ... -h` should ""hydrogenate"" a molecule: C2N --> C2H7N. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -h` does not change the molecule, nor is the `-h` flag even listed in the help text.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```; [14:23:03] tmck:stoichkit git:(feat/reaction-domain-model*) $ obabel -icdxml priv/cd.xml -omolreport -h; TITLE: 47; FORMULA: C2N; MASS: 38.0281; TOTAL SPIN: 2; ATOM: 1 N TYPE: N3 HYB: 3 CHARGE: -0.2150; ATOM: 2 C TYPE: C3 HYB: 3 CHARGE: 0.1075; ATOM: 3 C TYPE: C3 HYB: 3 CHARGE: 0.1075; BOND: 0 START: 1 END: 2 ORDER: 1; BOND: 1 START: 1 END: 3 ORDER: 1; 1 molecule converted; ```; (where `priv/cd.xml` contents is shown here: https://gist.github.com/ttymck/931b4594d827ea60c415d1191f6f3717). I would expect `FORMULA: C2H7N`. As well, `-h` is not included in the help text, so it is not clear if this feature is still available:. ```; [14:20:41] tmck $ obabel --help | grep -e '-h' ; [14:21:37] tmck $; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266
https://github.com/openbabel/openbabel/issues/2267:69,Availability,error,error,69,"When converting SMILES-strings to other formats, I often receive the error ""*** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt"". The file ""ring-fragments-index.txt"" seems to be missing in the data-folder. According to a search on GitHub, this file is called by ""src/builder.cpp"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2267
https://github.com/openbabel/openbabel/issues/2267:91,Availability,Error,Error,91,"When converting SMILES-strings to other formats, I often receive the error ""*** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt"". The file ""ring-fragments-index.txt"" seems to be missing in the data-folder. According to a search on GitHub, this file is called by ""src/builder.cpp"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2267
https://github.com/openbabel/openbabel/issues/2267:100,Performance,Load,LoadFragments,100,"When converting SMILES-strings to other formats, I often receive the error ""*** Open Babel Error in LoadFragments; Cannot open ring-fragments-index.txt"". The file ""ring-fragments-index.txt"" seems to be missing in the data-folder. According to a search on GitHub, this file is called by ""src/builder.cpp"".",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2267
https://github.com/openbabel/openbabel/issues/2268:1560,Deployability,update,updated,1560,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2268:1818,Deployability,upgrade,upgrade,1818,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2268:1350,Performance,load,load,1350,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2268:1474,Performance,load,load,1474,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2268:988,Testability,test,tested,988,"; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - thi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2268:2038,Testability,test,test,2038,"nbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 and Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The NET binding worked fine under the net core 2.1, net core 3.1 and net framework 4.x at version 2.4.1 and 3.0.0. I have tested both on Windows and Linux system. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The NET binding fails to work at net framework 4.x and all versions of net core. System.BadImageFormatException:“Could not load file or assembly 'OBDotNet, Version=0.5.0.0, Culture=neutral, PublicKeyToken=3069c9c4f488e4bd'. An attempt was made to load a program with an incorrect format”. It looks like the OBDotNet.dll has not been updated since version 2.3.2, the targeted framework is still net framework 3.5. For some reason, it still works under net framework 4.x and net core. But it no longer works in version 3.1.1. Those who use net framework or net core environment, please do not upgrade to 3.1.1, stay at 3.0.0 or lower. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2268
https://github.com/openbabel/openbabel/issues/2269:1302,Availability,error,error,1302,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269
https://github.com/openbabel/openbabel/issues/2269:1308,Integrability,message,message,1308,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269
https://github.com/openbabel/openbabel/issues/2269:1465,Integrability,message,message,1465,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269
https://github.com/openbabel/openbabel/issues/2269:965,Safety,safe,safe,965,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s,",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269
https://github.com/openbabel/openbabel/issues/2269:1797,Testability,test,test,1797,"rch open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS 10.15.6 && Ubuntu Linux 16.04.6 LTS. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Separately instantized `OBConversion`, `OBMol`, etc. objects should be thread-safe. (C++11). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When some openbabel objects are instantized inside separate `std::thread`'s with no shared memory, the program crashes with error message ""memory corruption or double-free of memory"".; I have not yet tried profiling the program (I'll do it soon), but I believe this is due to the global message handler `obErrorLog`, and/or some other shared objects. If it is, just adding some mutex and locking mechanism should fix this issue (hopefully). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Try to read some quite big (~10MiB) mol2 files (or any other format) in two or more `std::thread`'s, and the program will crash soon.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269
https://github.com/openbabel/openbabel/issues/2270:689,Availability,error,error,689,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:320,Deployability,install,installed,320,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:388,Deployability,install,install,388,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:437,Deployability,install,install,437,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:466,Deployability,install,install,466,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:495,Deployability,install,install,495,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:562,Deployability,install,install,562,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 1909. ## Expected Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2270:2141,Performance,load,load,2141,"ed Behavior; openbabel is imported. ## Actual Behavior; when importing openbabel with an account different than then one that installed it, throws a ModuleNotFoundError . ## Steps to Reproduce; install Python 3.7.4 x64 using an admin account; install OpenBabel 3.1.1 x64; install BioPython using pip; install openbabel bindings 3.1.1 using pip; open cmd with the same install account & python >> import openbabel - it works; open cmd with a different user account & python >> import openbabel - error. Python 3.7.4 (tags/v3.7.4:e09359112e, Jul 8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import openbabel; Traceback (most recent call last):; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 27, in swig_import_helper; return importlib.import_module(mname); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); File ""<frozen importlib._bootstrap>"", line 1006, in _gcd_import; File ""<frozen importlib._bootstrap>"", line 983, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 965, in _find_and_load_unlocked; ModuleNotFoundError: No module named 'openbabel._openbabel'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Python_3.7.4\lib\site-packages\openbabel\__init__.py"", line 3, in <module>; from . import openbabel; File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 30, in <module>; _openbabel = swig_import_helper(); File ""C:\Python_3.7.4\lib\site-packages\openbabel\openbabel.py"", line 29, in swig_import_helper; return importlib.import_module('_openbabel'); File ""C:\Python_3.7.4\lib\importlib\__init__.py"", line 127, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ImportError: DLL load failed: The specified module could not be found.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2270
https://github.com/openbabel/openbabel/issues/2271:219,Availability,error,errors,219,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:304,Availability,ERROR,ERROR,304,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:319,Availability,error,errored,319,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:411,Availability,Error,Error,411,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:470,Availability,Error,Error,470,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:816,Availability,error,error,816,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:1159,Availability,error,error,1159,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:134,Deployability,install,install,134,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:160,Deployability,install,install,160,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:252,Deployability,install,install,252,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:504,Deployability,install,installed,504,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:715,Deployability,install,install,715,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:860,Deployability,install,install,860,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:880,Deployability,install,install,880,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:916,Deployability,install,install,916,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:936,Deployability,install,install-option,936,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:965,Deployability,install,install-option,965,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:1010,Deployability,install,install-option,1010,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:1170,Deployability,install,installer,1170,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:1319,Deployability,install,installed,1319,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2271:822,Integrability,message,message,822,"## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: Linux Ubuntu 20.04. ## Expected Behavior. `pip install openbabel` should install / compile the python bindings to openbabel without errors. ## Actual Behavior. `pip install openbabel` fails with something like:. ```; ERROR: Command errored out with exit status 1:; command: ....; ...; ...; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; ...; ...; Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ...; ...; ```. ## ""Workaround"" for Ubuntu 20.04. We take the hint from the very informative error message and instead of the usual `pip install openbabel`, install the package with:. ```; pip install openbabel --install-option ""build_ext"" --install-option ""-I/usr/include/openbabel3"" --install-option ""-L/usr/lib/openbabel/3.0.0""; ```. (Notice the slight differences in the include and link directories which is what is triggering the error. The installer as is, is trying to locate these files in directories that are not there in 20.04). This of course assumes that `libopenbabel6` is already installed on the system. Hope this helps. **EDIT:** 'pybel' seems to appear under 'openbabel' now",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271
https://github.com/openbabel/openbabel/issues/2272:298,Availability,Down,Downloads,298,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- May 8 2020 -- 19:21:46; Operating system and version: Mac OS 10.12.6. ## Expected Behavior; I am running the following call to convert a pdb file to a SMILES file. ; obabel -ipdb 'Downloads/mol1.pdb' -osmi 'Downloads/mol1.txt'. ## Actual Behavior; Instead of recognizing the pyridine ring in the molecule, the resulting output SMILES is creating a hypervalent carbon where openbabel is breaking the aromaticity of the molecule and assigning two double bonds to the carbon. As a result of this incorrect valency, this molecule is not able to be used further in rdkit analyses. . My output SMILES for this PDB is: Brc1ccc(c2c1[nH]c(c(C(=O)C)c2=O)Nc1ccc(cc1)c1c(ccc(c1)[C@@H]1C(=C(N=[C](=N1)OC)C)C)O)Cl. However, the expected SMILES for this PDB is: Brc1ccc(c2c1[nH]c(c(C(=O)C)c2=O)Nc1ccc(cc1)c1c(ccc(c1)c1c(c(nc(n1)OC)C)C)O)Cl. . (This result was obtained and visualized from the following website: http://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html). ## Steps to Reproduce; I have attached the input molecule pdb (as mol1.txt) for your reference. [mol1.txt](https://github.com/openbabel/openbabel/files/5099623/mol1.txt); obabel -ipdb 'mol1.txt' -osmi 'mol1smiles.txt'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2272
https://github.com/openbabel/openbabel/issues/2272:325,Availability,Down,Downloads,325,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- May 8 2020 -- 19:21:46; Operating system and version: Mac OS 10.12.6. ## Expected Behavior; I am running the following call to convert a pdb file to a SMILES file. ; obabel -ipdb 'Downloads/mol1.pdb' -osmi 'Downloads/mol1.txt'. ## Actual Behavior; Instead of recognizing the pyridine ring in the molecule, the resulting output SMILES is creating a hypervalent carbon where openbabel is breaking the aromaticity of the molecule and assigning two double bonds to the carbon. As a result of this incorrect valency, this molecule is not able to be used further in rdkit analyses. . My output SMILES for this PDB is: Brc1ccc(c2c1[nH]c(c(C(=O)C)c2=O)Nc1ccc(cc1)c1c(ccc(c1)[C@@H]1C(=C(N=[C](=N1)OC)C)C)O)Cl. However, the expected SMILES for this PDB is: Brc1ccc(c2c1[nH]c(c(C(=O)C)c2=O)Nc1ccc(cc1)c1c(ccc(c1)c1c(c(nc(n1)OC)C)C)O)Cl. . (This result was obtained and visualized from the following website: http://www.cheminfo.org/Chemistry/Cheminformatics/FormatConverter/index.html). ## Steps to Reproduce; I have attached the input molecule pdb (as mol1.txt) for your reference. [mol1.txt](https://github.com/openbabel/openbabel/files/5099623/mol1.txt); obabel -ipdb 'mol1.txt' -osmi 'mol1smiles.txt'",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2272
https://github.com/openbabel/openbabel/pull/2273:209,Deployability,update,update,209,"Currently, this pull request make only some of the openbabel objects thread-safe: `OpenBabel::OBConversion` and `OpenBabel::OBGlobalDataBase`. I will keep working on this topic for the rest of the objects and update this PR. Important note: this commit will change the API of openbabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2273
https://github.com/openbabel/openbabel/pull/2273:76,Safety,safe,safe,76,"Currently, this pull request make only some of the openbabel objects thread-safe: `OpenBabel::OBConversion` and `OpenBabel::OBGlobalDataBase`. I will keep working on this topic for the rest of the objects and update this PR. Important note: this commit will change the API of openbabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2273
https://github.com/openbabel/openbabel/issues/2274:340,Energy Efficiency,energy,energy,340,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:382,Energy Efficiency,energy,energy,382,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:503,Energy Efficiency,energy,energy,503,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:687,Energy Efficiency,Energy,Energy,687,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:1139,Energy Efficiency,energy,energy,1139,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:166,Performance,perform,perform,166,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:1117,Testability,test,tested,1117,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2274:1364,Testability,log,log,1364,"- [X] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: macOS El Capitan 10.11.6. I have been trying to perform a conformer search using confab in openbabel. However, I am getting some duplicates (390 conformers in total). I would like to know if I can somehow select the lower energy conformers (maybe the 30 lowest in energy) and save them in a separate sdf file. Also, is it possible to eliminate the duplicates or sort the conformers by energy?. my commands:. To generate the conformers:; obabel input.sdf -O confs.sdf --confab --conf 100000 --verbose. ..Input format = sdf; ..Output format = sdf; ..RMSD cutoff = 0.5; ..Energy cutoff = 50; ..Conformer cutoff = 100000; ..Write input conformation? False; ..Verbose? True. **Molecule 1; ..title = try; ..number of rotatable bonds = 6; ....rotor 1 from 5 to 6 has 3 values; ....rotor 2 from 6 to 7 has 3 values; ....rotor 3 from 2 to 5 has 3 values; ....rotor 4 from 7 to 8 has 3 values; ....rotor 5 from 1 to 2 has 3 values; ....rotor 6 from 8 to 9 has 3 values; ..tot conformations = 729; ..tot confs tested = 729; ..below energy threshold = 390; ....tree size = 483 confs = 390; ....new tree size = 821 confs = 390; ..generated 390 conformers. To minimize the obtained conformers:; obabel confs.sdf -O confs_min.sdf --minimize --steps 1500 --sd --log. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2274
https://github.com/openbabel/openbabel/issues/2275:1151,Availability,avail,available,1151,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win 10 64bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Selecting ""xyz"" as input or output format in the graphical user interface. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The option is not available. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Clicking on input/output formats within obgui doesn't show xyz format.; ![obgui](https://user-images.githubusercontent.com/69631139/91174038-025d8400-e6df-11ea-86f0-adb7daa7cd31.png); ![obgui2](https://user-images.githubusercontent.com/69631139/91174042-02f61a80-e6df-11ea-8352-47f7d0b350fc.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2275
https://github.com/openbabel/openbabel/issues/2275:924,Integrability,interface,interface,924,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win 10 64bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Selecting ""xyz"" as input or output format in the graphical user interface. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The option is not available. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Clicking on input/output formats within obgui doesn't show xyz format.; ![obgui](https://user-images.githubusercontent.com/69631139/91174038-025d8400-e6df-11ea-86f0-adb7daa7cd31.png); ![obgui2](https://user-images.githubusercontent.com/69631139/91174042-02f61a80-e6df-11ea-8352-47f7d0b350fc.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2275
https://github.com/openbabel/openbabel/issues/2275:1340,Testability,test,test,1340,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ X ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win 10 64bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Selecting ""xyz"" as input or output format in the graphical user interface. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The option is not available. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Clicking on input/output formats within obgui doesn't show xyz format.; ![obgui](https://user-images.githubusercontent.com/69631139/91174038-025d8400-e6df-11ea-86f0-adb7daa7cd31.png); ![obgui2](https://user-images.githubusercontent.com/69631139/91174042-02f61a80-e6df-11ea-8352-47f7d0b350fc.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2275
https://github.com/openbabel/openbabel/issues/2276:1287,Deployability,configurat,configuration,1287,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In this following example molecule, the bromine atoms should be on different side of the aromatic ring:; **[Br]/C([H])=C(C)/C1=CC=C(/C(C)=C([H])/[Br])C=C1**; As shown in ChemDraw or ChemSpider:; ![image](https://user-images.githubusercontent.com/22421218/91629772-66a76e80-e991-11ea-984a-1e4d5e442d02.png). ## Actual Behavior; Although Openbabel will give a correct (consistent) SMILES string output, it doesn't give the correct ~~configuration~~ conformation either 2D or 3D:; ![image](https://user-images.githubusercontent.com/22421218/91629744-3eb80b00-e991-11ea-8d28-56881a666645.png); Below is the ChemDraw version of the output smiles string:; **Br/C=C(\C)/c1ccc(/C(=C/Br)/C)cc1**; ![image](https://user-images.githubusercontent.com/22421218/91629734-1defb580-e991-11ea-8799-fcdb2892f198.png). ## Steps to Reproduce; Can be reproduced using GUI or command line.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2276
https://github.com/openbabel/openbabel/issues/2276:1287,Modifiability,config,configuration,1287,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In this following example molecule, the bromine atoms should be on different side of the aromatic ring:; **[Br]/C([H])=C(C)/C1=CC=C(/C(C)=C([H])/[Br])C=C1**; As shown in ChemDraw or ChemSpider:; ![image](https://user-images.githubusercontent.com/22421218/91629772-66a76e80-e991-11ea-984a-1e4d5e442d02.png). ## Actual Behavior; Although Openbabel will give a correct (consistent) SMILES string output, it doesn't give the correct ~~configuration~~ conformation either 2D or 3D:; ![image](https://user-images.githubusercontent.com/22421218/91629744-3eb80b00-e991-11ea-8d28-56881a666645.png); Below is the ChemDraw version of the output smiles string:; **Br/C=C(\C)/c1ccc(/C(=C/Br)/C)cc1**; ![image](https://user-images.githubusercontent.com/22421218/91629734-1defb580-e991-11ea-8799-fcdb2892f198.png). ## Steps to Reproduce; Can be reproduced using GUI or command line.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2276
https://github.com/openbabel/openbabel/issues/2277:541,Testability,log,log,541,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277
https://github.com/openbabel/openbabel/issues/2277:761,Testability,test,test,761,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277
https://github.com/openbabel/openbabel/issues/2277:1031,Testability,log,log,1031,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277
https://github.com/openbabel/openbabel/issues/2277:1091,Testability,log,log,1091,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 to 3.1.1; Operating system and version: Ubuntu Server 20.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Proper conversion of G16 file to xyz. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; > obabel -ig16 1.log -oxyz -O1.xyz; 0 molecules converted. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; An example g16 output file is attached. obabel does (consistently) not convert frequency calculation files such as this one. Other g16 files do convert properly.; [1.log](https://github.com/openbabel/openbabel/files/5146293/1.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2277
https://github.com/openbabel/openbabel/issues/2278:1527,Testability,test,test,1527,"eel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Aug 30 2020 -- 02:22:45; Operating system and version: Ubuntu 20.20. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. gen3D for two identical structures in one input file (0d or 2d) should yield some 3d structure, where both molecules are placed next to each other. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. When you input two identical structures in one input file (0d or 2d), gen3D superimposes both molecules. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. Input for a benzene dimer:. ```bash; $ obabel -:""c1ccccc1.c2ccccc2"" --gen3D -o mol; ```. Openbabel output with the molecules having the identical coordinates:. ```. OpenBabel09082017143D. 24 24 0 0 0 0 0 0 0 0999 V2000; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3440 -0.2250 0.0360 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5020 -1.2510 -0.0040 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.8560 -1.0420 0.0030 C 0 0 0 0 0 0 0 0 0 0 0 0; -1.3730 0.2230 -0.0410 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.5090 1.2150 0.0750 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8920 1.0800 -0.0700 C 0 0 0 0 0 0 0 0 0 0 0 0; 2.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2278
https://github.com/openbabel/openbabel/issues/2279:123,Availability,error,errors,123,"Dear Developers,. I just found that if I install the new open babel version with conda from the conda-forge channel, I got errors in importing pybel. However, if I install the deprecated version from the openbabel conda channel, I can import pybel without problem. Is pybel deprecated? Or it may be caused by other issues of my computer? I am using Mac OS Catalina 10.15.6. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-3.1.1; Operating system and version: Mac OS Catalina 10.15.6. ## Expected Behavior; import pybel should work. ## Actual Behavior; ModuleNotFoundError: No module named 'pybel'. ## Steps to Reproduce; On Mac OS Catlina, create a conda environment with python3.7, then install openbabel from the conda-forge channel: https://anaconda.org/conda-forge/openbabel. Once finished, enter python interpreter:; >>> import pybel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2279
https://github.com/openbabel/openbabel/issues/2279:41,Deployability,install,install,41,"Dear Developers,. I just found that if I install the new open babel version with conda from the conda-forge channel, I got errors in importing pybel. However, if I install the deprecated version from the openbabel conda channel, I can import pybel without problem. Is pybel deprecated? Or it may be caused by other issues of my computer? I am using Mac OS Catalina 10.15.6. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-3.1.1; Operating system and version: Mac OS Catalina 10.15.6. ## Expected Behavior; import pybel should work. ## Actual Behavior; ModuleNotFoundError: No module named 'pybel'. ## Steps to Reproduce; On Mac OS Catlina, create a conda environment with python3.7, then install openbabel from the conda-forge channel: https://anaconda.org/conda-forge/openbabel. Once finished, enter python interpreter:; >>> import pybel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2279
https://github.com/openbabel/openbabel/issues/2279:164,Deployability,install,install,164,"Dear Developers,. I just found that if I install the new open babel version with conda from the conda-forge channel, I got errors in importing pybel. However, if I install the deprecated version from the openbabel conda channel, I can import pybel without problem. Is pybel deprecated? Or it may be caused by other issues of my computer? I am using Mac OS Catalina 10.15.6. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-3.1.1; Operating system and version: Mac OS Catalina 10.15.6. ## Expected Behavior; import pybel should work. ## Actual Behavior; ModuleNotFoundError: No module named 'pybel'. ## Steps to Reproduce; On Mac OS Catlina, create a conda environment with python3.7, then install openbabel from the conda-forge channel: https://anaconda.org/conda-forge/openbabel. Once finished, enter python interpreter:; >>> import pybel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2279
https://github.com/openbabel/openbabel/issues/2279:1376,Deployability,install,install,1376,"Dear Developers,. I just found that if I install the new open babel version with conda from the conda-forge channel, I got errors in importing pybel. However, if I install the deprecated version from the openbabel conda channel, I can import pybel without problem. Is pybel deprecated? Or it may be caused by other issues of my computer? I am using Mac OS Catalina 10.15.6. Thanks. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-3.1.1; Operating system and version: Mac OS Catalina 10.15.6. ## Expected Behavior; import pybel should work. ## Actual Behavior; ModuleNotFoundError: No module named 'pybel'. ## Steps to Reproduce; On Mac OS Catlina, create a conda environment with python3.7, then install openbabel from the conda-forge channel: https://anaconda.org/conda-forge/openbabel. Once finished, enter python interpreter:; >>> import pybel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2279
https://github.com/openbabel/openbabel/issues/2280:869,Testability,test,test,869,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CenOS 7. ## Description; <!-- Describe the intended output or what you expected to see. -->; I have a SMILES file ""test.smi"":. ```; CC1(C)[C@H](CC[C@@]2(C)[C@H]1CC[C@]3(C)[C@@H]2C(=O)C=C4[C@@H]5C[C@](C)(CC[C@]5(C)CC[C@@]34C)C(=O)O)O[C@H]6O[C@@H]([C@@H](O)[C@H](O)[C@H]6O[C@@H]7O[C@@H]([C@@H](O)[C@H](O)[C@H]7O)C(=O)O)C(=O)O; ```. Openbabel could never successfully generate 3d coordinates for this smiles file:. obabel test.smi -O test.sdf --gen3d. The warning information is as below:; ```; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 7 9 21; Warning: Stereochemistry is wrong, using the distance geometry method instea; ```; The program will then never finish after showing this warning information.; It seems that there is a problem with the distance geometry method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280
https://github.com/openbabel/openbabel/issues/2280:1173,Testability,test,test,1173,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CenOS 7. ## Description; <!-- Describe the intended output or what you expected to see. -->; I have a SMILES file ""test.smi"":. ```; CC1(C)[C@H](CC[C@@]2(C)[C@H]1CC[C@]3(C)[C@@H]2C(=O)C=C4[C@@H]5C[C@](C)(CC[C@]5(C)CC[C@@]34C)C(=O)O)O[C@H]6O[C@@H]([C@@H](O)[C@H](O)[C@H]6O[C@@H]7O[C@@H]([C@@H](O)[C@H](O)[C@H]7O)C(=O)O)C(=O)O; ```. Openbabel could never successfully generate 3d coordinates for this smiles file:. obabel test.smi -O test.sdf --gen3d. The warning information is as below:; ```; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 7 9 21; Warning: Stereochemistry is wrong, using the distance geometry method instea; ```; The program will then never finish after showing this warning information.; It seems that there is a problem with the distance geometry method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280
https://github.com/openbabel/openbabel/issues/2280:1185,Testability,test,test,1185,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CenOS 7. ## Description; <!-- Describe the intended output or what you expected to see. -->; I have a SMILES file ""test.smi"":. ```; CC1(C)[C@H](CC[C@@]2(C)[C@H]1CC[C@]3(C)[C@@H]2C(=O)C=C4[C@@H]5C[C@](C)(CC[C@]5(C)CC[C@@]34C)C(=O)O)O[C@H]6O[C@@H]([C@@H](O)[C@H](O)[C@H]6O[C@@H]7O[C@@H]([C@@H](O)[C@H](O)[C@H]7O)C(=O)O)C(=O)O; ```. Openbabel could never successfully generate 3d coordinates for this smiles file:. obabel test.smi -O test.sdf --gen3d. The warning information is as below:; ```; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 3 stereocenter(s) in this molecule (); with Atom Ids as follows: 7 9 21; Warning: Stereochemistry is wrong, using the distance geometry method instea; ```; The program will then never finish after showing this warning information.; It seems that there is a problem with the distance geometry method.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2280
https://github.com/openbabel/openbabel/issues/2281:278,Energy Efficiency,charge,charges,278,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2281:455,Energy Efficiency,charge,charges,455,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2281:240,Safety,detect,detection,240,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2281:448,Safety,detect,detect,448,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2281:512,Safety,detect,detection,512,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2281:638,Safety,detect,detection,638,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Python version: 3.8.2; Operating system and version: Mac OS 10.15.6. ## Expected Behavior; Consistent detection of ligand's properties ; 1. charges; 2. hydrogen bonds acceptors and donors; 3. aromatic rings. regardless of ligand's format (mol2/sdf). ## Actual Behavior; It seems that in mol2 I cannot properly detect charges, however mol2 seems to outperform sdf in case of detection of hydrogen bonds acceptors/donors, as in my opinion atom 11 is not a hydrogen bond acceptor, as well as in case of detection of aromatic rings. ## Steps to Reproduce. **Minimal Working Example**. ```; from openbabel import openbabel; from openbabel import pybel. ligand_mol2 = list(pybel.readfile('mol2', 'ligand_mol2.txt'))[0] # only one ligand in file; ligand_mol2.OBMol.AddHydrogens(). ligand_sdf = list(pybel.readfile('sdf', 'ligand_sdf.txt'))[0] # only one ligand in file; ligand_sdf.OBMol.AddHydrogens(). def find_CA(ligand):. cations = []; anions = []. for atom in ligand:; if atom.formalcharge >= 1:; cations.append(atom.idx); if atom.formalcharge <= -1:; anions.append(atom.idx). print('Cations: ', cations); print('Anions: ', anions). def find_HBA_HBD(ligand):. acceptors = []; donors = []. for atom in filter(lambda at: at.OBAtom.IsHbondAcceptor(), ligand.atoms): # Find all acceptors; if atom.atomicnum not in [9, 17, 35, 53]: # Exclude halogen atoms; acceptors.append(atom.idx). for atom in filter(lambda at: at.OBAtom.IsHbondDonor(), ligand.atoms): # Find all donors with their hydrogens; donors.append(atom.idx). print('Hydrogen Bonds Acceptors: ', acceptors); print('Hydrogen Bonds Donors: ', donors). def find_aromatic_rings(ext_type):; # cannot pass ligand object to function because it will not work in this case. ligand = list(pybel.readfile(ext_type, 'ligand_{}.txt'.format(ext_type)))[0] # only one ligand in file. rings_candidates = ligand.OBMol.GetSSSR()",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2281
https://github.com/openbabel/openbabel/issues/2282:348,Availability,down,down,348,- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.x; Operating system and version: MacOS. ## Expected Behavior; Code works. ## Actual Behavior; When compiling the attached file as an OB tool and running; ```; pgtest water.sdf; ```; The code will crash in routines down below the pointgroup code since the atoms do not have a valid parent pointer. [pointgroup.zip](https://github.com/openbabel/openbabel/files/5286601/pointgroup.zip). ## Steps to Reproduce; See above.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2282
https://github.com/openbabel/openbabel/issues/2282:339,Integrability,rout,routines,339,- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.x; Operating system and version: MacOS. ## Expected Behavior; Code works. ## Actual Behavior; When compiling the attached file as an OB tool and running; ```; pgtest water.sdf; ```; The code will crash in routines down below the pointgroup code since the atoms do not have a valid parent pointer. [pointgroup.zip](https://github.com/openbabel/openbabel/files/5286601/pointgroup.zip). ## Steps to Reproduce; See above.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2282
https://github.com/openbabel/openbabel/issues/2284:3514,Availability,down,downloaded,3514,"ic factor on the crystallisation of desmotropes of irbesartan."" RSC advances 9.9 (2019): 5244-5250.)_. Theoretically, when using the option `-p7.4 `for neutralization, the chemical transformation should be the following:; `c1[nH]nnn1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 1); `c1nnn[nH]1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 4); `c1n[nH]nn1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 2); `c1nn[nH]n1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 3). ## Actual Behavior; Only one SMILES string is correctly matched and converted, the others lead to the wrongly-neutralized structure. These are the SMILES string I get back after running conversion first from SMI to SDF, then SDF to SMI again:; `STARTING | SMI to SDF -p7.4 | SDF to SMI`; `c1[nH]nnn1 | [H]C1=NN=N[N-]1 | c1nnn[n-:1]1` - RIGHT: 1H-Tetrazole (H in position 1); `c1n[nH]nn1 | [H]N1N=NC([H])=[N-]1 | N1N=NC=[N-]1` - WRONG: 2H-Tetrazole (H in position 2), lost aromaticity, wrong valence; `c1nn[nH]n1 | [H]N1N=[N-]C([H])=N1 | N1N=C[N-]=N1` - WRONG: 2H-Tetrazole (H in position 3), lost aromaticity, wrong valence; `c1nnn[nH]1 | [H]N1N=N[N-]=C1[H] | N1C=[N-]N=N1` - WRONG: 1H-Tetrazole (H in position 4), lost aromaticity, wrong valence. If I change the `phmodel.txt ` file with the expected chemical transformations and switch off the original transformations, nothing happens. Even if I enter the corresponding SMARTS pattern, the output of the protonation step is wrong. What I did was to explicitly write all the permutations as SMILES strings for all the isomers of tetrazole. . ## Steps to Reproduce; Attached is the starting SMILES file with the molecules I manually generated to test this behavior as a txt file. The same problem occurs with other versions of OpenBabel (tested: 2.3.1, 2.4.1, and 3.1.1). The problem occurred also on several libraries downloaded as SDF files from different chemical providers. [MANUAL-TETRA.txt](https://github.com/openbabel/openbabel/files/5292364/MANUAL-TETRA.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2284
https://github.com/openbabel/openbabel/issues/2284:3341,Testability,test,test,3341,"ic factor on the crystallisation of desmotropes of irbesartan."" RSC advances 9.9 (2019): 5244-5250.)_. Theoretically, when using the option `-p7.4 `for neutralization, the chemical transformation should be the following:; `c1[nH]nnn1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 1); `c1nnn[nH]1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 4); `c1n[nH]nn1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 2); `c1nn[nH]n1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 3). ## Actual Behavior; Only one SMILES string is correctly matched and converted, the others lead to the wrongly-neutralized structure. These are the SMILES string I get back after running conversion first from SMI to SDF, then SDF to SMI again:; `STARTING | SMI to SDF -p7.4 | SDF to SMI`; `c1[nH]nnn1 | [H]C1=NN=N[N-]1 | c1nnn[n-:1]1` - RIGHT: 1H-Tetrazole (H in position 1); `c1n[nH]nn1 | [H]N1N=NC([H])=[N-]1 | N1N=NC=[N-]1` - WRONG: 2H-Tetrazole (H in position 2), lost aromaticity, wrong valence; `c1nn[nH]n1 | [H]N1N=[N-]C([H])=N1 | N1N=C[N-]=N1` - WRONG: 2H-Tetrazole (H in position 3), lost aromaticity, wrong valence; `c1nnn[nH]1 | [H]N1N=N[N-]=C1[H] | N1C=[N-]N=N1` - WRONG: 1H-Tetrazole (H in position 4), lost aromaticity, wrong valence. If I change the `phmodel.txt ` file with the expected chemical transformations and switch off the original transformations, nothing happens. Even if I enter the corresponding SMARTS pattern, the output of the protonation step is wrong. What I did was to explicitly write all the permutations as SMILES strings for all the isomers of tetrazole. . ## Steps to Reproduce; Attached is the starting SMILES file with the molecules I manually generated to test this behavior as a txt file. The same problem occurs with other versions of OpenBabel (tested: 2.3.1, 2.4.1, and 3.1.1). The problem occurred also on several libraries downloaded as SDF files from different chemical providers. [MANUAL-TETRA.txt](https://github.com/openbabel/openbabel/files/5292364/MANUAL-TETRA.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2284
https://github.com/openbabel/openbabel/issues/2284:3433,Testability,test,tested,3433,"ic factor on the crystallisation of desmotropes of irbesartan."" RSC advances 9.9 (2019): 5244-5250.)_. Theoretically, when using the option `-p7.4 `for neutralization, the chemical transformation should be the following:; `c1[nH]nnn1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 1); `c1nnn[nH]1` >> `c1nnn[n-:1]1` - 1H-Tetrazole (H in position 4); `c1n[nH]nn1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 2); `c1nn[nH]n1` >> `c1nn[n-:1]n1` - 2H-Tetrazole (H in position 3). ## Actual Behavior; Only one SMILES string is correctly matched and converted, the others lead to the wrongly-neutralized structure. These are the SMILES string I get back after running conversion first from SMI to SDF, then SDF to SMI again:; `STARTING | SMI to SDF -p7.4 | SDF to SMI`; `c1[nH]nnn1 | [H]C1=NN=N[N-]1 | c1nnn[n-:1]1` - RIGHT: 1H-Tetrazole (H in position 1); `c1n[nH]nn1 | [H]N1N=NC([H])=[N-]1 | N1N=NC=[N-]1` - WRONG: 2H-Tetrazole (H in position 2), lost aromaticity, wrong valence; `c1nn[nH]n1 | [H]N1N=[N-]C([H])=N1 | N1N=C[N-]=N1` - WRONG: 2H-Tetrazole (H in position 3), lost aromaticity, wrong valence; `c1nnn[nH]1 | [H]N1N=N[N-]=C1[H] | N1C=[N-]N=N1` - WRONG: 1H-Tetrazole (H in position 4), lost aromaticity, wrong valence. If I change the `phmodel.txt ` file with the expected chemical transformations and switch off the original transformations, nothing happens. Even if I enter the corresponding SMARTS pattern, the output of the protonation step is wrong. What I did was to explicitly write all the permutations as SMILES strings for all the isomers of tetrazole. . ## Steps to Reproduce; Attached is the starting SMILES file with the molecules I manually generated to test this behavior as a txt file. The same problem occurs with other versions of OpenBabel (tested: 2.3.1, 2.4.1, and 3.1.1). The problem occurred also on several libraries downloaded as SDF files from different chemical providers. [MANUAL-TETRA.txt](https://github.com/openbabel/openbabel/files/5292364/MANUAL-TETRA.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2284
https://github.com/openbabel/openbabel/issues/2286:925,Availability,fault,fault,925,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetD",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:1162,Availability,fault,fault,1162,"penbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:1673,Availability,fault,fault,1673,"uest. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does not automatically recalculate bonding.; 401 	 void SetPeriodicMol(bool value = true){ SET_OR_UNSET_FLAG(OB_PERIODIC_MOL); }; -> 402 	 bool HasFlag(int flag) { return (_flags & flag) ? true : false; }; 403 	 void SetFlag(int flag) { _flags |= flag; }; 404 	 void UnsetFlag(int flag) { _flags &= (~(flag)); }; 405 	 void SetFlags(int flags) { _flags = flags; }; (lldb) print this; (OpenBabel::OBMo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:1909,Availability,fault,fault,1909,"what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does not automatically recalculate bonding.; 401 	 void SetPeriodicMol(bool value = true){ SET_OR_UNSET_FLAG(OB_PERIODIC_MOL); }; -> 402 	 bool HasFlag(int flag) { return (_flags & flag) ? true : false; }; 403 	 void SetFlag(int flag) { _flags |= flag; }; 404 	 void UnsetFlag(int flag) { _flags &= (~(flag)); }; 405 	 void SetFlags(int flags) { _flags = flags; }; (lldb) print this; (OpenBabel::OBMol *) $0 = 0x0000000000000000; (lldb) bt; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); * frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:2780,Availability,fault,fault,2780,"8 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does not automatically recalculate bonding.; 401 	 void SetPeriodicMol(bool value = true){ SET_OR_UNSET_FLAG(OB_PERIODIC_MOL); }; -> 402 	 bool HasFlag(int flag) { return (_flags & flag) ? true : false; }; 403 	 void SetFlag(int flag) { _flags |= flag; }; 404 	 void UnsetFlag(int flag) { _flags &= (~(flag)); }; 405 	 void SetFlags(int flags) { _flags = flags; }; (lldb) print this; (OpenBabel::OBMol *) $0 = 0x0000000000000000; (lldb) bt; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); * frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; frame #1: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::IsPeriodic(this=0x0000000000000000) at mol.h:598; frame #2: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBAtom::IsPeriodic(this=0x00007fffffffc6c8) const at atom.cpp:809; frame #3: 0x00007ffff7dcf63d libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(this=0x00007fffffffc6c8, b=0x000000000049eac0) at atom.cpp:1108; frame #4: 0x00007ffff7ec22c0 libopenbabel.so.7`OpenBabel::PointGroupPrivate::",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:4493,Availability,toler,tolerance,4493,"9eac0) at atom.cpp:1108; frame #4: 0x00007ffff7ec22c0 libopenbabel.so.7`OpenBabel::PointGroupPrivate::establish_pairs(this=0x000000000043a720, elem=<unavailable>) at pointgroup.cpp:281:34; frame #5: 0x00007ffff7ec387a libopenbabel.so.7`OpenBabel::PointGroupPrivate::refine_symmetry_element(this=0x000000000043a720, elem=0x000000000043da40, build_table=1) at pointgroup.cpp:613:27; frame #6: 0x00007ffff7ec3751 libopenbabel.so.7`OpenBabel::PointGroupPrivate::init_inversion_center(this=0x000000000043a720) at pointgroup.cpp:854:11; frame #7: 0x00007ffff7ec1b39 libopenbabel.so.7`OpenBabel::PointGroupPrivate::find_symmetry_elements() [inlined] OpenBabel::PointGroupPrivate::find_inversion_centers(this=0x000000000043a720) at pointgroup.cpp:1374:21; frame #8: 0x00007ffff7ec1b31 libopenbabel.so.7`OpenBabel::PointGroupPrivate::find_symmetry_elements(this=0x000000000043a720) at pointgroup.cpp:1668; frame #9: 0x00007ffff7ec14bb libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroupSymbol(this=0x00007fffffffc868, tolerance=<unavailable>) at pointgroup.cpp:1879:8; frame #10: 0x00007ffff7ec145e libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroup() [inlined] OpenBabel::OBPointGroup::IdentifyPointGroup(this=<unavailable>, tolerance=0.01) at pointgroup.cpp:1869:17; frame #11: 0x00007ffff7ec1459 libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroup(this=<unavailable>) at pointgroup.cpp:1863; frame #12: 0x00000000004024cd obsym`main(argc=<unavailable>, argv=<unavailable>) at obsym.cpp:85:37; frame #13: 0x00007ffff755209b libc.so.6`__libc_start_main(main=(obsym`main at obsym.cpp:39), argc=2, argv=0x00007fffffffce58, init=<unavailable>, fini=<unavailable>, rtld_fini=<unavailable>, stack_end=0x00007fffffffce48) at libc-start.c:308:16; frame #14: 0x000000000040228a obsym`_start + 42; ```. obsym 2.4.1 provided by [apt](https://packages.debian.org/buster/openbabel) works as expected (is the warning ignorable?):; ```ShellSession; $ obsym H2O.xyz; Point Group: Cs; 3. H -0.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:4712,Availability,toler,tolerance,4712,"1:34; frame #5: 0x00007ffff7ec387a libopenbabel.so.7`OpenBabel::PointGroupPrivate::refine_symmetry_element(this=0x000000000043a720, elem=0x000000000043da40, build_table=1) at pointgroup.cpp:613:27; frame #6: 0x00007ffff7ec3751 libopenbabel.so.7`OpenBabel::PointGroupPrivate::init_inversion_center(this=0x000000000043a720) at pointgroup.cpp:854:11; frame #7: 0x00007ffff7ec1b39 libopenbabel.so.7`OpenBabel::PointGroupPrivate::find_symmetry_elements() [inlined] OpenBabel::PointGroupPrivate::find_inversion_centers(this=0x000000000043a720) at pointgroup.cpp:1374:21; frame #8: 0x00007ffff7ec1b31 libopenbabel.so.7`OpenBabel::PointGroupPrivate::find_symmetry_elements(this=0x000000000043a720) at pointgroup.cpp:1668; frame #9: 0x00007ffff7ec14bb libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroupSymbol(this=0x00007fffffffc868, tolerance=<unavailable>) at pointgroup.cpp:1879:8; frame #10: 0x00007ffff7ec145e libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroup() [inlined] OpenBabel::OBPointGroup::IdentifyPointGroup(this=<unavailable>, tolerance=0.01) at pointgroup.cpp:1869:17; frame #11: 0x00007ffff7ec1459 libopenbabel.so.7`OpenBabel::OBPointGroup::IdentifyPointGroup(this=<unavailable>) at pointgroup.cpp:1863; frame #12: 0x00000000004024cd obsym`main(argc=<unavailable>, argv=<unavailable>) at obsym.cpp:85:37; frame #13: 0x00007ffff755209b libc.so.6`__libc_start_main(main=(obsym`main at obsym.cpp:39), argc=2, argv=0x00007fffffffce58, init=<unavailable>, fini=<unavailable>, rtld_fini=<unavailable>, stack_end=0x00007fffffffce48) at libc-start.c:308:16; frame #14: 0x000000000040228a obsym`_start + 42; ```. obsym 2.4.1 provided by [apt](https://packages.debian.org/buster/openbabel) works as expected (is the warning ignorable?):; ```ShellSession; $ obsym H2O.xyz; Point Group: Cs; 3. H -0.78304 -0.20206 0.00000; O 0.00000 0.40412 0.00000; H 0.78304 -0.20206 0.00000; ==============================; *** Open Babel Warning in ReadMolecule; Problems reading an XYZ file: Ca",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2286:1347,Testability,test,test,1347,"Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 4709b0752109db593f1bee6298ef3bfa718d260d; Operating system and version: Debian 10.6. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. obsym works without segmentation fault. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. obsym crashes with segmentation fault. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. With the following file, H2O.xyz,; ```; 3; H2O.xyz; H -0.78304 -0.60618 0.00000; O 0.00000 0.00000 0.00000; H 0.78304 -0.60618 0.00000; ```. obsym crashes:. ```ShellSession; $ obsym H2O.xyz; Point Group: zsh: segmentation fault obsym H2O.xyz; ```. lldb result is as follows:. ```GDB; (lldb) run H2O.xyz; Process 22477 launched: 'obsym' (x86_64); Point Group: Process 22477 stopped; * thread #1, name = 'obsym', stop reason = signal SIGSEGV: invalid address (fault address: 0x22); frame #0: 0x00007ffff7dcf641 libopenbabel.so.7`OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) [inlined] OpenBabel::OBMol::HasFlag(this=0x0000000000000000, flag=8388608) at mol.h:402:41; 399 	 //! Mark that distance calculations, etc., should apply periodic boundary conditions through the minimimum image convention.; 400 	 //! Does",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2286
https://github.com/openbabel/openbabel/issues/2288:724,Deployability,install,installed,724,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", """,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288
https://github.com/openbabel/openbabel/issues/2288:1438,Testability,test,test,1438,"uestion about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288
https://github.com/openbabel/openbabel/issues/2288:1649,Usability,clear,clear,1649,"[ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1, installed with conda from conda-forge (also checked quickly with 2.4.1); Operating system and version: Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; After running `StripSalts`, ions such as Na should be removed. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When using InChIs as input and output, ions are not removed in the output. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Here are some snippets from my terminal, using sodium salicylate as an example. Hopefully they make things clear:. ```; >>> from openbabel import pybel; >>> smi = pybel.readstring(""smi"", ""[Na+].O=C([O-])c1ccccc1O""); >>> smi.molwt; 160.10257000000001; >>> smi.OBMol.StripSalts(); True; >>> smi.molwt; 137.11280000000002; >>> print(smi.write(""smi"")); O=C([O-])c1ccccc1O	; ```; which is as expected. Now with InChIs:. ```; >>> inchi = pybel.readstring(""inchi"", ""InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1""); >>> inchi.molwt; 160.10256999999996; >>> inchi.OBMol.StripSalts(); True; >>> inchi.molwt; 137.11279999999996 # this still seems correct; >>> print(inchi.write(""inchi"")); InChI=1S/C7H6O3.Na/c8-6-4-2-1-3-5(6)7(9)10;/h1-4,8H,(H,9,10);/q;+1/p-1 # this is identical to the input. ```. (As an extra, here's the output when trying to print the InChI from the SMILES input and vice versa). ```; >>> print(inchi.write(""smi"")); c1ccc(c(c1)C(=O)O)[O-]	# looks fine; >>> print(smi.write(""inchi"")); ==============================; *** Open Babel Warning in InChI code; #1 :Prot",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288
https://github.com/openbabel/openbabel/pull/2289:16,Deployability,install,install-dir,16,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/pull/2289:369,Deployability,install,install,369,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/pull/2289:453,Deployability,install,install,453,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/pull/2289:555,Deployability,configurat,configurations,555,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/pull/2289:28,Modifiability,config,configurable,28,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/pull/2289:555,Modifiability,config,configurations,555,"# This PR makes install-dir configurable for each binding through cmake options. * `-DPYTHON_INSTDIR=...`; * `-DJAVA_INSTDIR=...`; * `-DR_INSTDIR=...`; * `-DPERL_INSTDIR=...`; * `-DRUBY_INSTDIR=...`; * `-DCSHARP_INSTDIR=...`; * `-DPHP_INSTDIR=...`. # Changes are. * `-DPYTHON_INSTDIR=...` shall override `PYTHON_INSTDIR` in `scripts/CMakeLists.txt`; * We can designate install dirs for language bindings through the options above, while keeping default install dirs of language bindings except python are `LIB_INSTALL_DIR`. This PR does not break current configurations.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2289
https://github.com/openbabel/openbabel/issues/2290:956,Performance,optimiz,optimization,956,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Buster. ## Expected Behavior; I would want to convert the output geometry given in the NWChem output into xyz format. ## Actual Behavior; The coordinates are not the ones from the final geometry optimization but from the first given geometry in the output file and the x and y coordinates only of the first atom given are both changed to exactly 0. ## Steps to Reproduce; This happens with all tested NWChem output files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290
https://github.com/openbabel/openbabel/issues/2290:1155,Testability,test,tested,1155,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Debian Buster. ## Expected Behavior; I would want to convert the output geometry given in the NWChem output into xyz format. ## Actual Behavior; The coordinates are not the ones from the final geometry optimization but from the first given geometry in the output file and the x and y coordinates only of the first atom given are both changed to exactly 0. ## Steps to Reproduce; This happens with all tested NWChem output files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290
https://github.com/openbabel/openbabel/issues/2291:232,Availability,error,error,232,I'am trying to convert some SMILES to 3D SDF. Here is the command line:; obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest. Some of the SMILES could pass but the option -e is bypassed and the result is empty SDF file. The error is:; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment CC#CC=O in rigid-fragments.txt has all zero coordinates. Example data (the last one passes):. CC#CC(=O)NC1=NC=C2C(=C1)C(=NC=N2)NC3=CC(=C(C=C3)F)Cl 1; C=CC(=O)NC1=CC=CC(=C1)C2=C(OC3=NC=NC(=C23)NC(CO)C4=CC=CC=C4)C5=CC=CC=C5 2; C=CC(=O)N1CCCC(C1)N2C3=NC=NC(=C3C(=N2)C4=CC(=C(C=C4)OCC5=CC=CC=N5)Cl)N 3; CCC(C)(COC(=O)N)COC(=O)NC(C)C 4,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291
https://github.com/openbabel/openbabel/issues/2291:258,Availability,Error,Error,258,I'am trying to convert some SMILES to 3D SDF. Here is the command line:; obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest. Some of the SMILES could pass but the option -e is bypassed and the result is empty SDF file. The error is:; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment CC#CC=O in rigid-fragments.txt has all zero coordinates. Example data (the last one passes):. CC#CC(=O)NC1=NC=C2C(=C1)C(=NC=N2)NC3=CC(=C(C=C3)F)Cl 1; C=CC(=O)NC1=CC=CC(=C1)C2=C(OC3=NC=NC(=C23)NC(CO)C4=CC=CC=C4)C5=CC=CC=C5 2; C=CC(=O)N1CCCC(C1)N2C3=NC=NC(=C3C(=N2)C4=CC(=C(C=C4)OCC5=CC=CC=N5)Cl)N 3; CCC(C)(COC(=O)N)COC(=O)NC(C)C 4,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291
https://github.com/openbabel/openbabel/pull/2293:53,Availability,avail,available,53,Some properties (e.g. implicitvalence) are no longer available.; Also added index as a property and a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2293
https://github.com/openbabel/openbabel/pull/2293:102,Testability,test,test,102,Some properties (e.g. implicitvalence) are no longer available.; Also added index as a property and a test.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2293
https://github.com/openbabel/openbabel/issues/2294:1342,Testability,test,tested,1342,".com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0 (conda); Operating system and version: (Linux, Debian 10). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Elements should be parsed correctly when reading the file, independently of the number of characters in the element symbol. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When parsing structures with two-letter elements (i.e. Cl, Fe, Mg,...) the atomic number is set to 0 (other parameters might be missing, too; not tested). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The code below has been tested with PDB entries 1r6j, 333d, 5ix0 in both formats 'pdb' and 'cif'. ```; import sys; import os; from openbabel import openbabel as ob; i = sys.argv[1]; name, ext = os.path.splitext(i); ext = ext[1:].lower(); r = ob.OBConversion(); r.SetInFormat(ext); mol = ob.OBMol(); r.ReadFile(mol, i); for a in ob.OBMolAtomIter(mol):; if a.GetAtomicNum()==0:; res = a.GetResidue(); print(""AAA"", a.GetIdx(), res.GetAtomID(a)); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2294
https://github.com/openbabel/openbabel/issues/2294:1529,Testability,test,test,1529,".com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0 (conda); Operating system and version: (Linux, Debian 10). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Elements should be parsed correctly when reading the file, independently of the number of characters in the element symbol. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When parsing structures with two-letter elements (i.e. Cl, Fe, Mg,...) the atomic number is set to 0 (other parameters might be missing, too; not tested). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The code below has been tested with PDB entries 1r6j, 333d, 5ix0 in both formats 'pdb' and 'cif'. ```; import sys; import os; from openbabel import openbabel as ob; i = sys.argv[1]; name, ext = os.path.splitext(i); ext = ext[1:].lower(); r = ob.OBConversion(); r.SetInFormat(ext); mol = ob.OBMol(); r.ReadFile(mol, i); for a in ob.OBMolAtomIter(mol):; if a.GetAtomicNum()==0:; res = a.GetResidue(); print(""AAA"", a.GetIdx(), res.GetAtomID(a)); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2294
https://github.com/openbabel/openbabel/issues/2294:1657,Testability,test,tested,1657,".com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0 (conda); Operating system and version: (Linux, Debian 10). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Elements should be parsed correctly when reading the file, independently of the number of characters in the element symbol. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When parsing structures with two-letter elements (i.e. Cl, Fe, Mg,...) the atomic number is set to 0 (other parameters might be missing, too; not tested). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. The code below has been tested with PDB entries 1r6j, 333d, 5ix0 in both formats 'pdb' and 'cif'. ```; import sys; import os; from openbabel import openbabel as ob; i = sys.argv[1]; name, ext = os.path.splitext(i); ext = ext[1:].lower(); r = ob.OBConversion(); r.SetInFormat(ext); mol = ob.OBMol(); r.ReadFile(mol, i); for a in ob.OBMolAtomIter(mol):; if a.GetAtomicNum()==0:; res = a.GetResidue(); print(""AAA"", a.GetIdx(), res.GetAtomID(a)); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2294
https://github.com/openbabel/openbabel/pull/2295:81,Testability,test,test,81,"The constructor was not initializing _ptr to null, and this is what was; used to test the validity of the iterator. This caused iteration over a; ringless molecule (e.g. empty) to sometimes fail (segfault or infinite; loop). But not always.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2295
https://github.com/openbabel/openbabel/pull/2296:105,Deployability,update,updates,105,"Some format descriptions still use the obsolete command `babel` in their example or other parts. This PR updates the descriptions and comments of 7 formats: `copy`, `fs`, `fpt`, `inchi`, `png`, `svg`, and `text`.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2296
https://github.com/openbabel/openbabel/pull/2297:31,Deployability,install,install,31,"The coordgen upstream does not install the template file. It is; also not required at runtime, since its contents are compiled into; the coordgen library itself. Fixes #2214",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2297
https://github.com/openbabel/openbabel/pull/2299:169,Testability,test,tests,169,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299
https://github.com/openbabel/openbabel/pull/2299:191,Testability,test,tests,191,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299
https://github.com/openbabel/openbabel/pull/2299:184,Usability,simpl,simple,184,`OBMol` has both `NumAtoms` and `NumHvyAtoms` while `OBResidue` only has `GetNumAtoms`. This PR adds `GetNumHvyAtoms` to `OBResidue`. I am not familiar with OpenBabel's tests. I added simple tests for `GetNumAtoms` and `GetNumHvyAtoms` but advice on how to do this properly is very welcome.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299
https://github.com/openbabel/openbabel/issues/2302:1077,Availability,error,error,1077,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: babel 2.8.0 py_0 conda-forge; Operating system and version: Ubuntu 18.04.4 LTS. ## Expected Behavior; babel should produces a xyz file . ## Actual Behavior; I used the following command. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. to generate 3D xyz file form the input .smi file. But babel reports the error "" Segmentation fault (core dumped)"". I have finished the same transformation (from smi to xyz) using bash script. This transformation is the last one, the program didn't run. ; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. [smiles8800_2.txt](https://github.com/openbabel/openbabel/files/5514082/smiles8800_2.txt). Please note that github doesn't allow ""smi"" file uploading, so I changed the file as "".txt"". You will need to change it back to "".smi"" to run. ; The smi file maybe look a littitl werid to you as the comment for each SMILES is just the same SMILES, this is for the convinience for future steps. I suppose it doesn't influence the validaty of the .smi file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2302
https://github.com/openbabel/openbabel/issues/2302:1098,Availability,fault,fault,1098,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: babel 2.8.0 py_0 conda-forge; Operating system and version: Ubuntu 18.04.4 LTS. ## Expected Behavior; babel should produces a xyz file . ## Actual Behavior; I used the following command. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. to generate 3D xyz file form the input .smi file. But babel reports the error "" Segmentation fault (core dumped)"". I have finished the same transformation (from smi to xyz) using bash script. This transformation is the last one, the program didn't run. ; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. [smiles8800_2.txt](https://github.com/openbabel/openbabel/files/5514082/smiles8800_2.txt). Please note that github doesn't allow ""smi"" file uploading, so I changed the file as "".txt"". You will need to change it back to "".smi"" to run. ; The smi file maybe look a littitl werid to you as the comment for each SMILES is just the same SMILES, this is for the convinience for future steps. I suppose it doesn't influence the validaty of the .smi file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2302
https://github.com/openbabel/openbabel/issues/2302:1896,Security,validat,validaty,1896,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: babel 2.8.0 py_0 conda-forge; Operating system and version: Ubuntu 18.04.4 LTS. ## Expected Behavior; babel should produces a xyz file . ## Actual Behavior; I used the following command. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. to generate 3D xyz file form the input .smi file. But babel reports the error "" Segmentation fault (core dumped)"". I have finished the same transformation (from smi to xyz) using bash script. This transformation is the last one, the program didn't run. ; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce. `babel individuals/acids/smiles/smiles8800_2.smi individuals/acids/xyz/smiles8800_2.xyz -h --gen3D`. [smiles8800_2.txt](https://github.com/openbabel/openbabel/files/5514082/smiles8800_2.txt). Please note that github doesn't allow ""smi"" file uploading, so I changed the file as "".txt"". You will need to change it back to "".smi"" to run. ; The smi file maybe look a littitl werid to you as the comment for each SMILES is just the same SMILES, this is for the convinience for future steps. I suppose it doesn't influence the validaty of the .smi file.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2302
https://github.com/openbabel/openbabel/issues/2303:904,Availability,down,downloaded,904,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 2.4.1; Operating system and version: Mac OS 10.14.6 (Mojave). ## Expected Behavior; I expected OpenBabel to produce a pdb file where each atom has the same residue and chain name. ## Actual Behavior; Most atoms of the output pdb file have residue name ""UNL"" and no chain name. But a single carbon has residue name ""ACE"" and chain name ""A"". ## Steps to Reproduce; First, change the extension of any of the files I attached from txt to sdf. (I changed it to txt so GitHub would let me upload.); Then run the following command: `obabel -isdf <ligand_name>.sdf -opdb -O <ligand_name>.pdb`. In all cases, the affected carbon is in a similar place: single-bonded to a ring and a nitrogen, and double-bonded to an oxygen. The sdf files were taken from a large sdf file downloaded at https://chemoinfo.ipmc.cnrs.fr/MOLDB/index.php. Here are the files:; [PEMETREXED_1.txt](https://github.com/openbabel/openbabel/files/5526316/PEMETREXED_1.txt); [NATEGLINIDE_1.txt](https://github.com/openbabel/openbabel/files/5526317/NATEGLINIDE_1.txt); [METHOTREXATE_1.txt](https://github.com/openbabel/openbabel/files/5526318/METHOTREXATE_1.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2303
https://github.com/openbabel/openbabel/issues/2304:866,Deployability,install,installation,866,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304
https://github.com/openbabel/openbabel/issues/2304:1107,Deployability,install,installation,1107,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304
https://github.com/openbabel/openbabel/issues/2304:1168,Modifiability,variab,variables,1168,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304
https://github.com/openbabel/openbabel/issues/2304:1403,Testability,test,test,1403,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1-x64; Operating system and version: windows10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Normal installation; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; After running the executable installation package OpenBabel-3.1.1-x64.exe all environment variables in $PATH will be removed, only openbabel left; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2304
https://github.com/openbabel/openbabel/issues/2305:591,Availability,error,error,591,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.2.2004. ## Expected Behavior; I expected to be able to build a small C++ application that uses cmake and has openbable as a dependency. This has worked with previous versions of openbabel in the 2.x.x line. ## Actual Behavior; The packages CMakeLists.txt includes the command ; find_package(OpenBabel3 REQUIRED); which successfully locates openbablel's OpenBabel3Config.cmake file but that generates the following error:. Found package configuration file:. ~/software/openbabel/3.1.1/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305
https://github.com/openbabel/openbabel/issues/2305:613,Deployability,configurat,configuration,613,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.2.2004. ## Expected Behavior; I expected to be able to build a small C++ application that uses cmake and has openbable as a dependency. This has worked with previous versions of openbabel in the 2.x.x line. ## Actual Behavior; The packages CMakeLists.txt includes the command ; find_package(OpenBabel3 REQUIRED); which successfully locates openbablel's OpenBabel3Config.cmake file but that generates the following error:. Found package configuration file:. ~/software/openbabel/3.1.1/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305
https://github.com/openbabel/openbabel/issues/2305:301,Integrability,depend,dependency,301,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.2.2004. ## Expected Behavior; I expected to be able to build a small C++ application that uses cmake and has openbable as a dependency. This has worked with previous versions of openbabel in the 2.x.x line. ## Actual Behavior; The packages CMakeLists.txt includes the command ; find_package(OpenBabel3 REQUIRED); which successfully locates openbablel's OpenBabel3Config.cmake file but that generates the following error:. Found package configuration file:. ~/software/openbabel/3.1.1/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305
https://github.com/openbabel/openbabel/issues/2305:613,Modifiability,config,configuration,613,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 8.2.2004. ## Expected Behavior; I expected to be able to build a small C++ application that uses cmake and has openbable as a dependency. This has worked with previous versions of openbabel in the 2.x.x line. ## Actual Behavior; The packages CMakeLists.txt includes the command ; find_package(OpenBabel3 REQUIRED); which successfully locates openbablel's OpenBabel3Config.cmake file but that generates the following error:. Found package configuration file:. ~/software/openbabel/3.1.1/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2305
https://github.com/openbabel/openbabel/pull/2307:195,Usability,learn,learn,195,"For quite some time, the program no longer is called from the CLI by `openbabel`, but by `obabel`. Surprisingly, calling `obabel -H` still suggested the old form e.g., the call `openbabel -L` to learn about the formats Open Babel is aware. This PR addresses the issue in this ""inner documentation"" of the program.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2307
https://github.com/openbabel/openbabel/issues/2308:522,Availability,error,error,522,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:608,Availability,error,error,608,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:631,Availability,Error,Error,631,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:89,Deployability,install,installed,89,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:306,Usability,simpl,simple,306,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:807,Usability,simpl,simply,807,"Hi, I have a problem when removing isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.in",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2308:1700,Usability,simpl,simply,1700,"moving isotopes from InChI identifier using OpenBabel (3.1.1 installed via conda) InChI to InChI conversion (parameter `/noiso`). If I have an InChI of compound like deuterium oxide `InChI=1S/H2O/h1H2/i/hD2` that contains isotopes and would like to remove the isotopes (so I do simple InChI to InChI conversion using parameter `/noiso`), I get an InChI that looks like this: `InChI=1S/H2O/h1H2/hD2`. This InChI is however incorrect, any other conversion or action using this InChI ends with an error (example: I now want to convert `InChI=1S/H2O/h1H2/hD2` to can SMILES, I get an error: `*** Open Babel Error in InChI code, Reading InChI failed`). I have recently come across several of such compounds where removing isotopes disrupt the InChI. What I originally needed to do is simply removing isotopes from selected compounds to obtain more general structure. . More examples (compound containing H isotopes that is ok and one that fails to convert):; Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D (o-Cresol-d7); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3; Conversion to can SMILES: OK. Original InChI: InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/i1D3,2D,3D,4D,5D/hD (o-Cresol-d8); After ignoring isotopes (`/noiso`): InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3/hD; Conversion to can SMILES: FAILED. What I would **expect to get from both of these compounds** is InChI of o-Cresol: `InChI=1S/C7H8O/c1-6-4-2-3-5-7(6)8/h2-5,8H,1H3`. I get it from the first example but in the second, there is still deuterium `/hD` in the InChI identifier. From this it seems that OpenBabel ""ignores isotopes"" by simply removing everything after `i` till the next `/` character, but that does not always work. Is this a bug or am I missing some chemical knowledge that explain this behaviour?. Example command line for removing isotopes from InChI: `obabel -i 'inchi' cresol_d7.inchi -o 'inchi' -O cresol_d7_out.inchi -xT /noiso`. Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2308
https://github.com/openbabel/openbabel/issues/2309:1563,Testability,test,tests,1563,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309
https://github.com/openbabel/openbabel/issues/2309:1767,Testability,test,tests,1767,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309
https://github.com/openbabel/openbabel/issues/2309:1868,Testability,test,test,1868,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309
https://github.com/openbabel/openbabel/issues/2309:1989,Testability,test,tests,1989,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309
https://github.com/openbabel/openbabel/issues/2309:2221,Testability,test,test,2221,"et. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1+; Operating system and version: maybe not applicable (GitHub). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Starting on a pristine fork from this repository's branch master, my aim was to correct minor inconsistencies; within the program's documentation when calling `obabel -H`. Because of changes I do not consider them; as ""mission critical"", I speculated the filed [PR](https://github.com/openbabel/openbabel/pull/2307) would launch the automatic code check as prerequisite; for Open Babel's maintainers to decide about the change. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; At present -- six days later -- there are six of the automated tests successfully passed, yet still four in line; awaiting processing. The results, in my understanding, however are mixed. + Is there something I could have done differently to accelerate the automated tests to take less time --; e.g., some hours instead of multiple days?; + I don't understand why the test labelled `CMake Build Matrix / Windows Latest MSVC x86 (pull_request)`; fails while for same changes yield for some tests about MacOS, Linux, and Ubuntu apparently pass. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![check_stop](https://user-images.githubusercontent.com/19709084/101386459-22433d00-38b5-11eb-89ed-a35f637f2a53.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2309
https://github.com/openbabel/openbabel/issues/2310:658,Availability,error,error,658,"OpenBabel wiki pages on scripting cannot be accessed. Also, other pages only mention Perl and Python scripting, please make sure Java scripting instructions are provided also. . ## Environment Information; Open Babel version: web page visited 08-Dec-2020; Operating system and version: N/A. ## Expected Behavior; I see a web page explaining how to use the scripting APIs. ## Actual Behavior; I see ""Whoops, we can't find that page."". ## Steps to Reproduce; Go to http://openbabel.org/wiki/Main_Page, on left pick Develop with Babel, then select OpenBabel-scripting. I accidentally stumbled on a reference to OBTest.java somehow, but that also gets an access error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310
https://github.com/openbabel/openbabel/issues/2310:44,Security,access,accessed,44,"OpenBabel wiki pages on scripting cannot be accessed. Also, other pages only mention Perl and Python scripting, please make sure Java scripting instructions are provided also. . ## Environment Information; Open Babel version: web page visited 08-Dec-2020; Operating system and version: N/A. ## Expected Behavior; I see a web page explaining how to use the scripting APIs. ## Actual Behavior; I see ""Whoops, we can't find that page."". ## Steps to Reproduce; Go to http://openbabel.org/wiki/Main_Page, on left pick Develop with Babel, then select OpenBabel-scripting. I accidentally stumbled on a reference to OBTest.java somehow, but that also gets an access error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310
https://github.com/openbabel/openbabel/issues/2310:651,Security,access,access,651,"OpenBabel wiki pages on scripting cannot be accessed. Also, other pages only mention Perl and Python scripting, please make sure Java scripting instructions are provided also. . ## Environment Information; Open Babel version: web page visited 08-Dec-2020; Operating system and version: N/A. ## Expected Behavior; I see a web page explaining how to use the scripting APIs. ## Actual Behavior; I see ""Whoops, we can't find that page."". ## Steps to Reproduce; Go to http://openbabel.org/wiki/Main_Page, on left pick Develop with Babel, then select OpenBabel-scripting. I accidentally stumbled on a reference to OBTest.java somehow, but that also gets an access error.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2310
https://github.com/openbabel/openbabel/issues/2311:1549,Availability,avail,available,1549,"check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2311:1413,Testability,test,test,1413,"equests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Linux Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2311:2534,Testability,test,tested,2534,"rmats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenChemLib`](https://github.com/Actelion/openchemlib) project on GitHub. . [test.dwar.txt](https://github.com/openbabel/openbabel/files/5671704/test.dwar.txt); [idcodes_examples.txt](https://github.com/openbabel/openbabel/files/5671707/idcodes_examples.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2311:2797,Testability,test,test,2797,"rmats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenChemLib`](https://github.com/Actelion/openchemlib) project on GitHub. . [test.dwar.txt](https://github.com/openbabel/openbabel/files/5671704/test.dwar.txt); [idcodes_examples.txt](https://github.com/openbabel/openbabel/files/5671707/idcodes_examples.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2311:2865,Testability,test,test,2865,"rmats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenChemLib`](https://github.com/Actelion/openchemlib) project on GitHub. . [test.dwar.txt](https://github.com/openbabel/openbabel/files/5671704/test.dwar.txt); [idcodes_examples.txt](https://github.com/openbabel/openbabel/files/5671707/idcodes_examples.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2311:1767,Usability,simpl,simplification,1767,"xpected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to suggest the `idcode` format internally used by [DataWarrior](http://www.openmolecules.org/datawarrior/index.html) to be added to the cheminformatics formats read / written by Open Babel. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The format is missing. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; DataWarrior is a program freely available and used to compute and manage chemical structures and properties. Examples of functions offered by DataWarrior include the determination of molecular mass, cLogP, small ring count, similarity searches, PCA, simplification to Murcko scaffold and skeleton, SAR-tables. The program stores information as `.dwar` files (example attached) in plain ASCII, where chemical structures are written as `idcodes`. Thomas Sander describes these strings as «a very compact text representation of a molecule [...] somewhat comparable to an isomeric SMARTS» ([reference](http://openmolecules.org/forum/index.php?t=msg&th=422&start=0&)). For example, the three isomers of tartaric acid, `O[C@H]([C@H](C(O)=O)O)C(O)=O` (2R, 3R), `O[C@@H]([C@@H](C(O)=O)O)C(O)=O` (2S, 3S) and `O[C@H]([C@@H](C(O)=O)O)C(O)=O` (2R, 3S) are described as ` dedF@@PfFTf{nZjfSET@`, `dedF@@PfFTf{nZjfSIR@` and `dedF@@PfFTf{nZjfSIT@`, respectively. File `idcodes_examples.txt` equally attached compiles some molecules tested. According to Thomas Sander (_loc. cit._) the use of idcodes and their implementation into other programs is permitted (e.g., LigandScout) and is part of the actively developed [`OpenCh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2311
https://github.com/openbabel/openbabel/issues/2312:35,Energy Efficiency,charge,charge,35,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1735,Safety,Timeout,Timeout,1735,"ter (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" throug",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:100,Testability,test,test,100,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:590,Testability,test,tests,590,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:631,Testability,log,log,631,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:815,Testability,test,test,815,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:863,Testability,Test,Test,863,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:968,Testability,Test,Test,968,"Starting with issues with the eqeq charge equilibration implementation [1], I looked for reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1080,Testability,Test,Test,1080,"or reports on test coverage for openbabel and wasn't able to find any. Would such reports be a welcome addition to the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Te",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1193,Testability,Test,Test,1193," the CI setup?. ![image](https://user-images.githubusercontent.com/1053245/102149305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-run",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1289,Testability,Test,Test,1289,"305-682c7200-3e6e-11eb-9010-6b1eb109ab93.png). I started looking into adding this via CI [here](https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1384,Testability,Test,Test,1384,"(https://github.com/ltalirz/openbabel/tree/add-coverage) but it turns out that when compiling with `-DCMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1486,Testability,Test,Test,1486,"CMAKE_BUILD_TYPE=Debug` (which I believe is required for accurate coverage results - didn't check, though), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1588,Testability,Test,Test,1588,"ugh), the tests take a very long time ([gh actions log](https://github.com/ltalirz/openbabel/runs/1554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1687,Testability,Test,Test,1687,"554047342?check_suite_focus=true)).; Even locally on my computer (which is ~4x faster than the github actions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1790,Testability,Test,Test,1790,"ctions runner), there is still a test that exceeds the 1500s limit; ```; 210/222 Test #210: test_cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1887,Testability,Test,Test,1887,"cmlreadfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage re",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:1988,Testability,Test,Test,1988,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:2085,Testability,Test,Test,2085,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:2320,Testability,test,tests,2320,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:2746,Testability,test,tests,2746,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:2863,Testability,test,test,2863,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2312:2478,Usability,feedback,feedback,2478,"dfile_1 ............... Passed 0.81 sec; Start 211: inchiSamples.sdf_Test; 211/222 Test #211: inchiSamples.sdf_Test ............ Passed 2.17 sec; Start 212: inchiSamplesTechMan.sdf_Test; 212/222 Test #212: inchiSamplesTechMan.sdf_Test ..... Passed 0.99 sec; Start 213: inchiSteffen_PubChem.smi_Test; 213/222 Test #213: inchiSteffen_PubChem.smi_Test .... Passed 0.89 sec; Start 214: pytest_babel; 214/222 Test #214: pytest_babel ..................... Passed 94.96 sec; Start 215: pytest_sym; 215/222 Test #215: pytest_sym ....................... Passed 116.05 sec; Start 216: pytest_smartssym; 216/222 Test #216: pytest_smartssym ................. Passed 35.42 sec; Start 217: pytest_fastsearch; 217/222 Test #217: pytest_fastsearch ................ Passed 2.64 sec; Start 218: pytest_distgeom; 218/222 Test #218: pytest_distgeom ..................***Timeout 1500.09 sec; Start 219: pytest_unique; 219/222 Test #219: pytest_unique .................... Passed 8.13 sec; Start 220: pytest_kekule; 220/222 Test #220: pytest_kekule .................... Passed 19.51 sec; Start 221: pytest_pdbformat; 221/222 Test #221: pytest_pdbformat ................. Passed 1.04 sec; Start 222: pytest_RInChI; 222/222 Test #222: pytest_RInChI .................... Passed 34.85 sec; ```. This would make the coverage job very long-running on CI. There are different approaches one could take - ; live with the very long run time;; skip very long-running tests; ; try to see whether the ""worst offenders"" really need to be that long-running; ; run the coverage only, say, once per day;; ... I'd be very happy for feedback on this. [1] Issues https://github.com/openbabel/openbabel/issues/1937 https://github.com/openbabel/openbabel/issues/1893 https://github.com/openbabel/openbabel/issues/1321 https://github.com/openbabel/openbabel/issues/1861; I searched for ""eqeq"" through the tests and there was no match, i.e. it seemed like the implementation was entirely untested, so I started looking for test coverage reports.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2312
https://github.com/openbabel/openbabel/issues/2313:1044,Availability,reboot,reboot,1044,"search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1373,Availability,reboot,rebooted,1373,"is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1457,Availability,error,error,1457,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1612,Availability,reboot,rebooting,1612,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1826,Availability,reboot,reboot,1826,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1883,Availability,reboot,reboot,1883,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:883,Deployability,install,installing,883,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:942,Deployability,install,installs,942,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1277,Deployability,install,installation,1277,"is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1474,Deployability,install,installer,1474,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1588,Deployability,install,installer,1588,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:1732,Deployability,install,installation,1732,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:2232,Deployability,Install,Install,2232,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:2387,Deployability,install,installer,2387,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2313:2128,Testability,test,test,2128,"ost to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10, 64-bit, version 20H2. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When installing the Open Babel 3.1.1 binaries, I know that this installs Visual C++ redistributable libraries. I expected this to occur silently, and maybe having to reboot my computer afterwards. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The installation of the Visual C++ redistributable libraries occurred silently, but then my machine rebooted, terminating all applications that I had open. This could be called a user error, since the installer probably tells me to close all other applications and whatnot, but it has been years since I've seen an installer spontaneously rebooting my machine without first asking me. If I may offer a suggestion: there is a flag /norestart for executing the installation of the redistributable libraries. Using this flag should prevent the spontaneous reboot. But it may then be necessary to tell the user to reboot their computer manually, which is of course also not ideal. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Install the Windows version of Open Babel on a computer that does not yet have the version of the Visual C++ redistributable libraries that comes with the installer.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2313
https://github.com/openbabel/openbabel/issues/2314:249,Testability,test,test,249,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1 and 3.1.1; Operating system and version: ubuntu 20.4 LTS; Hardware Architecture: ARM64. ## Expected Behavior; I expect to convert the following `test.inchi` file which has the following content:; ```; InChI=1S/C24H27NO5S/c1-13-14(2)21-18(15(3)20(13)26)9-10-24(4,30-21)12-29-17-7-5-16(6-8-17)11-19-22(27)25-23(28)31-19/h5-8,19,26H,9-12H2,1-4H3,(H,25,27,28); ```; to its smiles format, using the following command:; ```; obabel -iinchi test.inchi -osmi; ```. ## Actual Behavior; Obabel freezes on `ARM64`. Though, it's working fine on `x86_x64` architecture",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2314
https://github.com/openbabel/openbabel/issues/2314:538,Testability,test,test,538,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 2.4.1 and 3.1.1; Operating system and version: ubuntu 20.4 LTS; Hardware Architecture: ARM64. ## Expected Behavior; I expect to convert the following `test.inchi` file which has the following content:; ```; InChI=1S/C24H27NO5S/c1-13-14(2)21-18(15(3)20(13)26)9-10-24(4,30-21)12-29-17-7-5-16(6-8-17)11-19-22(27)25-23(28)31-19/h5-8,19,26H,9-12H2,1-4H3,(H,25,27,28); ```; to its smiles format, using the following command:; ```; obabel -iinchi test.inchi -osmi; ```. ## Actual Behavior; Obabel freezes on `ARM64`. Though, it's working fine on `x86_x64` architecture",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2314
https://github.com/openbabel/openbabel/pull/2315:39,Modifiability,config,config,39,"Use the modern CMake macros to produce config files that properly work (hopefully). This also makes it possible to deprecate the `OpenBabel3_INCLUDE_DIRS` & `OpenBabel3_LIBRARIES` public CMake variables, and use only the `openbabel` imported library. This fixes #2264.; This fixes #2305.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2315
https://github.com/openbabel/openbabel/pull/2315:193,Modifiability,variab,variables,193,"Use the modern CMake macros to produce config files that properly work (hopefully). This also makes it possible to deprecate the `OpenBabel3_INCLUDE_DIRS` & `OpenBabel3_LIBRARIES` public CMake variables, and use only the `openbabel` imported library. This fixes #2264.; This fixes #2305.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2315
https://github.com/openbabel/openbabel/issues/2316:964,Availability,Error,Error,964,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS big sure and Red Hat Enterprise Linux Server release 7.3 (Maipo). ## Expected Behavior; /opt/openbabel2.4.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz; 17. C 1.19286 0.04506 0.20032; C 2.70616 0.08144 0.01491; H 3.17336 0.23795 0.99466; C 3.14803 1.17558 -0.97994; H 2.76452 2.15338 -0.66944; C 4.67921 1.29148 -0.99423; O 5.41785 1.10263 -0.04358; O 5.12473 1.65063 -2.22820; N 2.70335 0.91478 -2.38659; O 3.10573 -1.20711 -0.46921; H 0.68027 -0.25654 -0.71973; H 0.80572 1.01652 0.52100; H 0.92501 -0.70084 0.95647; H 4.32700 1.66400 -2.81379; H 1.67851 0.94547 -2.39707; H 2.89564 -0.08367 -2.55682; H 4.01094 -1.36282 -0.13549; 1 molecule converted. ## Actual Behavior; /opt/openbabel3.1.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz; ==============================; *** Open Babel Error in Do; 3D coordinate generation failed; 8. C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; N 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; 1 molecule converted. ## Steps to Reproduce; described above. Using 2.4.1, the conversion is done successfully however, using 3.1.1, the conversion fails.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2316
https://github.com/openbabel/openbabel/issues/2316:186,Deployability,release,release,186,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS big sure and Red Hat Enterprise Linux Server release 7.3 (Maipo). ## Expected Behavior; /opt/openbabel2.4.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz; 17. C 1.19286 0.04506 0.20032; C 2.70616 0.08144 0.01491; H 3.17336 0.23795 0.99466; C 3.14803 1.17558 -0.97994; H 2.76452 2.15338 -0.66944; C 4.67921 1.29148 -0.99423; O 5.41785 1.10263 -0.04358; O 5.12473 1.65063 -2.22820; N 2.70335 0.91478 -2.38659; O 3.10573 -1.20711 -0.46921; H 0.68027 -0.25654 -0.71973; H 0.80572 1.01652 0.52100; H 0.92501 -0.70084 0.95647; H 4.32700 1.66400 -2.81379; H 1.67851 0.94547 -2.39707; H 2.89564 -0.08367 -2.55682; H 4.01094 -1.36282 -0.13549; 1 molecule converted. ## Actual Behavior; /opt/openbabel3.1.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz; ==============================; *** Open Babel Error in Do; 3D coordinate generation failed; 8. C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; N 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; 1 molecule converted. ## Steps to Reproduce; described above. Using 2.4.1, the conversion is done successfully however, using 3.1.1, the conversion fails.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2316
https://github.com/openbabel/openbabel/issues/2317:969,Availability,Error,Error,969,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS big sure and Red Hat Enterprise Linux Server release 7.3 (Maipo). ## Expected Behavior. `/opt/openbabel2.4.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz`; 17. C 1.19286 0.04506 0.20032; C 2.70616 0.08144 0.01491; H 3.17336 0.23795 0.99466; C 3.14803 1.17558 -0.97994; H 2.76452 2.15338 -0.66944; C 4.67921 1.29148 -0.99423; O 5.41785 1.10263 -0.04358; O 5.12473 1.65063 -2.22820; N 2.70335 0.91478 -2.38659; O 3.10573 -1.20711 -0.46921; H 0.68027 -0.25654 -0.71973; H 0.80572 1.01652 0.52100; H 0.92501 -0.70084 0.95647; H 4.32700 1.66400 -2.81379; H 1.67851 0.94547 -2.39707; H 2.89564 -0.08367 -2.55682; H 4.01094 -1.36282 -0.13549; 1 molecule converted`. ## Actual Behavior. `/opt/openbabel3.1.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz`; ==============================; *** Open Babel Error in Do; 3D coordinate generation failed; 8. C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; N 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; 1 molecule converted; 1. ## Steps to Reproduce; described above. Using 2.4.1, the conversion is done successfully however, using 3.1.1, the conversion fails.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317
https://github.com/openbabel/openbabel/issues/2317:186,Deployability,release,release,186,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS big sure and Red Hat Enterprise Linux Server release 7.3 (Maipo). ## Expected Behavior. `/opt/openbabel2.4.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz`; 17. C 1.19286 0.04506 0.20032; C 2.70616 0.08144 0.01491; H 3.17336 0.23795 0.99466; C 3.14803 1.17558 -0.97994; H 2.76452 2.15338 -0.66944; C 4.67921 1.29148 -0.99423; O 5.41785 1.10263 -0.04358; O 5.12473 1.65063 -2.22820; N 2.70335 0.91478 -2.38659; O 3.10573 -1.20711 -0.46921; H 0.68027 -0.25654 -0.71973; H 0.80572 1.01652 0.52100; H 0.92501 -0.70084 0.95647; H 4.32700 1.66400 -2.81379; H 1.67851 0.94547 -2.39707; H 2.89564 -0.08367 -2.55682; H 4.01094 -1.36282 -0.13549; 1 molecule converted`. ## Actual Behavior. `/opt/openbabel3.1.1/bin/obabel -:""C[C@H]([C@@H](C(=O)O)N)O"" --add-h --gen3d -oxyz`; ==============================; *** Open Babel Error in Do; 3D coordinate generation failed; 8. C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; C 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; N 0.00000 0.00000 0.00000; O 0.00000 0.00000 0.00000; 1 molecule converted; 1. ## Steps to Reproduce; described above. Using 2.4.1, the conversion is done successfully however, using 3.1.1, the conversion fails.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317
https://github.com/openbabel/openbabel/issues/2318:516,Testability,test,tested,516,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: WSL & Conda, Python 3.9. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Molecule with correct PDB output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->The PDB is outputting amino acids instead for the Methotrexate canonical smile that I tested. I have come across a similar problem too in docking. When using a ""BEN"" in the name column of the ligand pdb the docking software turned it into a benzene. Here it's similarly assigning amino acids to atoms where it should not. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior. -->; First (canonical) SMILE is methothrexate, taken from PUBCHEM. Does not work. Second one Ivermectin, also does not work. Third one is Ibuprofen, seems to work fine. So it's either on my end or on obabel's.; ```; from openbabel import openbabel as ob; from openbabel import pybel. smiles =""CN(CC1=CN=C2C(=N1)C(=NC(=N2)N)N)C3=CC=C(C=C3)C(=O)NC(CCC(=O)O)C(=O)O""; smiles=""CCC(C)C1C(CCC2(O1)CC3CC(O2)CC=C(C(C(C=CC=C4COC5C4(C(C=C(C5O)C)C(=O)O3)O)C)OC6CC(C(C(O6)C)OC7CC(C(C(O7)C)O)OC)OC)C)C""; smiles=""CC(C)CC1=CC=C(C=C1)C(C)C(=O)O""; mol = pybel.readstring(""can"", smiles); mol.addh(); mol.make3D(); mol = mol.OBMol. cs_obj = ob.OBConformerSearch(); cs_obj.Setup(mol, 5, 5, 5, 25) ; score = ob.OBMinimizingEnergyConformerScore() ; cs_obj.SetScore(score); cs_obj.Search(); mol.DeleteNonPolarHydrogens(). molecule = pybel.Molecule(mol); print(pybel.informats); molecule.write(""pdb"", ""x.pdb"", overwrite=True); ```. ![image](https://user-images.githubusercontent.com/20364007/105250",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2318
https://github.com/openbabel/openbabel/issues/2318:930,Testability,test,test,930,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: WSL & Conda, Python 3.9. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Molecule with correct PDB output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->The PDB is outputting amino acids instead for the Methotrexate canonical smile that I tested. I have come across a similar problem too in docking. When using a ""BEN"" in the name column of the ligand pdb the docking software turned it into a benzene. Here it's similarly assigning amino acids to atoms where it should not. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior. -->; First (canonical) SMILE is methothrexate, taken from PUBCHEM. Does not work. Second one Ivermectin, also does not work. Third one is Ibuprofen, seems to work fine. So it's either on my end or on obabel's.; ```; from openbabel import openbabel as ob; from openbabel import pybel. smiles =""CN(CC1=CN=C2C(=N1)C(=NC(=N2)N)N)C3=CC=C(C=C3)C(=O)NC(CCC(=O)O)C(=O)O""; smiles=""CCC(C)C1C(CCC2(O1)CC3CC(O2)CC=C(C(C(C=CC=C4COC5C4(C(C=C(C5O)C)C(=O)O3)O)C)OC6CC(C(C(O6)C)OC7CC(C(C(O7)C)O)OC)OC)C)C""; smiles=""CC(C)CC1=CC=C(C=C1)C(C)C(=O)O""; mol = pybel.readstring(""can"", smiles); mol.addh(); mol.make3D(); mol = mol.OBMol. cs_obj = ob.OBConformerSearch(); cs_obj.Setup(mol, 5, 5, 5, 25) ; score = ob.OBMinimizingEnergyConformerScore() ; cs_obj.SetScore(score); cs_obj.Search(); mol.DeleteNonPolarHydrogens(). molecule = pybel.Molecule(mol); print(pybel.informats); molecule.write(""pdb"", ""x.pdb"", overwrite=True); ```. ![image](https://user-images.githubusercontent.com/20364007/105250",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2318
https://github.com/openbabel/openbabel/issues/2319:527,Availability,Error,Error,527,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1+dfsg-4 (Debian package); Operating system and version: Debian unstable. ## Expected Behavior; SMILES for [COD entry 4021153](https://www.crystallography.net/cod/4021153.html) is:; ```; C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; ```; To me this SMILES looks fine. Both double bonds with cis/trans stereochemistry are defined unambiguously. ## Actual Behavior; Open Babel emits ""Error in cis/trans stereochemistry"":; ```; $ echo 'C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC' | obabel -i smi -o smi; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. C(=O)(C=C1CN(C/C/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC	; 1 molecule converted; ```; Is there a problem with the SMILES, or with the way Open Babel perceives cis/trans stereochemistry in this descriptor?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319
https://github.com/openbabel/openbabel/issues/2319:572,Availability,echo,echo,572,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1+dfsg-4 (Debian package); Operating system and version: Debian unstable. ## Expected Behavior; SMILES for [COD entry 4021153](https://www.crystallography.net/cod/4021153.html) is:; ```; C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; ```; To me this SMILES looks fine. Both double bonds with cis/trans stereochemistry are defined unambiguously. ## Actual Behavior; Open Babel emits ""Error in cis/trans stereochemistry"":; ```; $ echo 'C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC' | obabel -i smi -o smi; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. C(=O)(C=C1CN(C/C/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC	; 1 molecule converted; ```; Is there a problem with the SMILES, or with the way Open Babel perceives cis/trans stereochemistry in this descriptor?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319
https://github.com/openbabel/openbabel/issues/2319:732,Availability,Error,Error,732,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1+dfsg-4 (Debian package); Operating system and version: Debian unstable. ## Expected Behavior; SMILES for [COD entry 4021153](https://www.crystallography.net/cod/4021153.html) is:; ```; C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; ```; To me this SMILES looks fine. Both double bonds with cis/trans stereochemistry are defined unambiguously. ## Actual Behavior; Open Babel emits ""Error in cis/trans stereochemistry"":; ```; $ echo 'C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC' | obabel -i smi -o smi; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. C(=O)(C=C1CN(C/C/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC	; 1 molecule converted; ```; Is there a problem with the SMILES, or with the way Open Babel perceives cis/trans stereochemistry in this descriptor?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319
https://github.com/openbabel/openbabel/issues/2320:427,Energy Efficiency,charge,charges,427,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: `2.3.2 -- Jul 26 2017 -- 20:11:55`, `2.4.1 -- Nov 12 2018 -- 12:24:14`; Operating system and version: `Ubuntu 18.04.5 LTS`, `Debian GNU/Linux 10 (buster)` respectively. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; `obabel -r` preserves (copy) partial charges of the source molecule. Simultaneous use of `-r` and `--partialcharge <scheme>` options results in partialcharges, calculated using selected scheme.; ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none; @<TRIPOS>MOLECULE; *****; 7 5 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.7048 1.4481 -0.1184 N.3 1 UNL1 0.0000; 2 O 0.5758 -1.2277 0.3422 O.3 2 HOH2 0.0000; 3 H 2.6143 1.1152 0.1922 H 1 UNL1 0.0000; 4 H 1.0557 0.7031 0.1816 H 1 UNL1 0.0000; 5 H 1.7121 1.3621 -1.1355 H 1 UNL1 0.0000; 6 H 1.0551 -1.9044 -0.1604 H 0 HOH0 0.0000; 7 H 0.0545 -1.7609 0.9646 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 3 1; 2 1 4 1; 3 1 5 1; 4 2 6 1; 5 2 7 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 0.0000; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.0000; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.0000; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320
https://github.com/openbabel/openbabel/issues/2320:2211,Energy Efficiency,charge,charges,2211,"rtialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 0.0000; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.0000; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.0000; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -r` forcefully changes original molecule(s) charges to some values of unknown origin which are numerically close to Gasteiger charges but not equal to those. This behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320
https://github.com/openbabel/openbabel/issues/2320:2293,Energy Efficiency,charge,charges,2293,"rtialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 0.0000; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.0000; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.0000; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -r` forcefully changes original molecule(s) charges to some values of unknown origin which are numerically close to Gasteiger charges but not equal to those. This behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320
https://github.com/openbabel/openbabel/issues/2320:3789,Energy Efficiency,charge,charges,3789,"his behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.1146; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.1146; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.1146; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 -0.3437; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.1146; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.1146; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.1146; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. Gasteiger charges for the same molecule:; ```; $ obabel -:""N.N"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r | obabel -imol2 -omol2 --partialcharge gasteiger; 1 molecule converted; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.9490 -1.0612 -1.2838 N.3 1 UNL111 -0.3521; 2 H 2.7444 -0.5633 -0.8902 H 1 UNL111 0.1174; 3 H 1.5303 -1.5587 -0.4944 H 1 UNL111 0.1174; 4 H 1.2564 -0.3355 -1.4839 H 1 UNL111 0.1174; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320
https://github.com/openbabel/openbabel/issues/2320:2586,Testability,test,test,2586,"cule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.3360 0.8278 1.4241 N.3 1 UNL11 0.0000; 2 H 2.2288 1.0378 0.9788 H 1 UNL11 0.0000; 3 H 0.6713 1.4731 1.0055 H 1 UNL11 0.0000; 4 H 1.0728 -0.0780 1.0207 H 1 UNL11 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; `obabel -r` forcefully changes original molecule(s) charges to some values of unknown origin which are numerically close to Gasteiger charges but not equal to those. This behavior is uncontrollable and cannot be changed by `--partialcharge` option. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; `obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none` works as expected but `obabel -imol2 -omol2 -r` produces incorrect output which is listed below. Explicitly selected `--partialcharge` scheme does not affect anything. ```; $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 N 1.6600 -1.4704 0.6450 N.3 1 UNL11 -0.3437; 2 H 2.5902 -1.1111 0.4256 H 1 UNL11 0.1146; 3 H 1.1235 -0.6251 0.8901 H 1 UNL11 0.1146; 4 H 1.2604 -1.7322 -0.2588 H 1 UNL11 0.1146; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; 3 1 4 1; 1 molecule converted. $ obabel -:""N.O"" -h --gen3D -omol2 --partialcharge none | obabel -imol2 -omol2 -r --partialcharge none; 1 molecule converted; @<TRIPOS>MOLECULE; *****; 4 3 0 0 0; SMALL",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2320
https://github.com/openbabel/openbabel/issues/2322:153,Availability,error,error,153,"I'm having trouble installing Open Babel on my Macbook Pro. I have Homebrew and have been running ""brew install open-babel"" in Terminal but get the same error every time: no formulae found in taps. I have no coding experience and have no idea what to do - I just need a way to convert my .mol files into .pdb files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2322
https://github.com/openbabel/openbabel/issues/2322:19,Deployability,install,installing,19,"I'm having trouble installing Open Babel on my Macbook Pro. I have Homebrew and have been running ""brew install open-babel"" in Terminal but get the same error every time: no formulae found in taps. I have no coding experience and have no idea what to do - I just need a way to convert my .mol files into .pdb files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2322
https://github.com/openbabel/openbabel/issues/2322:104,Deployability,install,install,104,"I'm having trouble installing Open Babel on my Macbook Pro. I have Homebrew and have been running ""brew install open-babel"" in Terminal but get the same error every time: no formulae found in taps. I have no coding experience and have no idea what to do - I just need a way to convert my .mol files into .pdb files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2322
https://github.com/openbabel/openbabel/pull/2324:596,Deployability,update,updated,596,"For the GitHub workflows, the `set-env` and `set-path` commands have been deprecated and removed. - https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/; - https://github.blog/changelog/2020-11-09-github-actions-removing-set-env-and-add-path-commands-on-november-16/. This PR replaces one `set_env` command in the `build_cmake.yml` according to the GitHub Environment Files documentation. - https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files. Also, the `peter-evans/create-pull-request` has also been updated to 3.8.0 as well for this issue.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2324
https://github.com/openbabel/openbabel/pull/2328:242,Deployability,update,updated,242,"If openbabel can't find the txt datafiles, for many datatypes there is a; built-in version that is compiled in. This compiled in header was; manually generated by running a script in the data directory. I; realized these headers haven't been updated in years and are out of sync; with the txt files (the newer versions of which fix several important bugs). ; I've moved generation of these headers into the cmake; system so they are kept in sync and added a few (e.g. spacegroup didn't; have a compiled in version and this was reported as a warning when; people were using smina).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2328
https://github.com/openbabel/openbabel/issues/2329:866,Availability,error,error,866,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2329:1315,Availability,error,error,1315,"racker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```python; from openbabel import pybel, InternalToCartesian. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ics = mol.OBMol.GetInternalCoord(); mol.OBMol.SetInternalCoord(ics); InternalToCarte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2329:685,Deployability,update,update,685,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2329:827,Integrability,interface,interface,827,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2329:1509,Integrability,interface,interface,1509," and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```python; from openbabel import pybel, InternalToCartesian. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ics = mol.OBMol.GetInternalCoord(); mol.OBMol.SetInternalCoord(ics); InternalToCartesian(ics, mol.OBMol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2329:1991,Testability,test,test,1991," and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. I am looking to update a molecule with new internal coordinates, but am running into difficulty with the `InternalToCartesian` function when using the Python interface to OpenBabel. It gives me an error about Type mismatch:. ```; TypeError Traceback (most recent call last); <ipython-input-36-435f8694755f> in <module>; 6 ics = mol.OBMol.GetInternalCoord(); 7 mol.OBMol.SetInternalCoord(ics); ----> 8 InternalToCartesian(ics, mol). TypeError: in method 'InternalToCartesian', argument 1 of type 'std::vector< OpenBabel::OBInternalCoord *,std::allocator< OpenBabel::OBInternalCoord * > > &'; ```. Any thoughts on how to correct or get around this error?. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows Subsystem for Linux (Ubuntu 20.04). ## Expected Behavior; Works the same way as from the C++ interface. Molecule's internal coordinates changed based on new input structure. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. `TypeError` shown above. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```python; from openbabel import pybel, InternalToCartesian. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ics = mol.OBMol.GetInternalCoord(); mol.OBMol.SetInternalCoord(ics); InternalToCartesian(ics, mol.OBMol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2329
https://github.com/openbabel/openbabel/issues/2331:85,Availability,avail,available,85,"Hello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2331:300,Availability,avail,available,300,"Hello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2331:422,Availability,avail,available,422,"Hello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2331:14,Deployability,install,installing,14,"Hello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2331:382,Modifiability,Plugin,Plugins,382,"Hello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2331:1899,Testability,test,test,1899,"ello,. After installing Openbabel 3.1.1 on my computer, some output formats are not available such as FH format, Fenske-Hall Z-Matrix format, see image below.; This is not coming from Openbabel program but it seems from my computer (64 bits, Latitude 5480, win10). Any idea why some formats are not available on my computer?; Please note that in View / Select set of formats or in Plugins / Formats, the FH format is not available as well.; Thanks. . ![Image1](https://user-images.githubusercontent.com/79590079/109020913-b2c23a00-76ba-11eb-9da2-fa2d9d8063ba.png); <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Win10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to have the possiblity to select the FH output format.; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Some output formats are not showing up.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331
https://github.com/openbabel/openbabel/issues/2332:962,Availability,error,error,962,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332
https://github.com/openbabel/openbabel/issues/2332:1083,Availability,error,error,1083,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332
https://github.com/openbabel/openbabel/issues/2332:1127,Availability,Error,Error,1127,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332
https://github.com/openbabel/openbabel/issues/2332:891,Integrability,interface,interface,891,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332
https://github.com/openbabel/openbabel/issues/2332:1735,Testability,test,test,1735,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win 10, python 3.8. ## Expected Behavior; I want to convert the smi to 3D structure and save the mol in mol2 format. But the jupyter lab interface was restarted automatically after the code was executed with error information.; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; the reported error is information below,; *** Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment c1cccnc1 in rigid-fragments.txt has all zero coordinates. <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; from openbabel import pybel; mol = pybel.readstring(""smi"", ""OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O""); mol.make3D(); <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332
https://github.com/openbabel/openbabel/issues/2333:1472,Testability,test,test,1472,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes. ; -->; If a chlorine atom is represented as CL instead of Cl in a file Open Babel, does not properly convert the symbol. This can easily be seen when writing the SMILES out for the file. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: v3.1.1 conda-forge; Operating system and version: Manjaro 20.2.1, Python 3.8. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; SMILES: CCl. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; SMILES: [CH3].*; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Writing the SMILES string for the molecule below resulted in the [CH3].* SMILES output.; ```; from openbabel import pybel. mol = next(pybel.readfile(""xyz"", ""ccl.xyz"")); print(mol.write(""smi""); ```; 5. C -3.25634 0.95398 0.05312; CL -1.48936 0.95398 0.05311; H -3.61336 1.82622 0.60505; H -3.61337 0.03988 0.53253; H -3.61338 0.99586 -0.97822",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333
https://github.com/openbabel/openbabel/issues/2334:208,Security,validat,validation,208,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334
https://github.com/openbabel/openbabel/issues/2334:390,Usability,guid,guided,390,"Hello everyone,. I am Ayush Paliwal, a 3rd-year student at the Indian Institute of Technology (BHU), Varanasi. I am interested in working with OpenBabel for GSoC 2021. I want to work on the project Develop a validation and standardization filter. I have good experience in C++, python and JS. I also worked on a molecular simulation project using MAPS software.; I would be grateful if you guided me on how to get more involved, contribute.; Looking forward to contributing!. Sincerely,. Ayush Paliwal.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334
https://github.com/openbabel/openbabel/issues/2336:180,Energy Efficiency,charge,charges,180,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:214,Energy Efficiency,charge,charges,214,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:269,Energy Efficiency,charge,charge,269,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:328,Energy Efficiency,charge,charges,328,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:343,Energy Efficiency,charge,charge,343,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:400,Energy Efficiency,charge,charges,400,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:451,Energy Efficiency,charge,charges,451,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:548,Energy Efficiency,charge,charges,548,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:840,Energy Efficiency,charge,charges,840,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:1164,Energy Efficiency,charge,charges,1164,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2336:200,Integrability,depend,depend,200,"- [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. Open Babel version: 3.1.0; Operating system and version: Linux. Hello,. When assigning Gasteiger charges the results depend on the charges that already exist in the molecule. I expected charge methods to be independent of the values of existing charges. Other charge methods, e.g. MMFF94, are independent of existing charges. It seems that OpenBabel uses the existing charges as seed values for the Gasteiger iterations. When the input is a SMILES string Gasteiger charges for water are about 0.4/0.2.; ```; $ obabel -:""O"" -o mol2 --gen3d --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9435 -0.0361 0.0680 O.3 1 HOH1 -0.4105; 2 H 1.9114 -0.0819 0.0757 H 0 HOH0 0.2052; 3 H 0.6646 -0.9512 0.2223 H 0 HOH0 0.2052; ```. Let's consider a mol2 file with absurd charges:; ```; $ cat absurd-water.mol2 ; @<TRIPOS>MOLECULE; *****; 3 2 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH1 10.0000; 2 H 1.9185 -0.1017 0.0185 H 0 HOH0 -5.0000; 3 H 0.6717 -0.6568 -0.6664 H 0 HOH0 0.0000; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1; ```. using it as input results in also absurd charges; ```; $ obabel absurd-water.mol2 -o mol2 --partialcharge gasteiger; @<TRIPOS>ATOM; 1 O 0.9506 -0.0725 0.0546 O.3 1 HOH11 -3.5986; 2 H1 1.9185 -0.1017 0.0185 H 1 <1> 2.3946; 3 H2 0.6717 -0.6568 -0.6664 H 1 <1> 6.2040; ```. Not sure this is a bug or just a behavior that I didn't expect. May be related to #2320",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2336
https://github.com/openbabel/openbabel/issues/2339:2363,Availability,error,error,2363,"ules:. ```; M END; $$$$. OpenBabel03252112043D; ```. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. When using:. ```; dummy_file_cml_fp2 = pybel.Outputfile('cml', 'test_data/output2.cml', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); mymol = pybel.readstring(""smi"", smiles[1]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); ```. it produces a file with the following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2339:2437,Availability,error,error,2437," instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. When using:. ```; dummy_file_cml_fp2 = pybel.Outputfile('cml', 'test_data/output2.cml', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); mymol = pybel.readstring(""smi"", smiles[1]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); ```. it produces a file with the following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2339:2491,Availability,error,error,2491,"-->. When using:. ```; dummy_file_cml_fp2 = pybel.Outputfile('cml', 'test_data/output2.cml', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); mymol = pybel.readstring(""smi"", smiles[1]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); ```. it produces a file with the following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2339:2663,Availability,Error,Error,2663,"-->. When using:. ```; dummy_file_cml_fp2 = pybel.Outputfile('cml', 'test_data/output2.cml', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); mymol = pybel.readstring(""smi"", smiles[1]); mymol.localopt(forcefield='mmff94', steps=1000); dummy_file_cml_fp2.write(mymol); ```. it produces a file with the following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2339:3869,Testability,test,test,3869,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2339:3256,Usability,simpl,simple,3256,"he following:. ```; <?xml version=""1.0""?>; <molecule formalCharge=""4"" xmlns=""http://www.xml-cml.org/schema"">; ...; </molecule>; ```. When using the above code for the mdl format it produces the following between molecules:. ```; M END. OpenBabel03252112043D; ```. If you then try to read all the molecules from either of these files pybel will only read the first one with mdl format with no error and will fail before reading any molecules with the cml format. The error produced for the cml files is:. ```; :1: parser error : Extra content at the end of the document; er=""1""/> <bond atomRefs2=""a72 a78"" order=""1""/> </bondArray></molecule>; ^; ==============================; *** Open Babel Error in XML Parser ./test_data/output2.cml; Extra content at the end of the document; ```. The formats for the files produces match those of a file with a single molecule in both cases. ; I do not think the Outputfile is correctly handling file formating for multiple molecules. If I manually modify the python output cml and mdl files to match the format produced by the command line then pybel is able to read them in correctly. For cml files since the hierarchy of the brackets changes with multiple molecules a new file needs to be written with the correct hierarchy. For the mdl files a simple delineator line could be added in the self.obConversion.Write(molecule.OBMol) for this format. ```; def write(self, molecule):; """"""Write a molecule to the output file. Required parameters:; molecule; """"""; if not self.filename:; raise IOError(""Outputfile instance is closed.""). if self.total == 0:; self.obConversion.WriteFile(molecule.OBMol, self.filename); else:; self.obConversion.Write(molecule.OBMol); self.total += 1; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2339
https://github.com/openbabel/openbabel/issues/2340:357,Availability,error,error,357,- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Oct 12 2020 -- 14:19:26; Operating system and version: macOS Big Sure 11.2.1. ## Expected Behavior; ```; obabel *.xyz -opdb -m; ```; Converts over 60.000 thousand .xyz files to .pdb files without giving an error message. . ## Actual Behavior; ```; ** Open Babel Error in OpenAndSetFormat; 0 molecules converted; Argument list too long; ```; Check why the argument list is too long. Are you operating on 64bit? Can you parallelize? It took for ever. . ## Steps to Reproduce; Create a directory with over 60.000 .xyz files and run; ```; obabel *.xyz -opdb -m; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2340
https://github.com/openbabel/openbabel/issues/2340:413,Availability,Error,Error,413,- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Oct 12 2020 -- 14:19:26; Operating system and version: macOS Big Sure 11.2.1. ## Expected Behavior; ```; obabel *.xyz -opdb -m; ```; Converts over 60.000 thousand .xyz files to .pdb files without giving an error message. . ## Actual Behavior; ```; ** Open Babel Error in OpenAndSetFormat; 0 molecules converted; Argument list too long; ```; Check why the argument list is too long. Are you operating on 64bit? Can you parallelize? It took for ever. . ## Steps to Reproduce; Create a directory with over 60.000 .xyz files and run; ```; obabel *.xyz -opdb -m; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2340
https://github.com/openbabel/openbabel/issues/2340:363,Integrability,message,message,363,- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Oct 12 2020 -- 14:19:26; Operating system and version: macOS Big Sure 11.2.1. ## Expected Behavior; ```; obabel *.xyz -opdb -m; ```; Converts over 60.000 thousand .xyz files to .pdb files without giving an error message. . ## Actual Behavior; ```; ** Open Babel Error in OpenAndSetFormat; 0 molecules converted; Argument list too long; ```; Check why the argument list is too long. Are you operating on 64bit? Can you parallelize? It took for ever. . ## Steps to Reproduce; Create a directory with over 60.000 .xyz files and run; ```; obabel *.xyz -opdb -m; ```,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2340
https://github.com/openbabel/openbabel/issues/2341:1477,Testability,test,test,1477,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43 (homebrew); Operating system and version: MacOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. I would like to be able to specify the write options when using mol.write() like in the Outputfile.write() or the Readfile() or ReadString(). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. The mol.write() does not support an opt dictionary. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2341
https://github.com/openbabel/openbabel/issues/2343:1902,Availability,error,errors,1902,"havior; <!-- Describe the intended output or what you expected to see. -->. There is varying behavior for these formats both when using python and when using the command line.; I would like to see openbabel replicate the export capabilities of ChemDraw. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Command Line Interface:. - When trying to convert cdxml to sdf the formula is brought along with the molecule in the data section, however, no annotations are brought. This makes it impossible to grab the name of the molecule since ChemDraw assigns a number to the ID field of the fragments in the original file. - When trying to convert a cdx to sdf nothing is brought along with the fragment. - When reading the smile from a cdxml file I get a different and incorrect smile than when reading from a cdx file. If you take the cdxml smile you get out and put it back into ChemDraw it produces a molecule with a bunch of valence errors. When taking the cdx smile and putting back into ChemDraw it reproduces the same molecule. Python:. - Cannot read cdx files . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command Line:; 1. Create Chemdraw file; 2. Create Molecule; 3. Annotate the name on the Molecule; 4. Export as cdx file; 5. Export as sdf file; 6. `obabel <input cdxml> -Oobabel_cdxml_sdf.sdf` and compare to chemdraw sdf; 7. `obabel <input cdx> -Oobabel_cdx_sdf.sdf` and compare to chemdraw sdf; 8. `obabel <input cdxml> -osmi -xk -xh` and compare to `obabel <input cdx> -osmi -xk -xh`. Python:; ```; from openbabel import pybel. for mol in pybel.readfile(""cdx"", <input cdx>):; total_molecules += 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2343
https://github.com/openbabel/openbabel/issues/2343:1287,Integrability,Interface,Interface,1287,"; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. There is varying behavior for these formats both when using python and when using the command line.; I would like to see openbabel replicate the export capabilities of ChemDraw. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Command Line Interface:. - When trying to convert cdxml to sdf the formula is brought along with the molecule in the data section, however, no annotations are brought. This makes it impossible to grab the name of the molecule since ChemDraw assigns a number to the ID field of the fragments in the original file. - When trying to convert a cdx to sdf nothing is brought along with the fragment. - When reading the smile from a cdxml file I get a different and incorrect smile than when reading from a cdx file. If you take the cdxml smile you get out and put it back into ChemDraw it produces a molecule with a bunch of valence errors. When taking the cdx smile and putting back into ChemDraw it reproduces the same molecule. Python:. - Cannot read cdx files . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2343
https://github.com/openbabel/openbabel/issues/2343:2213,Testability,test,test,2213,"havior; <!-- Describe the intended output or what you expected to see. -->. There is varying behavior for these formats both when using python and when using the command line.; I would like to see openbabel replicate the export capabilities of ChemDraw. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Command Line Interface:. - When trying to convert cdxml to sdf the formula is brought along with the molecule in the data section, however, no annotations are brought. This makes it impossible to grab the name of the molecule since ChemDraw assigns a number to the ID field of the fragments in the original file. - When trying to convert a cdx to sdf nothing is brought along with the fragment. - When reading the smile from a cdxml file I get a different and incorrect smile than when reading from a cdx file. If you take the cdxml smile you get out and put it back into ChemDraw it produces a molecule with a bunch of valence errors. When taking the cdx smile and putting back into ChemDraw it reproduces the same molecule. Python:. - Cannot read cdx files . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Command Line:; 1. Create Chemdraw file; 2. Create Molecule; 3. Annotate the name on the Molecule; 4. Export as cdx file; 5. Export as sdf file; 6. `obabel <input cdxml> -Oobabel_cdxml_sdf.sdf` and compare to chemdraw sdf; 7. `obabel <input cdx> -Oobabel_cdx_sdf.sdf` and compare to chemdraw sdf; 8. `obabel <input cdxml> -osmi -xk -xh` and compare to `obabel <input cdx> -osmi -xk -xh`. Python:; ```; from openbabel import pybel. for mol in pybel.readfile(""cdx"", <input cdx>):; total_molecules += 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2343
https://github.com/openbabel/openbabel/issues/2344:294,Availability,echo,echo,294,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1+dfsg-5 (Debian package); Operating system and version: Debian unstable. ## Expected Behavior; Suppose I have an atom with 10 attached hydrogens:; ```bash; $ echo '[Zn]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])' | obabel -i smi -o smi; ```; I would expect to get either the same output, or `[ZnH9][H]`, since more than 9 hydrogens in square brackets are not allowed neither by Daylight, nor OpenSMILES, nor IUPAC SMILES+ specifications. ## Actual Behavior; ```bash; $ echo '[Zn]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])' | obabel -i smi -o smi ; [ZnH10]	; 1 molecule converted; ```; SMILES `[ZnH10]` does not conform to any of existing SMILES specifications, thus I have a feeling that such descriptor would break stricter SMILES reader. As a work-around one may use `-xh` command line option to output explicit hydrogens, but I would argue that SMILES like `[ZnH10]` should not be outputted by default.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2344
https://github.com/openbabel/openbabel/issues/2344:612,Availability,echo,echo,612,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1+dfsg-5 (Debian package); Operating system and version: Debian unstable. ## Expected Behavior; Suppose I have an atom with 10 attached hydrogens:; ```bash; $ echo '[Zn]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])' | obabel -i smi -o smi; ```; I would expect to get either the same output, or `[ZnH9][H]`, since more than 9 hydrogens in square brackets are not allowed neither by Daylight, nor OpenSMILES, nor IUPAC SMILES+ specifications. ## Actual Behavior; ```bash; $ echo '[Zn]([H])([H])([H])([H])([H])([H])([H])([H])([H])([H])' | obabel -i smi -o smi ; [ZnH10]	; 1 molecule converted; ```; SMILES `[ZnH10]` does not conform to any of existing SMILES specifications, thus I have a feeling that such descriptor would break stricter SMILES reader. As a work-around one may use `-xh` command line option to output explicit hydrogens, but I would argue that SMILES like `[ZnH10]` should not be outputted by default.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2344
https://github.com/openbabel/openbabel/pull/2345:72,Energy Efficiency,reduce,reduced,72,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:933,Energy Efficiency,energy,energyconformerscore,933,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:30,Performance,optimiz,optimized,30,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:307,Testability,test,test,307,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:369,Testability,test,test,369,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:1274,Usability,learn,learn,1274,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2345:1313,Usability,learn,learn,1313,## Beep boop. Your images are optimized!. Your image file size has been reduced by **16%** 🎉. <details>; <summary>; Details; </summary>. | File | Before | After | Percent reduction |; |:--|:--|:--|:--|; | /data/splash.png | 52.43kb | 40.58kb | 22.60% |; | /doc/splash.png | 52.43kb | 40.58kb | 22.60% |; | /test/files/aromatics.png | 276.60kb | 217.29kb | 21.44% |; | /test/files/alias.png | 13.95kb | 11.22kb | 19.56% |; | /doc/images/rmsdconformerscore.png | 44.32kb | 38.06kb | 14.13% |; | /doc/images/spectrophore_cage.png | 36.35kb | 32.53kb | 10.52% |; | /doc/images/tetraplanar.png | 24.58kb | 22.22kb | 9.59% |; | /doc/images/tetrahedral.png | 14.24kb | 12.91kb | 9.34% |; | /doc/images/cistrans.png | 7.30kb | 6.71kb | 8.12% |; | /doc/images/squareplanar.png | 8.55kb | 7.89kb | 7.71% |; | /doc/images/tetranonplanar.png | 47.94kb | 44.66kb | 6.84% |; | /doc/images/SPshapes.png | 57.16kb | 53.47kb | 6.45% |; | /doc/images/energyconformerscore.png | 31.76kb | 30.00kb | 5.54% |; | /doc/images/gettransref.png | 1.30kb | 1.23kb | 5.54% |; | /doc/images/getcisref.png | 1.27kb | 1.22kb | 3.78% |; | | | | |; | **Total :** | **670.15kb** | **560.54kb** | **16.36%** |; </details>. ---. **Black Lives Matter** | [💰 donate](https://blm-bookmarks.carrd.co/#donate) | [🎓 learn](https://blm-bookmarks.carrd.co/#learn) | [✍🏾 sign](https://blm-bookmarks.carrd.co/#sign). [📝 docs](https://imgbot.net/docs) | [:octocat: repo](https://github.com/dabutvin/ImgBot) | [🙋🏾 issues](https://github.com/dabutvin/ImgBot/issues) | [🏅 swag](https://goo.gl/forms/1GX7wlhGEX8nkhGO2) | [🏪 marketplace](https://github.com/marketplace/imgbot),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2345
https://github.com/openbabel/openbabel/pull/2346:11,Deployability,Install,Install,11,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:50,Deployability,install,install,50,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:156,Deployability,install,install,156,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:210,Deployability,install,installed,210,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:439,Deployability,install,install,439,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:461,Deployability,install,install,461,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:501,Deployability,install,installing,501,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/pull/2346:192,Integrability,interface,interface,192,"Use pip to Install from the source code:; Firstly install Eigen3 and swig, then; ```sh; git clone https://github.com/openbabel/openbabel; cd openbabel; pip install -v .; ```; OpenBabel Python interface will be installed. So, it is also possible to build wheels. <s>I created a GitHub Action to build automatically.</s> (CI still has some problems but building manually is OK); If you can upload wheels to the pypi, then users can use `pip install openbabel` to install; OpenBabel directly without pre-installing anything.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2346
https://github.com/openbabel/openbabel/issues/2347:909,Energy Efficiency,energy,energy,909,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are diffe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1249,Energy Efficiency,energy,energy,1249,"q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1265,Energy Efficiency,energy,energy,1265,"q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1282,Energy Efficiency,Energy,Energy,1282,"q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1334,Energy Efficiency,energy,energy,1334,"out using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1474,Energy Efficiency,energy,energy,1474," a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avog",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1602,Energy Efficiency,energy,energy,1602,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1625,Energy Efficiency,energy,energy,1625,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1794,Energy Efficiency,energy,energy,1794,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1808,Energy Efficiency,energy,energy,1808,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1929,Energy Efficiency,energy,energy,1929,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:2495,Energy Efficiency,energy,energy,2495,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1713,Testability,test,tested,1713,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:1913,Testability,test,tests,1913,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2347:2210,Testability,test,test,2210,"r add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: macOS 11.2.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect the energy from the `--gen3d best` command to deliver the global minimum or at least some <= the `--gen3d` option. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I first tried to calculate the energy using `--energy --append ""Energy""` and comparing this. This produced the same energy for both the default and best options and the structures were completely different. . I would expect based on the structure that the energy for the `--gen3d` default output would be a lower. . I took both molecules and imported into Avogadro and calculated the energy. The calculated energy for the `--gen3d` option was lower than that for the `--gen3d best` option. I've tested this with a few molecules and so far either the commands produce the same energy or the energy from the default option is lower than that of the ""best"" option. It is worth noting in all of the tests where the energy was the same they were negative values. While when they are different they are positive values. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Run; ```; obabel -:""<input smile>"" -Otest_data/gen3d_default.vmol --gen3d; obabel -:""<input smile>"" -Otest_data/gen3d_best.vmol --gen3d best; ```; 2. Open in Avogadro and comput energy.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2347
https://github.com/openbabel/openbabel/issues/2348:1319,Testability,log,log,1319,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like there to be some option for turning the verbosity on or off of the command. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Right now you can see in https://github.com/openbabel/openbabel/blob/master/src/conformersearch.cpp that in the constructor the default log is set to std out. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2348
https://github.com/openbabel/openbabel/issues/2348:1522,Testability,test,test,1522,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like there to be some option for turning the verbosity on or off of the command. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Right now you can see in https://github.com/openbabel/openbabel/blob/master/src/conformersearch.cpp that in the constructor the default log is set to std out. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2348
https://github.com/openbabel/openbabel/issues/2349:1245,Availability,fault,fault,1245,"q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = '",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:1627,Energy Efficiency,energy,energy,1627,"ture request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.make3D(steps=500); obmol = mymol.OBMol; #gen3d.Do(obmol, ""slow""); #mymol = pybel.Molecule(obmol); #obmol = mymol.OBMol; print(ff.Energy()); cs_obj = openbabel.OBConformerSearch(); cs_obj.Setup(obmol, 1, 5, 5, 2); #score = openbabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:1649,Energy Efficiency,energy,energy,1649,"ture request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.make3D(steps=500); obmol = mymol.OBMol; #gen3d.Do(obmol, ""slow""); #mymol = pybel.Molecule(obmol); #obmol = mymol.OBMol; print(ff.Energy()); cs_obj = openbabel.OBConformerSearch(); cs_obj.Setup(obmol, 1, 5, 5, 2); #score = openbabel.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:2553,Energy Efficiency,Energy,Energy,2553," a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.make3D(steps=500); obmol = mymol.OBMol; #gen3d.Do(obmol, ""slow""); #mymol = pybel.Molecule(obmol); #obmol = mymol.OBMol; print(ff.Energy()); cs_obj = openbabel.OBConformerSearch(); cs_obj.Setup(obmol, 1, 5, 5, 2); #score = openbabel.OBMinimizingEnergyConformerScore(); score = openbabel.OBEnergyConformerScore(); cs_obj.SetScore(score); cs_obj.Search(); #obmol.DeleteNonPolarHydrogens(); mymol_new = pybel.Molecule(obmol); print(ff.Energy()); #mymol_new.localopt(forcefield='mmff94', steps=5000); #print(ff.Energy()); mymol_new.write(format='vmol', filename='test_data/test_energy2.vmol', overwrite=True); #dummy_file_cml_fp.write(mymol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:2855,Energy Efficiency,Energy,Energy,2855," a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.make3D(steps=500); obmol = mymol.OBMol; #gen3d.Do(obmol, ""slow""); #mymol = pybel.Molecule(obmol); #obmol = mymol.OBMol; print(ff.Energy()); cs_obj = openbabel.OBConformerSearch(); cs_obj.Setup(obmol, 1, 5, 5, 2); #score = openbabel.OBMinimizingEnergyConformerScore(); score = openbabel.OBEnergyConformerScore(); cs_obj.SetScore(score); cs_obj.Search(); #obmol.DeleteNonPolarHydrogens(); mymol_new = pybel.Molecule(obmol); print(ff.Energy()); #mymol_new.localopt(forcefield='mmff94', steps=5000); #print(ff.Energy()); mymol_new.write(format='vmol', filename='test_data/test_energy2.vmol', overwrite=True); #dummy_file_cml_fp.write(mymol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:2930,Energy Efficiency,Energy,Energy,2930," a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""smi"", smiles[0]); mymol.make3D(steps=500); obmol = mymol.OBMol; #gen3d.Do(obmol, ""slow""); #mymol = pybel.Molecule(obmol); #obmol = mymol.OBMol; print(ff.Energy()); cs_obj = openbabel.OBConformerSearch(); cs_obj.Setup(obmol, 1, 5, 5, 2); #score = openbabel.OBMinimizingEnergyConformerScore(); score = openbabel.OBEnergyConformerScore(); cs_obj.SetScore(score); cs_obj.Search(); #obmol.DeleteNonPolarHydrogens(); mymol_new = pybel.Molecule(obmol); print(ff.Energy()); #mymol_new.localopt(forcefield='mmff94', steps=5000); #print(ff.Energy()); mymol_new.write(format='vmol', filename='test_data/test_energy2.vmol', overwrite=True); #dummy_file_cml_fp.write(mymol); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2349:1482,Testability,test,test,1482,"to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 -- Nov 21 2020 -- 20:38:43; Operating system and version: MacOS 11.2.3. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expect to be able to write an output file from python after running a conformer search like I am able to from the command line. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I get a segmentation fault when writing the output file when running in python. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have tried running with/without gen3d, energy and minimizing energy scores, writing through the molecule class and through the OutputFile class. The setup is for 1 conformer and a convergence of 2 so it will run quickly, but I have tried it with the defaults of 30 conformers and a convergence of 25. ```python; import sys; sys.path.append('/usr/local/lib/python3.9/site-packages'); import pandas as pd; from openbabel import openbabel; from openbabel import pybel. gen3d = openbabel.OBOp.FindType(""gen3d""); ff = openbabel.OBForceField.FindForceField(""mmff94""). excel_file = 'test_data/blah.xlsx'; df = pd.read_excel(excel_file); #print(df.columns); smiles = df['SMILES ']; #print(smiles[0]); dummy_file_cml_fp = pybel.Outputfile('vmol', 'test_data/test_energy2.vmol', overwrite=True); mymol = pybel.readstring(""sm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2349
https://github.com/openbabel/openbabel/issues/2350:1377,Availability,error,error,1377,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2350:514,Energy Efficiency,charge,charge,514,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2350:1212,Energy Efficiency,charge,charge,1212,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2350:1409,Energy Efficiency,CHARGE,CHARGE,1409,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2350:1842,Energy Efficiency,charge,charge,1842,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2350:379,Usability,simpl,simply,379,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 from conda-forge (py39hc681964_1); Operating system and version: Ubuntu 20.04. ## Expected Behavior; While the mol2 sections are not required to be in a certain format, certain readers (e.g. Antechamber) assume that the ATOM and BOND section will be the first two sections. Ideally, it would simply skip over the UNITY_ATOM_ATTR section and move onto the BOND section. One workaround is to use `-xu` to suppress writing formal charge information to the file, but then it is not a complete mol2 file. ## Actual Behavior; Antechamber replicates the last atom read 3 times (for 3 lines in the UNITY_ATOM_ATTR section). This has been brought up on the Amber mailing list (http://archive.ambermd.org/202103/0308.html), and is definitely a deficiency in the way Amber reads mol2 files. However, it may be easier for users to change the order of mol2 sections as written with OpenBabel. ## Steps to Reproduce; `obabel -:""[O--]"" -o mol2 -O ominus.mol2` produces the following file:; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; @<TRIPOS>BOND; ```; Running `antechamber -dr no -i ominus.mol2 -fi mol2 -o tmp -fo ac` with this file ends up with 4 oxygen atoms, but doesn't produce an error. The file is below:; ```; CHARGE -2.00 ( -2 ); Formula: O4 ; ATOM 1 O HOH 1 0.000 0.000 0.000 0.000000 os; ATOM 2 O1 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 3 O2 MOL 1 0.000 0.000 0.000 0.000000 os; ATOM 4 O3 MOL 1 0.000 0.000 0.000 0.000000 os; ```. However, rearranging the sections to be; ```; @<TRIPOS>MOLECULE; *****; 1 0 0 0 0; SMALL; GASTEIGER. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 1 HOH1 0.0000; @<TRIPOS>BOND; @<TRIPOS>UNITY_ATOM_ATTR; 1 1; charge -2; ```; gives a much more reasonable output with the correct number of atoms.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2350
https://github.com/openbabel/openbabel/issues/2352:425,Availability,error,error,425,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora release 32 (Thirty Two) x64 . ## Expected Behavior; Following the installation instruction I have created build dir, navigated into it and run `cmake ..`; I would expect to make files to be generated. ## Actual Behavior; It fails with the following error:; `CMake Error at CMakeLists.txt:663 (add_subdirectory):; The source directory. /home/hiisi/workspace/openbabel-3.1.1-source/openbabel-3.1.1/tools. does not contain a CMakeLists.txt file.; `. ## Steps to Reproduce; checkout from git and follow the build instructions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2352
https://github.com/openbabel/openbabel/issues/2352:440,Availability,Error,Error,440,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora release 32 (Thirty Two) x64 . ## Expected Behavior; Following the installation instruction I have created build dir, navigated into it and run `cmake ..`; I would expect to make files to be generated. ## Actual Behavior; It fails with the following error:; `CMake Error at CMakeLists.txt:663 (add_subdirectory):; The source directory. /home/hiisi/workspace/openbabel-3.1.1-source/openbabel-3.1.1/tools. does not contain a CMakeLists.txt file.; `. ## Steps to Reproduce; checkout from git and follow the build instructions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2352
https://github.com/openbabel/openbabel/issues/2352:176,Deployability,release,release,176,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora release 32 (Thirty Two) x64 . ## Expected Behavior; Following the installation instruction I have created build dir, navigated into it and run `cmake ..`; I would expect to make files to be generated. ## Actual Behavior; It fails with the following error:; `CMake Error at CMakeLists.txt:663 (add_subdirectory):; The source directory. /home/hiisi/workspace/openbabel-3.1.1-source/openbabel-3.1.1/tools. does not contain a CMakeLists.txt file.; `. ## Steps to Reproduce; checkout from git and follow the build instructions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2352
https://github.com/openbabel/openbabel/issues/2352:242,Deployability,install,installation,242,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora release 32 (Thirty Two) x64 . ## Expected Behavior; Following the installation instruction I have created build dir, navigated into it and run `cmake ..`; I would expect to make files to be generated. ## Actual Behavior; It fails with the following error:; `CMake Error at CMakeLists.txt:663 (add_subdirectory):; The source directory. /home/hiisi/workspace/openbabel-3.1.1-source/openbabel-3.1.1/tools. does not contain a CMakeLists.txt file.; `. ## Steps to Reproduce; checkout from git and follow the build instructions.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2352
https://github.com/openbabel/openbabel/issues/2353:1635,Testability,test,test,1635,"I have a molecule which SMILES is `CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1`, after add H by openbabel, there is a `C` with `+1`. <!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10 and centos7. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; ![image](https://user-images.githubusercontent.com/5920217/114177985-a98de380-996f-11eb-84ed-574ab5b5d8ba.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; ![image](https://user-images.githubusercontent.com/5920217/114178002-b0b4f180-996f-11eb-9a7a-66dabb2e9e89.png). ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; obabel -:'CC(C)CC(=O)Nc1cc(-c2ccc(C(N)=O)cc2C(=O)O)cc(C2CC(C)(c3ccccc3)c3cc(C(=N)N)ccc3N2)c1' -O output.sdf -p 7; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2353
https://github.com/openbabel/openbabel/issues/2356:394,Availability,Error,Error,394,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: ```3.1.0```; Operating system and version: ```Windows 10```. ## Expected Behavior; ```; mol = pybel.readstring(""smi"", 'BrC/C=C/c1ccc(O[C@@H]2CCCNC2)cc1'); mol.make3D(); ```. ## Actual Behavior; jupyter lab Kernel dies with this output in the cmd; ```; Open Babel Error in OpenBabel::OBBuilder::GetFragmentCoord; Rigid fragment C1CCCNC1 in rigid-fragments.txt has all zero coordinates; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2356
https://github.com/openbabel/openbabel/issues/2357:953,Availability,Error,Error,953,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR envir",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:1887,Availability,Error,Error,1887,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:1024,Modifiability,plugin,plugins,1024,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR envir",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:1074,Modifiability,variab,variable,1074,"ues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; Fil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:1958,Modifiability,plugin,plugins,1958,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:2008,Modifiability,variab,variable,2008,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:983,Performance,Load,LoadAllPlugins,983,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR envir",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2357:1917,Performance,Load,LoadAllPlugins,1917,"o be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; 3.1.0; Operating system and version:; Windows 2004 ; MACOS 11.2 Big Sur; ## Expected Behavior; when trying to import pybel from openbabel. ## Actual Behavior; from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1); >>> from opebabel import opebabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'opebabel'; >>> from openbabel import openbabel; >>> from openbabel import pybel; ==============================; *** Open Babel Error in OpenBabel::OBPlugin::LoadAllPlugins; Unable to find OpenBabel plugins. Try setting the BABEL_LIBDIR environment variable.; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 90, in <module>; informats = _formatstodict(_obconv.GetSupportedInputFormat()); File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in _formatstodict; broken = [(x, y.strip()) for x, y in broken]; File ""C:\Users\MIke\anaconda3\lib\openbabel\pybel.py"", line 69, in <listcomp>; broken = [(x, y.strip()) for x, y in broken]; ValueError: not enough values to unpack (expected 2, got 1). ## Steps to Reproduce; <!--; from openbabel import pybel; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357
https://github.com/openbabel/openbabel/issues/2359:1436,Testability,test,test,1436,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ Yes] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1; Operating system and version: Windows 10 . ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I tried canonical smiles, smi and smiles format to get a fasta file output with proper values. Note I am getting smiles from Chembl database. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; >Unknown molecule 0 bp; generated with OpenBabel 2.4.1; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; take any canonical smiles & convert to fasta ; COC(=O)c1ccc2c(c1)c1ccccc1n2CCCN1C[C@H](C)N[C@H](C)C1; --",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359
https://github.com/openbabel/openbabel/issues/2360:1242,Deployability,install,installation,1242,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I want to convert several molecules from sdf format to pdbqt. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I can't find pdbqt format neither in the output format options nor in the input.; I tried reinstalling MGLTools, as it has AutoDock, but the issue remains. Edit: I tried finding babel.exe file but couldn´t. Maybe the installation isn´t complete?; I attach all the installed files:; ![cap1](https://user-images.githubusercontent.com/79107558/115109300-4acef800-9f75-11eb-85cb-86531b2fb180.PNG); ![cap2](https://user-images.githubusercontent.com/79107558/115109302-4c002500-9f75-11eb-9748-f6c568ffa091.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2360
https://github.com/openbabel/openbabel/issues/2360:1289,Deployability,install,installed,1289,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I want to convert several molecules from sdf format to pdbqt. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; I can't find pdbqt format neither in the output format options nor in the input.; I tried reinstalling MGLTools, as it has AutoDock, but the issue remains. Edit: I tried finding babel.exe file but couldn´t. Maybe the installation isn´t complete?; I attach all the installed files:; ![cap1](https://user-images.githubusercontent.com/79107558/115109300-4acef800-9f75-11eb-85cb-86531b2fb180.PNG); ![cap2](https://user-images.githubusercontent.com/79107558/115109302-4c002500-9f75-11eb-9748-f6c568ffa091.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2360
https://github.com/openbabel/openbabel/issues/2361:655,Availability,error,error,655,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: centos. ## Steps to Reproduce; ```; obabel -:""Cn1ccnc1-c1cccc(Oc2cc(C(=O)O)cc(Oc3cc(C(=N)N)ccc3O)n2)c1"" -O ligand.mol -p 7 . obabel ligand.mol -O ligand.mol2 --gen3d --best -xu; ```; Below is the code I used to read the mol2 file:; ```; from rdkit import Chem ; mol = Chem.MolFromMol2File('ligand.mol2'); ```; ```; import parmed; mol = parmed.load_file('ligand.mol2'); ```. ## Actual Behavior; The mol2 file can't be read by rdkit and parmed. When read by rdkit, it raised the following error: ; ```; [15:11:52] Can't kekulize mol. Unkekulized atoms: 1 2 3 4 5. [15:11:52] sanitise [15:11:52] *****: ; ```; when read by parmed, it raised the following error: ; ```; parmed.exceptions.Mol2Error: String conversion trouble: Residue already has atom named C; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2361
https://github.com/openbabel/openbabel/issues/2361:820,Availability,error,error,820,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: centos. ## Steps to Reproduce; ```; obabel -:""Cn1ccnc1-c1cccc(Oc2cc(C(=O)O)cc(Oc3cc(C(=N)N)ccc3O)n2)c1"" -O ligand.mol -p 7 . obabel ligand.mol -O ligand.mol2 --gen3d --best -xu; ```; Below is the code I used to read the mol2 file:; ```; from rdkit import Chem ; mol = Chem.MolFromMol2File('ligand.mol2'); ```; ```; import parmed; mol = parmed.load_file('ligand.mol2'); ```. ## Actual Behavior; The mol2 file can't be read by rdkit and parmed. When read by rdkit, it raised the following error: ; ```; [15:11:52] Can't kekulize mol. Unkekulized atoms: 1 2 3 4 5. [15:11:52] sanitise [15:11:52] *****: ; ```; when read by parmed, it raised the following error: ; ```; parmed.exceptions.Mol2Error: String conversion trouble: Residue already has atom named C; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2361
https://github.com/openbabel/openbabel/issues/2362:158,Availability,error,error,158,"Dear Teacher:. Whem I used babel to convert pdb to mol2: babel -ipdb input.pdb -h -mol2 output.mol2; And Use rdkit to open output.mol2, it produce the fellow error.; **""Can't kekulize mol. Unkekulized atoms: 104 105 106 107 108 109 110 111 112""**; Can you tell me, what wrong with the babel commond. Thank you very much.; Hope your reply. Ruiqing",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2362
https://github.com/openbabel/openbabel/issues/2364:417,Deployability,update,update,417,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364
https://github.com/openbabel/openbabel/issues/2364:681,Testability,test,testing,681,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364
https://github.com/openbabel/openbabel/issues/2364:760,Testability,test,testing,760,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364
https://github.com/openbabel/openbabel/issues/2364:604,Usability,clear,clear,604,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364
https://github.com/openbabel/openbabel/issues/2364:848,Usability,clear,clear,848,"- [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (`master`); Operating system and version: Ubuntu 20.04. ## Expected Behavior; Calling the `.formula` attribute in Pybel should reflect the *current* state of the molecule. ## Actual Behavior; In Pybel, if you have called `.formula` once and then try to alter the molecule (adding/removing hydrogens), it will not update the `.formula` attribute. This happens because if the `""Formula""` attribute is already set, then `GetFormula()` just returns that attribute. One method of solving this would be to clear the `""Formula""` attribute when changes are made to the molecule. In my testing cases, this was only with `.addh()` and `.removeh()` (Discovered while testing for #2363.), but perhaps there are other modifying functions that would need to clear the `""Formula""` attribute?. ## Steps to Reproduce. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.formula; 'CRu'; >>> mol.addh() # adding H after getting .formula; >>> mol.formula # attr(""Formula"") is already set, so not created; 'CRu'; >>> ; >>> mol = pybel.readstring(""smi"", ""C.[Ru]""); >>> mol.addh(); >>> mol.formula; 'CH4Ru'; >>> mol.removeh(); >>> mol.formula; 'CH4Ru'. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364
https://github.com/openbabel/openbabel/issues/2365:3137,Energy Efficiency,efficient,efficient,3137,"ble for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to force the generation of coordinates even when the current coordinates are zero would be a simple API improvement. This would produce the expected behavior if needed, while maintaining the current, slightly more efficient behavior for the majority of cases where it makes sense.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1726,Integrability,rout,routine,1726," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1691,Testability,test,test,1691," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1901,Testability,test,test,1901,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1684,Usability,simpl,simple,1684," Operating system and version: Ubuntu 18.04. ## Expected Behavior; When calling OBMol.AddHydrogens(), it is expected to generate coordinates for the added hydrogens. The coordinates are generated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H pla",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1862,Usability,simpl,simply,1862,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:1980,Usability,simpl,simple,1980,"ated based on the typical bond lengths and angles of the atoms involved. ## Actual Behavior; There is a check for whether the molecule HasNonZeroCoords() beforehand. If all the present coordinates are zero, then the hydrogen coordinates are left as zero also. This seems reasonable for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2365:3016,Usability,simpl,simple,3016,"ble for most molecules, where it may be assumed that if the coordinates are all zero, then they will be set to something else later, so there is no use in generating coordinates for the hydrogens. But it leads to odd behavior if the molecule has a single heavy atom, such as water, ammonia, methane, etc. With these molecules, coordinates are generated for the hydrogens so long as the heavy atom coordinate is not located at the origin. For context, this came up when I was using simple test cases to create a bond adding routine that constructs valid molecules from sets of disconnected atoms produced by a generative model. While the issue was resolved by simply changing the coordinates of the test case molecules, the behavior seemed odd enough (and the proposed solution simple enough) that I would open an issue. ## Steps to Reproduce. ```; from openbabel import openbabel as ob. def test_case(atomic_num, x, y, z):; mol = ob.OBMol(); atom = mol.NewAtom(); atom.SetAtomicNum(atomic_num); atom.SetVector(x, y, z); mol.BeginModify(); ob.OBAtomAssignTypicalImplicitHydrogens(atom); mol.EndModify(); mol.AddHydrogens(); print('with {} at ({:.2f}, {:.2f}, {:.2f}),'.format(; ob.GetSymbol(atomic_num), x, y, z; )); for a in ob.OBMolAtomIter(mol):; if a != atom:; print(' H placed at ({:.2f}, {:.2f}, {:.2f})'.format(; a.GetX(), a.GetY(), a.GetZ(); )). test_case(8, 0, 0, 0); test_case(8, 1, 0, 0); ```; Output:; ```; mtr22@g001:~/gan$ python3 test_ob_problem.py; with O at (0.00, 0.00, 0.00),; H placed at (0.00, 0.00, 0.00); H placed at (0.00, 0.00, 0.00); with O at (1.00, 0.00, 0.00),; H placed at (1.97, 0.00, 0.00); H placed at (0.68, -0.53, -0.75; ```; ## Proposed Solution; An optional argument for AddHydrogens to force the generation of coordinates even when the current coordinates are zero would be a simple API improvement. This would produce the expected behavior if needed, while maintaining the current, slightly more efficient behavior for the majority of cases where it makes sense.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2365
https://github.com/openbabel/openbabel/issues/2366:233,Safety,detect,detected,233,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2366:335,Safety,detect,detected,335,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2366:398,Testability,log,log,398,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2366:477,Testability,log,log,477,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2366:929,Testability,log,log,929,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2366:1016,Testability,log,log,1016,"- [ X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: master; Operating system and version: macos and linux. ## Expected Behavior; Aromatic ring should be detected for 1,2,3-trimethyl-imidazolium from coordinates. . ## Actual Behavior; The aromatic ring is detected if a correct SD file is presented, but not a Gaussian log file. ## Steps to Reproduce; % obenergy -ff GAFF 123-trimethyl-imidazolium.log.gz; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders. A T O M T Y P E S. IDX	TYPE	RING; 1	c2	AL; 2	c2	AL; 3	n3	AL; 4	cc	AL; 5	n3	AL; <snip>. whereas ; % unzip 123-trimethyl-imidazolium.zip; % obenergy -ff GAFF 123-trimethyl-imidazolium.sdf . A T O M T Y P E S. IDX	TYPE	RING; 1	cd	AR; 2	cc	AR; 3	na	AR; 4	cc	AR; 5	na	AR; <snip>. [123-trimethyl-imidazolium.log.gz](https://github.com/openbabel/openbabel/files/6411257/123-trimethyl-imidazolium.log.gz). [123-trimethyl-imidazolium.zip](https://github.com/openbabel/openbabel/files/6411259/123-trimethyl-imidazolium.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2366
https://github.com/openbabel/openbabel/issues/2367:410,Energy Efficiency,sensor,sensory,410,"- [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 (20H2). ## Expected Behavior; Expect that a peptide sequence provided in FASTA format will be converted to SMILES, as reported in the supplement to the paper by Iwaniak, A., Minkiewicz, P., Darewicz, M., Sieniawski, K., & Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess provid",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367
https://github.com/openbabel/openbabel/issues/2367:725,Testability,Test,Test,725,"- [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 (20H2). ## Expected Behavior; Expect that a peptide sequence provided in FASTA format will be converted to SMILES, as reported in the supplement to the paper by Iwaniak, A., Minkiewicz, P., Darewicz, M., Sieniawski, K., & Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess provid",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367
https://github.com/openbabel/openbabel/issues/2367:1551,Testability,Test,Test,1551,"& Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :). ## Steps to Reproduce. In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:. `>Test ARFF`; `ARFF`. Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367
https://github.com/openbabel/openbabel/issues/2367:2212,Testability,Test,Test,2212,"& Starowicz, P. (2016). BIOPEP database of sensory peptides and amino acids. Food Research International, 85, 155-161. doi: 10.1016/j.foodres.2016.04.031). ## Actual Behavior; As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:. `>Test ARFF`; `ARFF`. produces the following SMILES output (either in the output pane or the GUI or in a file) :. `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`. However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:. `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`. which creates the correct peptide structure when pasted into Marvin Sketch. Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:. `>Test AR`; `AR`. produces the output:. `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`. which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :). ## Steps to Reproduce. In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:. `>Test ARFF`; `ARFF`. Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367
https://github.com/openbabel/openbabel/issues/2369:748,Availability,redundant,redundantly,748,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:920,Availability,error,error,920,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:553,Modifiability,variab,variables,553,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:569,Performance,cache,caches,569,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:820,Performance,cache,cache,820,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:548,Safety,safe,safe,548,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:748,Safety,redund,redundantly,748,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:193,Security,Access,Accessing,193,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:301,Testability,test,test,301,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2369:1294,Testability,test,test,1294,"- [x] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: all. ## Expected Behavior. Accessing molecule information should be `const`. ```c++; OBMol const mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; std::cout << mol.GetMolWt() << std::endl; // should print. currently cannot be called in a `const` OBMol.; ```. _Of course I can be wrong and the accesing function is not constant to indicate internal static, non-thread safe variables (e.g. caches) being set. But I doubt, `const`-`non-const` seems to be inconsistent in the different object of the library. (for example OBUnitCell::GetCellVolume() is `const`, and also redundantly `non-const`, again it is fine if it has to do with internal cache data)_. ## Actual Behavior. GetMolWt cannot be called in a constant object, gives compilation error. ## Steps to Reproduce. ```c++; #include <openbabel/generic.h> // unitcell; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>. #include <iostream>. using namespace std;. int main(int argc,char **argv){; 	using namespace OpenBabel;; 	OBConversion conv = []{OBConversion _; _.SetInFormat(""xyz""); return _;}();; 	OBMol mol = [&]{OBMol _; conv.ReadFile(&_, ""test.xyz""); return _;}();; 	std::cout << mol.GetMolWt() << std::endl;; }; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2369
https://github.com/openbabel/openbabel/issues/2370:666,Availability,error,error,666,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:1504,Availability,error,errors,1504,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:1540,Availability,ERROR,ERROR,1540,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:1557,Availability,error,errors,1557,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:1058,Energy Efficiency,allocate,allocated,1058,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:672,Safety,detect,detector,672,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:1480,Safety,detect,detected,1480,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2370:496,Testability,test,test,496,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0; Operating system and version: Linux Ubuntu 20.04, gcc 9.3. ## Expected Behavior. No memory leak in this program:. ```c++; #include <openbabel/mol.h>; #include <openbabel/obconversion.h>; int main(int argc,char **argv){; 	using namespace OpenBabel;; 	for(int i = 0; i != 10; ++i){; 		OBConversion in; ; 		in.SetInFormat(""xyz"");; 		OBMol m; ; 		in.ReadFile(&m, ""test.xyz"");; 	}; }; ```. ## Actual Behavior. 61,440 bytes are leaked. (this is proportional to the loop repetition, ~6k per read). ```bash; =2336866== Memcheck, a memory error detector; ==2336866== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==2336866== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info; ==2336866== Command: ./example; ==2336866== ; ==2336866== ; ==2336866== HEAP SUMMARY:; ==2336866== in use at exit: 326,095 bytes in 737 blocks; ==2336866== total heap usage: 21,590 allocs, 20,853 frees, 2,471,446 bytes allocated; ==2336866== ; ==2336866== LEAK SUMMARY:; ==2336866== definitely lost: 61,440 bytes in 10 blocks; ==2336866== indirectly lost: 0 bytes in 0 blocks; ==2336866== possibly lost: 0 bytes in 0 blocks; ==2336866== still reachable: 264,655 bytes in 727 blocks; ==2336866== suppressed: 0 bytes in 0 blocks; ==2336866== Rerun with --leak-check=full to see details of leaked memory; ==2336866== ; ==2336866== For lists of detected and suppressed errors, rerun with: -s; ==2336866== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0); ```. This is a serious bug for users of the library that will process many files. ## Steps to Reproduce. compile the above example, run valgrind. ```bash; c++ example.cpp; valgrind ./a.out; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370
https://github.com/openbabel/openbabel/issues/2372:879,Testability,log,logP,879,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372
https://github.com/openbabel/openbabel/issues/2372:1131,Testability,log,logP,1131,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372
https://github.com/openbabel/openbabel/issues/2372:1349,Testability,test,test,1349,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372
https://github.com/openbabel/openbabel/issues/2372:1573,Testability,log,logP,1573,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372
https://github.com/openbabel/openbabel/issues/2372:1625,Testability,log,logP,1625,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; --> . - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: win10, python 3.8 anaconda. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; mol smiles CC(N)C1=CC2=C(C=C1)C=NC=C2, logP from chemaxon 1.29. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I use pybel to calculate the logP of the mol above, the result is 0. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; from openbabel import pybel as pb; my=pb.readstring(""smi"", ""CC(N)C1=CC2=C(C=C1)C=NC=C2""); my.calcdesc(descnames=['MW', 'logP', 'HBA1', 'HBD']); {'MW': 172.22637999999998, 'logP': 0.0, 'HBA1': 2.0, 'HBD': 1.0}",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372
https://github.com/openbabel/openbabel/issues/2373:303,Deployability,install,install,303,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Compilation should not use deprecated language features. ## Actual Behavior. Compilation following the install instructions with default c++ compiler says:. ```; openbabel/src/stereo/perception.cpp:2973: warning: use of deprecated `bind1st`; const std::binder1st<std::equal_to<OBStereo::Ref> > equal_to_atomId = std::bind1st (equal_to<OBStereo::Ref>(), atomId);; ```. ## Steps to Reproduce. ```bash; git clone ...; cd openbabel; mkdir build; cd build; make; ```. Fix is almost trivial in C++11, but first I wonder if contributions in C++11 are accepted. If this is not the case then the solution is to request for C++98 standard in CMake.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2373
https://github.com/openbabel/openbabel/issues/2374:799,Availability,error,error,799,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:1158,Availability,Error,Error,1158,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:210,Deployability,install,installation,210,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:318,Deployability,configurat,configuration,318,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:433,Deployability,configurat,configuration,433,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:733,Deployability,install,install,733,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:771,Deployability,install,install,771,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:993,Deployability,install,install,993,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:1216,Deployability,configurat,configuration,1216,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:318,Modifiability,config,configuration,318,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:433,Modifiability,config,configuration,433,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:1216,Modifiability,config,configuration,1216,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2374:982,Testability,test,test,982,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.3.1; Operating system and version: Ubuntu 20.04. ## Expected Behavior. Local installation of OpenBabel should have a working `~/lib/cmake/OpenBabel3.cmake`. ## Actual Behavior. Package configuration is found but then rejected later because of `maeparser` and `coordgen` not found. ```; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```. I tried to install `maeparser` (git, cmake, make install) but I get the same error. ## Steps to Reproduce. ```; git clone git@github.com:openbabel/openbabel.git; cd openbabel; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=$HOME ..; make -j 10; make test; make install; ```; In a different directory have a `CMakeLists.txt` with the contents. ```; find_package(OpenBabel3 REQUIRED); ```; and run `cmake .`, gives:. ```; CMake Error at CMakeLists.txt:30 (find_package):; Found package configuration file:. /home/correaa/lib/cmake/openbabel3/OpenBabel3Config.cmake. but it set OpenBabel3_FOUND to FALSE so package ""OpenBabel3"" is considered; to be NOT FOUND. Reason given by package:. The following imported targets are referenced, but are missing: maeparser; coordgen; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2374
https://github.com/openbabel/openbabel/issues/2375:1201,Deployability,integrat,integrating,1201,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 x86, python bindings 3.1.1 from the Unofficial Windows Binaries for Python Extension Packages.; Operating system and version: Windows 10 20H2 64bit, Python 3.6.5 32bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Pybel should allow writing to virtual files such as StringIO() and BytesIO() or return the png depiction as a string if no file has been specified, this is already doable using openbabel's OBConversion().WriteString(), integrating it to Pybel will be a good QOL improvement. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Pybel module only accepts os.Pathlike objects in draw(), and has no return. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2375
https://github.com/openbabel/openbabel/issues/2375:1201,Integrability,integrat,integrating,1201,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 x86, python bindings 3.1.1 from the Unofficial Windows Binaries for Python Extension Packages.; Operating system and version: Windows 10 20H2 64bit, Python 3.6.5 32bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Pybel should allow writing to virtual files such as StringIO() and BytesIO() or return the png depiction as a string if no file has been specified, this is already doable using openbabel's OBConversion().WriteString(), integrating it to Pybel will be a good QOL improvement. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Pybel module only accepts os.Pathlike objects in draw(), and has no return. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2375
https://github.com/openbabel/openbabel/issues/2375:1709,Testability,test,test,1709,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 x86, python bindings 3.1.1 from the Unofficial Windows Binaries for Python Extension Packages.; Operating system and version: Windows 10 20H2 64bit, Python 3.6.5 32bit. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Pybel should allow writing to virtual files such as StringIO() and BytesIO() or return the png depiction as a string if no file has been specified, this is already doable using openbabel's OBConversion().WriteString(), integrating it to Pybel will be a good QOL improvement. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Pybel module only accepts os.Pathlike objects in draw(), and has no return. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2375
https://github.com/openbabel/openbabel/issues/2377:1373,Availability,error,error,1373," using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version:Debian Buster, glibc ver. 2.28(most recent for Debian), gcc 8.3.0, Boost 1.76.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runne",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:1888,Availability,Error,Errors,1888,"e intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CM",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2708,Availability,error,error,2708,DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2816,Availability,Error,Error,2816,PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2901,Availability,Error,Error,2901,-------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3273,Availability,error,error,3273,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3336,Availability,error,error,3336,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3439,Availability,Error,Error,3439,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3522,Availability,Error,Error,3522,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3758,Availability,error,error,3758,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3872,Availability,Error,Error,3872,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3959,Availability,Error,Error,3959,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3998,Availability,Error,Error,3998,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:1199,Integrability,rout,routine,1199,"ps://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version:Debian Buster, glibc ver. 2.28(most recent for Debian), gcc 8.3.0, Boost 1.76.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target rou",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2056,Integrability,depend,dependencies,2056,"change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2096,Integrability,depend,dependencies,2096,"change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2282,Integrability,depend,dependencies,2282,"treams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command li",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:1592,Testability,test,test,1592,"lds as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version:Debian Buster, glibc ver. 2.28(most recent for Debian), gcc 8.3.0, Boost 1.76.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Compiled static version of Open Babel 3.1.1. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; It appears that during the make routine, it is trying to link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFil",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2226,Testability,test,test,2226,"link dynamic version of library libboost_iostreams.so (confirmed that static library libboost_iostreams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2345,Testability,test,test,2345,"treams.a exists in boost path/lib) and also getting error for undefined reference to symbol. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command li",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2423,Testability,test,test,2423," to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2499,Testability,test,test,2499,ther upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; command line syntax: ; ```; cmake .. \; 	-DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMa,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2756,Testability,test,test,2756,DCMAKE_PREFIX_PATH=$BOOST_PATH \; 	-DCMAKE_INSTALL_PREFIX=$OPENBABEL_CMAKE_PREFIX \; 	-DZLIB_ROOT=$ZLIB_PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2866,Testability,test,test,2866,PATH \; 	-DBUILD_SHARED=OFF \; make -j4; ```; Errors; ```; ---------------------------------------------------------------; [ 77%] Linking CXX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/buil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:2983,Testability,test,test,2983,XX static library libopenbabel.a; [ 77%] Built target openbabel; Scanning dependencies of target obabel; Scanning dependencies of target roundtrip; [ 78%] Building CXX object tools/CMakeFiles/obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Make,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3806,Testability,test,test,3806,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:3922,Testability,test,test,3922,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:4021,Testability,log,log,4021,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:4087,Testability,log,log,4087,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:4103,Testability,log,log,4103,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/issues/2377:4170,Testability,log,log,4170,obabel.dir/obabel.cpp.o; [ 78%] Building CXX object test/CMakeFiles/roundtrip.dir/roundtrip.cpp.o; Scanning dependencies of target test_runner; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/test_runner.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aligntest.cpp.o; [ 79%] Building CXX object test/CMakeFiles/test_runner.dir/aliastest.cpp.o; [ 79%] Linking CXX executable ../bin/roundtrip; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/roundtrip.dir/build.make:89: bin/roundtrip] Error 1; make[1]: *** [CMakeFiles/Makefile2:1138: test/CMakeFiles/roundtrip.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 80%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; [ 80%] Linking CXX executable ../bin/obabel; /usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/8/libstdc++.a(eh_globals.o): undefined reference to symbol '__tls_get_addr@@GLIBC_2.3'; /usr/bin/ld: //lib/x86_64-linux-gnu/ld-linux-x86-64.so.2: error adding symbols: DSO missing from command line; collect2: error: ld returned 1 exit status; make[2]: *** [tools/CMakeFiles/obabel.dir/build.make:90: bin/obabel] Error 1; make[1]: *** [CMakeFiles/Makefile2:1110: tools/CMakeFiles/obabel.dir/all] Error 2; ---------------------------------------------------------------; [100%] Linking CXX executable ../bin/test_runner; /usr/bin/ld: attempted static link of dynamic object `/smina/boost/lib/libboost_iostreams.so.1.76.0'; collect2: error: ld returned 1 exit status; make[2]: *** [test/CMakeFiles/test_runner.dir/build.make:1049: bin/test_runner] Error 1; make[1]: *** [CMakeFiles/Makefile2:1166: test/CMakeFiles/test_runner.dir/all] Error 2; make: *** [Makefile:141: all] Error 2; ```; [MakeLog.log](https://github.com/openbabel/openbabel/files/6606177/MakeLog.log); [CMakeLog.log](https://github.com/openbabel/openbabel/files/6606178/CMakeLog.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2377
https://github.com/openbabel/openbabel/pull/2378:301,Availability,error,error,301,"This change will build _openbabel.so in scripts/python/openbabel instead; of the default build/lib. This is necessary because openbabel.py tries; to import _openbabel like this:. if __package__ or ""."" in __name__:; from . import _openbabel; else:; import _openbabel. This results in a circular import error when running make test (the; first branch of the if is triggered). This code appears to be generated by; SWIG with no obvious way to change it to catch the ImportError and call; import _openbabel instead. Note the PYTHONPATH is set to include; build/lib, but it doesn't matter because SWIG is forcing the import to; happen in scripts/python/openbabel. I'm not sure why this hasn't been a problem in the past, perhaps there's; been a change in SWIG. This is with SWIG 4.0.1 and cmake 3.18.6. I think the best solution is to move all the files that are being built; in /scripts to the build directory rather than polluting the src tree; with them, but this would require changing all the bindings and I'm not; up for building and testing every binding.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378
https://github.com/openbabel/openbabel/pull/2378:325,Testability,test,test,325,"This change will build _openbabel.so in scripts/python/openbabel instead; of the default build/lib. This is necessary because openbabel.py tries; to import _openbabel like this:. if __package__ or ""."" in __name__:; from . import _openbabel; else:; import _openbabel. This results in a circular import error when running make test (the; first branch of the if is triggered). This code appears to be generated by; SWIG with no obvious way to change it to catch the ImportError and call; import _openbabel instead. Note the PYTHONPATH is set to include; build/lib, but it doesn't matter because SWIG is forcing the import to; happen in scripts/python/openbabel. I'm not sure why this hasn't been a problem in the past, perhaps there's; been a change in SWIG. This is with SWIG 4.0.1 and cmake 3.18.6. I think the best solution is to move all the files that are being built; in /scripts to the build directory rather than polluting the src tree; with them, but this would require changing all the bindings and I'm not; up for building and testing every binding.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378
https://github.com/openbabel/openbabel/pull/2378:1035,Testability,test,testing,1035,"This change will build _openbabel.so in scripts/python/openbabel instead; of the default build/lib. This is necessary because openbabel.py tries; to import _openbabel like this:. if __package__ or ""."" in __name__:; from . import _openbabel; else:; import _openbabel. This results in a circular import error when running make test (the; first branch of the if is triggered). This code appears to be generated by; SWIG with no obvious way to change it to catch the ImportError and call; import _openbabel instead. Note the PYTHONPATH is set to include; build/lib, but it doesn't matter because SWIG is forcing the import to; happen in scripts/python/openbabel. I'm not sure why this hasn't been a problem in the past, perhaps there's; been a change in SWIG. This is with SWIG 4.0.1 and cmake 3.18.6. I think the best solution is to move all the files that are being built; in /scripts to the build directory rather than polluting the src tree; with them, but this would require changing all the bindings and I'm not; up for building and testing every binding.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2378
https://github.com/openbabel/openbabel/pull/2379:294,Testability,test,test,294,"This is a bug reported by Madeleine Walz on the openbabel-devel list. Given a file format without bond orders, the bond orders for azete were not being correctly inferred. Madeleine reported the bug with Gaussian input, but has been strangely resistent to providing actual example files so the test is with xyz. The issue is PerceiveBondOrders uses bond angles to estimate; hybridization states and azete has a 90 degree angle (so the N; hybridization is set to zero and double bonds aren't made where they; should). The fix is a pretty narrow check that probably doesn't generalize to any other molecules. Regression test included.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2379
https://github.com/openbabel/openbabel/pull/2379:618,Testability,test,test,618,"This is a bug reported by Madeleine Walz on the openbabel-devel list. Given a file format without bond orders, the bond orders for azete were not being correctly inferred. Madeleine reported the bug with Gaussian input, but has been strangely resistent to providing actual example files so the test is with xyz. The issue is PerceiveBondOrders uses bond angles to estimate; hybridization states and azete has a 90 degree angle (so the N; hybridization is set to zero and double bonds aren't made where they; should). The fix is a pretty narrow check that probably doesn't generalize to any other molecules. Regression test included.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2379
https://github.com/openbabel/openbabel/pull/2380:125,Energy Efficiency,charge,charges,125,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380
https://github.com/openbabel/openbabel/pull/2380:251,Energy Efficiency,charge,charge,251,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380
https://github.com/openbabel/openbabel/pull/2380:431,Energy Efficiency,charge,charge,431,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380
https://github.com/openbabel/openbabel/pull/2380:460,Testability,test,test,460,"This is a bug report from Stefano Forli on the openbabel-devel list.; When calling obabel with -p the pH model infers formal charges on an xyz; (since the format doesn't support them) but the code was always; incrementing the number of hydrogens if a charge is added, even if there; were already the appropriate number of explicit hydrogens. Change the; code to call OBAtomAssignTypicalImplicitHydrogens after updating the; formal charge. Include a regression test.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2380
https://github.com/openbabel/openbabel/issues/2381:309,Performance,optimiz,optimized,309,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381
https://github.com/openbabel/openbabel/issues/2381:485,Performance,optimiz,optimized,485,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381
https://github.com/openbabel/openbabel/issues/2381:517,Testability,test,test,517,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381
https://github.com/openbabel/openbabel/issues/2381:719,Testability,test,test,719,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381
https://github.com/openbabel/openbabel/issues/2381:784,Testability,test,test,784,"- [* ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: macOS Big sur. ## Expected Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. ## Actual Behavior; $ obabel -ixyz 039863424.b3lyp@pm6.xyz -ocan; CCCCC[NH]1C(=C/C(=C/2/C(=O)NC(=O)[N]C2=O)/C=C1C)C PUBCHEM 039863424 B3LYP 6-31G(d) at PM6 optimized geometry. $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq; CCCCC[NH]1C(=C/C(=C/2\C(=O)NC(=O)[N]C2=O)/C=C1C)C; CCCCC[NH]1C(=C/C(=C\2/C(=O)NC(=O)[N]C2=O)/C=C1C)C. ## Steps to Reproduce; I attached a script ""test.py"" and ""039863424.b3lyp@pm6.xyz "". then type ; $ python3 ./test.py --target 039863424.b3lyp@pm6.xyz | sort | uniq",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381
https://github.com/openbabel/openbabel/issues/2382:298,Availability,error,error,298,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-5); Operating system and version: Debian unstable. ## Expected Behavior; Process CML file, and either output requested data on success, or report an error if CML file is problematic. ## Actual Behavior; Segmentation fault (may be related to #1060). ## Steps to Reproduce; ```bash; $ curl https://journals.iucr.org/e/issues/2017/04/00/zs2378/zs2378IIsup6.cml | obabel -i cml -o smi; ```; This seems to be related to CML reading - I have tried various output formats (CIF, SDF) and all of them resulted in segmentation faults.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382
https://github.com/openbabel/openbabel/issues/2382:365,Availability,fault,fault,365,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-5); Operating system and version: Debian unstable. ## Expected Behavior; Process CML file, and either output requested data on success, or report an error if CML file is problematic. ## Actual Behavior; Segmentation fault (may be related to #1060). ## Steps to Reproduce; ```bash; $ curl https://journals.iucr.org/e/issues/2017/04/00/zs2378/zs2378IIsup6.cml | obabel -i cml -o smi; ```; This seems to be related to CML reading - I have tried various output formats (CIF, SDF) and all of them resulted in segmentation faults.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382
https://github.com/openbabel/openbabel/issues/2382:666,Availability,fault,faults,666,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-5); Operating system and version: Debian unstable. ## Expected Behavior; Process CML file, and either output requested data on success, or report an error if CML file is problematic. ## Actual Behavior; Segmentation fault (may be related to #1060). ## Steps to Reproduce; ```bash; $ curl https://journals.iucr.org/e/issues/2017/04/00/zs2378/zs2378IIsup6.cml | obabel -i cml -o smi; ```; This seems to be related to CML reading - I have tried various output formats (CIF, SDF) and all of them resulted in segmentation faults.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2382
https://github.com/openbabel/openbabel/pull/2384:244,Testability,test,test,244,There are two rules in bondtyp.txt that I don't understand the; justification of and I don't see how they can be correct when you take; into account that they are applied before aromaticity is perceived so; I've removed them. I have included a test case from a PDB ligand that fails one of these; rules. If there is a good reason to leave these in then we may need to call; AssignFunctionalGroupBonds after pass 5 of PerceiveBondOrders so; aromaticity is set or figure some otherway to narrow the rules to not; apply in inappropriate cases.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2384
https://github.com/openbabel/openbabel/pull/2385:11,Testability,test,test,11,This is to test OB:s capacity to generate correct bond orders by comparing reading a correct SDF file to a Gaussian log file. More tests can be added later.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385
https://github.com/openbabel/openbabel/pull/2385:116,Testability,log,log,116,This is to test OB:s capacity to generate correct bond orders by comparing reading a correct SDF file to a Gaussian log file. More tests can be added later.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385
https://github.com/openbabel/openbabel/pull/2385:131,Testability,test,tests,131,This is to test OB:s capacity to generate correct bond orders by comparing reading a correct SDF file to a Gaussian log file. More tests can be added later.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385
https://github.com/openbabel/openbabel/issues/2386:1494,Testability,test,test,1494,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386
https://github.com/openbabel/openbabel/issues/2386:1735,Testability,test,test,1735,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386
https://github.com/openbabel/openbabel/issues/2386:1793,Testability,test,test,1793,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386
https://github.com/openbabel/openbabel/issues/2386:1872,Testability,test,test,1872,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386
https://github.com/openbabel/openbabel/issues/2386:2056,Testability,test,test,2056,"m/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linuxmint-20.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The program should read input data from _stdin_ and output all separate disconnected fragments into individual molecular records. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The program reads input data from _stdin_ and outputs only one of the disconnected fragments as an individual molecular record. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; I have observed this behaviour with SMILES and SDF formats, but it is possible that other formats are affected as well. Contents of the `test.smi` file:; <pre>; [Na].[Cl]; </pre>. Providing the `test.smi` file directly results in the expected output:; <pre>; $ obabel -iSMI test.smi -oSMI --separate. [Na]	#1; [Cl]	#2; 2 molecules converted; </pre>. However, reading the same data from _stdin_ results in only the first component being output:; <pre>; $ cat test.smi | obabel -iSMI -oSMI --separate. [Na]	#1; 1 molecule converted; </pre>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386
https://github.com/openbabel/openbabel/pull/2387:147,Modifiability,config,configuring-issue-templates-for-your-repository,147,Now GitHub can offer multiple issue templates. https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/configuring-issue-templates-for-your-repository,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2387
https://github.com/openbabel/openbabel/issues/2390:982,Availability,avail,available,982,"- [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows 10. I am looking for an example on how to pass input or output conversion options while using the `openbabel.OBConversion` object in python? As an example, if I wish to convert `xyz` format to `inchified smiles` string I would simply run the following command in the command line:. ```bat; obabel -ixyz <filePath> -osmi -xI; ````. where `-xI` indicates output options and `I` means produce inchified smiles in this case. Is there a way to pass such flags via the `openbabel.OBConversion` object methods? I could see that there is `SetInOutFormat` method, but couldn't find anything on the extra flags. Another use case is the generation of 2D or 3D coordinates handled by the `--gen2d` and `--gen3d` flags. If setting extra conversion flags in the `openbabel.OBConversion` object is not possible, do we need to do these extra operations manually via other available openbabel classes and methods? If so, could someone please point me to some tutorials?. Many thanks,; Daniel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390
https://github.com/openbabel/openbabel/issues/2390:353,Usability,simpl,simply,353,"- [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows 10. I am looking for an example on how to pass input or output conversion options while using the `openbabel.OBConversion` object in python? As an example, if I wish to convert `xyz` format to `inchified smiles` string I would simply run the following command in the command line:. ```bat; obabel -ixyz <filePath> -osmi -xI; ````. where `-xI` indicates output options and `I` means produce inchified smiles in this case. Is there a way to pass such flags via the `openbabel.OBConversion` object methods? I could see that there is `SetInOutFormat` method, but couldn't find anything on the extra flags. Another use case is the generation of 2D or 3D coordinates handled by the `--gen2d` and `--gen3d` flags. If setting extra conversion flags in the `openbabel.OBConversion` object is not possible, do we need to do these extra operations manually via other available openbabel classes and methods? If so, could someone please point me to some tutorials?. Many thanks,; Daniel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390
https://github.com/openbabel/openbabel/issues/2392:2015,Testability,test,test,2015,"rsion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz); ```. When inputting a radical`xyz` (taking [CH2]C as an example), the generated `obmol` should have an atom with spin multiplicity > 1. Therefore when running the following script,; ```; for obatom in ob.OBMolAtomIter(obmol):; print(obatom.GetSpinMultiplicity()); ```; We should see a 2 in the output. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; In version 2.4.1, the behavior is as expected. But after upgrading from 2.4.1 to 3.1.0, I found that all atoms in the generated `obmol` have zero spin multiplicity (from `obatom.GetSpinMultiplicity()`), while the spin multiplicity for the molecule is still correct (from `obmol.GetTotalSpinMultiplicity()`). . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Some example XYZs for you to try:; ```; 4; [CH3]; C 0.005855 0.001990 0.281379; H 1.045523 -0.137365 -0.095125; H -0.625527 -0.822825 -0.092566; H -0.425852 0.958201 -0.093688. 7; [CH2]C; C 0.860801 -0.129576 -0.398801; C -0.613070 0.014747 -0.013112; H 1.239333 -0.933807 0.290165; H 1.359583 0.810233 -0.054703; H -0.881226 1.081339 -0.159005; H -0.785917 -0.222193 1.047743; H -1.179504 -0.620742 -0.712286; ```. And run; ```; from openbabel import openbabel as ob. obconversion = ob.OBConversion(); obconversion.SetInFormat('xyz'); obmol = ob.OBMol(); success = obconversion.ReadString(obmol, xyz). print(f'Total Multplicity: {obmol.GetTotalSpinMultiplicity()}'); for obatom in ob.OBMolAtomIter(obmol):; print(f'Atom {obatom.GetAtomicNum()}: {obatom.GetSpinMultiplicity()}'); ```; What I got is; For [CH3]; ```; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2392
https://github.com/openbabel/openbabel/issues/2393:3759,Energy Efficiency,efficient,efficient,3759,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2393:1013,Safety,predict,predictions,1013,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemist",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2393:1274,Security,sanitiz,sanitize,1274,"r bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.g.,; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@@H+]1CCC3"" --gen3D -h -oxyz -O output.xyz; ```; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2393:3825,Security,sanitiz,sanitizer,3825,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2393:1037,Testability,test,test,1037,"//github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. <!-- - [ ] I believe this to be a bug with Open Babel -->; - [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 -- Jun 10 2021 -- 04:27:50; Operating system and version: Debian GNU/Linux 11 (bullseye). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Jensen [lists here](https://molecularmodelingbasics.blogspot.com/2016/05/automating-calculations-pka-predictions.html) a few test structures encoded as SMILES which are to be converted by OpenBabel into `.xyz` with 3D information. Cyclic structures should pass smoothly the conversion (yet occasionally they do not and issue warnings). Is there an other way to ""sanitize"" SMILES than passing them to RDKit (*vide infra*), perhaps in OpenBabel itself?. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; The conversion of; * `C[C@H]1CC[N@@]2CCC[C@@H]12`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@]1CCC3`; * `C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3`. in line of; ```; obabel -:""C[C@H]1[C@@H]2[C@@H](C(N(C)C2=O)=O)C3[N@H+]1CCC3"" --gen3D -h -oxyz; ```; yield warnings like; ```; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (); with Atom Ids as follows: 2 3; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```; while e.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2393:4074,Testability,test,test,4074,"`; does not. *However*. I noticed `C[C@H]1CC[N@@]2CCC[C@@H]12` is described with nitrogen as a stereocentre. Thus, when submitted *as such* to either [PubChem Sketcher](https://pubchem.ncbi.nlm.nih.gov/edit3/index.html) or the [ChemDraw JS sample page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) visualized with a wedge:. ![initial_state](https://user-images.githubusercontent.com/19709084/123659339-1b185800-d822-11eb-9fc5-2cbd3506ad28.png). Since the conversion SMILES to canonical SMILES ; ```; obabel -:""C[C@H]1CC[N@@]2CCC[C@@H]12"" -ocan; ```; yields `C[C@H]1CC[N@]2[C@H]1CCC2` with the same issue in visualization and format conversion, I passed the canonical SMILES to RDKit (version 2020.09.4, as provided by Debian's repositories) :; ```; >>> import rdkit; >>> from rdkit import Chem; >>> ; >>> # SMILES to mol:; >>> m = Chem.MolFromSmiles(""C[C@H]1CC[N@]2[C@H]1CCC2""); >>> ; >>> # mol to SMILES:; >>> Chem.MolToSmiles(m); 'C[C@H]1CCN2CCC[C@@H]12'; >>> ; ```; *This* newly generated SMILES string is visualized differently now, without the wedge on nitrogen. ![later_state](https://user-images.githubusercontent.com/19709084/123661419-0b017800-d824-11eb-8b9a-e1a5a517ffb5.png). and the attempt to convert this to a 3D `.xyz` by; ```; obabel -:""C[C@H]1CCN2CCC[C@@H]12"" -h --gen3d -oxyz -O output.xyz; ```; does not yield any warning (even if it is not OpenBabel's canonical SMILES string, `C[C@H]1CCN2[C@H]1CCC2`). Perhaps this is a bypass for a few instances when OpenBabel otherwise states ""Open Babel Warning in CorrectStereoAtoms"", but is there a more efficient way to for this in OpenBabel itself? Is there a ""SMILES sanitizer"", other than the options listed in section 18.1.7?. <!-- ## Steps to Reproduce -->; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2393
https://github.com/openbabel/openbabel/issues/2394:384,Availability,avail,available,384,"Hello,. Thank you for your great work with OpenBabel! . - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 , 10.0.19043 Build 19043. ## Expected Behavior; On OpenBabel GUI, I expected to find `xyz` format in the ----INPUT FORMAT---- list. . ## Actual Behavior; While dozens of formats are available in ----INPUT FORMAT---- list, `xyz` is not. ## Steps to Reproduce; I downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. However, I can't see `xyz` in the ----INPUT FORMAT---- list. I am trying to convert multimolecule `xyz` files into multimolecule `sdf` files. Running `obabel -L formats` in command prompt results in the following (`xyz` is missing):. `abinit -- ABINIT Output Format [Read-only]; acesin -- ACES input format [Write-only]; acesout -- ACES output format [Read-only]; adf -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:463,Availability,down,downloaded,463,"Hello,. Thank you for your great work with OpenBabel! . - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 , 10.0.19043 Build 19043. ## Expected Behavior; On OpenBabel GUI, I expected to find `xyz` format in the ----INPUT FORMAT---- list. . ## Actual Behavior; While dozens of formats are available in ----INPUT FORMAT---- list, `xyz` is not. ## Steps to Reproduce; I downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. However, I can't see `xyz` in the ----INPUT FORMAT---- list. I am trying to convert multimolecule `xyz` files into multimolecule `sdf` files. Running `obabel -L formats` in command prompt results in the following (`xyz` is missing):. `abinit -- ABINIT Output Format [Read-only]; acesin -- ACES input format [Write-only]; acesout -- ACES output format [Read-only]; adf -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:1832,Availability,checkpoint,checkpoint,1832,mat [Write-only]; acesout -- ACES output format [Read-only]; adf -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims -- FHIaims XYZ format; fix -- SMILES FIX format [Write-only]; g03 -- Gaussian Output [Read-only]; g09 -- Gaussian Output [Read-only]; g16 -- Gaussian Output [Read-only]; g92 -- Gaussian Output [Read-only]; g94 -- Gaussian Output [Read-only]; g98 -- Gaussian Output [Read-only]; gal -- Gaussian Output [Read-only]; gam -- GAMESS Output [Read-only]; gamess -- GAMESS Output [Read-only]; gamin -- GAMESS Input; gamout -- GAMESS Output [Read-only]; gau -- Gaussian Input [Write-only]; gjc -- Gaussian Input [Write-only]; gjf -- Gaussian Input [Write-only]; got -- GULP format [Read-only]; gukin -- GAMESS-UK Input; gukout -- GAMESS-UK Output; gzmat -- Gaussian Z-Matrix Input; hin -- HyperChem HIN format; inchi -- InChI format; inchikey -- InChIKey [Write-only]; inp -- GAMESS Input; jin -- Jaguar input format; jout -- Jaguar output format,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:1895,Availability,checkpoint,checkpoint,1895,f -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims -- FHIaims XYZ format; fix -- SMILES FIX format [Write-only]; g03 -- Gaussian Output [Read-only]; g09 -- Gaussian Output [Read-only]; g16 -- Gaussian Output [Read-only]; g92 -- Gaussian Output [Read-only]; g94 -- Gaussian Output [Read-only]; g98 -- Gaussian Output [Read-only]; gal -- Gaussian Output [Read-only]; gam -- GAMESS Output [Read-only]; gamess -- GAMESS Output [Read-only]; gamin -- GAMESS Input; gamout -- GAMESS Output [Read-only]; gau -- Gaussian Input [Write-only]; gjc -- Gaussian Input [Write-only]; gjf -- Gaussian Input [Write-only]; got -- GULP format [Read-only]; gukin -- GAMESS-UK Input; gukout -- GAMESS-UK Output; gzmat -- Gaussian Z-Matrix Input; hin -- HyperChem HIN format; inchi -- InChI format; inchikey -- InChIKey [Write-only]; inp -- GAMESS Input; jin -- Jaguar input format; jout -- Jaguar output format [Read-only]; k -- Compare molecules using InChI [Write-only]; ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:1957,Availability,checkpoint,checkpoint,1957,and output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims -- FHIaims XYZ format; fix -- SMILES FIX format [Write-only]; g03 -- Gaussian Output [Read-only]; g09 -- Gaussian Output [Read-only]; g16 -- Gaussian Output [Read-only]; g92 -- Gaussian Output [Read-only]; g94 -- Gaussian Output [Read-only]; g98 -- Gaussian Output [Read-only]; gal -- Gaussian Output [Read-only]; gam -- GAMESS Output [Read-only]; gamess -- GAMESS Output [Read-only]; gamin -- GAMESS Input; gamout -- GAMESS Output [Read-only]; gau -- Gaussian Input [Write-only]; gjc -- Gaussian Input [Write-only]; gjf -- Gaussian Input [Write-only]; got -- GULP format [Read-only]; gukin -- GAMESS-UK Input; gukout -- GAMESS-UK Output; gzmat -- Gaussian Z-Matrix Input; hin -- HyperChem HIN format; inchi -- InChI format; inchikey -- InChIKey [Write-only]; inp -- GAMESS Input; jin -- Jaguar input format; jout -- Jaguar output format [Read-only]; k -- Compare molecules using InChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multil,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:478,Deployability,install,installed,478,"Hello,. Thank you for your great work with OpenBabel! . - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 , 10.0.19043 Build 19043. ## Expected Behavior; On OpenBabel GUI, I expected to find `xyz` format in the ----INPUT FORMAT---- list. . ## Actual Behavior; While dozens of formats are available in ----INPUT FORMAT---- list, `xyz` is not. ## Steps to Reproduce; I downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. However, I can't see `xyz` in the ----INPUT FORMAT---- list. I am trying to convert multimolecule `xyz` files into multimolecule `sdf` files. Running `obabel -L formats` in command prompt results in the following (`xyz` is missing):. `abinit -- ABINIT Output Format [Read-only]; acesin -- ACES input format [Write-only]; acesout -- ACES output format [Read-only]; adf -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:499,Deployability,release,release,499,"Hello,. Thank you for your great work with OpenBabel! . - [x] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10 , 10.0.19043 Build 19043. ## Expected Behavior; On OpenBabel GUI, I expected to find `xyz` format in the ----INPUT FORMAT---- list. . ## Actual Behavior; While dozens of formats are available in ----INPUT FORMAT---- list, `xyz` is not. ## Steps to Reproduce; I downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. However, I can't see `xyz` in the ----INPUT FORMAT---- list. I am trying to convert multimolecule `xyz` files into multimolecule `sdf` files. Running `obabel -L formats` in command prompt results in the following (`xyz` is missing):. `abinit -- ABINIT Output Format [Read-only]; acesin -- ACES input format [Write-only]; acesout -- ACES output format [Read-only]; adf -- ADF cartesian input format [Write-only]; adfband -- ADF Band output format [Read-only]; adfdftb -- ADF DFTB output format [Read-only]; adfout -- ADF output format [Read-only]; aoforce -- Turbomole AOFORCE output format [Read-only]; ascii -- ASCII format [Write-only]; axsf -- XCrySDen Structure Format [Read-only]; c09out -- Crystal 09 output format [Read-only]; can -- Canonical SMILES format; castep -- CASTEP format [Read-only]; cdjson -- ChemDoodle JSON; cdxml -- ChemDraw CDXML format; cml -- Chemical Markup Language; cmlr -- CML Reaction format; com -- Gaussian Input [Write-only]; confabreport -- Confab report format [Write-only]; CONTCAR -- VASP format; copy -- Copy raw text [Write-only]; cub -- Gaussian cube format; cube -- Gaussian cube format; dallog -- DALTON output format [Read-only]; dalmol -- DALTON input format; dmol -- DMol3 coordinates format; ent -- Protein Data Bank format; fch -- Gaussian formatted checkpoint file format [Read-only]; fchk -- Gaussian formatted checkpoint file format [Read-only]; fck -- Gaussian formatted checkpoint file format [Read-only]; fhiaims ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:4723,Deployability,Install,Installation,4723,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:4736,Deployability,install,install,4736,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:4761,Modifiability,variab,variables,4761,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2394:4792,Usability,clear,clear,4792,"nChI [Write-only]; mdl -- MDL MOL format; ml2 -- Sybyl Mol2 format; mna -- Multilevel Neighborhoods of Atoms (MNA) [Write-only]; mol -- MDL MOL format; mol2 -- Sybyl Mol2 format; molreport -- Open Babel molecule report [Write-only]; moo -- MOPAC Output format [Read-only]; mop -- MOPAC Cartesian format; mopcrt -- MOPAC Cartesian format; mopin -- MOPAC Internal; mopout -- MOPAC Output format [Read-only]; mp -- Molpro input format [Write-only]; mpc -- MOPAC Cartesian format; mpo -- Molpro output format [Read-only]; mrv -- Chemical Markup Language; nul -- Outputs nothing [Write-only]; nw -- NWChem input format [Write-only]; nwo -- NWChem output format [Read-only]; orca -- ORCA output format [Read-only]; orcainp -- ORCA input format [Write-only]; outmol -- DMol3 coordinates format; paint -- Painter format [Write-only]; pc -- PubChem format [Read-only]; pcjson -- PubChem JSON; pdb -- Protein Data Bank format; png -- PNG 2D depiction; POSCAR -- VASP format; pov -- POV-Ray input format [Write-only]; pwscf -- PWscf format [Read-only]; qcin -- Q-Chem input format [Write-only]; qcout -- Q-Chem output format [Read-only]; report -- Open Babel report format [Write-only]; sd -- MDL MOL format; sdf -- MDL MOL format; siesta -- SIESTA format [Read-only]; smi -- SMILES format; smiles -- SMILES format; svg -- SVG 2D depiction [Write-only]; sy2 -- Sybyl Mol2 format; t41 -- ADF TAPE41 format [Read-only]; text -- Read and write raw text; tmol -- TurboMole Coordinate format; txt -- Title format; VASP -- VASP format; xml -- General XML format [Read-only]; xsf -- XCrySDen Structure Format [Read-only]; zin -- ZINDO input format [Write-only]`. In this [closed issue](https://github.com/openbabel/openbabel/issues/1722), @fredrikw suggests that this could have something to do with [BABEL_LIBDIR](https://open-babel.readthedocs.io/en/latest/Installation/install.html#environment-variables). However, it is not clear to me how I can use this information. I would appreciate your ideas. Thanks,. Othman",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2394
https://github.com/openbabel/openbabel/issues/2396:201,Energy Efficiency,energy,energy-and-minimization,201,## Description; The OpenBabel documentation names two different default values for the `-ff` parameter in two different places:. This section says the default is `Ghemical` in two places:. [forcefield-energy-and-minimization](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#forcefield-energy-and-minimization). This section says the default is `MMFF94`. [generating-conformers-for-structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#generating-conformers-for-structures). As far as I can tell (by comparing results with and without -ff options) the default for energy minimization is `MMFF94`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2396
https://github.com/openbabel/openbabel/issues/2396:311,Energy Efficiency,energy,energy-and-minimization,311,## Description; The OpenBabel documentation names two different default values for the `-ff` parameter in two different places:. This section says the default is `Ghemical` in two places:. [forcefield-energy-and-minimization](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#forcefield-energy-and-minimization). This section says the default is `MMFF94`. [generating-conformers-for-structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#generating-conformers-for-structures). As far as I can tell (by comparing results with and without -ff options) the default for energy minimization is `MMFF94`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2396
https://github.com/openbabel/openbabel/issues/2396:621,Energy Efficiency,energy,energy,621,## Description; The OpenBabel documentation names two different default values for the `-ff` parameter in two different places:. This section says the default is `Ghemical` in two places:. [forcefield-energy-and-minimization](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#forcefield-energy-and-minimization). This section says the default is `MMFF94`. [generating-conformers-for-structures](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html#generating-conformers-for-structures). As far as I can tell (by comparing results with and without -ff options) the default for energy minimization is `MMFF94`.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2396
https://github.com/openbabel/openbabel/issues/2397:2443,Availability,echo,echo,2443,"-dfef-11eb-98f3-1b3273b0f25d.png"">. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```bash; #!/usr/bin/env bash. declare -a smiles_list=(; 'O=C1CCC=C2C=COC=C12'; 'COC=CC=O'; 'C1=NNN=N1'; 'CON(=O)=O'; 'COC1=CC(=O)C1=O'; 'ON1CC=NO1'; 'COP(=O)(OC)OC=CC=O'; 'COP1(=O)CCC(C=O)=CO1'; 'COP1(=O)CCCC(C=O)=CO1'; 'O=C1C=CC2C=NOC2=C1'; 'N1NC=NN1'; 'O=C1N=CC=C\C1=C1/ONC=C1'; 'CC1=C\C(ON1)=C1\C=C2C=CC=CC2=NC1=O'; 'O=CC1=C\C(ON1)=C1/C=CC=CC1=O'; 'C1ON2OC3=CNC=C3[C@H]2C=C1'; 'O=CC1=CONC1'; 'N1OO1'; 'COC1=CC(=O)C=CC1=C1C=CC(=O)C=C1OC'; 'COC1=CC(=O)C2=C3C(=CC=C2)C2=CC=CC4=C2C(C(OC)=CC4=O)=C13'; 'ON(=O)=C1C=CC=CC1=O'; 'O=CC1=C(OS(=O)=O)C2=CC=CC=C2S(=O)(=O)N1'; ). for smiles in ""${smiles_list[@]}""; do; output=$(obabel -:""${smiles}"" -ismi -ocan -p7.4 2>/dev/null); echo ""${smiles} -> ${output}""; done; ```. Output:; ```text; O=C1CCC=C2C=COC=C12 -> O=C1CCC=C2C1=C[O-]C=C2 ; COC=CC=O -> C[O-]C=CC=O ; C1=NNN=N1 -> [N-]1=CN=NN1 ; CON(=O)=O -> C[O-][NH+](=O)=O ; COC1=CC(=O)C1=O -> C[O-]C1=CC(=O)C1=O ; ON1CC=NO1 -> [O-]1N=CC[N+]1=O ; COP(=O)(OC)OC=CC=O -> COP(=O)([O-]C=CC=O)OC ; COP1(=O)CCC(C=O)=CO1 -> O=CC1=C[O-]P(=O)(CC1)OC ; COP1(=O)CCCC(C=O)=CO1 -> O=CC1=C[O-]P(=O)(CCC1)OC ; O=C1C=CC2C=NOC2=C1 -> O=C1C=CC2C(=C1)[O-]N=C2 ; N1NC=NN1 -> [N-]1=[N+]=[N-]C=N1 ; O=C1N=CC=C\C1=C1/ONC=C1 -> O=C1N=CC=C/C/1=C\1/C=CN[O-]1 ; CC1=C\C(ON1)=C1\C=C2C=CC=CC2=NC1=O -> CC1=C/C(=C\2/C=c3ccccc3=NC2=O)/[O-]N1 ; O=CC1=C\C(ON1)=C1/C=CC=CC1=O -> O=CC1=C/C(=C/2\C=CC=CC2=O)/[O-]N1 ; C1ON2OC3=CNC=C3[C@H]2C=C1 -> C1C=C[C@H]2[N+](=[O]1)[O-]c1c2c[nH]c1 ; O=CC1=CONC1 -> [O-]1NCC(=C1)C=O ; N1OO1 -> [O-]1[O]=[NH+]1 ; COC1=CC(=O)C=CC1=C1C=CC(=O)C=C1OC -> C[O-]C1=CC(=O)C=CC1=C1C=CC(=O)C=C1[O-]C ; COC1=CC(=O)C2=C3C(=CC=C2)C2=CC=CC4=C2C(C(OC)=CC4=O)=C13 -> C[O-]C1=CC(=O)c2c3c1c1C(=CC(=O)c4c1c(c3ccc2)c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2397
https://github.com/openbabel/openbabel/issues/2397:1669,Testability,test,test,1669,"[x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0 ; Operating system and version: Fedora 34. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. OpenBabel should correctly (de)protonate the following molecules or leave them untouched:. ![inputs](https://user-images.githubusercontent.com/1926852/124920501-4acc1a80-dfef-11eb-9ee8-9dbb7b3441a0.png). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. OpenBabel incorrectly modifies the input molecules and generates invalid SMILES.; <img width=""451"" alt=""outputs"" src=""https://user-images.githubusercontent.com/1926852/124920614-67685280-dfef-11eb-98f3-1b3273b0f25d.png"">. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```bash; #!/usr/bin/env bash. declare -a smiles_list=(; 'O=C1CCC=C2C=COC=C12'; 'COC=CC=O'; 'C1=NNN=N1'; 'CON(=O)=O'; 'COC1=CC(=O)C1=O'; 'ON1CC=NO1'; 'COP(=O)(OC)OC=CC=O'; 'COP1(=O)CCC(C=O)=CO1'; 'COP1(=O)CCCC(C=O)=CO1'; 'O=C1C=CC2C=NOC2=C1'; 'N1NC=NN1'; 'O=C1N=CC=C\C1=C1/ONC=C1'; 'CC1=C\C(ON1)=C1\C=C2C=CC=CC2=NC1=O'; 'O=CC1=C\C(ON1)=C1/C=CC=CC1=O'; 'C1ON2OC3=CNC=C3[C@H]2C=C1'; 'O=CC1=CONC1'; 'N1OO1'; 'COC1=CC(=O)C=CC1=C1C=CC(=O)C=C1OC'; 'COC1=CC(=O)C2=C3C(=CC=C2)C2=CC=CC4=C2C(C(OC)=CC4=O)=C13'; 'ON(=O)=C1C=CC=CC1=O'; 'O=CC1=C(OS(=O)=O)C2=CC=CC=C2S(=O)(=O)N1'; ). for smiles in ""${smiles_list[@]}""; do; output=$(obabel -:""${smiles}"" -ismi -ocan -p7.4 2>/dev/null); echo ""${smiles} -> ${output}""; done; ```. Output:; ```text; O=C1CCC=C2C=COC=C12 -> O=C1CCC=C2C1=C[O-]C=C2 ; COC=CC=O -> C[O-]C=CC=O ; C1=NNN=N1 ->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2397
https://github.com/openbabel/openbabel/issues/2398:73,Deployability,install,installed,73,"- I believe this to be a bug with Open Babel. version: Open Babel 3.1.0, installed via conda. Hi OB, thanks for all your great work. This isomeric SMILES code leads to a bad ring conformation in 3d:; ```; obabel -:""Cc1nnnn1[C@@H](Cc1cccc(F)c1)C(=O)Nc1cc2c(=O)[nH]cnc2cc1F"" --gen3d -O out.sdf; ```; The result has an 'inverted' atom - the hydrogen off nitrogen points inside the ring instead of outside. . The SMILES came from EnumerateStereoisomers in RDKit, so it's possible there's some disparity in how the two libraries parse smiles, but at least it is parsed and embedded in 3d as you would expect by RDKit. Does anyone recognise what might be happening?. Thanks; Lewis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2398
https://github.com/openbabel/openbabel/issues/2399:166,Availability,down,download,166,"Dear OpenBabel team,. there is a new version of the YASARA YOb-format, to support it, the file; src/formats/yasaraformat.cpp; must be replaced with this one:; http://download.yasara.org/service/yasaraformat.cpp. I keep fingers crossed that it compiles also on the more exotic architectures supported by OpenBabel, otherwise just send the error messages to elmar (at) yasara.org, and I'll tune it. Best regards,; Elmar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399
https://github.com/openbabel/openbabel/issues/2399:338,Availability,error,error,338,"Dear OpenBabel team,. there is a new version of the YASARA YOb-format, to support it, the file; src/formats/yasaraformat.cpp; must be replaced with this one:; http://download.yasara.org/service/yasaraformat.cpp. I keep fingers crossed that it compiles also on the more exotic architectures supported by OpenBabel, otherwise just send the error messages to elmar (at) yasara.org, and I'll tune it. Best regards,; Elmar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399
https://github.com/openbabel/openbabel/issues/2399:344,Integrability,message,messages,344,"Dear OpenBabel team,. there is a new version of the YASARA YOb-format, to support it, the file; src/formats/yasaraformat.cpp; must be replaced with this one:; http://download.yasara.org/service/yasaraformat.cpp. I keep fingers crossed that it compiles also on the more exotic architectures supported by OpenBabel, otherwise just send the error messages to elmar (at) yasara.org, and I'll tune it. Best regards,; Elmar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399
https://github.com/openbabel/openbabel/issues/2399:388,Performance,tune,tune,388,"Dear OpenBabel team,. there is a new version of the YASARA YOb-format, to support it, the file; src/formats/yasaraformat.cpp; must be replaced with this one:; http://download.yasara.org/service/yasaraformat.cpp. I keep fingers crossed that it compiles also on the more exotic architectures supported by OpenBabel, otherwise just send the error messages to elmar (at) yasara.org, and I'll tune it. Best regards,; Elmar",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2399
https://github.com/openbabel/openbabel/issues/2401:151,Availability,Error,Error,151,"When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as below:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. What is the problem? Could somebody help me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2401
https://github.com/openbabel/openbabel/issues/2401:282,Availability,Error,Error,282,"When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as below:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. What is the problem? Could somebody help me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2401
https://github.com/openbabel/openbabel/issues/2401:182,Performance,Load,LoadFragments,182,"When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as below:. ==============================; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; ==============================; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted. What is the problem? Could somebody help me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2401
https://github.com/openbabel/openbabel/issues/2402:804,Availability,Error,Error,804,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2402:903,Availability,Error,Error,903,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2402:1115,Availability,Error,Error,1115,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2402:1214,Availability,Error,Error,1214,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2402:835,Performance,Load,LoadFragments,835,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2402:1146,Performance,Load,LoadFragments,1146,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: windows x64. ## Expected Behavior; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; *** Open Babel Error in OpenBabel::OBBuilder::LoadFragments; Cannot open ring-fragments-index.txt; *** Open Babel Error in OpenBabel::OBForceFieldUFF::SetTypes; Cannot open UFF.prm; 1 molecule converted . ## Steps to Reproduce; When I use the Open Babel 3.1.1 to covert SMILES to 3D mol2 format molecule, the err happens as above. For example, you can try the below SMILES to Mol2 format by using Windows version Open Babel 3.1.1:. ```javascript; CC(C)C[C@@H](C(=O)N[C@@H](C[C@H]1[C@H](NC=C1)O)CCC(=O)OCc1ccccc1)NC(=O)[C@H](C(C)C)NC(=O)[C@H](C)NC(=O)c1cc(C)on1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402
https://github.com/openbabel/openbabel/issues/2403:119,Deployability,install,install,119,"- [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. I just found that it is possible to install RDKit easily with pip using the [rdkit-pypi ](https://github.com/kuelumbus/rdkit_platform_wheels) which uses [cibuildwheel](https://github.com/pypa/cibuildwheel/) GHA. I think it will be great to use this GHA, because it can automate the wheel build for Linux, MacOS, and Windows and allowing the user to easily install Openbabel with pip.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2403
https://github.com/openbabel/openbabel/issues/2403:439,Deployability,install,install,439,"- [ ] I believe this to be a bug with Open Babel; - [x] This is a feature request. I just found that it is possible to install RDKit easily with pip using the [rdkit-pypi ](https://github.com/kuelumbus/rdkit_platform_wheels) which uses [cibuildwheel](https://github.com/pypa/cibuildwheel/) GHA. I think it will be great to use this GHA, because it can automate the wheel build for Linux, MacOS, and Windows and allowing the user to easily install Openbabel with pip.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2403
https://github.com/openbabel/openbabel/issues/2404:514,Availability,reliab,reliably,514,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:703,Availability,reliab,reliable,703,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1779,Availability,echo,echo,1779," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:74,Energy Efficiency,charge,charged,74,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:157,Energy Efficiency,charge,charges,157,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:182,Energy Efficiency,charge,charges,182,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:283,Energy Efficiency,charge,charge,283,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:371,Energy Efficiency,charge,charge,371,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:536,Energy Efficiency,charge,charges,536,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:735,Energy Efficiency,charge,charge,735,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:812,Energy Efficiency,charge,charges,812,"Dear Openbabel community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; L",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1546,Integrability,message,messages,1546," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1568,Integrability,message,messages,1568," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1536,Security,audit,audit,1536," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1124,Testability,test,test,1124," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1192,Testability,test,test,1192," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1297,Testability,test,test,1297," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1311,Testability,test,test,1311," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/issues/2404:1542,Testability,log,log,1542," community,; I have a pdbqt (after vina docking) of a +vely charged compound which I'm reducing and converting into mol2 format with gasteiger charges.; But the sum of charges in mol2 files is almost zero, not +1 as expected.; I also tried using --gen3D flag and other charge models e.g. qeq, mmff94 during the conversion but in vain. Some methods give -ve charge! Files are attached (txt extension added) and the command is given below. Can you please suggest if there is a method in babel that can reliably estimate net charges on molecules without manual intervention?; I want this to work since I have a workflow for docking and MD that is working except for the fact that there is no reliable method to estimate net-charge without visual inspection of the structure.; I've manually summed the charges in excel, it is zero, not +1.; Is it possible that I missed something trivial?; Looking forward to valuable suggestions from the community.; thank you and best regards; Dr Vaibhav A. Dixit, Asst. Prof., BITS Pilani, Pilani India.; Email: vaibhav.dixit@pilani.bits-pilani.ac.in; vaibhavadixit@gmail.com. [test.mol2.txt](https://github.com/openbabel/openbabel/files/7070493/test.mol2.txt); [new1.pdb.txt](https://github.com/openbabel/openbabel/files/7070494/new1.pdb.txt). babel test.pdbqt -O test.mol2 -h -m --partialcharge gasteiger --gen3D; WARNING: damped steplength 0.0143888 to 0.00575672; WARNING: damped steplength 0.00447914 to 0.00300176; 9 molecules converted; 9 files output. The first is test1.mol2; 3621 audit log messages 99 debugging messages. Command to print netcharge (uses ""st"" from github).; egrep -A1000 ATOM test1.mol2 | grep -v ROOT | grep LIG | sed -e ""1d"" | awk '{print $9}' | st | awk '{print $4}' | tail -1 | xargs printf ""%1.0f"" && echo """"; -0. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Open Babel 2.3.2 -- Apr 23 2014 -- 21:08:30. Operating system and version:; Linux CentOS 7",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404
https://github.com/openbabel/openbabel/pull/2405:95,Availability,error,error-codes,95,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:216,Availability,error,error,216,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:399,Availability,error,errors,399,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:600,Availability,error,errors,600,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1050,Availability,error,errors,1050,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1068,Availability,error,errors,1068,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1274,Availability,error,errors,1274,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:335,Safety,safe,safety,335,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:127,Testability,test,test,127,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:312,Testability,test,tests,312,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:369,Testability,test,tests,369,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:736,Testability,test,tests,736,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1038,Testability,test,tests,1038,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1044,Testability,log,logic,1044,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/pull/2405:1100,Testability,test,tests,1100,"Results: https://github.com/cclauss/openbabel/actions. https://flake8.pycqa.org/en/latest/user/error-codes.html. On the flake8 test selection, this PR does _not_ focus on ""_style violations_"" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect). Instead, these tests focus on runtime safety and correctness:; * __E9__ tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST). Often these issues are a sign of unused code or code that has not been ported to Python 3. These would be compile-time errors in a compiled language but in a dynamic language like Python, they result in the script halting/crashing on the user.; * __F63__ tests are usually about the confusion between identity and equality in Python. Use ==/!= to compare str, bytes, and int literals is the classic case. These are areas where __a == b__ is True but __a is b__ is False (or vice versa). Python >= 3.8 will raise SyntaxWarnings on these instances.; * __F7__ tests logic errors and syntax errors in type hints; * __F82__ tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3. These also would be compile-time errors in a compiled language but in Python, a __NameError__ is raised which will halt/crash the script on the user.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2405
https://github.com/openbabel/openbabel/issues/2406:616,Availability,error,error,616,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:720,Availability,Error,Error,720,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3683,Availability,avail,available,3683," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:4497,Availability,Down,Downloaded,4497,"ng for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/p",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:5097,Availability,Down,Downloaded,5097,"ory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:850,Deployability,configurat,configuration,850,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:755,Integrability,MESSAGE,MESSAGE,755,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:4740,Integrability,depend,dependency,4740,"...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/li",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:850,Modifiability,config,configuration,850,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:5411,Modifiability,config,config,5411,"tem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempt",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:6712,Modifiability,Config,Configuring,6712,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3495,Performance,Perform,Performing,3495," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3535,Performance,Perform,Performing,3535," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3584,Performance,Perform,Performing,3584," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3624,Performance,Perform,Performing,3624," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3715,Performance,Perform,Performing,3715,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3755,Performance,Perform,Performing,3755,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3805,Performance,Perform,Performing,3805,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3849,Performance,Perform,Performing,3849,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3902,Performance,Perform,Performing,3902,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3960,Performance,Perform,Performing,3960,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:5950,Performance,Perform,Performing,5950,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:5994,Performance,Perform,Performing,5994,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1736,Safety,Detect,Detecting,1736,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1770,Safety,Detect,Detecting,1770,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1877,Safety,Detect,Detecting,1877,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1910,Safety,Detect,Detecting,1910,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1950,Safety,Detect,Detecting,1950,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:1986,Safety,Detect,Detecting,1986,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:2097,Safety,Detect,Detecting,2097,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:2132,Safety,Detect,Detecting,2132,"CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/lib64/ccache/g++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found INCHI: /usr/lib64/libinchi.so ; -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.9.12"") ; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Found wxWidgets: -pthread;;;-lwx_baseu-3.0;-lwx_gtk3u_core-3.0;-lwx_gtk3u_adv-3.0 (found version ""3.0.5"") ; -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:191,Testability,test,test,191,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:237,Testability,Test,Test,237,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:522,Testability,test,test,522,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:527,Testability,test,testdistgeom,527,"Hi all. - I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Fedora 34; Python-3.9.6. ## Expected Behavior; None test failed. ## Actual Behavior. ```; 216/227 Test #216: pytest_distgeom ..................***Failed 0.05 sec; /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/scripts/python:/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/x86_64-redhat-linux-gnu/lib64; File ""/home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/test/testdistgeom.py"", line 45; 'Clc1cccc(Cl)c1\C=N\NC(=O)c1cccs1',; ^; SyntaxError: (unicode error) 'unicodeescape' codec can't decode bytes in position 18-19: malformed \N character escape. CMake Error at pytest_distgeom.cmake:20 (MESSAGE):; 1; ```. ## Steps to Reproduce. Building openbabel-3.1.1 on Fedora 34 with following configuration:. ```; + /usr/bin/cmake -S . -B x86_64-redhat-linux-gnu -DCMAKE_C_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_Fortran_FLAGS_RELEASE:STRING=-DNDEBUG -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_INSTALL_DO_STRIP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr -DINCLUDE_INSTALL_DIR:PATH=/usr/include -DLIB_INSTALL_DIR:PATH=/usr/lib64 -DSYSCONF_INSTALL_DIR:PATH=/etc -DSHARE_INSTALL_PREFIX:PATH=/usr/share -DLIB_SUFFIX=64 -DBUILD_SHARED_LIBS:BOOL=ON -Wno-dev -DCMAKE_SKIP_RPATH:BOOL=ON -DBUILD_GUI:BOOL=ON -DPYTHON_BINDINGS:BOOL=ON -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPERL_BINDINGS:BOOL=OFF -DRUBY_BINDINGS:BOOL=OFF -DOPENBABEL_USE_SYSTEM_INCHI=true -DENABLE_VERSIONED_FORMATS=false -DRUN_SWIG=true -DENABLE_TESTS:BOOL=ON -DOPTIMIZE_NATIVE=OFF; -- The C compiler identification is GNU 11.2.1; -- The CXX compiler identification is GNU 11.2.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/lib64/ccache/gcc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3506,Testability,Test,Test,3506," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3546,Testability,Test,Test,3546," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3595,Testability,Test,Test,3595," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3635,Testability,Test,Test,3635," found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3726,Testability,Test,Test,3726,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3766,Testability,Test,Test,3766,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3816,Testability,Test,Test,3816,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3860,Testability,Test,Test,3860,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3913,Testability,Test,Test,3913,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:3971,Testability,Test,Test,3971,"-- Looking for rint - not found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - not found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Performing Test HAVE_GCC_VISIBILITY; -- Performing Test HAVE_GCC_VISIBILITY - Success; -- Checking available shared pointer...; -- Performing Test HAVE_STD_SHARED_PTR; -- Performing Test HAVE_STD_SHARED_PTR - Success; -- Performing Test HAVE_STD_TR1_SHARED_PTR; -- Performing Test HAVE_STD_TR1_SHARED_PTR - Failed; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER; -- Performing Test HAVE_STD_TR1_SHARED_PTR_IN_TR1_HEADER - Success; -- Use std::shared_ptr in memory; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: filesystem iostreams unit_test_framework regex ; -- maeparser include dir set as 'maeparser_INCLUDE_DIRS-NOTFOUND'; -- maeparser libraries set as 'maeparser_LIBRARIES-NOTFOUND'; -- Downloaded MaeParser 'v1.2.3' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3.; -- Found Boost: /usr/include (found version ""1.75.0"") found components: iostreams regex ; -- Using zlib library for iostreams dependency.; -- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:5961,Testability,Test,Test,5961,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2406:6005,Testability,Test,Test,6005,"-- Maestro formats will be supported. Using MaeParser 'v1.2.3' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/maeparser-v1.2.3; -- coordgen include dir set as coordgen_INCLUDE_DIRS-NOTFOUND; -- coordgen libraries set as 'coordgen_LIBRARIES-NOTFOUND'; -- coordgen templates file set as 'coordgen_TEMPLATE_FILE-NOTFOUND'; -- Downloaded Coordgen 'master' to /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master.; -- Coordinate generation with Coordgen will be supported Using Coordgen 'master' at /home/sagitter/rpmbuild/BUILD/openbabel-openbabel-3-1-1/external/coordgen-master; -- Found PkgConfig: /usr/bin/pkg-config (found version ""1.7.3"") ; -- Found RapidJSON: /usr/include (found suitable version ""1.1.0"", minimum required is ""1.1.0"") ; -- JSON formats will be supported. Using RapidJSON 1.1.0 at /usr/include; -- Checking for module 'cairo'; -- Found cairo, version 1.17.4; -- Found Cairo: /usr/lib64/libcairo.so ; -- Cairo found. PNG output will be supported.; -- Found Boost: /usr/include (found suitable version ""1.75.0"", minimum required is ""1.45.0"") found components: system ; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; -- Found Boost: /usr/include (found version ""1.75.0"") found components: program_options iostreams regex ; -- Looking for getopt; -- Looking for getopt - found; -- Attempting to build the GUI; -- wxWidgets found => GUI will be built; -- Found PythonInterp: /usr/bin/python3 (found version ""3.9.6"") ; -- Found SWIG: /usr/bin/swig (found version ""4.0.2"") ; -- Found SWIG: /usr/bin/swig (found suitable version ""4.0.2"", minimum required is ""2.0"") ; -- Found PythonLibs: /usr/lib64/libpython3.9.so (found version ""3.9.6"") ; -- Python bindings will be compiled; -- Configuring done; -- Generating done. ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2406
https://github.com/openbabel/openbabel/issues/2407:206,Availability,error,error,206,"Hi all. [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7; Python-3.8.6; swig-2.0.10. ## Expected Behavior; None error. ## Actual Behavior; ```; [ 86%] Built target obfitall; /usr/bin/gmake -f scripts/CMakeFiles/bindings_python.dir/build.make scripts/CMakeFiles/bindings_python.dir/depend; gmake[2]: Entering directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Generating python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexcep",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:2369,Availability,Error,Error,2369,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:2383,Availability,error,error,2383,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:2465,Availability,Error,Error,2465,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:375,Integrability,depend,depend,375,"Hi all. [x ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7; Python-3.8.6; swig-2.0.10. ## Expected Behavior; None error. ## Actual Behavior; ```; [ 86%] Built target obfitall; /usr/bin/gmake -f scripts/CMakeFiles/bindings_python.dir/build.make scripts/CMakeFiles/bindings_python.dir/depend; gmake[2]: Entering directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Generating python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexcep",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:1218,Testability,test,test,1218,"3.8.6; swig-2.0.10. ## Expected Behavior; None error. ## Actual Behavior; ```; [ 86%] Built target obfitall; /usr/bin/gmake -f scripts/CMakeFiles/bindings_python.dir/build.make scripts/CMakeFiles/bindings_python.dir/depend; gmake[2]: Entering directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Generating python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:1325,Testability,test,test,1325,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:1577,Testability,test,test,1577,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:1869,Testability,test,test,1869,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2407:2263,Testability,test,test,2263,"ing python/openbabel/openbabel-python.cpp, python/openbabel/openbabel.py; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts && /usr/bin/swig -python -c++ -small -O -templatereduce -naturalvar -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -o /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel/openbabel-python.cpp -DHAVE_EIGEN -DHAVE_EIGEN3 -outdir /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/python/openbabel /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i; gmake[2]: Leaving directory `/builddir/build/BUILD/openbabel-openbabel-3-1-1'; [ 86%] Built target test_inchiwrite; [ 86%] Building CXX object test/CMakeFiles/test_runner.dir/automorphismtest.cpp.o; cd /builddir/build/BUILD/openbabel-openbabel-3-1-1/test && /usr/bin/c++ -DFORMATDIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/lib64//\"" -DHAVE_EIGEN -DHAVE_EIGEN3 -DHAVE_LIBZ -DHAVE_RADPIJSON -DHAVE_SHARED_POINTER -DHAVE_WXWIDGETS -DTESTDATADIR=\""/builddir/build/BUILD/openbabel-openbabel-3-1-1/test/files/\"" -DUSING_DYNAMIC_LIBS -DWXUSINGDLL -D_FILE_OFFSET_BITS=64 -D__WXGTK__ -I/usr/include/boost169 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/include -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/data -I/usr/include/eigen3 -I/builddir/build/BUILD/openbabel-openbabel-3-1-1/test -isystem /usr/lib64/wx/include/gtk3-unicode-3.0 -isystem /usr/include/wx-3.0 -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -pthread -DNDEBUG -O3 -DNDEBUG -fPIE -pthread -std=gnu++11 -o CMakeFiles/test_runner.dir/automorphismtest.cpp.o -c /builddir/build/BUILD/openbabel-openbabel-3-1-1/test/automorphismtest.cpp; /builddir/build/BUILD/openbabel-openbabel-3-1-1/scripts/openbabel-python.i:79: Error: Syntax error in input(1).; gmake[2]: *** [scripts/python/openbabel/openbabel-python.cpp] Error 1; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2407
https://github.com/openbabel/openbabel/issues/2408:298,Availability,ERROR,ERROR,298,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:313,Availability,error,errored,313,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1749,Availability,Error,Error,1749,"""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1832,Availability,Error,Error,1832,"ile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1908,Availability,Error,Error,1908,"vf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; ope",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1986,Availability,Error,Error,1986,"ders /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openba",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2070,Availability,Error,Error,2070,"l_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbab",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2156,Availability,Error,Error,2156,"ing build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/o",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2244,Availability,Error,Error,2244,"; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabe",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2331,Availability,Error,Error,2331,"']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-py",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2409,Availability,Error,Error,2409,._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2485,Availability,Error,Error,2485,nbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openb,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2564,Availability,Error,Error,2564, -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2644,Availability,Error,Error,2644,penbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2722,Availability,Error,Error,2722,hon.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2799,Availability,Error,Error,2799,el-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/op,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2877,Availability,Error,Error,2877,python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2956,Availability,Error,Error,2956,python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/ope,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3034,Availability,Error,Error,3034,el-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbab,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3118,Availability,Error,Error,3118,abel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbab,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3201,Availability,Error,Error,3201,l/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbab,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3281,Availability,Error,Error,3281,penbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3360,Availability,Error,Error,3360,abel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbab,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3445,Availability,Error,Error,3445,/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-pyth,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3521,Availability,Error,Error,3521,bel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbab,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3597,Availability,Error,Error,3597,babel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openba,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3677,Availability,Error,Error,3677,/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3763,Availability,Error,Error,3763,nbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openba,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3838,Availability,Error,Error,3838,openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openb,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3914,Availability,Error,Error,3914,/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openba,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:3994,Availability,Error,Error,3994,openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4071,Availability,Error,Error,4071,bel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/op,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4154,Availability,Error,Error,4154,abel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openba,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4236,Availability,Error,Error,4236,el/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4318,Availability,Error,Error,4318,/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4397,Availability,Error,Error,4397,openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/st,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4471,Availability,Error,Error,4471,nbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/st,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4554,Availability,Error,Error,4554,l/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stere,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4633,Availability,Error,Error,4633,el/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4713,Availability,Error,Error,4713,nbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4796,Availability,Error,Error,4796,l/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4873,Availability,Error,Error,4873,/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4950,Availability,Error,Error,4950,openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5035,Availability,Error,Error,5035,babel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5112,Availability,Error,Error,5112,/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1',MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5191,Availability,Error,Error,5191,l/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m',MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5275,Availability,Error,Error,5275,"el/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/loca",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5341,Availability,Error,Error,5341,"nbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5422,Availability,Error,Error,5422,"l/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5500,Availability,Error,Error,5500,"nbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current ve",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5578,Availability,Error,Error,5578,"penbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5653,Availability,Error,Error,5653,"; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5732,Availability,Error,Error,5732,"ism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5785,Availability,Error,Error,5785,": Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compila",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6627,Availability,error,error,6627,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:222,Deployability,install,install,222,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:251,Deployability,install,install,251,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:454,Deployability,install,install-,454,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:552,Deployability,install,install-,552,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:885,Deployability,install,install,885,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:927,Deployability,install,install-record,927,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:994,Deployability,install,install-headers,994,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable t",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1065,Deployability,install,install-,1065,".1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:1164,Deployability,install,install,1164,".1.1.1; Operating system and version: ubuntu 16.04. ## Expected Behavior; When I run `pip install openbabel` it should install successfully. ## Actual Behavior; ```; ERROR: Command errored out with exit status 1:; command: /usr/local/bin/python -u -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""'; __file__='""'""'/tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/setup.py'""'""';f = getattr(tokenize, '""'""'open'""'""', open)(__file__) if os.path.exists(__file__) else io.StringIO('""'""'from setuptools import setup; setup()'""'""');code = f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record /tmp/pip-record-ratl3xvf/install-record.txt --single-version-externally-managed --compile --install-headers /usr/local/include/python3.7m/openbabel; cwd: /tmp/pip-install-f410up3w/openbabel_2671779bbe1b42a1a5f1de0d66de1c69/; Complete output (65 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/usr/local/include/python3.7m -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i; openbabel/openbabel-python.i:246: Error: Unable to find 'openbabel/babelconfig.h'; openbabel/openbabel-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:5819,Deployability,install,installed,5819,"on.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 ba",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6030,Deployability,install,install,6030,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6876,Deployability,update,update,6876,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6892,Deployability,install,install,6892,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6933,Deployability,install,install,6933,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:4504,Energy Efficiency,charge,chargemodel,4504,nbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/openbabel-python.i:326: Error: Unable to find 'openbabel/ring.h'; openbabel/openbabel-python.i:327: Error: Unable to find 'openbabel/parsmart.h'; openbabel/openbabel-python.i:328: Error: Unable to find 'openbabel/alias.h'; openbabel/openbabel-python.i:330: Error: Unable to find 'openbabel/fingerprint.h'; openbabel/openbabel-python.i:332: Error: Unable to find 'openbabel/descriptor.h'; openbabel/openbabel-python.i:343: Error: Unable to find 'openbabel/forcefield.h'; openbabel/openbabel-python.i:345: Error: Unable to find 'openbabel/builder.h'; openbabel/openbabel-python.i:346: Error: Unable to find 'openbabel/op.h'; openbabel/openbabel-python.i:348: Error: Unable to find 'openbabel/chargemodel.h'; openbabel/openbabel-python.i:351: Error: Unable to find 'openbabel/phmodel.h'; openbabel/openbabel-python.i:352: Error: Unable to find 'openbabel/graphsym.h'; openbabel/openbabel-python.i:353: Error: Unable to find 'openbabel/isomorphism.h'; openbabel/openbabel-python.i:354: Error: Unable to find 'openbabel/query.h'; openbabel/openbabel-python.i:355: Error: Unable to find 'openbabel/canon.h'; openbabel/openbabel-python.i:357: Error: Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/st,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:2832,Modifiability,plugin,plugin,2832,el-python.i:248: Error: Unable to find 'openbabel/data.h'; openbabel/openbabel-python.i:249: Error: Unable to find 'openbabel/obutil.h'; openbabel/openbabel-python.i:250: Error: Unable to find 'openbabel/math/vector3.h'; openbabel/openbabel-python.i:252: Error: Unable to find 'openbabel/math/matrix3x3.h'; openbabel/openbabel-python.i:253: Error: Unable to find 'openbabel/math/transform3d.h'; openbabel/openbabel-python.i:254: Error: Unable to find 'openbabel/math/spacegroup.h'; openbabel/openbabel-python.i:256: Error: Unable to find 'openbabel/bitvec.h'; openbabel/openbabel-python.i:260: Error: Unable to find 'openbabel/base.h'; openbabel/openbabel-python.i:262: Error: Unable to find 'openbabel/generic.h'; openbabel/openbabel-python.i:265: Error: Unable to find 'openbabel/griddata.h'; openbabel/openbabel-python.i:267: Error: Unable to find 'openbabel/chains.h'; openbabel/openbabel-python.i:268: Error: Unable to find 'openbabel/typer.h'; openbabel/openbabel-python.i:276: Error: Unable to find 'openbabel/plugin.h'; openbabel/openbabel-python.i:281: Error: Unable to find 'openbabel/oberror.h'; openbabel/openbabel-python.i:282: Error: Unable to find 'openbabel/format.h'; openbabel/openbabel-python.i:283: Error: Unable to find 'openbabel/obconversion.h'; openbabel/openbabel-python.i:284: Error: Unable to find 'openbabel/obfunctions.h'; openbabel/openbabel-python.i:295: Error: Unable to find 'openbabel/elements.h'; openbabel/openbabel-python.i:296: Error: Unable to find 'openbabel/residue.h'; openbabel/openbabel-python.i:297: Error: Unable to find 'openbabel/internalcoord.h'; openbabel/openbabel-python.i:298: Error: Unable to find 'openbabel/atom.h'; openbabel/openbabel-python.i:299: Error: Unable to find 'openbabel/bond.h'; openbabel/openbabel-python.i:300: Error: Unable to find 'openbabel/reaction.h'; openbabel/openbabel-python.i:301: Error: Unable to find 'openbabel/reactionfacade.h'; openbabel/openbabel-python.i:319: Error: Unable to find 'openbabel/mol.h'; openbabel/op,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6722,Modifiability,config,config,6722,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2408:6458,Security,validat,validate,6458,": Unable to find 'openbabel/stereo/stereo.h'; openbabel/openbabel-python.i:361: Error: Unable to find 'openbabel/rotor.h'; openbabel/openbabel-python.i:363: Error: Unable to find 'openbabel/rotamer.h'; openbabel/openbabel-python.i:364: Error: Unable to find 'openbabel/spectrophore.h'; openbabel/openbabel-python.i:435: Error: Unable to find 'openbabel/obiter.h'; openbabel/stereo.i:1: Error: Unable to find 'openbabel/stereo/tetranonplanar.h'; openbabel/stereo.i:2: Error: Unable to find 'openbabel/stereo/tetraplanar.h'; openbabel/stereo.i:3: Error: Unable to find 'openbabel/stereo/tetrahedral.h'; openbabel/stereo.i:4: Error: Unable to find 'openbabel/stereo/cistrans.h'; openbabel/stereo.i:5: Error: Unable to find 'openbabel/stereo/squareplanar.h'; openbabel/stereo.i:6: Error: Unable to find 'openbabel/stereo/bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. I think the important lines here are:; ```; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/usr/local/include/python3.7m', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib', '/usr/local/lib']; ```. On this line: https://github.com/openbabel/openbabel/blob/c3143e6235788ddd2c0a9d8298ad4873a5dbc81d/scripts/python/setup.py#L46, you get the version and validate it like `StrictVersion('3.1.1.1')` (3.1.1.1 is current version so subbing it in). This is an invalid version format, so StrictVersion raises a ValueError. This error causes the setup.py script to skip pulling the correct library and include dirs from pkg-config and instead fallback to the guess locations, which causes compilation to fail. ## Steps to Reproduce; ```; docker run -it python:3.7 bash; apt-get update; apt-get install openbabel libopenbabel-dev; pip3 install openbabel; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408
https://github.com/openbabel/openbabel/issues/2409:556,Availability,down,download,556,"Dear OpenBabel-Team,. it would be great if you could take a look at the following inconsistency:. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: ; - 3.1.1 (Python 3.9, conda-forge); ; Operating system and version: ; - Ubuntu 20.04; - Windows 10. ## Expected Behavior; Consistent atom typing across different operating systems. ## Actual Behavior; Atom type differs for atom 2373 from ligand 03P in PDB entry 3POZ:. Linux -> Nar; Windows 10 -> N2. ## Steps to Reproduce; - download 3POZ from the [PDB](https://www.rcsb.org/structure/3POZ); - run the following code on ubuntu and windows:. ```; from openbabel import pybel. molecule = list(pybel.readfile(""pdb"", ""/path/to/3poz.pdb""))[0]. for atom in molecule.atoms:; if atom.index == 2373:; print(atom.type); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2409
https://github.com/openbabel/openbabel/issues/2411:416,Availability,error,errors,416,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 18.04. ## Expected Behavior; PDB files do not support implicit hydrogens. Every atom is required to be explicitly listed in the file. When Open Babel reads a PDB file, it incorrectly adds implicit hydrogens, which lead to a cascade of other errors in chemical perception. The PDB file below contains a positively charged HIS residue. This is the dominant form below pH 6. The correct way to interpret it is to include exactly the atoms shown and no others, and to place a +1 formal charge on either ND1 or NE2. ## Actual Behavior; Open Babel incorrect places an implicit hydrogen on CE1. That leads it to incorrectly perceive a single bond rather than a double bond between ND1 and CE1, and to not place a charge on either nitrogen. ## Steps to Reproduce; ```; HETATM 1 C ACE A 1 0.069 -0.698 -0.007 1.00 0.00 C ; HETATM 2 O ACE A 1 0.145 -1.672 -0.738 1.00 0.00 O ; HETATM 3 CH3 ACE A 1 -1.215 -0.397 0.736 1.00 0.00 C ; HETATM 4 H1 ACE A 1 -1.457 0.659 0.633 1.00 0.00 H ; HETATM 5 H2 ACE A 1 -1.108 -0.655 1.787 1.00 0.00 H ; HETATM 6 H3 ACE A 1 -2.021 -0.987 0.300 1.00 0.00 H ; ATOM 7 N HIS A 2 1.170 0.011 0.231 1.00 0.00 N ; ATOM 8 H HIS A 2 1.937 -0.166 -0.407 1.00 0.00 H ; ATOM 9 CA HIS A 2 1.517 0.669 1.503 1.00 0.00 C ; ATOM 10 HA HIS A 2 0.617 0.883 2.080 1.00 0.00 H ; ATOM 11 CB HIS A 2 2.412 -0.293 2.326 1.00 0.00 C ; ATOM 12 HB2 HIS A 2 3.361 -0.417 1.799 1.00 0.00 H ; ATOM 13 HB3 HIS A 2 2.649 0.188 3.278 1.00 0.00 H ; ATOM 14 C HIS A 2 2.219 2.028 1.309 1.00 0.00 C ; ATOM 15 O HIS A 2 2.833 2.531 2.242 1.00 0.00 O ; ATOM 16 CG HIS A 2 1.857 -1.677 2.626 1.00 0.00 C ; ATOM 17 ND1 HIS A 2 1.497 -2.661 1.712 1.00 0.00 N ; ATOM 18 HD1 HIS A 2 1.453 -2.545 0.698 1.00 0.00 H ; ATOM 19 CE1 HIS A 2 1.093 -3.749 2.396 1.00 0.00 C ; ATOM 20 HE1 HIS A 2 0.726 -4.672 1.950 1.00 0.00 H ; ATOM 21 NE2 HIS A 2 1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411
https://github.com/openbabel/openbabel/issues/2411:488,Energy Efficiency,charge,charged,488,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 18.04. ## Expected Behavior; PDB files do not support implicit hydrogens. Every atom is required to be explicitly listed in the file. When Open Babel reads a PDB file, it incorrectly adds implicit hydrogens, which lead to a cascade of other errors in chemical perception. The PDB file below contains a positively charged HIS residue. This is the dominant form below pH 6. The correct way to interpret it is to include exactly the atoms shown and no others, and to place a +1 formal charge on either ND1 or NE2. ## Actual Behavior; Open Babel incorrect places an implicit hydrogen on CE1. That leads it to incorrectly perceive a single bond rather than a double bond between ND1 and CE1, and to not place a charge on either nitrogen. ## Steps to Reproduce; ```; HETATM 1 C ACE A 1 0.069 -0.698 -0.007 1.00 0.00 C ; HETATM 2 O ACE A 1 0.145 -1.672 -0.738 1.00 0.00 O ; HETATM 3 CH3 ACE A 1 -1.215 -0.397 0.736 1.00 0.00 C ; HETATM 4 H1 ACE A 1 -1.457 0.659 0.633 1.00 0.00 H ; HETATM 5 H2 ACE A 1 -1.108 -0.655 1.787 1.00 0.00 H ; HETATM 6 H3 ACE A 1 -2.021 -0.987 0.300 1.00 0.00 H ; ATOM 7 N HIS A 2 1.170 0.011 0.231 1.00 0.00 N ; ATOM 8 H HIS A 2 1.937 -0.166 -0.407 1.00 0.00 H ; ATOM 9 CA HIS A 2 1.517 0.669 1.503 1.00 0.00 C ; ATOM 10 HA HIS A 2 0.617 0.883 2.080 1.00 0.00 H ; ATOM 11 CB HIS A 2 2.412 -0.293 2.326 1.00 0.00 C ; ATOM 12 HB2 HIS A 2 3.361 -0.417 1.799 1.00 0.00 H ; ATOM 13 HB3 HIS A 2 2.649 0.188 3.278 1.00 0.00 H ; ATOM 14 C HIS A 2 2.219 2.028 1.309 1.00 0.00 C ; ATOM 15 O HIS A 2 2.833 2.531 2.242 1.00 0.00 O ; ATOM 16 CG HIS A 2 1.857 -1.677 2.626 1.00 0.00 C ; ATOM 17 ND1 HIS A 2 1.497 -2.661 1.712 1.00 0.00 N ; ATOM 18 HD1 HIS A 2 1.453 -2.545 0.698 1.00 0.00 H ; ATOM 19 CE1 HIS A 2 1.093 -3.749 2.396 1.00 0.00 C ; ATOM 20 HE1 HIS A 2 0.726 -4.672 1.950 1.00 0.00 H ; ATOM 21 NE2 HIS A 2 1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411
https://github.com/openbabel/openbabel/issues/2411:657,Energy Efficiency,charge,charge,657,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 18.04. ## Expected Behavior; PDB files do not support implicit hydrogens. Every atom is required to be explicitly listed in the file. When Open Babel reads a PDB file, it incorrectly adds implicit hydrogens, which lead to a cascade of other errors in chemical perception. The PDB file below contains a positively charged HIS residue. This is the dominant form below pH 6. The correct way to interpret it is to include exactly the atoms shown and no others, and to place a +1 formal charge on either ND1 or NE2. ## Actual Behavior; Open Babel incorrect places an implicit hydrogen on CE1. That leads it to incorrectly perceive a single bond rather than a double bond between ND1 and CE1, and to not place a charge on either nitrogen. ## Steps to Reproduce; ```; HETATM 1 C ACE A 1 0.069 -0.698 -0.007 1.00 0.00 C ; HETATM 2 O ACE A 1 0.145 -1.672 -0.738 1.00 0.00 O ; HETATM 3 CH3 ACE A 1 -1.215 -0.397 0.736 1.00 0.00 C ; HETATM 4 H1 ACE A 1 -1.457 0.659 0.633 1.00 0.00 H ; HETATM 5 H2 ACE A 1 -1.108 -0.655 1.787 1.00 0.00 H ; HETATM 6 H3 ACE A 1 -2.021 -0.987 0.300 1.00 0.00 H ; ATOM 7 N HIS A 2 1.170 0.011 0.231 1.00 0.00 N ; ATOM 8 H HIS A 2 1.937 -0.166 -0.407 1.00 0.00 H ; ATOM 9 CA HIS A 2 1.517 0.669 1.503 1.00 0.00 C ; ATOM 10 HA HIS A 2 0.617 0.883 2.080 1.00 0.00 H ; ATOM 11 CB HIS A 2 2.412 -0.293 2.326 1.00 0.00 C ; ATOM 12 HB2 HIS A 2 3.361 -0.417 1.799 1.00 0.00 H ; ATOM 13 HB3 HIS A 2 2.649 0.188 3.278 1.00 0.00 H ; ATOM 14 C HIS A 2 2.219 2.028 1.309 1.00 0.00 C ; ATOM 15 O HIS A 2 2.833 2.531 2.242 1.00 0.00 O ; ATOM 16 CG HIS A 2 1.857 -1.677 2.626 1.00 0.00 C ; ATOM 17 ND1 HIS A 2 1.497 -2.661 1.712 1.00 0.00 N ; ATOM 18 HD1 HIS A 2 1.453 -2.545 0.698 1.00 0.00 H ; ATOM 19 CE1 HIS A 2 1.093 -3.749 2.396 1.00 0.00 C ; ATOM 20 HE1 HIS A 2 0.726 -4.672 1.950 1.00 0.00 H ; ATOM 21 NE2 HIS A 2 1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411
https://github.com/openbabel/openbabel/issues/2411:881,Energy Efficiency,charge,charge,881,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 18.04. ## Expected Behavior; PDB files do not support implicit hydrogens. Every atom is required to be explicitly listed in the file. When Open Babel reads a PDB file, it incorrectly adds implicit hydrogens, which lead to a cascade of other errors in chemical perception. The PDB file below contains a positively charged HIS residue. This is the dominant form below pH 6. The correct way to interpret it is to include exactly the atoms shown and no others, and to place a +1 formal charge on either ND1 or NE2. ## Actual Behavior; Open Babel incorrect places an implicit hydrogen on CE1. That leads it to incorrectly perceive a single bond rather than a double bond between ND1 and CE1, and to not place a charge on either nitrogen. ## Steps to Reproduce; ```; HETATM 1 C ACE A 1 0.069 -0.698 -0.007 1.00 0.00 C ; HETATM 2 O ACE A 1 0.145 -1.672 -0.738 1.00 0.00 O ; HETATM 3 CH3 ACE A 1 -1.215 -0.397 0.736 1.00 0.00 C ; HETATM 4 H1 ACE A 1 -1.457 0.659 0.633 1.00 0.00 H ; HETATM 5 H2 ACE A 1 -1.108 -0.655 1.787 1.00 0.00 H ; HETATM 6 H3 ACE A 1 -2.021 -0.987 0.300 1.00 0.00 H ; ATOM 7 N HIS A 2 1.170 0.011 0.231 1.00 0.00 N ; ATOM 8 H HIS A 2 1.937 -0.166 -0.407 1.00 0.00 H ; ATOM 9 CA HIS A 2 1.517 0.669 1.503 1.00 0.00 C ; ATOM 10 HA HIS A 2 0.617 0.883 2.080 1.00 0.00 H ; ATOM 11 CB HIS A 2 2.412 -0.293 2.326 1.00 0.00 C ; ATOM 12 HB2 HIS A 2 3.361 -0.417 1.799 1.00 0.00 H ; ATOM 13 HB3 HIS A 2 2.649 0.188 3.278 1.00 0.00 H ; ATOM 14 C HIS A 2 2.219 2.028 1.309 1.00 0.00 C ; ATOM 15 O HIS A 2 2.833 2.531 2.242 1.00 0.00 O ; ATOM 16 CG HIS A 2 1.857 -1.677 2.626 1.00 0.00 C ; ATOM 17 ND1 HIS A 2 1.497 -2.661 1.712 1.00 0.00 N ; ATOM 18 HD1 HIS A 2 1.453 -2.545 0.698 1.00 0.00 H ; ATOM 19 CE1 HIS A 2 1.093 -3.749 2.396 1.00 0.00 C ; ATOM 20 HE1 HIS A 2 0.726 -4.672 1.950 1.00 0.00 H ; ATOM 21 NE2 HIS A 2 1",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411
https://github.com/openbabel/openbabel/issues/2412:707,Availability,failure,failure,707,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:251,Deployability,install,installation,251,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:394,Deployability,install,install,394,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:738,Integrability,message,message,738,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:775,Modifiability,variab,variable,775,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:217,Performance,perform,perform,217,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:499,Performance,Cache,Caches,499,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2412:732,Usability,clear,clear,732,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: MacOS Silicon. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior. When I perform poetry add open-babel the installation files during wheel compilation, because the tool is looking for the includes library in a ""standard folder"" for linux, while Brew install in another location. Guessing Open Babel location:; - include_dirs: ['/Users/currentuser/Library/Caches/pypoetry/virtualenvs/data-AqK3HHEa-py3.9/include', '/Users/currentuser/.pyenv/versions/3.9.7/include/python3.9', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/local/lib']. I think the build failure should provide a clear message on how to set an environment variable that will allow you use different folders",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412
https://github.com/openbabel/openbabel/issues/2413:216,Deployability,install,installation,216,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:238,Deployability,install,install,238,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:402,Deployability,install,install,402,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:1565,Deployability,Install,Install,1565,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:1605,Deployability,Install,Install,1605,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:625,Performance,Cache,Caches,625,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:809,Performance,Cache,Caches,809,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:1010,Performance,Cache,Caches,1010,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:1227,Performance,Cache,Caches,1227,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2413:1410,Performance,Cache,Caches,1410,"## Environment Information; Open Babel version: 3.1.1; Operating system and version: ProductName: macOS; ProductVersion: 11.5.2. ## Expected Behavior. I have worked around #2412 by adding to my Makefile a custom pip installation:. ```pip install --global-option=build_ext --global-option=""-I$(openbabel_include_version)"" --global-option=""-L$(openbabel_library_version)"" openbabel```. and I was able to install correctly openbabel Python bindings. However, when I import it in a python shell:. ```; >>> import openbabel; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so, 2): Symbol not found: __ZN9OpenBabel9aromtyperE; Referenced from: /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; Expected in: flat namespace; in /Users/myusername/Library/Caches/pypoetry/virtualenvs/my-project-AqK3HHEa-py3.9/lib/python3.9/site-packages/openbabel/_openbabel.cpython-39-darwin.so; ```. ## Steps to Reproduce. - Install open-babel and swig via brew; - Install openbabel python bindings via PIP as suggested; - launch python and import openbabel",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413
https://github.com/openbabel/openbabel/issues/2414:293,Availability,error,error,293,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:376,Availability,Error,Error,376,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:411,Availability,error,error,411,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:590,Availability,avail,available,590,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:299,Integrability,message,message,299,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:1159,Testability,assert,assert,1159," Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom_site_type_symbol; V2 1.0 0.000000 0.000000 0.000000 Biso ? V; V2 1.0 0.500000 0.500000 0.250000 Biso ? V; V2 1.0 0.000000 0.000000 0.500000 Biso ? V;",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2414:698,Usability,simpl,simple,698,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: openbabel-dev 3.1.1; Operating system and version: Ubuntu 20.10. ## Expected Behavior. Be able to read a CIF generated by VESTA. ## Actual Behavior. Getting this error message in the console:. ```; ==============================; *** Open Babel Error in Find; Unknown space group error (H-M symbol:P 1), cannot match the list of transforms, please file a bug report.; ==============================; *** Open Babel Warning in Do; Converting to P 1 cell using available symmetry transformations.; ```. ## Steps to Reproduce. I am trying to read the CIF file with this simple program `read.cpp`:. ```cpp; #include<openbabel/atom.h>; #include<openbabel/mol.h> // OpenBabel::OBMol; #include<openbabel/generic.h> // OpenBabel::OBUnitCell; #include<openbabel/obconversion.h>. int main(int argc, char** argv){. 	OpenBabel::OBMol mol;; 	{; 		OpenBabel::OBConversion obconv; obconv.SetInFormat(""cif"");; 		obconv.ReadFile(&mol, ""VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif""); ; 		std::cout<< mol.NumAtoms() << std::endl;; 		assert( mol.NumAtoms() == 12 );; 	}; }; ```. This is the complete CIF file `VO2-Tetragonal-ICSD_CollCode647613_double_c_triclinic.cif`. ```; #======================================================================; # CRYSTAL DATA; #----------------------------------------------------------------------; data_VESTA_phase_1. _chemical_name_common 'Vanadium dioxide - HT'; _cell_length_a 4.553490; _cell_length_b 4.553490; _cell_length_c 5.698880; _cell_angle_alpha 90.000000; _cell_angle_beta 90.000000; _cell_angle_gamma 90.000000; _cell_volume 118.162136; _space_group_name_H-M_alt 'P 1'; _space_group_IT_number 1. loop_; _space_group_symop_operation_xyz; 'x, y, z'; 'x, y, z+1/2'. loop_; _atom_site_label; _atom_site_occupancy; _atom_site_fract_x; _atom_site_fract_y; _atom_site_fract_z; _atom_site_adp_type; _atom_site_B_iso_or_equiv; _atom",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414
https://github.com/openbabel/openbabel/issues/2415:876,Availability,down,downloaded,876,"## Environment Information; Open Babel version:3.1.1; Operating system and version:; CentOS Linux 7.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expected that all bond types are same between SDF and MOL2. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I attached the PNG file below. ; In SDF, highlighted carbon has 4 connectivities, whereas it has 5 connectivities in MOL2. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; First of all, I downloaded MYU from RCSB through command ""wget https://files.rcsb.org/ligands/view/MYU_ideal.sdf"".; Secondly, I transformed it into MOL2 through command ""obabel -isdf MYU_ideal.sdf -omol2 -O test.mol2"". . ![sdf_mol2](https://user-images.githubusercontent.com/19364283/136455885-f556c99e-bab0-4cd7-a6c9-e67625521f0e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415
https://github.com/openbabel/openbabel/issues/2415:756,Testability,test,test,756,"## Environment Information; Open Babel version:3.1.1; Operating system and version:; CentOS Linux 7.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expected that all bond types are same between SDF and MOL2. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I attached the PNG file below. ; In SDF, highlighted carbon has 4 connectivities, whereas it has 5 connectivities in MOL2. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; First of all, I downloaded MYU from RCSB through command ""wget https://files.rcsb.org/ligands/view/MYU_ideal.sdf"".; Secondly, I transformed it into MOL2 through command ""obabel -isdf MYU_ideal.sdf -omol2 -O test.mol2"". . ![sdf_mol2](https://user-images.githubusercontent.com/19364283/136455885-f556c99e-bab0-4cd7-a6c9-e67625521f0e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415
https://github.com/openbabel/openbabel/issues/2415:1067,Testability,test,test,1067,"## Environment Information; Open Babel version:3.1.1; Operating system and version:; CentOS Linux 7.0. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I expected that all bond types are same between SDF and MOL2. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I attached the PNG file below. ; In SDF, highlighted carbon has 4 connectivities, whereas it has 5 connectivities in MOL2. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; First of all, I downloaded MYU from RCSB through command ""wget https://files.rcsb.org/ligands/view/MYU_ideal.sdf"".; Secondly, I transformed it into MOL2 through command ""obabel -isdf MYU_ideal.sdf -omol2 -O test.mol2"". . ![sdf_mol2](https://user-images.githubusercontent.com/19364283/136455885-f556c99e-bab0-4cd7-a6c9-e67625521f0e.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2415
https://github.com/openbabel/openbabel/issues/2417:328,Availability,echo,echo,328,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:544,Availability,echo,echo,544,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:671,Availability,Error,Error,671,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:1039,Availability,failure,failure,1039,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:1021,Safety,Abort,Aborted,1021,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:429,Testability,test,test,429,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:462,Testability,test,test,462,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:467,Testability,test,testbindings,467,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:483,Testability,Test,TestSuite,483,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:493,Testability,test,testTemplates,493,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:756,Testability,test,test,756,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:761,Testability,test,testbindings,761,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:777,Testability,Test,TestSuite,777,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:787,Testability,test,testTemplates,787,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:802,Testability,test,testTemplates,802,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:826,Testability,Test,TestSuite,826,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2417:1082,Testability,Test,Tested,1082,"I believe this to be a bug with Open Babel. To me it seems as resurfacing of #1851 on arm64 architecture. ## Environment Information; Open Babel version: 3.1.1+dfsg-6, as packaged in Debian; Operating system and version: Debian unstable a.k.a. sid. ## Expected Behavior; * The following results in a valid SDF file:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ```; * The following test passes:; ```bash; $ python3 test/testbindings.py TestSuite.testTemplates; ```. ## Actual Behavior; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; $ python3 test/testbindings.py TestSuite.testTemplates; testTemplates (__main__.TestSuite); Check for regressions to #1851 ... terminate called after throwing an instance of 'std::out_of_range'; what(): vector::_M_range_check: __n (which is 16) >= this->size() (which is 8); Aborted; ```; The failure is observed on arm64 architecture. Tested also on amd64 and mipsel, both worked fine.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2417
https://github.com/openbabel/openbabel/issues/2418:2213,Availability,error,error,2213,nbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer ov,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2472,Availability,error,error,2472,#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed i,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2732,Availability,error,error,2732,://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2992,Availability,error,error,2992,3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3252,Availability,error,error,3252,inedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runt,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3520,Availability,error,error,3520,viorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runti,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3788,Availability,error,error,3788,tizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime erro,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4056,Availability,error,error,4056,undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: sign,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4319,Availability,error,error,4319,fined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4586,Availability,error,error,4586,efined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer o,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4847,Availability,error,error,4847,"er: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type '",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5108,Availability,error,error,5108,"anitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5369,Availability,error,error,5369,"orSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5626,Availability,error,error,5626,"inedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5847,Availability,error,error,5847,"be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6093,Availability,error,error,6093,"cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of valu",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6355,Availability,error,error,6355,"annot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6612,Availability,error,error,6612,"annot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6869,Availability,error,error,6869,"definedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: l",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7137,Availability,error,error,7137,"ndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtim",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7393,Availability,error,error,7393,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/forma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7645,Availability,error,error,7645,": UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7924,Availability,error,error,7924,"fined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runti",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:8194,Availability,error,error,8194,"d-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:8487,Availability,error,error,8487,"test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:8757,Availability,error,error,8757,"n ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9002,Availability,error,error,9002," UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9317,Availability,error,error,9317,"/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior .",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9665,Availability,error,error,9665,"/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9947,Availability,error,error,9947,"passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:10217,Availability,error,error,10217,"s/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSa",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:10462,Availability,error,error,10462,"izer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/includ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:10777,Availability,error,error,10777,"raphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'b",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11096,Availability,error,error,11096,"/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ..",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11411,Availability,error,error,11411,": runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11755,Availability,error,error,11755,"ument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12006,Availability,error,error,12006,"binchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed inte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12253,Availability,error,error,12253,"rmats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: s",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12516,Availability,error,error,12516,"finedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: si",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12780,Availability,error,error,12780,"inedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: sig",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13044,Availability,error,error,13044,anitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: sign,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13308,Availability,error,error,13308,itizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signe,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13571,Availability,error,error,13571,nitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime er,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13834,Availability,error,error,13834,anitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14097,Availability,error,error,14097,Sanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:6,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14360,Availability,error,error,14360,rSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:38,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14633,Availability,error,error,14633,: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: r,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14906,Availability,error,error,14906,d-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime err,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15172,Availability,error,error,15172,ehavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15438,Availability,error,error,15438,vior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15704,Availability,error,error,15704,ed-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: run,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15967,Availability,error,error,15967,r: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16237,Availability,error,error,16237,ndefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runt,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16510,Availability,error,error,16510,d-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16773,Availability,error,error,16773,ined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtim,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17040,Availability,error,error,17040,-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runt,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17305,Availability,error,error,17305,fined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runt,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17574,Availability,error,error,17574,undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime err,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17839,Availability,error,error,17839,defined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime erro,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18108,Availability,error,error,18108,fined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: mem,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18373,Availability,error,error,18373,fined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18635,Availability,error,error,18635,r: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 whic,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18899,Availability,error,error,18899,er: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:19162,Availability,error,error,19162,cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:19644,Availability,error,error,19644,est_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:20185,Availability,error,error,20185," 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:4",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:20419,Availability,error,error,20419,"OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinch",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:20695,Availability,error,error,20695," 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBeha",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:20942,Availability,error,error,20942,"Base'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:21260,Availability,error,error,21260,"anitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 922337203",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:21578,Availability,error,error,21578,"c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'i",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:21896,Availability,error,error,21896,"ime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:22272,Availability,error,error,22272,"/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:22544,Availability,error,error,22544,"s argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/forma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:22775,Availability,error,error,22775," 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:23010,Availability,error,error,23010," SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:23328,Availability,error,error,23328,"'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 92233720",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:23646,Availability,error,error,23646,"/src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be nul",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:23964,Availability,error,error,23964,"ime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be nul",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:24341,Availability,error,error,24341,"include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ic",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:24613,Availability,error,error,24613,"ll pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please includ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:24931,Availability,error,error,24931,"o.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shell; mkdir build; cd build; CC=clang CXX=clang++ cmake -DBOOST_ROOT=path/to/boost -DEIGEN3_INCLUDE_DIR=path/to/eigen/include/eigen3 -DPYTHON_BINDINGS=YES -DRUN_SWIG=YES -DWITH_COORDGEN=YES ..; make; ctest -V; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:25249,Availability,error,error,25249,"o.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shell; mkdir build; cd build; CC=clang CXX=clang++ cmake -DBOOST_ROOT=path/to/boost -DEIGEN3_INCLUDE_DIR=path/to/eigen/include/eigen3 -DPYTHON_BINDINGS=YES -DRUN_SWIG=YES -DWITH_COORDGEN=YES ..; make; ctest -V; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5854,Performance,load,load,5854,"be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 10",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7144,Performance,load,load,7144,"ndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtim",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7400,Performance,load,load,7400,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/forma",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11762,Performance,load,load,11762,"ument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12013,Performance,load,load,12013,"binchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed inte",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:919,Safety,detect,detected,919,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:1165,Safety,detect,detected,1165,"s%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:19658,Security,access,access,19658,est_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:936,Testability,test,test,936,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: c3143e6235788ddd2c0a9d8298ad4873a5dbc81d; Operating system and version: Debian 11.1. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. No undefined behaviors are detected (during test). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Undefined behaviors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2139,Testability,test,test,2139,viors are detected at:; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/include/openbabel/atom.h#L160; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichi_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2393,Testability,test,test,2393,_bns.c#L2737; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L128; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1676; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/g,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2653,Testability,test,test,2653, https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/formats/libinchi/ichicano.c#L1677; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/graphsym.cpp#L389; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:2913,Testability,test,test,2913,l/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/obconversion.cpp#L302; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/src/residue.cpp#L853. `ctest` output:. ```; test 5; Start 5: test_align_5; --; 5: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3173,Testability,test,test,3173,raphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 5: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 17; Start 17: test_builder_1; --; 17: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3433,Testability,test,test,3433,ym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 17: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 18; Start 18: test_builder_2; --; 18: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3701,Testability,test,test,3701,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 18: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 19; Start 19: test_builder_3; --; 19: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:3969,Testability,test,test,3969,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 19: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 21; Start 21: test_builder_5; --; 21: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-be,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4236,Testability,test,test,4236,e error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 21: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 23; Start 23: test_canonconsistent_1; --; 23: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4500,Testability,test,test,4500,time error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 23: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 24; Start 24: test_canonconsistent_2; --; 24: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ..,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:4767,Testability,test,test,4767, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 24: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 25; Start 25: test_canonconsistent_3; --; 25: ../src/graphsym.cpp:389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gr,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5028,Testability,test,test,5028,"389:62: runtime error: signed iteger overflow: 100000000 * 100 cannot be represented in type 'int'; 25: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 27; Start 27: test_canonstable_1; --; 27: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5289,Testability,test,test,5289,"p:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 27: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 43; Start 43: test_cifspacegroup_12; --; 43: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_impl",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:5550,Testability,test,test,5550,"phsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 43: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 55; Start 55: test_graphsym_1; --; 55: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 55: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_l",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6017,Testability,test,test,6017," test 57; Start 57: test_graphsym_3; --; 57: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 57: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6274,Testability,test,test,6274,"; test 59; Start 59: test_graphsym_5; --; 59: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 59: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.c",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6536,Testability,test,test,6536,"--; test 60; Start 60: test_gzip_1; --; 60: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:3",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:6793,Testability,test,test,6793,"60: ../src/obconversion.cpp:302:24: runtime error: load of value 255, which is not a valid value for type 'bool'; 60: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 61; Start 61: test_addh_1; --; 61: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsy",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7050,Testability,test,test,7050,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 61: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 62; Start 62: test_implicitH_1; --; 62: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7306,Testability,test,test,7306,"./src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 62: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 66; Start 66: test_lssr_4; --; 66: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: unde",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7562,Testability,test,test,7562,"../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 66: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 67; Start 67: test_lssr_5; --; 67: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:7826,Testability,test,test,7826,"graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 67: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 72; Start 72: test_isomorphism_5; --; 72: ../src/obconversion.cpp:302:24: runtime error: load of value 53, which is not a valid value for type 'bool'; 72: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 73; Start 73: test_isomorphism_6; --; 73: ../src/obconversion.cpp:302:24: runtime error: load of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:8387,Testability,test,test,8387,"ad of value 52, which is not a valid value for type 'bool'; 73: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 74; Start 74: test_isomorphism_7; --; 74: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 74: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 82; Start 82: test_regressions_1; --; 82: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 82: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 82: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; --; test 83; Start 83: test_regressions_221; --; 83: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9580,Testability,test,test,9580,"3: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 83: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:9846,Testability,test,test,9846,"ehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 83: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 83: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 83: /usr/include/string.h:44:28: note: nonnull attribute specified here; 83: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 85; Start 85: test_regressions_223; --; 85: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 85: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 95; Start 95: test_regressions_2111; --; 95: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 95: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 95: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /us",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11674,Testability,test,test,11674,"ts/libinchi/ichicano.c:1677:21 in ; 95: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:11925,Testability,test,test,11925,"ARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; 95: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/gra",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12176,Testability,test,test,12176,"ude/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 95: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12434,Testability,test,test,12434,"nt 2, which is declared to never be null; 95: /usr/include/string.h:44:28: note: nonnull attribute specified here; 95: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 97; Start 97: test_rotor_2; --; 97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-beh",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12698,Testability,test,test,12698,"97: ../src/obconversion.cpp:302:24: runtime error: load of value 109, which is not a valid value for type 'bool'; 97: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 98; Start 98: test_rotor_3; --; 98: ../src/obconversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-beha",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:12962,Testability,test,test,12962,"conversion.cpp:302:24: runtime error: load of value 154, which is not a valid value for type 'bool'; 98: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/obconversion.cpp:302:24 in ; --; test 99; Start 99: test_rotor_4; --; 99: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behav",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13226,Testability,test,test,13226,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 99: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 100; Start 100: test_shuffle_1; --; 100: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13490,Testability,test,test,13490,:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 100: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 101; Start 101: test_shuffle_2; --; 101: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:13753,Testability,test,test,13753,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 101: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 103; Start 103: test_shuffle_4; --; 103: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefi,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14016,Testability,test,test,14016,89:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 103: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 104; Start 104: test_shuffle_5; --; 104: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitiz,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14279,Testability,test,test,14279,389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 104: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 105; Start 105: test_smiles_1; --; 105: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSani,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14542,Testability,test,test,14542,2: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 105: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 106; Start 106: test_smiles_2; --; 106: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSaniti,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:14815,Testability,test,test,14815, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 106: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 107; Start 107: test_smiles_3; --; 107: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: un,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15088,Testability,test,test,15088,: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 107: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 123; Start 123: test_stereo_6; --; 123: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15354,Testability,test,test,15354,igned integer overflow: 100000000 * 100 cannot be represented in type 'int'; 123: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 124; Start 124: test_stereoperception_1; --; 124: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15620,Testability,test,test,15620,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 124: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 126; Start 126: test_stereoperception_3; --; 126: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:15886,Testability,test,test,15886,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 126: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 148; Start 148: test_tautomer_21; --; 148: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16149,Testability,test,test,16149,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 148: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 165; Start 165: test_maereader_1; --; 165: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer:,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16419,Testability,test,test,16419, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 165: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 166; Start 166: test_maereader_2; --; 166: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undef,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16692,Testability,test,test,16692,rror: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 166: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 173; Start 173: test_cansmi_1; --; 173: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:16955,Testability,test,test,16955,or: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 173: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 174; Start 174: test_charge_mmff94_1; --; 174: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: unde,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17222,Testability,test,test,17222, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 174: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 175; Start 175: test_charge_gasteiger_1; --; 175: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: u,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17487,Testability,test,test,17487,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 175: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 177; Start 177: test_ffgaff_1; --; 177: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: und,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:17756,Testability,test,test,17756,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 177: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 178; Start 178: test_ffghemical_1; --; 178: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefine,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18021,Testability,test,test,18021,me error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 178: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 179; Start 179: test_ffmmff94_1; --; 179: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-b,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18290,Testability,test,test,18290, error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 179: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 180; Start 180: test_ffmmff94_2; --; 180: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object ,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18555,Testability,test,test,18555,untime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 180: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 181; Start 181: test_ffmmff94_3; --; 181: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../s,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:18817,Testability,test,test,18817, runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 181: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 182; Start 182: test_ffmmff94_4; --; 182: vdw ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:19081,Testability,test,test,19081,9:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 182: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 183; Start 183: test_ffmmff94_5; --; 183: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 183: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 185; Start 185: test_ffuff_1; --; 185: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 185: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 203; Start 203: test_phmodel_1; --; 203: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 203: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; --; test 204; Start 204: test_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --;,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:20096,Testability,test,test,20096,"st_residue_1; --; 204: ../src/residue.cpp:853:13: runtime error: member call on address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/residue.cpp:853:13 in ; 204: ../include/openbabel/atom.h:160:45: runtime error: member access within address 0x7fff3b32ed70 which does not point to an object of type 'OpenBabel::OBAtom'; 204: 0x7fff3b32ed70: note: object is of type 'OpenBabel::OBBase'; 204: 00 00 00 00 b0 9e 9e 36 b4 7f 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00; 204: ^~~~~~~~~~~~~~~~~~~~~~~; 204: vptr for 'OpenBabel::OBBase'; 204: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../include/openbabel/atom.h:160:45 in ; --; test 211; Start 211: inchiSamples.sdf_Test; --; 211: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 211: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; --; 211: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 211: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:22161,Testability,test,test,22161,"binchi/ichicano.c:1676:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 211: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:21 in ; 211: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 211: /usr/include/string.h:44:28: note: nonnull attribute specified here; 211: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; --; test 212; Start 212: inchiSamplesTechMan.sdf_Test; --; 212: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 212: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; 212: ../src/graphsym.cpp:389:62: runtime error: signed integer overflow: 100000000 * 100 cannot be represented in type 'int'; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/graphsym.cpp:389:62 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:24229,Testability,test,test,24229,"binchi/ichicano.c:1677:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1677:46 in ; 212: ../src/formats/libinchi/ichicano.c:1677:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 212: ../src/formats/libinchi/ichicano.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2418:25622,Testability,test,test,25622,"o.c:1677:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 212: /usr/include/string.h:44:28: note: nonnull attribute specified here; 212: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; --; test 213; Start 213: inchiSteffen_PubChem.smi_Test; --; 213: ../src/formats/libinchi/ichicano.c:128:28: runtime error: left shift of 9223372036854775807 by 1 places cannot be represented in type 'clock_t' (aka 'long'); 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:128:28 in ; 213: ../src/formats/libinchi/ichicano.c:1676:21: runtime error: null pointer passed as argument 1, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:21 in ; 213: ../src/formats/libinchi/ichicano.c:1676:46: runtime error: null pointer passed as argument 2, which is declared to never be null; 213: /usr/include/string.h:44:28: note: nonnull attribute specified here; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichicano.c:1676:46 in ; 213: ../src/formats/libinchi/ichi_bns.c:2737:66: runtime error: left shift of 1073741824 by 1 places cannot be represented in type 'int'; 213: SUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../src/formats/libinchi/ichi_bns.c:2737:66 in ; ```. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->. ```shell; mkdir build; cd build; CC=clang CXX=clang++ cmake -DBOOST_ROOT=path/to/boost -DEIGEN3_INCLUDE_DIR=path/to/eigen/include/eigen3 -DPYTHON_BINDINGS=YES -DRUN_SWIG=YES -DWITH_COORDGEN=YES ..; make; ctest -V; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2418
https://github.com/openbabel/openbabel/issues/2419:362,Integrability,interface,interface,362,"- [ ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS Catalina 10.15.7. ## Expected Behavior; I expect my code to generate a pdb file with xyz coordinates included. When I try the same operation with the OpenBabel CLI, I have no issue. This is only a problem with the python interface. ## Actual Behavior; A PDB file is generated but there are no coordinates. ## Steps to Reproduce. I am running the following code. I have tried several different valid SMILES. ``` python; obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""pdb""). mol = openbabel.OBMol(); obConversion.ReadString(mol, 'C'); mol.AddHydrogens(); obConversion.AddOption('gen3d', obConversion.OUTOPTIONS) # I have also tried INOPTIONS and GENOPTIONS; obConversion.WriteFile(mol, f""TEST.pdb""); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2419
https://github.com/openbabel/openbabel/issues/2419:861,Testability,TEST,TEST,861,"- [ ] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: macOS Catalina 10.15.7. ## Expected Behavior; I expect my code to generate a pdb file with xyz coordinates included. When I try the same operation with the OpenBabel CLI, I have no issue. This is only a problem with the python interface. ## Actual Behavior; A PDB file is generated but there are no coordinates. ## Steps to Reproduce. I am running the following code. I have tried several different valid SMILES. ``` python; obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""pdb""). mol = openbabel.OBMol(); obConversion.ReadString(mol, 'C'); mol.AddHydrogens(); obConversion.AddOption('gen3d', obConversion.OUTOPTIONS) # I have also tried INOPTIONS and GENOPTIONS; obConversion.WriteFile(mol, f""TEST.pdb""); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2419
https://github.com/openbabel/openbabel/issues/2420:602,Availability,down,download,602,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Ubuntu 20.04 LTS. ## Expected Behavior; The coordinates of the hydrogen atoms calculated using both the API and the command line tool should be consistent. Adding hydrogens should produce coordinates that are identical (machine precision notwithstanding) across runs. ## Actual Behavior; The x coordinates are consistent across runs; the y and z coordinates vary significantly. ## Steps to Reproduce; ```; wget https://files.rcsb.org/download/1Q8T.pdb; obabel 1Q8T.pdb -O output1.pdb -h; obabel 1Q8T.pdb -O output2.pdb -h; diff output1.pdb output2.pdb; ```; The first few lines of the diff read like so (for me - they will be different for you!):. ```; 3872,3874c3872,3874; < ATOM 3371 H ASP A 25 -6.177 3.424 -17.513 1.00 0.00 H ; < ATOM 3372 H ASP A 25 -6.177 3.613 -15.776 1.00 0.00 H ; < ATOM 3373 H ASP A 25 -6.177 2.014 -16.480 1.00 0.00 H ; ---; > ATOM 3371 H ASP A 25 -6.177 3.902 -17.074 1.00 0.00 H ; > ATOM 3372 H ASP A 25 -6.177 2.994 -15.581 1.00 0.00 H ; > ATOM 3373 H ASP A 25 -6.177 2.155 -17.114 1.00 0.00 H ; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420
https://github.com/openbabel/openbabel/pull/2421:14,Testability,test,test,14,The code (and test) is heavily inspired by the corresponding code for cdx format.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2421
https://github.com/openbabel/openbabel/issues/2423:40,Deployability,install,installing,40,"Hi everyone!. I am having some problems installing this packages, could you help me please? I want use it in python and my operative system is windows 10. . Thanks!; Pablo",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2423
https://github.com/openbabel/openbabel/issues/2424:306,Energy Efficiency,charge,charge,306,"Hi all,; Could someone please point me to an explanation (or the implementation) of the protonation method? I found `phmodel.txt` which has a table of SMARTS strings and pKa values. Where do those pKa values come from? Does the method work by matching substructures to the SMARTS in the table, calculating charge state populations using Henderson-Hasselbach, and then returning the highest probability state at each substructure? . Thanks!; Lewis",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2424
https://github.com/openbabel/openbabel/issues/2425:140,Performance,Optimiz,OptimizeNative,140,"Hello,. Can you please specify which BSD(full text), mentioned in https://github.com/openbabel/openbabel/blob/openbabel-3-0-0/cmake/modules/OptimizeNative.cmake and ; https://github.com/openbabel/openbabel/blob/openbabel-3-0-0/cmake/modules/FindRapidJSON.cmake ?. There is no LICENSE file regarding the BSD that applies there. Thank you.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425
https://github.com/openbabel/openbabel/issues/2426:771,Availability,Fault,Fault,771,"Dear all,. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; Operating system and version: Windows Subsystem for Linux (WSL 2), Ubuntu 20.04 LTS; Python version: Python 3.8.10 (default, Sep 28 2021, 16:10:42). ## Expected Behavior; I want to use 4 methods to draw PNG and SVG images from SMILES. ; - `obabel` command line program; - `obgui` GUI interface; - `openbabel` Python package; - `pybel` Python package. ## Actual Behavior; All 4 methods work for SVG files but the two Python-based approaches fail for the PNG file conversion. `openbabel` runs through the end, but the output PNG file is corrupted. Using `pybel` leads to a Segmentation Fault. ## Steps to Reproduce. This works:. $ obabel -:""COC1=C(C=CC(=C1)C=O)O"" -O vanillin.png. The next one runs until the end but the output file is corrupted. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; >>> mol = ob.OBMol(); >>> obConversion = ob.OBConversion(); >>> obConversion.SetInAndOutFormats(""smi"", ""png""); True; >>> obConversion.ReadString(mol, ""COC1=C(C=CC(=C1)C=O)O""); True; >>> obConversion.WriteFile(mol, ""vanillin-ob.png""); True; >>> . `pybel` implementation leads to a segmentation fault:. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC1=C(C=CC(=C1)C=O)O""); >>> mol.write(""png"", ""vanillin-pybel.png""); Segmentation fault",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426
https://github.com/openbabel/openbabel/issues/2426:1420,Availability,fault,fault,1420,"Dear all,. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; Operating system and version: Windows Subsystem for Linux (WSL 2), Ubuntu 20.04 LTS; Python version: Python 3.8.10 (default, Sep 28 2021, 16:10:42). ## Expected Behavior; I want to use 4 methods to draw PNG and SVG images from SMILES. ; - `obabel` command line program; - `obgui` GUI interface; - `openbabel` Python package; - `pybel` Python package. ## Actual Behavior; All 4 methods work for SVG files but the two Python-based approaches fail for the PNG file conversion. `openbabel` runs through the end, but the output PNG file is corrupted. Using `pybel` leads to a Segmentation Fault. ## Steps to Reproduce. This works:. $ obabel -:""COC1=C(C=CC(=C1)C=O)O"" -O vanillin.png. The next one runs until the end but the output file is corrupted. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; >>> mol = ob.OBMol(); >>> obConversion = ob.OBConversion(); >>> obConversion.SetInAndOutFormats(""smi"", ""png""); True; >>> obConversion.ReadString(mol, ""COC1=C(C=CC(=C1)C=O)O""); True; >>> obConversion.WriteFile(mol, ""vanillin-ob.png""); True; >>> . `pybel` implementation leads to a segmentation fault:. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC1=C(C=CC(=C1)C=O)O""); >>> mol.write(""png"", ""vanillin-pybel.png""); Segmentation fault",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426
https://github.com/openbabel/openbabel/issues/2426:1730,Availability,fault,fault,1730,"Dear all,. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; Operating system and version: Windows Subsystem for Linux (WSL 2), Ubuntu 20.04 LTS; Python version: Python 3.8.10 (default, Sep 28 2021, 16:10:42). ## Expected Behavior; I want to use 4 methods to draw PNG and SVG images from SMILES. ; - `obabel` command line program; - `obgui` GUI interface; - `openbabel` Python package; - `pybel` Python package. ## Actual Behavior; All 4 methods work for SVG files but the two Python-based approaches fail for the PNG file conversion. `openbabel` runs through the end, but the output PNG file is corrupted. Using `pybel` leads to a Segmentation Fault. ## Steps to Reproduce. This works:. $ obabel -:""COC1=C(C=CC(=C1)C=O)O"" -O vanillin.png. The next one runs until the end but the output file is corrupted. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; >>> mol = ob.OBMol(); >>> obConversion = ob.OBConversion(); >>> obConversion.SetInAndOutFormats(""smi"", ""png""); True; >>> obConversion.ReadString(mol, ""COC1=C(C=CC(=C1)C=O)O""); True; >>> obConversion.WriteFile(mol, ""vanillin-ob.png""); True; >>> . `pybel` implementation leads to a segmentation fault:. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC1=C(C=CC(=C1)C=O)O""); >>> mol.write(""png"", ""vanillin-pybel.png""); Segmentation fault",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426
https://github.com/openbabel/openbabel/issues/2426:471,Integrability,interface,interface,471,"Dear all,. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.0.0 -- Mar 11 2020 -- 11:52:36; Operating system and version: Windows Subsystem for Linux (WSL 2), Ubuntu 20.04 LTS; Python version: Python 3.8.10 (default, Sep 28 2021, 16:10:42). ## Expected Behavior; I want to use 4 methods to draw PNG and SVG images from SMILES. ; - `obabel` command line program; - `obgui` GUI interface; - `openbabel` Python package; - `pybel` Python package. ## Actual Behavior; All 4 methods work for SVG files but the two Python-based approaches fail for the PNG file conversion. `openbabel` runs through the end, but the output PNG file is corrupted. Using `pybel` leads to a Segmentation Fault. ## Steps to Reproduce. This works:. $ obabel -:""COC1=C(C=CC(=C1)C=O)O"" -O vanillin.png. The next one runs until the end but the output file is corrupted. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import openbabel as ob; >>> mol = ob.OBMol(); >>> obConversion = ob.OBConversion(); >>> obConversion.SetInAndOutFormats(""smi"", ""png""); True; >>> obConversion.ReadString(mol, ""COC1=C(C=CC(=C1)C=O)O""); True; >>> obConversion.WriteFile(mol, ""vanillin-ob.png""); True; >>> . `pybel` implementation leads to a segmentation fault:. $ python; Python 3.8.10 (default, Sep 28 2021, 16:10:42); [GCC 9.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC1=C(C=CC(=C1)C=O)O""); >>> mol.write(""png"", ""vanillin-pybel.png""); Segmentation fault",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2426
https://github.com/openbabel/openbabel/issues/2427:1885,Testability,test,test,1885,"to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 20.04.2 LTS. ## Bug; I am trying to produce a mol2 file from xyz including valid atom and bond types. However, openbabel messes up the bonding and produces two Texas carbons. ## Steps to Reproduce; Input file:; ```; 49; 1aof_DHE_B_1; C -3.30400 13.00300 78.18000; C 4.35100 17.99000 81.82100; C 0.26300 15.84100 87.88100; C -5.69900 13.22500 82.98300; N -1.12200 14.81400 80.58000; C -3.25700 11.57200 78.46200; C 5.08200 16.75000 82.11900; C 1.07600 14.64500 87.58800; C -6.84800 13.57900 83.41600; N 1.18700 16.26100 81.70200; C -4.18400 10.68600 77.75900; C 2.35300 19.26300 80.93000; C -1.09500 17.86500 87.15300; C -8.12300 13.05200 82.94500; N -2.32400 14.65900 83.25100; C -3.32600 13.90000 81.15700; C 1.01300 15.26600 79.46800; C 1.91500 17.41700 83.67400; C -1.86000 15.10100 85.62500; C -0.40200 13.89400 77.06600; C -4.67100 13.79900 85.99600; O 3.50700 16.89300 79.16800; O 1.90300 17.99600 86.58800; C -2.29200 14.14200 80.26600; C 1.59200 16.07600 80.40900; C 1.01300 16.96800 84.59700; C -2.66200 14.62200 84.58400; O -4.92100 11.14600 76.87400; O 6.30900 16.81800 82.32700; O 0.73300 13.55100 88.07900; O -9.12500 13.19300 83.66500; C -2.21800 13.74500 78.90700; C 2.79000 16.91600 80.14500; C 1.07300 17.31300 86.03600; C -3.96800 14.03100 84.68800; O -4.19400 9.49400 78.07600; O 4.46200 15.66800 82.15600; O 2.08500 14.75900 86.87200; O -8.15600 12.47700 81.84100; C -0.98200 14.11500 78.42900; C 2.94800 17.83200 81.35500; C -0.11700 16.66200 86.70400; C -4.40300 13.76200 83.41200; C -0.28200 14.76100 79.49100; C 1.98800 17.15800 82.32400; C -0.73700 15.90600 85.52600; C -3.35400 14.09300 82.51700; N -0.05800 16.14700 84.36300; Fe -0.57700 15.48800 82.46900; ```; `obabel -ixyz -omol2 test.xyz -O test.mol2`; ![Capture](https://user-images.githubusercontent.com/7810340/141285342-c17ab1f6-ed93-47fe-a750-88acf4aabd65.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427
https://github.com/openbabel/openbabel/issues/2427:1897,Testability,test,test,1897,"to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 20.04.2 LTS. ## Bug; I am trying to produce a mol2 file from xyz including valid atom and bond types. However, openbabel messes up the bonding and produces two Texas carbons. ## Steps to Reproduce; Input file:; ```; 49; 1aof_DHE_B_1; C -3.30400 13.00300 78.18000; C 4.35100 17.99000 81.82100; C 0.26300 15.84100 87.88100; C -5.69900 13.22500 82.98300; N -1.12200 14.81400 80.58000; C -3.25700 11.57200 78.46200; C 5.08200 16.75000 82.11900; C 1.07600 14.64500 87.58800; C -6.84800 13.57900 83.41600; N 1.18700 16.26100 81.70200; C -4.18400 10.68600 77.75900; C 2.35300 19.26300 80.93000; C -1.09500 17.86500 87.15300; C -8.12300 13.05200 82.94500; N -2.32400 14.65900 83.25100; C -3.32600 13.90000 81.15700; C 1.01300 15.26600 79.46800; C 1.91500 17.41700 83.67400; C -1.86000 15.10100 85.62500; C -0.40200 13.89400 77.06600; C -4.67100 13.79900 85.99600; O 3.50700 16.89300 79.16800; O 1.90300 17.99600 86.58800; C -2.29200 14.14200 80.26600; C 1.59200 16.07600 80.40900; C 1.01300 16.96800 84.59700; C -2.66200 14.62200 84.58400; O -4.92100 11.14600 76.87400; O 6.30900 16.81800 82.32700; O 0.73300 13.55100 88.07900; O -9.12500 13.19300 83.66500; C -2.21800 13.74500 78.90700; C 2.79000 16.91600 80.14500; C 1.07300 17.31300 86.03600; C -3.96800 14.03100 84.68800; O -4.19400 9.49400 78.07600; O 4.46200 15.66800 82.15600; O 2.08500 14.75900 86.87200; O -8.15600 12.47700 81.84100; C -0.98200 14.11500 78.42900; C 2.94800 17.83200 81.35500; C -0.11700 16.66200 86.70400; C -4.40300 13.76200 83.41200; C -0.28200 14.76100 79.49100; C 1.98800 17.15800 82.32400; C -0.73700 15.90600 85.52600; C -3.35400 14.09300 82.51700; N -0.05800 16.14700 84.36300; Fe -0.57700 15.48800 82.46900; ```; `obabel -ixyz -omol2 test.xyz -O test.mol2`; ![Capture](https://user-images.githubusercontent.com/7810340/141285342-c17ab1f6-ed93-47fe-a750-88acf4aabd65.PNG)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2427
https://github.com/openbabel/openbabel/issues/2428:2470,Availability,Error,Error,2470,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2554,Availability,Error,Error,2554,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2696,Availability,recover,recover,2696,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2884,Availability,Error,Error,2884,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:1800,Modifiability,extend,extended,1800,"ding to `obabel -L png`, it is possible to append/include e.g., the mol file to/in the `.png` written. See e.g., legacy documentation of OpenBabel 2.3.1 [here](http://openbabel.org/docs/current/FileFormats/PNG2_format.html) and comment by @frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2696,Safety,recover,recover,2696,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2060,Security,access,accessing,2060,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:747,Testability,test,testing,747,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux Debian 12/bookworm [testing], Python 3.9.8. ## Expected Behavior. According to `obabel -L png`, it is possible to append/include e.g., the mol file to/in the `.png` written. See e.g., legacy documentation of OpenBabel 2.3.1 [here](http://openbabel.org/docs/current/FileFormats/PNG2_format.html) and comment by @frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmente",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2428:2265,Testability,test,test,2265,"@frederikw in issue report [here](https://github.com/openbabel/openbabel/issues/2426). ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. Observation: The `.png` are written and are intelligible. By report of the CLI, the inclusion of the structure file however fails. Suggested changes, 1st class:; + Bug fix to restore the functionality. Suggested changes, 2nd class:; + With the `.pngj` format ([documentation](http://wiki.jmol.org/index.php/File_formats/Export)), Jmol apparently offers a similar export of static (classical `.png` like) and interactive (model) data. In Jmol, it is possible, e.g., to read this extended `.png`, to interact and export the model as `.sdf` «as usual». See archive pngj_examples.zip for examples. It would be nice if Jmol's `.pngj` would be understood by OpenBabel, and the augmented `.png` written by OpenBabel could be read by Jmol as in «accessing the model data». ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behaviour.; -->; ```bash; $ obabel -:""CC(=O)Cl"" -O mymol.png -xO smi; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; ==============================; *** Open Babel Error in PNG Format; Failed to embed molecule(s); 1 molecule converted; ```; The image is written and intelligible. The subsequent attempt to recover the SMILES string from the `.png` however fails, and file `smiles.txt` stays empty. ```bash; $ obabel mymol.png -osmi -O smiles.txt; ==============================; *** Open Babel Error in PNG Format; Not a PNG file; 1 molecule converted; ```. [example_pngj.zip](https://github.com/openbabel/openbabel/files/7521417/example_pngj.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2428
https://github.com/openbabel/openbabel/issues/2429:1028,Deployability,configurat,configuration,1028,"--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [X] This is a feature request. ## Environment Information; Open Babel version: OpenBabel 3.1.1 (3.1.1+dfsg-6); Operating system and version: Linux Debian 12/bookworm [testing]. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current definition of the bond block in `.mol` and `.sdf` (v3000) allows C=C double bonds without assigned (*E*)/(*Z*) configuration. See, for example, Biovia's documentation ([link to pdf](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html), ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429
https://github.com/openbabel/openbabel/issues/2429:1028,Modifiability,config,configuration,1028,"--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [X] This is a feature request. ## Environment Information; Open Babel version: OpenBabel 3.1.1 (3.1.1+dfsg-6); Operating system and version: Linux Debian 12/bookworm [testing]. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current definition of the bond block in `.mol` and `.sdf` (v3000) allows C=C double bonds without assigned (*E*)/(*Z*) configuration. See, for example, Biovia's documentation ([link to pdf](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html), ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429
https://github.com/openbabel/openbabel/issues/2429:805,Testability,test,testing,805,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [X] This is a feature request. ## Environment Information; Open Babel version: OpenBabel 3.1.1 (3.1.1+dfsg-6); Operating system and version: Linux Debian 12/bookworm [testing]. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; The current definition of the bond block in `.mol` and `.sdf` (v3000) allows C=C double bonds without assigned (*E*)/(*Z*) configuration. See, for example, Biovia's documentation ([link to pdf](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html),",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429
https://github.com/openbabel/openbabel/issues/2429:2366,Testability,test,test,2366,"df)) by August 2020, p. 11, which offers cases `0`, `1`, `2`, or `3`. Let me suggest OpenBabel retains `CFG=[x]` in a line like; ```; M V30 3 1 3 4 CFG=2; ```; when writing such a file. Similar to molecule sketchers, the request to visualize a structure as a `.svg` could yield either a wavy single bond attached to the double bond in question .or. a crossed double bond to mark the lack of specification; apparently, this is not yet enabled. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Passing a `.sdf` about alkenes including the `CFG=2` entry (generation by [DataWarrior](https://openmolecules.org/datawarrior/index.html), cf. attached archive) removes this indicator. If `.cdxml` and `.mol (v3000)` of alkenes generated by ChemDraw are used as input, the indicator equally is absent in OpenBabel's output. . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```bash; $ obabel -:""CC=CC"" -omol -x3; ==============================; *** Open Babel Warning in WriteMolecule; No 2D or 3D coordinates exist. Stereochemical information will be stored using an Open Babel extension. To generate 2D or 3D coordinates instead use --gen2D or --gen3D. OpenBabel11122115062D. 0 0 0 0 0 999 V3000; M V30 BEGIN CTAB; M V30 COUNTS 4 3 0 0 0; M V30 BEGIN ATOM; M V30 1 C 0 0 0 0; M V30 2 C 0 0 0 0; M V30 3 C 0 0 0 0; M V30 4 C 0 0 0 0; M V30 END ATOM; M V30 BEGIN BOND; M V30 1 1 1 2; M V30 2 2 2 3; M V30 3 1 3 4; M V30 END BOND; M V30 END CTAB; M END; 1 molecule converted; ```. and files within the archive attached. [v3000_extended_stereo.zip](https://github.com/openbabel/openbabel/files/7528092/v3000_extended_stereo.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2429
https://github.com/openbabel/openbabel/pull/2430:117,Testability,test,test,117,This change should fix #2428 by checking for the PNG format header using an `unsigned char`. Also added a regression test that tries to read SMILES data encoded in a png file.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430
https://github.com/openbabel/openbabel/issues/2433:2656,Availability,failure,failure,2656,"0 0.00 -0.039 A; ENDROOT; BRANCH 1 2; ATOM 2 N1 UNL 1 2.812 -0.545 0.129 0.00 0.00 -0.324 N; ATOM 20 H1 UNL 1 2.532 -0.383 -0.830 0.00 0.00 0.170 HD; BRANCH 2 3; ATOM 3 C2 UNL 1 3.296 -1.851 0.224 0.00 0.00 0.227 A; ATOM 4 N2 UNL 1 3.942 -2.233 1.334 0.00 0.00 -0.213 NA; ATOM 5 C3 UNL 1 4.393 -3.501 1.427 0.00 0.00 0.077 A; ATOM 12 C9 UNL 1 4.180 -4.407 0.410 0.00 0.00 -0.017 A; ATOM 13 C10 UNL 1 3.504 -3.933 -0.691 0.00 0.00 0.033 A; ATOM 14 N4 UNL 1 3.060 -2.669 -0.809 0.00 0.00 -0.221 NA; BRANCH 5 6; ATOM 6 C4 UNL 1 5.110 -3.815 2.675 0.00 0.00 0.019 A; ATOM 7 C5 UNL 1 6.100 -4.795 2.757 0.00 0.00 0.036 A; ATOM 8 N3 UNL 1 6.792 -5.119 3.879 0.00 0.00 -0.264 NA; ATOM 9 C6 UNL 1 6.496 -4.421 4.994 0.00 0.00 0.027 A; ATOM 10 C7 UNL 1 5.546 -3.417 5.038 0.00 0.00 -0.043 A; ATOM 11 C8 UNL 1 4.853 -3.116 3.866 0.00 0.00 -0.050 A; ENDBRANCH 5 6; ENDBRANCH 2 3; ENDBRANCH 1 2; TORSDOF 3; </pre>. ## Actual Behavior; <p>The torsions in PDBQT file did not include bond C_2-N_3. This will result in docking failure. Let me show you an redocking failure: <a href=""https://github.com/gkxiao/openbabel_2433"">openbabel_2433</a></p>. ## Steps to Reproduce. <pre line=""1"">; (base) [gkxiao@master demo]$ cat ex1.smi; C1(NC2=NC(C3=CN=CC=C3)=CC=N2)=CC=CC=C1 EX01; (base) [gkxiao@master demo]$ obabel -ismi ex1.smi -opdbqt --gen3d --best; REMARK Name = EX01; REMARK 2 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and N_2; REMARK 2 A between atoms: C_5 and C_6; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 N UNL 1 2.812 -0.545 0.128 0.00 0.00 +0.000 N; ATOM 2 C UNL 1 3.296 -1.851 0.224 0.00 0.00 +0.000 A; ATOM 3 N UNL 1 3.942 -2.233 1.334 0.00 0.00 +0.000 NA; ATOM 4 C UNL 1 4.393 -3.501 1.427 0.00 0.00 +0.000 A; ATOM 5 C UNL 1 4.180 -4.407 0.410 0.00 0.00 +0.000 A; ATOM 6 C UNL 1 3.504 -3.932 -0.691 0.00 0.00 +0.000 A; ATOM 7 N UNL 1 3.060 -2.669 -0.809 0.00 0.00 +0.000 NA; ATOM 8 H UNL 1 2.5",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2433
https://github.com/openbabel/openbabel/issues/2433:2694,Availability,failure,failure,2694,"L 1 2.812 -0.545 0.129 0.00 0.00 -0.324 N; ATOM 20 H1 UNL 1 2.532 -0.383 -0.830 0.00 0.00 0.170 HD; BRANCH 2 3; ATOM 3 C2 UNL 1 3.296 -1.851 0.224 0.00 0.00 0.227 A; ATOM 4 N2 UNL 1 3.942 -2.233 1.334 0.00 0.00 -0.213 NA; ATOM 5 C3 UNL 1 4.393 -3.501 1.427 0.00 0.00 0.077 A; ATOM 12 C9 UNL 1 4.180 -4.407 0.410 0.00 0.00 -0.017 A; ATOM 13 C10 UNL 1 3.504 -3.933 -0.691 0.00 0.00 0.033 A; ATOM 14 N4 UNL 1 3.060 -2.669 -0.809 0.00 0.00 -0.221 NA; BRANCH 5 6; ATOM 6 C4 UNL 1 5.110 -3.815 2.675 0.00 0.00 0.019 A; ATOM 7 C5 UNL 1 6.100 -4.795 2.757 0.00 0.00 0.036 A; ATOM 8 N3 UNL 1 6.792 -5.119 3.879 0.00 0.00 -0.264 NA; ATOM 9 C6 UNL 1 6.496 -4.421 4.994 0.00 0.00 0.027 A; ATOM 10 C7 UNL 1 5.546 -3.417 5.038 0.00 0.00 -0.043 A; ATOM 11 C8 UNL 1 4.853 -3.116 3.866 0.00 0.00 -0.050 A; ENDBRANCH 5 6; ENDBRANCH 2 3; ENDBRANCH 1 2; TORSDOF 3; </pre>. ## Actual Behavior; <p>The torsions in PDBQT file did not include bond C_2-N_3. This will result in docking failure. Let me show you an redocking failure: <a href=""https://github.com/gkxiao/openbabel_2433"">openbabel_2433</a></p>. ## Steps to Reproduce. <pre line=""1"">; (base) [gkxiao@master demo]$ cat ex1.smi; C1(NC2=NC(C3=CN=CC=C3)=CC=N2)=CC=CC=C1 EX01; (base) [gkxiao@master demo]$ obabel -ismi ex1.smi -opdbqt --gen3d --best; REMARK Name = EX01; REMARK 2 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and N_2; REMARK 2 A between atoms: C_5 and C_6; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 N UNL 1 2.812 -0.545 0.128 0.00 0.00 +0.000 N; ATOM 2 C UNL 1 3.296 -1.851 0.224 0.00 0.00 +0.000 A; ATOM 3 N UNL 1 3.942 -2.233 1.334 0.00 0.00 +0.000 NA; ATOM 4 C UNL 1 4.393 -3.501 1.427 0.00 0.00 +0.000 A; ATOM 5 C UNL 1 4.180 -4.407 0.410 0.00 0.00 +0.000 A; ATOM 6 C UNL 1 3.504 -3.932 -0.691 0.00 0.00 +0.000 A; ATOM 7 N UNL 1 3.060 -2.669 -0.809 0.00 0.00 +0.000 NA; ATOM 8 H UNL 1 2.532 -0.383 -0.830 0.00 0.00 +0.000 HD; ENDROOT; BRA",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2433
https://github.com/openbabel/openbabel/issues/2435:1427,Testability,test,test,1427,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Debian 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Correctlly convert sdf to pdbqt and add hydrogen in ph 7.4; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; More than one ROOT item appear in pdbqt file. It actually convert one compound into two. Using command: obabel z.sdf -O z.pdbqt -p 7.4. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The sdf file and pdbqt file is here.; [File.zip](https://github.com/openbabel/openbabel/files/7641705/File.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2435
https://github.com/openbabel/openbabel/issues/2436:1322,Availability,fault,fault,1322,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436
https://github.com/openbabel/openbabel/issues/2436:1711,Testability,test,test,1711,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436
https://github.com/openbabel/openbabel/issues/2436:1828,Testability,test,test,1828,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436
https://github.com/openbabel/openbabel/issues/2436:1850,Testability,test,test,1850,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436
https://github.com/openbabel/openbabel/issues/2436:1913,Testability,test,test,1913,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 2.4.1 (or the 2.3.2 GUI version); Operating system and version: CentOS Linux 7 (Core). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Converting a periodic structure (e.g. .pdb file) to Tinker MM3 format. . ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Because of the periodic boundary conditions, it appears the bonds can not be recognized and the MM3 atom types can not be derived, leading to a segmentation fault. However **the MM2 atom types can be derived** (dropping the -x3 option). I don't mind the bonds not being recognized, I could just create a 3x3x3 supercell and look at the atom types of the central cell. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; obabel -ixyz test.xyz -otxyz -x3; [test.zip](https://github.com/openbabel/openbabel/files/7667137/test.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2436
https://github.com/openbabel/openbabel/issues/2437:207,Availability,Down,Downloaded,207,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0; Operating system and version: CentOS Linux 7 (linux-64); Downloaded using ""conda install -c conda-forge openbabel"". ## Expected Behavior; Info line in .sdf file is wrong, should have been:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94 100 0 0 1 0 0 0 0 0999 V2000; ```. ## Actual Behavior; A space between 94 and 100 is missing:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94100 0 0 1 0 0 0 0 0999 V2000; ```. ## Steps to Reproduce; Use the following command line:; `obabel -ixyz xtbopt.xyz -osdf`. .xyz format was not allowed for upload, so I have just changes the file format to .txt using ""mv xtbopt.xyz xtbopt.txt""; [xtbopt.txt](https://github.com/openbabel/openbabel/files/7712072/xtbopt.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2437
https://github.com/openbabel/openbabel/issues/2437:231,Deployability,install,install,231,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0; Operating system and version: CentOS Linux 7 (linux-64); Downloaded using ""conda install -c conda-forge openbabel"". ## Expected Behavior; Info line in .sdf file is wrong, should have been:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94 100 0 0 1 0 0 0 0 0999 V2000; ```. ## Actual Behavior; A space between 94 and 100 is missing:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94100 0 0 1 0 0 0 0 0999 V2000; ```. ## Steps to Reproduce; Use the following command line:; `obabel -ixyz xtbopt.xyz -osdf`. .xyz format was not allowed for upload, so I have just changes the file format to .txt using ""mv xtbopt.xyz xtbopt.txt""; [xtbopt.txt](https://github.com/openbabel/openbabel/files/7712072/xtbopt.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2437
https://github.com/openbabel/openbabel/issues/2437:345,Energy Efficiency,energy,energy,345,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0; Operating system and version: CentOS Linux 7 (linux-64); Downloaded using ""conda install -c conda-forge openbabel"". ## Expected Behavior; Info line in .sdf file is wrong, should have been:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94 100 0 0 1 0 0 0 0 0999 V2000; ```. ## Actual Behavior; A space between 94 and 100 is missing:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94100 0 0 1 0 0 0 0 0999 V2000; ```. ## Steps to Reproduce; Use the following command line:; `obabel -ixyz xtbopt.xyz -osdf`. .xyz format was not allowed for upload, so I have just changes the file format to .txt using ""mv xtbopt.xyz xtbopt.txt""; [xtbopt.txt](https://github.com/openbabel/openbabel/files/7712072/xtbopt.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2437
https://github.com/openbabel/openbabel/issues/2437:541,Energy Efficiency,energy,energy,541,"- [x ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.0; Operating system and version: CentOS Linux 7 (linux-64); Downloaded using ""conda install -c conda-forge openbabel"". ## Expected Behavior; Info line in .sdf file is wrong, should have been:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94 100 0 0 1 0 0 0 0 0999 V2000; ```. ## Actual Behavior; A space between 94 and 100 is missing:; ```; energy: -143.561198201957 gnorm: 0.000327189782 xtb: 6.4.0 (d4b70c2); OpenBabel12142114443D. 94100 0 0 1 0 0 0 0 0999 V2000; ```. ## Steps to Reproduce; Use the following command line:; `obabel -ixyz xtbopt.xyz -osdf`. .xyz format was not allowed for upload, so I have just changes the file format to .txt using ""mv xtbopt.xyz xtbopt.txt""; [xtbopt.txt](https://github.com/openbabel/openbabel/files/7712072/xtbopt.txt)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2437
https://github.com/openbabel/openbabel/issues/2438:1449,Availability,Fault,Fault,1449,"rge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2438:2129,Availability,fault,faulthandler,2129,"n: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://github.com/openbabel/openbabel/files/7719588/ob_issue.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2438:2281,Availability,fault,faulthandler,2281,"n: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://github.com/openbabel/openbabel/files/7719588/ob_issue.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2438:2349,Availability,error,error,2349,"n: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://github.com/openbabel/openbabel/files/7719588/ob_issue.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2438:2369,Availability,fault,fault,2369,"n: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://github.com/openbabel/openbabel/files/7719588/ob_issue.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2438:1738,Testability,test,test,1738,"re request. ## Environment Information; Open Babel version: 3.1.1 (conda-forge - Python 3.7); Operating system and version: Kernel: 5.15.6-2-MANJARO x86_64 bits: 64 compiler: gcc v: 11.1.0; Desktop: GNOME 41.1 tk: GTK 3.24.30 wm: gnome-shell dm: GDM; Distro: Manjaro Linux base: Arch Linux. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When running `python check_undercoordinated_sio2.py final.xyz` I should get the output:; `The sample has 68 under-coordinated Si and 68 under-coordinated O.`. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; When running for the `.xyz` file I get a Segmentation Fault.; If I convert the `.xyz` to a `.pdb` and pass the converted file to the script, then it works properly. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```; [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.xyz; Falha de segmentação (imagem do núcleo gravada); [hmcezar@bitz-dell 12]$ python check_undercoordinated_sio2.py final.pdb; The sample has 68 under-coordinated Si and 68 under-coordinated O.; ```. Running with `faulthandler` doesn't help much, besides telling that the problem appears to be in the ConnectTheDots() method:; ```; [hmcezar@bitz-dell 12]$ python -X faulthandler check_undercoordinated_sio2.py final.xyz; Fatal Python error: Segmentation fault. Current thread 0x0000153cebfb1740 (most recent call first):; File ""/home/hmcezar/GDrive/USP/Sampa_Post-Doc/scripts/check_undercoordinated_sio2.py"", line 45 in <module>; Falha de segmentação (imagem do núcleo gravada); ```. All the files are attached below. [ob_issue.zip](https://gi",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2438
https://github.com/openbabel/openbabel/issues/2439:1120,Availability,avail,available,1120,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1538,Availability,avail,available,1538,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:145,Deployability,install,installed,145,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:633,Testability,test,tested,633,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1196,Testability,test,tests,1196,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1310,Testability,test,tests,1310,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1426,Testability,test,tests,1426,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1600,Testability,test,tests,1600,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1633,Testability,test,tests,1633,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1703,Testability,test,tests,1703,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1786,Testability,test,tests,1786,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2439:1819,Testability,test,tests,1819,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.0.0 - 3.1.1 installed via conda (channel: conda-forge); Operating system and version: Linux, Macos, and Windows, all run via GitHub Actions. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; - I read a pdb structure from the PDB file and use SMARTS pattern to find matching atoms; - In macos and linux the atoms look good and are consistent (the same in both systems); - In windows the results are different; - all packages and versions are in the same in all tested systems. ## Actual Behavior; - I expect the results are the same in linux, macos, and windows. What I get is:. ```; # list of matching atoms:; ubuntu-20.04 | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; macos-latest | [3, 5, 7, 9, 11, 13, 18, 19, 22, 23, 26, 28, 30, 32, 34, 36, 41, 42, 45, 46]; windows-latest | [1, 3, 5, 7, 9, 11, 13, 14, 18, 19, 21, 22, 23, 26, 28, 30, 32, 34, 36, 37, 41, 42, 44, 45, 46]; ```; results from GitHub actions are available here:; - [ubuntu](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247794?check_suite_focus=true#step:5:7); - [macos](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247852?check_suite_focus=true#step:5:7); - [windows](https://github.com/filipsPL/fingernat-openbabel-tests/runs/4582247885?check_suite_focus=true#step:5:7). ## Steps to Reproduce; Input pdb file and the script is available at: https://github.com/filipsPL/fingernat-openbabel-tests; - [the input pdb file for tests](https://raw.githubusercontent.com/filipsPL/fingernat-openbabel-tests/main/GG.pdb); - [the script](https://github.com/filipsPL/fingernat-openbabel-tests/blob/main/openbabel-smarts-tests.py)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2439
https://github.com/openbabel/openbabel/issues/2440:1925,Availability,error,error,1925,"t you expected to see. -->; Aromatic rings of protein complex molecule correctly identified. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I used ob.OBConversion().ReadFile() to read PDB file (mmCIF format) into mol.; All rings returned by mol.GetSSSR() are labeled as ""non-aromatic"", which is incorrect.; The same procedure on older PDB file format produced the correct results, i.e. some of the rings are labeled as ""aromatic"". So far I have been able to trace the discrepancy to OBAtom.GetImplicitHCount(), so there was probably a bug in the PDB file reading code that didn't correct update the implicit H count. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The following is python code to reproduce this error, biopython is used to retrieve PDB file, which can be done manually. ```; from Bio.PDB import PDBList; from openbabel import openbabel as ob; pdbl = PDBList(); pdb_fname_old = pdbl.retrieve_pdb_file('3BBT', file_format='pdb'); pdb_fname_new = pdbl.retrieve_pdb_file('3BBT') ; ```; #### Build mol object from PDB file of older format. ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('PDB'); mol1 = ob.OBMol(); ob_conv.ReadFile(mol1, pdb_fname_old ); ```; #### Build mol object from PDB file of newer format; ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('mmCIF'); mol2 = ob.OBMol(); ob_conv.ReadFile(mol2, pdb_fname_new ); ```; #### The following results for the two mol object differ, where the first gives correct results, the second returns False for all rings.; ```; print([ring.IsAromatic() for ring in mol1.GetSSSR()]); print([ring.IsAromatic() for ring in mol2.GetSSSR()]); ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440
https://github.com/openbabel/openbabel/issues/2440:1567,Deployability,update,update,1567,"ou can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Aromatic rings of protein complex molecule correctly identified. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I used ob.OBConversion().ReadFile() to read PDB file (mmCIF format) into mol.; All rings returned by mol.GetSSSR() are labeled as ""non-aromatic"", which is incorrect.; The same procedure on older PDB file format produced the correct results, i.e. some of the rings are labeled as ""aromatic"". So far I have been able to trace the discrepancy to OBAtom.GetImplicitHCount(), so there was probably a bug in the PDB file reading code that didn't correct update the implicit H count. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The following is python code to reproduce this error, biopython is used to retrieve PDB file, which can be done manually. ```; from Bio.PDB import PDBList; from openbabel import openbabel as ob; pdbl = PDBList(); pdb_fname_old = pdbl.retrieve_pdb_file('3BBT', file_format='pdb'); pdb_fname_new = pdbl.retrieve_pdb_file('3BBT') ; ```; #### Build mol object from PDB file of older format. ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('PDB'); mol1 = ob.OBMol(); ob_conv.ReadFile(mol1, pdb_fname_old ); ```; #### Build mol object from PDB file of newer format; ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('mmCIF'); mol2 = ob.OBMol(); ob_co",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440
https://github.com/openbabel/openbabel/issues/2440:1774,Testability,test,test,1774,"on; Open Babel version: 3.1.0; Operating system and version: Windows 10. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Aromatic rings of protein complex molecule correctly identified. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; I used ob.OBConversion().ReadFile() to read PDB file (mmCIF format) into mol.; All rings returned by mol.GetSSSR() are labeled as ""non-aromatic"", which is incorrect.; The same procedure on older PDB file format produced the correct results, i.e. some of the rings are labeled as ""aromatic"". So far I have been able to trace the discrepancy to OBAtom.GetImplicitHCount(), so there was probably a bug in the PDB file reading code that didn't correct update the implicit H count. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; The following is python code to reproduce this error, biopython is used to retrieve PDB file, which can be done manually. ```; from Bio.PDB import PDBList; from openbabel import openbabel as ob; pdbl = PDBList(); pdb_fname_old = pdbl.retrieve_pdb_file('3BBT', file_format='pdb'); pdb_fname_new = pdbl.retrieve_pdb_file('3BBT') ; ```; #### Build mol object from PDB file of older format. ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('PDB'); mol1 = ob.OBMol(); ob_conv.ReadFile(mol1, pdb_fname_old ); ```; #### Build mol object from PDB file of newer format; ```; ob_conv = ob.OBConversion(); ob_conv.SetInFormat('mmCIF'); mol2 = ob.OBMol(); ob_conv.ReadFile(mol2, pdb_fname_new ); ```; #### The following results for the two mol object differ, where the first gives correct results, the second returns False ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2440
https://github.com/openbabel/openbabel/issues/2441:65,Energy Efficiency,charge,charge,65,"Hello,. Some ethers oxygens are incorrectly assigned a -1 formal charge. This is unrealistic because ethers do not have a proton to give away. ```sh; obabel -:""COC=CC=O"" -o smi -p 7; C[O-]C=CC=O; ```; The problem is with the TRANSFORM for vinylogous carboxylic acids (e.g. ascorbic acid). This is the current SMARTS:; ```; TRANSFORM [O:1]=[C:2][C:3]=[C:4][O:5] >> [O:1]=[C:2][C:3]=[C:4][O-:5] 4.0 # pKa from acid (AH); ```. Adding a hydrogen fixes the problem because it does not match ethers anymore:; ```; TRANSFORM [O:1]=[C:2][C:3]=[C:4][Oh:5] >> [O:1]=[C:2][C:3]=[C:4][O-:5] 4.0 # pKa from acid (AH); ```. A similar bug was reported for tetrazoles: https://github.com/openbabel/openbabel/issues/2284. I'm using Open Babel 3.1.0 from Conda on Ubuntu 20.04.3. Best regards",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2441
https://github.com/openbabel/openbabel/issues/2442:896,Availability,error,errors,896,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:51,Deployability,INSTALL,INSTALL,51,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:148,Deployability,install,installation,148,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:184,Deployability,install,installation,184,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:256,Deployability,Install,Installation,256,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:269,Deployability,install,install,269,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:319,Deployability,Install,Installation,319,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:332,Deployability,install,install,332,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:413,Deployability,Install,Installation,413,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:426,Deployability,install,install,426,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2442:1068,Deployability,update,update,1068,"https://github.com/openbabel/openbabel/blob/master/INSTALL Says:; > -- CMake 3.1 or later. And adds:; > This document gives a basic overview of the installation procedure. For full; > installation instructions, please see:; > http://openbabel.org/docs/dev/Installation/install.html. While http://openbabel.org/docs/dev/Installation/install.html says:; > CMake 2.4 or newer. and also http://openbabel.org/docs/dev/Installation/install.html contains:. > Open Babel is written in standards-compliant C++. The best-supported compilers are GCC 4 and MSVC++ 2008, but it also compiles with Clang and Intel Compiler 11. Lie. GCC 4.4.7 can't compile it. (ICC 19 is unable to compile it too). > If using GCC 3.x to compile (and not GCC 4.x), then the Boost headers are required for certain formats (CML, Chemkin, Chemdraw CDX, MDL RXN and RSMI). Lie again. CMake 3.8.2 finds boost and produces a bunch of errors, while `CMAKE_C_COMPILER` and `CMAKE_CXX_COMPILER` options don't influence it (I tried gcc and icc). ### To conclude, the documentation and the website need serious update.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2442
https://github.com/openbabel/openbabel/issues/2443:793,Deployability,install,install,793,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:837,Deployability,install,install,837,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:1328,Deployability,Release,Release,1328," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:2375,Deployability,install,install,2375," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:1447,Safety,safe,safe,1447," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:1555,Safety,safe,safe,1555," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:1672,Safety,safe,safe,1672," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:2364,Testability,test,test,2364," please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/software/Python/3.8.2-GCCcore-9.3.0/include/python3.8 -DPYTHON_LIBRARY=/software/Python/3.8.2-GCCcore-9.3.0/lib/libpython3.8.so -DEIGEN3_INCLUDE_DIR='/software/Eigen/3.3.7/include' /tmp/openbabel*. make -j 20; cp lib/_openbabel.so /tmp/openbabel-*/scripts/python/openbabel/; make test; make install; ````",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2443:1082,Usability,clear,clear,1082,"/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7. ## Expected Behavior. ""`make install`"" works. ## Actual Behavior. ""`make install`"" sometimes fails with:. ```; make[2]: *** No rule to make target `/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libmaeparser.so', needed by `lib/libopenbabel.so.7.0.0'. Stop; ```. This issue isn't always reproducible, it's not clear to me yet why it doesn't happen consistently... ## Steps to Reproduce. ```; mkdir /tmp/OpenBabel-3.1.1/build; cd /tmp/OpenBabel-3.1.1/build; cmake -DCMAKE_INSTALL_PREFIX=/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2 -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_C_COMPILER='icc' -DCMAKE_C_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_CXX_COMPILER='icpc' -DCMAKE_CXX_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_Fortran_COMPILER='ifort' -DCMAKE_Fortran_FLAGS='-O2 -xHost -ftz -fp-speculation=safe -fp-model source -fPIC' -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_FIND_USE_PACKAGE_REGISTRY=FALSE -DBOOST_ROOT=/software/Boost/1.72.0-iimpi-2020a -DBoost_NO_SYSTEM_PATHS=ON -DBoost_INCLUDE_DIR=/software/Boost/1.72.0-iimpi-2020a/include -DBoost_LIBRARY_DIR_RELEASE=/software/Boost/1.72.0-iimpi-2020a/lib -DENABLE_OPENMP=ON -DENABLE_TESTS=ON -DBUILD_GUI=OFF -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DPYTHON_INCLUDE_DIR=/",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2443
https://github.com/openbabel/openbabel/issues/2444:2036,Testability,test,test,2036,"r is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(conda-forge pre-compiled and self-compiled version); Operating system and version:Manjaro 5.15.12-1(64-bits). ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Here are 2 similar example command lines:; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```; Expected output are:; ```txt; CC CC; CC 4C; CC CCC; 3 molecules converted; CO oh; CO aoh; CO oaoh; CO ohaoh; 4 molecules converted; ```; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actual output are:; ```txt; CC 4C; 1 molecule converted; CO oh; CO aoh; CO oaoh; 3 molecules converted; ```; In general,if some target strings start with the same string as the one after the conditions' `*`,these targets will not be conversed,regardless of the existence of quotes around strings.This behavior seems to be a bug. ; The string comparsion with a sufixed `*`,however,works correctly.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ```sh; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C'; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh""'; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444
https://github.com/openbabel/openbabel/issues/2445:1085,Testability,test,tested,1085,"sed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445
https://github.com/openbabel/openbabel/issues/2445:2219,Testability,test,test,2219,"Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:3.1.1(self compiled version); Operating system and version:Manjaro 5.15.12. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; In the specified path,there are some SMI files:; ```txt; zinc10.smi; *zinc10.smi; zinc10*.smi; ?zinc10.smi; arg.smi; aspirin.smi; ```; In obgui's input filename box,here are some inputs with wildchars I tested:. 1. `*.smi`; 2. `*zinc10.smi`; 3. `?zinc10.smi`; 4. `z*.smi`; 5. `arg.smi;a*.smi;zinc10.smi`. Respiectively,expected conversed files are:. 1. `zinc10.smi;*zinc10.smi;zinc10*.smi;?zinc10.smi;arg.smi;aspirin.smi`; 2. `zinc10.smi;*zinc10.smi`; 3. `*zinc10.smi;?zinc10.smi`; 4. `zinc10.smi;zinc10*.smi`; 5. `arg.smi;aspirin.smi;zinc10.smi`; ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; Actually,conversed files are:. 1. None; 2. None; 3. None; 4. None; 5. `arg.smi;zinc10.smi`. In general,any wildchars in the input filename box will not be conversed. ; Any wildchars in the filename will not be conversed,even selected in the input dialoag. ; Other filenames without `*` or `?` splited by `;` will converse correctly. ; `*` in output filename box works correctly if input filename box has no `*`.; ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; ![obguiWildcharBug](https://user-images.githubusercontent.com/60164864/150667555-1f458586-e8e1-4434-a4e9-8d9059fe9fb5.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2445
https://github.com/openbabel/openbabel/issues/2446:614,Availability,error,error,614,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2446:485,Deployability,update,updated,485,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2446:1214,Deployability,install,install,1214,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2446:596,Integrability,message,message,596,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2446:626,Performance,load,loading,626,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2446:1178,Usability,simpl,simply,1178,"- [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Linux CentOS 7; Conda version: 4.11.0; Python: 3.8.6 (have also tried 3.9.9, no help). ## Expected Behavior; Call obabel, with relevant flags/arguments, convert molecules.; The program worked this way for a long time with no issue, but ceased working around the time I set up a new virtual environment with conda and updated several modules. ## Actual Behavior; Using the command obabel in any capacity results in the following message:; obabel: error while loading shared libraries: libopenbabel.so.5: cannot open shared object file: No such file or directory; I have searched through the libraries in the conda virtual environments and in the base conda libraries but cannot find it (both lib and pkg directories). Using the find command similarly does not find it.; I do, however, have 'libopenbabel.so.7' in the lib folders of conda, which I also find on when I use the ldcnfig command. I have tried to add 'libopenbabel.so.5' temporarily to my library path (LD_LIBRARY_PATH) without success. I also tried simply using conda remove and conda install again to try and reset it. I have looked on previous GitHub issues and the forums on openbabel-discuss@lists.sourceforge.net. I have not interfered with the deeper files of OpenBabel but fear either a library has been inadvertently deleted or I need to respecify which library OpenBabel should use (although I am not sure how to do that). Can anyone advise me?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446
https://github.com/openbabel/openbabel/issues/2448:7,Deployability,update,updated,7,"Hi,; I updated openbabel through conda today (from 3.1.0 Sep 16 2021) and found the version number is still 3.1.0 after the update. I wonder if there is a problem having the correct version number or the version in conda is not the latest 3.1.1? Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448
https://github.com/openbabel/openbabel/issues/2448:124,Deployability,update,update,124,"Hi,; I updated openbabel through conda today (from 3.1.0 Sep 16 2021) and found the version number is still 3.1.0 after the update. I wonder if there is a problem having the correct version number or the version in conda is not the latest 3.1.1? Thank you!",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2448
https://github.com/openbabel/openbabel/pull/2449:118,Security,access,access,118,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449
https://github.com/openbabel/openbabel/pull/2449:132,Testability,log,logic,132,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449
https://github.com/openbabel/openbabel/pull/2449:194,Testability,test,testing,194,"If the user specified option 2 (expand dangling bonds as dummy atoms), there was the possibility of an invalid memory access as the logic handling this did not catch all possibilities. Fixed by testing for a nullptr.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2449
https://github.com/openbabel/openbabel/issues/2450:1190,Integrability,message,message,1190,"osed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50 / libopenbabel7 3.1.1+dfsg-6; Operating system and version: Linux Debian 12/bookworm, branch testing. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to assign InChI with the optional fixed H-layer. If used in conjunction with standard InChI, this information may be used to identify tautomers. This was implemented recently in Jmol (version 14.32.12, 2022-01-18 00:28:54; [reference](https://sourceforge.net/p/jmol/mailman/message/37419194/)). Thus -- lacking identification of an explicit example in the documentation -- an input like; ```python; from openbabel import pybel. mol = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; print(mol.write([""inchi"", ""xFixedH""])); ```; does not yield the anticipated (non standard) InChI; ```bash; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; ```. ## Actual Behavior; ```python; from openbabel import pybel. lactim = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; lactam = pybel.readstring(""smi"", ""C1=CC=CNC(=O)1"") # i.e., 2-pyridone. print(lactim.write(""inchi"")); print(lactam.write(""inchi"")); ```; yield the (necessarily identical) standard InChI; ```; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); ```; On the other hand, however, OpenBabel on the CLI assigns for 2-hydroxy pyridine; ```bash; $ obabel -:""Oc1ccccn1"" -oinchi -xFixedH; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; `",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2450
https://github.com/openbabel/openbabel/issues/2450:804,Testability,test,testing,804,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Jun 10 2021 -- 04:27:50 / libopenbabel7 3.1.1+dfsg-6; Operating system and version: Linux Debian 12/bookworm, branch testing. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; I would like to assign InChI with the optional fixed H-layer. If used in conjunction with standard InChI, this information may be used to identify tautomers. This was implemented recently in Jmol (version 14.32.12, 2022-01-18 00:28:54; [reference](https://sourceforge.net/p/jmol/mailman/message/37419194/)). Thus -- lacking identification of an explicit example in the documentation -- an input like; ```python; from openbabel import pybel. mol = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; print(mol.write([""inchi"", ""xFixedH""])); ```; does not yield the anticipated (non standard) InChI; ```bash; InChI=1/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7)/f/h7H; ```. ## Actual Behavior; ```python; from openbabel import pybel. lactim = pybel.readstring(""smi"", ""Oc1ccccn1"") # i.e., 2-hydroxy pyridine; lactam = pybel.readstring(""smi"", ""C1=CC=CNC(=O)1"") # i.e., 2-pyridone. print(lactim.write(""inchi"")); print(lactam.write(""inchi"")); ```; yield the (necessarily identical) standard InChI; ```; InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); InChI=1S/C5H5NO/c7-5-3-1-2-4-6-5/h1-4H,(H,6,7); ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2450
https://github.com/openbabel/openbabel/issues/2451:717,Availability,down,downloaded,717,"This is a request for clarification for Open Babel-produced SMILES. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian unstable. ## Question; What is the convention for tetrahedral chirality center enumeration in SMILES when one of tetrahedral vertex is a lone pair? This does not seem to be covered neither by OpenSMILES nor SMILES+ (I have opened clarification requests https://github.com/timvdm/OpenSMILES/issues/9 and https://github.com/IUPAC/IUPAC_SMILES_plus/issues/26). Is the lone pair considered first when enumerating tetrahedron vertices in (counter)clockwise order? What the order would be if another vertex is an implicit hydrogen?. ## Steps to reproduce; I have downloaded CIF for [COD entry 2013863](https://www.crystallography.net/cod/2013863.html) of r180807. The structure contains S atom with a lone pair, and when performing conversion to SMILES, Open Babel derives a tetrahedral chirality marker for this S:; ```bash; $ obabel -icif 2013863.cif -osmi; [S@]12CCN(CCN(C(=O)C1)CC2)C(=O)CBr.[Br]	2013863; 1 molecule converted; ```; In SMILES only three vertices of a tetrahedron are explicitly provided, fourth of them being the lone pair (I assume).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451
https://github.com/openbabel/openbabel/issues/2451:875,Performance,perform,performing,875,"This is a request for clarification for Open Babel-produced SMILES. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Debian unstable. ## Question; What is the convention for tetrahedral chirality center enumeration in SMILES when one of tetrahedral vertex is a lone pair? This does not seem to be covered neither by OpenSMILES nor SMILES+ (I have opened clarification requests https://github.com/timvdm/OpenSMILES/issues/9 and https://github.com/IUPAC/IUPAC_SMILES_plus/issues/26). Is the lone pair considered first when enumerating tetrahedron vertices in (counter)clockwise order? What the order would be if another vertex is an implicit hydrogen?. ## Steps to reproduce; I have downloaded CIF for [COD entry 2013863](https://www.crystallography.net/cod/2013863.html) of r180807. The structure contains S atom with a lone pair, and when performing conversion to SMILES, Open Babel derives a tetrahedral chirality marker for this S:; ```bash; $ obabel -icif 2013863.cif -osmi; [S@]12CCN(CCN(C(=O)C1)CC2)C(=O)CBr.[Br]	2013863; 1 molecule converted; ```; In SMILES only three vertices of a tetrahedron are explicitly provided, fourth of them being the lone pair (I assume).",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451
https://github.com/openbabel/openbabel/issues/2452:381,Availability,down,downloading,381,"Dear everyone. I apologize if this already has been answered, but i really feel like there is missing a very important documentation on using openbabel 3-1-1 to develop software on a windows machine using visual studio. I am still a rookie at c++, but am doing a project where i need to use openbabel as a library. What shall i compile and how to use the c++ code?. I am currently downloading the source and adding the include folder to ""additional include directories"" in my c++ project. I then run the following code:. #include <iostream>; #include ""openbabel/atom.h"". int main(); {. return 0;; }. And i get the following error:; Severity	Code	Description	Project	File	Line	Suppression State; Error	C1083	Cannot open include file: 'openbabel/atom.h': No such file or directory	OBtest	C:\Users\VR2\Documents\CPP_Projects\Openbabel_test\OBtest\Source.cpp	2	. I feel like i am missing some .lib file to link to or some .sln file to compile the library. Appreaciate your time. Kind regards; Zan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2452
https://github.com/openbabel/openbabel/issues/2452:624,Availability,error,error,624,"Dear everyone. I apologize if this already has been answered, but i really feel like there is missing a very important documentation on using openbabel 3-1-1 to develop software on a windows machine using visual studio. I am still a rookie at c++, but am doing a project where i need to use openbabel as a library. What shall i compile and how to use the c++ code?. I am currently downloading the source and adding the include folder to ""additional include directories"" in my c++ project. I then run the following code:. #include <iostream>; #include ""openbabel/atom.h"". int main(); {. return 0;; }. And i get the following error:; Severity	Code	Description	Project	File	Line	Suppression State; Error	C1083	Cannot open include file: 'openbabel/atom.h': No such file or directory	OBtest	C:\Users\VR2\Documents\CPP_Projects\Openbabel_test\OBtest\Source.cpp	2	. I feel like i am missing some .lib file to link to or some .sln file to compile the library. Appreaciate your time. Kind regards; Zan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2452
https://github.com/openbabel/openbabel/issues/2452:695,Availability,Error,Error,695,"Dear everyone. I apologize if this already has been answered, but i really feel like there is missing a very important documentation on using openbabel 3-1-1 to develop software on a windows machine using visual studio. I am still a rookie at c++, but am doing a project where i need to use openbabel as a library. What shall i compile and how to use the c++ code?. I am currently downloading the source and adding the include folder to ""additional include directories"" in my c++ project. I then run the following code:. #include <iostream>; #include ""openbabel/atom.h"". int main(); {. return 0;; }. And i get the following error:; Severity	Code	Description	Project	File	Line	Suppression State; Error	C1083	Cannot open include file: 'openbabel/atom.h': No such file or directory	OBtest	C:\Users\VR2\Documents\CPP_Projects\Openbabel_test\OBtest\Source.cpp	2	. I feel like i am missing some .lib file to link to or some .sln file to compile the library. Appreaciate your time. Kind regards; Zan",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2452
https://github.com/openbabel/openbabel/issues/2454:299,Availability,error,errorlevel,299,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:591,Availability,error,errorlevel,591,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:629,Availability,error,errorlevel,629,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:1238,Availability,error,errorlevel,1238,"--errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (note the radical dots) when e.g., a tetravalent nitrogen (positively charged) is more reasonable:. ![2022-03-14_SMILES_check](https://user-images.githubusercontent.com/19709084/158150704-10a14140-ef48-4e25-9c35-dc6bc77ac6e1.png). For future work, I would like to _identify and remove_ SMILES string",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:2069,Energy Efficiency,charge,charged,2069,"he [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (note the radical dots) when e.g., a tetravalent nitrogen (positively charged) is more reasonable:. ![2022-03-14_SMILES_check](https://user-images.githubusercontent.com/19709084/158150704-10a14140-ef48-4e25-9c35-dc6bc77ac6e1.png). For future work, I would like to _identify and remove_ SMILES strings with these problems for good when processing a list of SMILES and continue with the next entry. In this context, does the CLI version of OpenBabel offer a flag to enable a pedantic filter?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:641,Modifiability,extend,extends,641,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2454:168,Testability,test,testing,168,"- [x] This is a feature request. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 6 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: Failed to kekulize aromatic SMILES; 0 molecules converted; ``` ; Based on the [documentation](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=errorlevel#options), I'm aware the `--errorlevel` extends over five levels. Thus, a sixth level either (still) is hypothetical, or already may be emulated by an approach not yet identified by mine. The effect intended is equivalent to the already existing «none» for e.g., the submission lacking explicit ring closure, and to skip such an entry:. ```bash; ~$ obabel -:""C1CC"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 1 unmatched ring bonds. 0 molecules converted; ```. ## Actual Behavior; ```bash; ~$ obabel -:""[S@@](O)(=O)(=O)CC(=O)OC(=O)c1c2[n](C)c3[n]1CC(=O)OC(=O)c4ccccc4.C3OC.C2O"" --errorlevel 5 -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Failed to kekulize aromatic SMILES. COC[C]1N(C)C(=C(N1CC(=O)OC(=O)c1ccccc1)C(=O)OC(=O)CS(=O)(=O)O)CO	; 1 molecule converted; ```. ## Steps to Reproduce; Processing some data with [Jmol](http://jmol.sourceforge.net/), I obtained SMILES strings copy-pasted into [CDKDepict](https://www.simolecule.com/cdkdepict/depict.html) for visualization. On occasion, the formulae are erroneous because SMILES submitted to CDKDepict were wrong ([example](https://github.com/cdk/depict/issues/38)). The mentioned SMILES string is a problematic because it leads to the depiction of an imidazole with Thiele ring (i.e. six pi electrons) _plus_ two additional electrons on nitrogen atoms (n",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2454
https://github.com/openbabel/openbabel/issues/2455:1063,Availability,Error,Error,1063,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+b1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When submitting a list of SMILES for conversion, I prefer OpenBabel's warnings sent to the CLI to appear directly after the entry to be revised. E.g. with `check01.smi`. ```bash; $ awk '{print}' check01.smi; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warni",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455
https://github.com/openbabel/openbabel/issues/2455:1535,Availability,Error,Error,1535,")O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ```; The same observations with the following different list of smiles (`check02.smi`):. ```; CCOC(Cc(cc1)cc2c1c([C@H](C)OC)c[o]2)=O; CCc(cc1)cc2c1-c1c[o]cc1CC2; C/C=C(\c(c1c(c(CCC2)c3[C@H]2OC)O)c(O)[o]c1c3O)/O[C@@H](C1)CC=C[C@@H]1OC; C[C@H](C(C/C(\C1=O)=C/C([C@@H]([C@H]([C@@](C)(c2c(CC(C)(C",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455
https://github.com/openbabel/openbabel/issues/2455:2023,Availability,Error,Error,2023,"c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	; 1 molecule converted; ```; The same observations with the following different list of smiles (`check02.smi`):. ```; CCOC(Cc(cc1)cc2c1c([C@H](C)OC)c[o]2)=O; CCc(cc1)cc2c1-c1c[o]cc1CC2; C/C=C(\c(c1c(c(CCC2)c3[C@H]2OC)O)c(O)[o]c1c3O)/O[C@@H](C1)CC=C[C@@H]1OC; C[C@H](C(C/C(\C1=O)=C/C([C@@H]([C@H]([C@@](C)(c2c(CC(C)(C)OC)cccc2)OC)OC)O)=O)=O)C1=O; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455
https://github.com/openbabel/openbabel/issues/2455:186,Testability,test,testing,186,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+b1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When submitting a list of SMILES for conversion, I prefer OpenBabel's warnings sent to the CLI to appear directly after the entry to be revised. E.g. with `check01.smi`. ```bash; $ awk '{print}' check01.smi; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warni",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455
https://github.com/openbabel/openbabel/issues/2455:675,Testability,log,log,675,"- [X] I believe this to be a bug with Open Babel. ## Environment Information; Open Babel version: 3.1.1 (3.1.1+dfsg-6+b1); Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When submitting a list of SMILES for conversion, I prefer OpenBabel's warnings sent to the CLI to appear directly after the entry to be revised. E.g. with `check01.smi`. ```bash; $ awk '{print}' check01.smi; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; ```. to yield a log like. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond; 4 molecules converted; ```; ## Actual Behavior; Instead, above `check01.smi` is processed with a report as if the second entry would require a revision, i.e. ```bash; $ awk '{print}' check01.smi | obabel -ismi -ocan --addinindex; COC1[C@@H](OC)[C@H](O)C[C@H]([C@@H]1OC)O	1; COC(=O)Cc1c(O)c(cc(c1O)OC)C(=O)OC(=O)c1cc(OC)c(cc1OC)O	2; ==============================; *** Open Babel Warning in CreateCisTrans; Error in cis/trans stereochemistry specified for the double bond. O=C(OC(=O)c1ccc(cc1O)O[C@@H](C(=O)C1=C(O)CC=C1)C(=O)O)CCC(=O)OC(=O)C	3; COCC(=C(OC(=O)C)CCC[C@H]([C@H](C(=C)CC=C)OC(=C)O)O)OCO	4; 4 molecules converted; ```. ## Steps to Reproduce; Processing `check01.smi` line by line, it actually is entry 4 (i.e., n + 2) OpenBabel's warning refers to:. ```bash; $ awk 'NR == 4' check01.smi | obabel -ismi -ocan; ==============================; *** Open Babel Warni",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455
https://github.com/openbabel/openbabel/pull/2456:152,Testability,log,log,152,**When merged this pull request will:**; - Prevent parser from matching ` Dipole orientation:` if no input orientation was printed.; - `obabel H2O_freq.log -O H2O.cml` work with [H2O_freq.log](https://github.com/openbabel/openbabel/files/8307662/H2O_freq.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456
https://github.com/openbabel/openbabel/pull/2456:188,Testability,log,log,188,**When merged this pull request will:**; - Prevent parser from matching ` Dipole orientation:` if no input orientation was printed.; - `obabel H2O_freq.log -O H2O.cml` work with [H2O_freq.log](https://github.com/openbabel/openbabel/files/8307662/H2O_freq.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456
https://github.com/openbabel/openbabel/pull/2456:255,Testability,log,log,255,**When merged this pull request will:**; - Prevent parser from matching ` Dipole orientation:` if no input orientation was printed.; - `obabel H2O_freq.log -O H2O.cml` work with [H2O_freq.log](https://github.com/openbabel/openbabel/files/8307662/H2O_freq.log),MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2456
https://github.com/openbabel/openbabel/issues/2457:1232,Availability,error,error,1232,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1364,Availability,fault,fault,1364,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1215,Energy Efficiency,energy,energy,1215,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:898,Testability,log,log,898,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:950,Testability,log,log,950,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1000,Testability,log,log,1000,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1175,Testability,log,log,1175,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1562,Testability,log,log,1562,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2457:1623,Testability,log,log,1623,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: CentOS 7.9/RHEL 8.4. ## Expected Behavior; print xyz format of geometry; ## Actual Behavior; obabel segfaults; ## Steps to Reproduce; obabel h2.log -oxyz; When I try to read a Gaussian 16 CBSQ-B3 log file, OpenBabel segfaults. (obabel g16-cbsqb3.log -oxyz); If I delete all lines before "" Link1: Proceeding to internal job step number 5."" in the output file, then openbabel can process the file (obabel -ig16 h2_laststep.log -oxyz), but probably giving a wrong energy. The same error is not happening when I run version 2.4.1. with gdb (without debug info):; ```; Program received signal SIGSEGV, Segmentation fault.; 0x00007ffff7599478 in OpenBabel::OBAtom::GetDistance(OpenBabel::OBAtom*) (); from /apps/gent/CO7/skylake-ib/software/OpenBabel/3.1.1-iimpi-2020a-Python-3.8.2/lib/libopenbabel.so.7; ```; [h2.log](https://github.com/openbabel/openbabel/files/8383268/h2.log)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2457
https://github.com/openbabel/openbabel/issues/2458:1387,Availability,Down,Download,1387," to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 6.513 -2.996 1.0 88.86 ? 335 GLU A CD 1 P04406 UNP 335 E ; ATOM 2533 O OE1 . GLU A 1 335 ? -20.200 5.869 -3.409 1.0 88.86 ? 335 GLU A OE1 1 P04406 UNP 335 E ; ATOM 2534 O OE2 . GLU A 1 335 ? -22.265 5.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458
https://github.com/openbabel/openbabel/issues/2458:1280,Testability,test,test,1280,"es: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 ",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458
https://github.com/openbabel/openbabel/issues/2458:1772,Usability,clear,clearly,1772,"version: Ubuntu 21.04. ## Expected Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) should yield a different molecule for each chain (asym_id). ## Actual Behavior; Iterating over the molecules in an mmcif with multiple chains (e.g. ligands) will only yield one single molecule which contains the atoms from all chains. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; 1. Download this file; [P04406.mmcif.txt](https://github.com/openbabel/openbabel/files/8403838/P04406.mmcif.txt). 2. From the same directory the above file is located in, run:; ```python; from openbabel import pybel; molecules = list(pybel.readfile(""mmcif"", ""P04406.mmcif.txt"")); print(len(molecules)); ```. This prints `1`, but if you look at the actual file, you'll note that there are clearly multiple molecules. For instance, in this part of the `_atom_site` loop, we move from `ATOM` to `HETATM`, with different `asym_id` (`A` -> `B`) which indicate a change in molecule:; ```; ATOM 2530 O O . GLU A 1 335 ? -24.426 9.206 -5.546 1.0 88.86 ? 335 GLU A O 1 P04406 UNP 335 E ; ATOM 2531 C CG . GLU A 1 335 ? -21.013 7.997 -2.666 1.0 88.86 ? 335 GLU A CG 1 P04406 UNP 335 E ; ATOM 2532 C CD . GLU A 1 335 ? -21.190 6.513 -2.996 1.0 88.86 ? 335 GLU A CD 1 P04406 UNP 335 E ; ATOM 2533 O OE1 . GLU A 1 335 ? -20.200 5.869 -3.409 1.0 88.86 ? 335 GLU A OE1 1 P04406 UNP 335 E ; ATOM 2534 O OE2 . GLU A 1 335 ? -22.265 5.907 -2.767 1.0 88.86 ? 335 GLU A OE2 1 P04406 UNP 335 E ; ATOM 2535 O OXT . GLU A 1 335 ? -23.030 10.937 -5.405 1.0 88.86 ? 335 GLU A OXT 1 P04406 UNP 335 E ; HETATM 2536 O O7N ? NAD B 2 336 ? 19.418873 -12.557346 25.040537 1.00 27.94 ? 336 NAD B O7N 1 ? ? ? ? ; HETATM 2537 C C7N ? NAD B 2 336 ? 18.608522 -13.471519 25.032057 1.00 31.53 ? 336",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2458
https://github.com/openbabel/openbabel/issues/2459:50,Availability,error,error,50,"Hello!. I am running into the following attribute error, do you know why this may be? I am using Python 3.9.0 and openbabel 3.1.1 installed via conda-forge (conda install -c openbabel openbabel). Thank you for your help. Best wishes,; Kadi. File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 752, in <module>; myTyper = Typer(); File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 54, in __init__; self.etab = openbabel.OBElementTable(); File ""/home/kls78/.conda/envs/test5/lib/python3.9/site-packages/openbabel/__init__.py"", line 17, in __getattr__; raise AttributeError; AttributeError",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2459
https://github.com/openbabel/openbabel/issues/2459:130,Deployability,install,installed,130,"Hello!. I am running into the following attribute error, do you know why this may be? I am using Python 3.9.0 and openbabel 3.1.1 installed via conda-forge (conda install -c openbabel openbabel). Thank you for your help. Best wishes,; Kadi. File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 752, in <module>; myTyper = Typer(); File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 54, in __init__; self.etab = openbabel.OBElementTable(); File ""/home/kls78/.conda/envs/test5/lib/python3.9/site-packages/openbabel/__init__.py"", line 17, in __getattr__; raise AttributeError; AttributeError",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2459
https://github.com/openbabel/openbabel/issues/2459:163,Deployability,install,install,163,"Hello!. I am running into the following attribute error, do you know why this may be? I am using Python 3.9.0 and openbabel 3.1.1 installed via conda-forge (conda install -c openbabel openbabel). Thank you for your help. Best wishes,; Kadi. File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 752, in <module>; myTyper = Typer(); File ""/rds/user/kls78/hpc-work/gnina/typer.py"", line 54, in __init__; self.etab = openbabel.OBElementTable(); File ""/home/kls78/.conda/envs/test5/lib/python3.9/site-packages/openbabel/__init__.py"", line 17, in __getattr__; raise AttributeError; AttributeError",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2459
https://github.com/openbabel/openbabel/issues/2461:3161,Availability,error,error,3161,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3414,Availability,error,error,3414,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3524,Availability,error,error,3524,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3544,Availability,error,error,3544,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:263,Modifiability,plugin,plugin,263,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; A project using C++17 can use openbabel. ## Actual Behavior. plugin.h uses std::binary_function, which has been removed in C++17. ## Steps to Reproduce; `#include <openbabel/obconversion.h>` in a file and compile in C++17 mode. ```; C:\PROGRA~2\MICROS~2\2019\COMMUN~1\VC\Tools\MSVC\1429~1.301\bin\Hostx64\x64\cl.exe /nologo /TP -DKCONFIGWIDGETS_NO_KAUTH -DKCOREADDONS_LIB -DNOMINMAX -DQT_CONCURRENT_LIB -DQT_CORE_LIB -DQT_DBUS_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_NO_DEBUG -DQT_NO_URL_CAST_FROM_STRING -DQT_SCRIPT_LIB -DQT_SVG_LIB -DQT_WIDGETS_LIB -DQT_XML_LIB -DUNICODE -DUSING_DYNAMIC_LIBS -DWIN32_LEAN_AND_MEAN -DWINVER=0x0600 -D_CRT_NONSTDC_NO_DEPRECATE -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS -D_UNICODE -D_USE_MATH_DEFINES -D_WIN32_IE=0x0600 -D_WIN32_WINNT=0x0600 -Isrc -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src -Isrc\kalzium_autogen\include -ID:\CraftRoot\build\_\7e1aba1f\kalzium\libscience -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src\..\compoundviewer -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src\calculator -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src\psetable -ID:\CraftRoot\build\_\7e1aba1f\kalzium\src\isotopetable -Isrc\.. -Ilibscience -ID:\CraftRoot\include\openbabel3 -ID:\CraftRoot\include\KF5\KCompletion -ID:\CraftRoot\include\KF5 -ID:\CraftRoot\include\qt5 -ID:\CraftRoot\include\qt5\QtWidgets -ID:\CraftRoot\include\qt5\QtGui -ID:\CraftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KCon",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3147,Modifiability,plugin,plugin,3147,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3400,Modifiability,plugin,plugin,3400,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2461:3510,Modifiability,plugin,plugin,3510,"ftRoot\include\qt5\QtANGLE -ID:\CraftRoot\include\qt5\QtCore -ID:\CraftRoot\.\mkspecs\win32-msvc -ID:\CraftRoot\include\KF5\KConfigWidgets -ID:\CraftRoot\include\KF5\KCodecs -ID:\CraftRoot\include\KF5\KWidgetsAddons -ID:\CraftRoot\include\KF5\KConfig -ID:\CraftRoot\include\KF5\KConfigGui -ID:\CraftRoot\include\qt5\QtXml -ID:\CraftRoot\include\KF5\KConfigCore -ID:\CraftRoot\include\KF5\KItemViews -ID:\CraftRoot\include\KF5\KIOWidgets -ID:\CraftRoot\include\KF5\KIOGui -ID:\CraftRoot\include\KF5\KIOCore -ID:\CraftRoot\include\KF5\KIO -ID:\CraftRoot\include\KF5\KCoreAddons -ID:\CraftRoot\include\KF5\KService -ID:\CraftRoot\include\qt5\QtNetwork -ID:\CraftRoot\include\qt5\QtDBus -ID:\CraftRoot\include\qt5\QtConcurrent -ID:\CraftRoot\include\KF5\KWindowSystem -ID:\CraftRoot\include\KF5\KJobWidgets -ID:\CraftRoot\include\KF5\Solid -ID:\CraftRoot\include\KF5\KPlotting -ID:\CraftRoot\include\KF5\KTextWidgets -ID:\CraftRoot\include\KF5\SonnetUi -ID:\CraftRoot\include\KF5\Sonnet -ID:\CraftRoot\include\KF5\KI18n -ID:\CraftRoot\include\KF5\KUnitConversion -ID:\CraftRoot\include\KF5\KXmlGui -ID:\CraftRoot\include\qt5\QtScript -ID:\CraftRoot\include\qt5\QtSvg /DWIN32 /D_WINDOWS /GR /EHsc /wd4250 /wd4251 /wd4396 /wd4661 /Zc:__cplusplus /Zi /O2 /Ob1 /DNDEBUG -MD /utf-8 -std:c++17 /showIncludes /Fosrc\CMakeFiles\kalzium.dir\tools\obconverter.cpp.obj /Fdsrc\CMakeFiles\kalzium.dir\ /FS -c D:\CraftRoot\build\_\7e1aba1f\kalzium\src\tools\obconverter.cpp; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2039: 'binary_function': is not a member of 'std'; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\deque(24): note: see declaration of 'std'; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2504: 'binary_function': base class undefined; D:\CraftRoot\include\openbabel3\openbabel/plugin.h(41): error C2143: syntax error: missing ',' before '<'; [3/5] Building CXX object src\CMakeFiles\kalzium.dir\kalzium.cpp.obj; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2461
https://github.com/openbabel/openbabel/issues/2462:228,Deployability,install,installed,228,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; OpenBabel3Config.cmake is installed into a suitable location, e.g. `<prefix>/lib/cmake/openbabel3`. ## Actual Behavior; OpenBabel3Config.cmake is installed to `<prefix>/bin/openbabel3`, where consumers do not find it. ## Steps to Reproduce; Build and install on Windows. The issue is with line https://github.com/openbabel/openbabel/blob/master/CMakeLists.txt#L746; LIB_INSTALL_DIR is 'bin' on Windows, which is undesired here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2462
https://github.com/openbabel/openbabel/issues/2462:348,Deployability,install,installed,348,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; OpenBabel3Config.cmake is installed into a suitable location, e.g. `<prefix>/lib/cmake/openbabel3`. ## Actual Behavior; OpenBabel3Config.cmake is installed to `<prefix>/bin/openbabel3`, where consumers do not find it. ## Steps to Reproduce; Build and install on Windows. The issue is with line https://github.com/openbabel/openbabel/blob/master/CMakeLists.txt#L746; LIB_INSTALL_DIR is 'bin' on Windows, which is undesired here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2462
https://github.com/openbabel/openbabel/issues/2462:453,Deployability,install,install,453,"- [x] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Windows 10. ## Expected Behavior; OpenBabel3Config.cmake is installed into a suitable location, e.g. `<prefix>/lib/cmake/openbabel3`. ## Actual Behavior; OpenBabel3Config.cmake is installed to `<prefix>/bin/openbabel3`, where consumers do not find it. ## Steps to Reproduce; Build and install on Windows. The issue is with line https://github.com/openbabel/openbabel/blob/master/CMakeLists.txt#L746; LIB_INSTALL_DIR is 'bin' on Windows, which is undesired here",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2462
https://github.com/openbabel/openbabel/pull/2463:64,Deployability,install,install,64,"LIB_INSTALL_DIR is 'bin' on Windows, resulting in an unsuitable install location. Instead use the lib dir info from GNUInstallDirs, which gives the appropriate result here. Fixes #2462",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2463
https://github.com/openbabel/openbabel/pull/2465:347,Availability,failure,failure,347,"```; tar: The following options were used after any non-optional arguments in archive create or update mode. These options are positional and affect only arguments that follow them. Please, rearrange them properly.; tar: --exclude-vcs has no effect; tar: --exclude-backups has no effect; tar: --exclude ‘.github*’ has no effect; tar: Exiting with failure status due to previous errors; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2465
https://github.com/openbabel/openbabel/pull/2465:378,Availability,error,errors,378,"```; tar: The following options were used after any non-optional arguments in archive create or update mode. These options are positional and affect only arguments that follow them. Please, rearrange them properly.; tar: --exclude-vcs has no effect; tar: --exclude-backups has no effect; tar: --exclude ‘.github*’ has no effect; tar: Exiting with failure status due to previous errors; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2465
https://github.com/openbabel/openbabel/pull/2465:96,Deployability,update,update,96,"```; tar: The following options were used after any non-optional arguments in archive create or update mode. These options are positional and affect only arguments that follow them. Please, rearrange them properly.; tar: --exclude-vcs has no effect; tar: --exclude-backups has no effect; tar: --exclude ‘.github*’ has no effect; tar: Exiting with failure status due to previous errors; ```",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2465
https://github.com/openbabel/openbabel/issues/2467:1215,Testability,test,test,1215,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2467
https://github.com/openbabel/openbabel/pull/2468:26,Testability,Test,TestCase,26,- fix misuse of `unittest.TestCase.assert_`; - improve usages of `unitest.TestCase` methods,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468
https://github.com/openbabel/openbabel/pull/2468:74,Testability,Test,TestCase,74,- fix misuse of `unittest.TestCase.assert_`; - improve usages of `unitest.TestCase` methods,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2468
https://github.com/openbabel/openbabel/issues/2469:398,Integrability,wrap,wrapper,398,"- [X] Reaching Out; - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Oracle Enterprise Linux 8.1.4; SWIG Version: 4.0.2; PHP Version: 8.1.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Using SWIG Development version 4.1 to build PHP wrapper. Worked perfectly with SWIG 4.0.2 and PHP 7.4.x. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; No PHP wrapper being generated. Not sure if this is a SWIG issue or an OpenBabel issue; We had posted and issue on [SWIG 2270](https://github.com/swig/swig/issues/2270) . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469
https://github.com/openbabel/openbabel/issues/2469:660,Integrability,wrap,wrapper,660,"- [X] Reaching Out; - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Oracle Enterprise Linux 8.1.4; SWIG Version: 4.0.2; PHP Version: 8.1.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Using SWIG Development version 4.1 to build PHP wrapper. Worked perfectly with SWIG 4.0.2 and PHP 7.4.x. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; No PHP wrapper being generated. Not sure if this is a SWIG issue or an OpenBabel issue; We had posted and issue on [SWIG 2270](https://github.com/swig/swig/issues/2270) . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469
https://github.com/openbabel/openbabel/issues/2469:1002,Testability,test,test,1002,"- [X] Reaching Out; - [ ] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.1; Operating system and version: Oracle Enterprise Linux 8.1.4; SWIG Version: 4.0.2; PHP Version: 8.1.4. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; Using SWIG Development version 4.1 to build PHP wrapper. Worked perfectly with SWIG 4.0.2 and PHP 7.4.x. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->; No PHP wrapper being generated. Not sure if this is a SWIG issue or an OpenBabel issue; We had posted and issue on [SWIG 2270](https://github.com/swig/swig/issues/2270) . ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2469
https://github.com/openbabel/openbabel/issues/2470:1587,Availability,error,error,1587,"<!--; Before submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit. You can convert `[ ]` into `[x]` to check boxes.; -->. - [X] I believe this to be a bug with Open Babel; - [ ] This is a feature request. ## Environment Information; Open Babel version: 3.1.0; Operating system and version: Anaconda 4.10.1. ## Expected Behavior; pybel should perceive the pdbqt atoms missing hydrogens as implicit hydrogens, not radicals. ## Actual Behavior; When reading a valid PDBQT file using eg, pybel.readfile, it sets the number of implicit hydrogens to 0 for all atoms, leaving them as radicals. I could not fix it by deleting/adding hydrogens. ## Steps to Reproduce; ```; In [1]: from openbabel import pybel. In [2]: m = next(pybel.readfile('pdbqt', 'isopreterenol.pdbqt')). In [3]: m.write('smi'); Out[3]: '[C][C]([C])N[C][C](C1=[C]C(=C([C]=[C]1)O)O)O\tisopreterenol.pdbqt\n'. In [4]: m.addh(). In [5]: m.write('smi'); Out[5]: '[C][C]([C])N[C][C](C1=[C]C(=C([C]=[C]1)O)O)O\tisopreterenol.pdbqt\n'. In [6]: m.write('mol2', 'isomod.mol2'). In [7]: ; ```. Please, find attached the relevant files (but I tried on many inputs and the error is present); [Archive.zip](https://github.com/openbabel/openbabel/files/8632357/Archive.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2470
https://github.com/openbabel/openbabel/issues/2472:347,Availability,error,error,347,"Dear all,. I tried to convert molecule with PDB ID 1NER in .cif format to .pdb format using openbabel, but it was not working. ; I have no idea, where the mistake might be, so I would like to ask here. Structure is small, so there could not be a problem, I think. I tried to convert another molecule and it worked, so I would like to know, if the error was just due to this particular structure, or in what cases conversion might have failed. Thank you in advance for answers!. ## Environment Information; Open Babel version: 3.0.0; Operating system and version: Ubuntu 20.04.4. ## Expected Behavior; To convert molecule from .cif to .pdb format. ## Actual Behavior; Nothing happened. ## Steps to Reproduce; - get molecule in .cif format from https://www.rcsb.org/structure/1NER; - obabel -icif 1ner.cif -opdb -O1ner.pdb",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2472
https://github.com/openbabel/openbabel/pull/2473:61,Availability,fault,fault,61,"related to #2229, current implementation causes segmentation fault after call SetFilter from python",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2473
https://github.com/openbabel/openbabel/pull/2474:104,Availability,fault,fault,104,"related to https://github.com/openbabel/openbabel/pull/2229, current implementation causes segmentation fault after call SetFilter from python",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2474
https://github.com/openbabel/openbabel/issues/2476:915,Modifiability,variab,variable,915,"- [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Mar 29 2022 -- 00:37:58; Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When splitting e.g., one .pdb file including multiple models into multiple files about one individual model each, a file sort were eased if openbabel would account for the total of the models by leading (padding) zeros. E.g., if there are more than nine models and less than one hundred, to name the newly written files in a pattern of `split01.pdb`, `split02.pdb`, `split10.pdb`. By similar token, if there were more than 99 models and less than 1000, to use file names like `split001.pdb`, `split002.pdb`, `split010.pdb`, `split123.pdb`, etc. ## Actual Behavior; At present, files are named in a pattern like `split1.pdb`, `split2.pdb`, `split9.pdb`, `split10.pdb`, `split11.pdb` etc. with a variable number of characters though all of them are derived from the same multi-model .pdb. A recent example was splitting a multimodel .pdb ([here](https://github.com/openbabel/openbabel/issues/2472)). ## Steps to Reproduce; The .pdb `1NER` fetched from RCSB PDB ([entry](https://www.rcsb.org/structure/1NER)) was split into individual files by. ```bash; obabel 1ner.pdb -O split.pdb -m; ```. [test_split_pdb.zip](https://github.com/openbabel/openbabel/files/8667406/test_split_pdb.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2476
https://github.com/openbabel/openbabel/issues/2476:189,Testability,test,testing,189,"- [x] This is a feature request. ## Environment Information; Open Babel version: Open Babel 3.1.1 -- Mar 29 2022 -- 00:37:58; Operating system and version: Linux Debian 12/bookworm (branch testing). ## Expected Behavior; When splitting e.g., one .pdb file including multiple models into multiple files about one individual model each, a file sort were eased if openbabel would account for the total of the models by leading (padding) zeros. E.g., if there are more than nine models and less than one hundred, to name the newly written files in a pattern of `split01.pdb`, `split02.pdb`, `split10.pdb`. By similar token, if there were more than 99 models and less than 1000, to use file names like `split001.pdb`, `split002.pdb`, `split010.pdb`, `split123.pdb`, etc. ## Actual Behavior; At present, files are named in a pattern like `split1.pdb`, `split2.pdb`, `split9.pdb`, `split10.pdb`, `split11.pdb` etc. with a variable number of characters though all of them are derived from the same multi-model .pdb. A recent example was splitting a multimodel .pdb ([here](https://github.com/openbabel/openbabel/issues/2472)). ## Steps to Reproduce; The .pdb `1NER` fetched from RCSB PDB ([entry](https://www.rcsb.org/structure/1NER)) was split into individual files by. ```bash; obabel 1ner.pdb -O split.pdb -m; ```. [test_split_pdb.zip](https://github.com/openbabel/openbabel/files/8667406/test_split_pdb.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2476
https://github.com/openbabel/openbabel/pull/2477:19,Integrability,depend,dependent,19,make stdout writes dependent on verbose flag that allow to turn off logs completely,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2477
https://github.com/openbabel/openbabel/pull/2477:68,Testability,log,logs,68,make stdout writes dependent on verbose flag that allow to turn off logs completely,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2477
https://github.com/openbabel/openbabel/issues/2479:284,Availability,down,download,284,The openbabel website still has links to sourceforge on the [wiki](http://openbabel.org/wiki/Main_Page) and in some of the sub-pages such as this [build instructions page](http://openbabel.org/wiki/Install_(source_code)). Please update these links to the GitHub repo where the latest download is available.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479
https://github.com/openbabel/openbabel/issues/2479:296,Availability,avail,available,296,The openbabel website still has links to sourceforge on the [wiki](http://openbabel.org/wiki/Main_Page) and in some of the sub-pages such as this [build instructions page](http://openbabel.org/wiki/Install_(source_code)). Please update these links to the GitHub repo where the latest download is available.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479
https://github.com/openbabel/openbabel/issues/2479:229,Deployability,update,update,229,The openbabel website still has links to sourceforge on the [wiki](http://openbabel.org/wiki/Main_Page) and in some of the sub-pages such as this [build instructions page](http://openbabel.org/wiki/Install_(source_code)). Please update these links to the GitHub repo where the latest download is available.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479
https://github.com/openbabel/openbabel/issues/2481:1778,Availability,down,down,1778,"and by deleting each atom one at a time I should not see this affecting the residues names and atom names in the protein, i.e. they should not get updated automatically on `mol.DeleteAtom()`. There should be an option for autoupdate residues/atoms but not by default. PDB link: https://drive.google.com/file/d/1_4evWI7RpU5w9YzhiO66zwudyz498hUg/view?usp=sharing. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. I (really a program I am using) am trying to delete a ligand from a ""receptor""-ligand complex PDB at the link below. Deleting all these atoms of the ligand screws up the residue names in the binding site because most PDB files do not have the `CONECT` for the actual residues of the protein. When I start deleting the atoms descending from atom number 5269 down to atom 5240 everything is okay however after I deleting `03` from Ribociclib atom number 5239, this messes up both residues 101 and 152 in the binding domain and some of the residues become ""UNK"" and the chain name disappears. There is a way around this I believe if I run an `obabel -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbm",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2481:1008,Deployability,update,updated,1008," submitting please search open and closed issues at; https://github.com/openbabel/openbabel. Open Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aopen+is%3Aissue; Closed Issues: https://github.com/openbabel/openbabel/issues?q=is%3Aissue+is%3Aclosed. The GitHub issue tracker is for bug reports and feature requests.; If you have a question about using Open Babel, please post to openbabel-discuss@lists.sourceforge.net. Feel free to use the following as a template and remove or add fields as you see fit.; -->. ## Environment Information; Open Babel version: 3.1.0 and python bindings; Operating system and version:; Linux, Ubuntu 18.04. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->; When reversing the indices of a PDB molecule with openbabel in Python in order to be able to remove the ligand by deleting each atom one at a time I should not see this affecting the residues names and atom names in the protein, i.e. they should not get updated automatically on `mol.DeleteAtom()`. There should be an option for autoupdate residues/atoms but not by default. PDB link: https://drive.google.com/file/d/1_4evWI7RpU5w9YzhiO66zwudyz498hUg/view?usp=sharing. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. I (really a program I am using) am trying to delete a ligand from a ""receptor""-ligand complex PDB at the link below. Deleting all these atoms of the ligand screws up the residue names in the binding site because most PDB files do not have the `CONECT` for the actual residues of the protein. When I start deleting the atoms descending from atom number 5269 down to atom 5240 everything is okay however after I deleting `03` from Ribociclib atom number 5239, this messes up both residues 101 and 152 in the binding domain and some of the residues become ""UNK"" and the chain name disappears. Th",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2481:3447,Deployability,update,update,3447,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2481:2375,Testability,test,test,2375,"tead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. I (really a program I am using) am trying to delete a ligand from a ""receptor""-ligand complex PDB at the link below. Deleting all these atoms of the ligand screws up the residue names in the binding site because most PDB files do not have the `CONECT` for the actual residues of the protein. When I start deleting the atoms descending from atom number 5269 down to atom 5240 everything is okay however after I deleting `03` from Ribociclib atom number 5239, this messes up both residues 101 and 152 in the binding domain and some of the residues become ""UNK"" and the chain name disappears. There is a way around this I believe if I run an `obabel -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2481:3062,Testability,test,test,3062,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2481:3438,Usability,learn,learn,3438,"l -ipdb -opdb` to get all the connection but `obConversion.SetInFormat('pdb')` and `obConversion.ReadFile()` should be doing this. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; -->; Using the `output.pdb` in the link as the input you will see the issues on residue 101 and 152 in the output.; ```; from openbabel import openbabel. pdbmol=openbabel.OBMol(); obConversion = openbabel.OBConversion(); obConversion.SetInFormat('pdb'); obConversion.ReadFile(pdbmol,""output.pdb""). ## confirm this is first atom in valine residue 101; pdbmol.GetAtom(1604).GetType(); pdbmol.GetAtom(1604).GetResidue().GetName(). ## delete just before Oxygen in Ribociclib; for i in range(5269, 5239, -1):; # delete atom; print(""Deleting atom:"", i); pdbmol.DeleteAtom(pdbmol.GetAtom(i)); # test VAL 101 is still valine; print(""Residue 101 is still:"", pdbmol.GetAtom(1604).GetResidue().GetName()); ; # leucine 152 is also good; pdbmol.GetAtom(2455).GetResidue().GetName(); ; # now delete atom 5239 Oxygen 03; pdbmol.GetAtom(5239).GetType(); pdbmol.DeleteAtom(pdbmol.GetAtom(5239)). # now we see atom 1604 is no longer a valine? ; # Not a simulation... so how does it learn to update residues?; pdbmol.GetAtom(1604).GetResidue().GetName(). # leucine 152 atom 2455 is also messed up; both of these are in ligand binding region; pdbmol.GetAtom(2454).GetResidue().GetName(); pdbmol.GetAtom(2455).GetResidue().GetName(). ## after deleting the remainder this writes all sorts of funky stuff now; for i in range(5238, 5207, -1):; pdbmol.DeleteAtom(pdbmol.GetAtom(i)); obConversion.SetOutFormat('pdb'); obConversion.WriteFile(pdbmol,""uncomplexed.output.pdb""); ```; ![UCSF Chimera 2022-05-26 04-51-12](https://user-images.githubusercontent.com/26236052/170466512-ab11ac77-b7bb-41bd-9b06-609891ba594a.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481
https://github.com/openbabel/openbabel/issues/2482:805,Availability,error,error,805,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2482:882,Availability,Error,Error,882,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2482:1016,Availability,Error,Error,1016,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2482:1150,Availability,Error,Error,1150,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2482:1284,Availability,Error,Error,1284,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2482:811,Integrability,message,message,811,"## Environment Information; Open Babel version: 3.1.1; Python version: 3.7; Operating system and version: Windows 10. ## Expected Behavior; Calculate basic features and molecular fingerprints using Python's OpenBabel library. ## Actual Behavior; Basic descriptors have many missing items, and molecular fingerprints cannot be obtained.; ![1653665232(1)](https://user-images.githubusercontent.com/81633044/170730581-ad860587-19f5-4398-a583-0b359204880b.png); ![1653665465(1)](https://user-images.githubusercontent.com/81633044/170731243-1f4172e6-fa49-42bf-8024-570912c04d5b.png). ## Steps to Reproduce. The running code is as follows:; from openbabel import openbabel,pybel ; for mymol in pybel.readfile(""mol"", ""p0000078579.mol""):; descr_dict = mymol.calcdesc(); FP4_dict = mymol.calcfp(fptype=""FP4""). The error message is as follows:; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; ==============================; *** Open Babel Error in OpenBabel::PatternFP::ReadPatternFile; Cannot open SMARTS_InteLigand.txt. [p0000078579.zip](https://github.com/openbabel/openbabel/files/8787754/p0000078579.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2482
https://github.com/openbabel/openbabel/issues/2483:86,Availability,error,error,86,"I was trying to run a command for preparecovalent.py on python 3.10.4, and I get this error:. Traceback (most recent call last):; File ""/home/ahmed/Downloads/adCovalentDockResidue/adcovalent/prepareCovalent.py"", line 37, in; ob = pybel.ob; AttributeError: module 'pybel' has no attribute 'ob'. I can't find any ob attributes in my files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483
https://github.com/openbabel/openbabel/issues/2483:148,Availability,Down,Downloads,148,"I was trying to run a command for preparecovalent.py on python 3.10.4, and I get this error:. Traceback (most recent call last):; File ""/home/ahmed/Downloads/adCovalentDockResidue/adcovalent/prepareCovalent.py"", line 37, in; ob = pybel.ob; AttributeError: module 'pybel' has no attribute 'ob'. I can't find any ob attributes in my files.",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2483
https://github.com/openbabel/openbabel/issues/2484:70,Usability,clear,clear,70,"**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. **Describe the solution you'd like**; A clear and concise description of what you want to happen. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here. openbabel==2.4.1. I want to convert .smi to .xyz, then i will achieve some task of prediciiton, so it is strict with the accuracy of 3D coordinate. When i use the openbabel convert .smi to .xyz, then convert .xyz to .smi. But i find the two smiles is differernt. the below is my code, I want to know how to get the better accuracy in .xyz coordinate. Thank you!. .smi->.xyz; ```python; ## Use openbabel to convert SMILES to xyz.; mol = pybel.readstring(""smi"", smiles); mol.localopt(forcefield=""mmff94"", steps=5000); mol.make3D(forcefield='mmff94', steps=100); mol.write(""xyz"", filename=out_name+'_pybel.xyz', overwrite=True); ```. .xyz->.smi. ```python; def MolFormatConversion(input_file:str,output_file:str,input_format=""xyz"",output_format=""smi""):; molecules = readfile(input_format,input_file); output_file_writer = Outputfile(output_format,output_file); for i,molecule in enumerate(molecules):; output_file_writer.write(molecule); output_file_writer.close(); print('%d molecules converted'%(i+1)); ```; This is the right smiles:O=C1[N]C([S])=NC2=NC=CN=C21; ![image](https://user-images.githubusercontent.com/32425458/172286276-53de501c-a049-4c1c-b908-b742bb8c60c2.png); This is convert smiles: O=C1N=[C](=S)N=C2N=CC=N[C]12; ![image](https://user-images.githubusercontent.com/32425458/172286420-71022838-b981-42b9-9415-b471416e4e25.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484
https://github.com/openbabel/openbabel/issues/2484:202,Usability,clear,clear,202,"**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. **Describe the solution you'd like**; A clear and concise description of what you want to happen. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here. openbabel==2.4.1. I want to convert .smi to .xyz, then i will achieve some task of prediciiton, so it is strict with the accuracy of 3D coordinate. When i use the openbabel convert .smi to .xyz, then convert .xyz to .smi. But i find the two smiles is differernt. the below is my code, I want to know how to get the better accuracy in .xyz coordinate. Thank you!. .smi->.xyz; ```python; ## Use openbabel to convert SMILES to xyz.; mol = pybel.readstring(""smi"", smiles); mol.localopt(forcefield=""mmff94"", steps=5000); mol.make3D(forcefield='mmff94', steps=100); mol.write(""xyz"", filename=out_name+'_pybel.xyz', overwrite=True); ```. .xyz->.smi. ```python; def MolFormatConversion(input_file:str,output_file:str,input_format=""xyz"",output_format=""smi""):; molecules = readfile(input_format,input_file); output_file_writer = Outputfile(output_format,output_file); for i,molecule in enumerate(molecules):; output_file_writer.write(molecule); output_file_writer.close(); print('%d molecules converted'%(i+1)); ```; This is the right smiles:O=C1[N]C([S])=NC2=NC=CN=C21; ![image](https://user-images.githubusercontent.com/32425458/172286276-53de501c-a049-4c1c-b908-b742bb8c60c2.png); This is convert smiles: O=C1N=[C](=S)N=C2N=CC=N[C]12; ![image](https://user-images.githubusercontent.com/32425458/172286420-71022838-b981-42b9-9415-b471416e4e25.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484
https://github.com/openbabel/openbabel/issues/2484:307,Usability,clear,clear,307,"**Is your feature request related to a problem? Please describe.**; A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]. **Describe the solution you'd like**; A clear and concise description of what you want to happen. **Describe alternatives you've considered**; A clear and concise description of any alternative solutions or features you've considered. **Additional context**; Add any other context or screenshots about the feature request here. openbabel==2.4.1. I want to convert .smi to .xyz, then i will achieve some task of prediciiton, so it is strict with the accuracy of 3D coordinate. When i use the openbabel convert .smi to .xyz, then convert .xyz to .smi. But i find the two smiles is differernt. the below is my code, I want to know how to get the better accuracy in .xyz coordinate. Thank you!. .smi->.xyz; ```python; ## Use openbabel to convert SMILES to xyz.; mol = pybel.readstring(""smi"", smiles); mol.localopt(forcefield=""mmff94"", steps=5000); mol.make3D(forcefield='mmff94', steps=100); mol.write(""xyz"", filename=out_name+'_pybel.xyz', overwrite=True); ```. .xyz->.smi. ```python; def MolFormatConversion(input_file:str,output_file:str,input_format=""xyz"",output_format=""smi""):; molecules = readfile(input_format,input_file); output_file_writer = Outputfile(output_format,output_file); for i,molecule in enumerate(molecules):; output_file_writer.write(molecule); output_file_writer.close(); print('%d molecules converted'%(i+1)); ```; This is the right smiles:O=C1[N]C([S])=NC2=NC=CN=C21; ![image](https://user-images.githubusercontent.com/32425458/172286276-53de501c-a049-4c1c-b908-b742bb8c60c2.png); This is convert smiles: O=C1N=[C](=S)N=C2N=CC=N[C]12; ![image](https://user-images.githubusercontent.com/32425458/172286420-71022838-b981-42b9-9415-b471416e4e25.png)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484
https://github.com/openbabel/openbabel/issues/2485:158,Availability,error,error,158,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:166,Availability,Error,Error,166,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:599,Availability,error,error,599,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:2,Deployability,install,installed,2,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:58,Deployability,install,install,58,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:200,Deployability,install,installed,200,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:411,Deployability,install,install,411,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/issues/2485:552,Deployability,install,installed,552,"I installed openbabel using conda with the command ""conda install -c conda-forge openbabel"". I tried to run the setup for pybel for openbabel, but I got this error:. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install. I tried to look for the local anf library files but I couldn't find any. Are those supposed to be there when openbabel is correctly installed, and if not, how can I overcome this error?",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2485
https://github.com/openbabel/openbabel/pull/2486:56,Energy Efficiency,charge,charges,56,"Supports atoms / bonds, coordinate sets, vibrations and charges. Signed-off-by: Geoff Hutchison <geoff.hutchison@gmail.com>",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2486
https://github.com/openbabel/openbabel/issues/2488:50,Deployability,update,update,50,The latest version of InChI is 1.0.6 - we need to update accordingly.,MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2488
https://github.com/openbabel/openbabel/pull/2493:41,Availability,failure,failure,41,"Without this fixed check, we get a build failure with GCC 12:; ```; /var/tmp/portage/sci-chemistry/openbabel-3.1.1_p20210225/work/openbabel-08e23f39b0cc39b4eebd937a5a2ffc1a7bac3e1b/include/openbabel/obutil.h:65:14: error: ‘clock’ was not declared in this scope; did you mean ‘clock_t’?; 65 | start= clock();; | ^~~~~; | clock_t; ```. Bug: https://bugs.gentoo.org/851510",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2493
https://github.com/openbabel/openbabel/pull/2493:215,Availability,error,error,215,"Without this fixed check, we get a build failure with GCC 12:; ```; /var/tmp/portage/sci-chemistry/openbabel-3.1.1_p20210225/work/openbabel-08e23f39b0cc39b4eebd937a5a2ffc1a7bac3e1b/include/openbabel/obutil.h:65:14: error: ‘clock’ was not declared in this scope; did you mean ‘clock_t’?; 65 | start= clock();; | ^~~~~; | clock_t; ```. Bug: https://bugs.gentoo.org/851510",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2493
https://github.com/openbabel/openbabel/issues/2496:1045,Availability,error,error,1045,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:1081,Availability,Error,Error,1081,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:1203,Availability,error,error,1203,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:153,Energy Efficiency,charge,charges,153,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:247,Energy Efficiency,charge,charges,247,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:361,Energy Efficiency,charge,charges,361,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:391,Energy Efficiency,energy,energy,391,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:504,Energy Efficiency,energy,energy,504,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:773,Energy Efficiency,charge,charges,773,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:836,Energy Efficiency,charge,charges,836,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:963,Energy Efficiency,energy,energy,963,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:1106,Energy Efficiency,Charge,Charge,1106,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
https://github.com/openbabel/openbabel/issues/2496:107,Performance,perform,perform,107,"## Environment Information; Open Babel 3.1.0; Linux, Ubuntu 20.04.4 LTS. ## Expected Behavior; I wanted to perform forcefield calculations using partial charges from a file. ## Actual Behavior. 1.When I try to use a specific model for the partial charges, they are printed out but not used in the calculation as it still states that it used the default partial charges and obtained the same energy as a calculation without the --partialcharge option; I tried this command:; ```; obabel struc.xyz -otxt --energy --ff gaff --partialcharge eem --print --log ; ```; In the file ""output"" you can see what is printed on my console after this command.; I also attached a neutral example structure called ""struc.xyz"" on which I performed the calculations. 2. I want to use partial charges that I obtained from an xtb calculation. I wrote these charges in the file ""pc"", I tried to use the format as stated by obabel. I tried this command:; ``` ; obabel struc.xyz -otxt --energy --ff gaff --partialcharge fromfile:./pc --print --log; ``` ; The following error occurs:. "" ... *** Open Babel Error in ComputeCharges; Charge mapping for atom # 1 (OXT) not found ... "" . The whole printout can be found in the file ""error"". ## Steps to Reproduce; The above-mentioned files can be found in example.tar . Thank you very much in advance!; Benedikt; [example.zip](https://github.com/openbabel/openbabel/files/8893033/example.zip)",MatchSource.ISSUE,openbabel,openbabel,openbabel-3-1-1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2496
