id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/10528:10664,Performance,Perform,Performing,10664,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10709,Performance,Perform,Performing,10709,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10745,Performance,Perform,Performing,10745,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10791,Performance,Perform,Performing,10791,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10834,Performance,Perform,Performing,10834,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10887,Performance,Perform,Performing,10887,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10937,Performance,Perform,Performing,10937,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10997,Performance,Perform,Performing,10997,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11046,Performance,Perform,Performing,11046,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11105,Performance,Perform,Performing,11105,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11158,Performance,Perform,Performing,11158,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:28995,Performance,load,loading,28995,"m /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:35:10: note: submodule of top-level module 'std' implicitly imported here; #include <iosfwd>; ^; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:700,Safety,Detect,Detecting,700,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:734,Safety,Detect,Detecting,734,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:831,Safety,Detect,Detecting,831,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:864,Safety,Detect,Detecting,864,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:904,Safety,Detect,Detecting,904,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:940,Safety,Detect,Detecting,940,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1042,Safety,Detect,Detecting,1042,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1077,Safety,Detect,Detecting,1077,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1172,Safety,Detect,Detected,1172,"oject %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8549,Safety,detect,detected,8549,": /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9198,Safety,detect,detection,9198,"OMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Per",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11908,Security,hash,hash-style,11908,"nd_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_afterimage builtin_clang builtin_cling builtin_ftgl builtin_gl2ps builtin_glew builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_vdt builtin_xrootd clad dataframe exceptions fftw3 gdml http imt mathmore mlp minuit2 mysql opengl pyroot roofit webgui root7 rpath runtime_cxxmodules shared sqlite ssl tmva tmva-cpu tmva-pymva spectrum vdt x11 xml xrootd; -- Configuring done; -- Generating done; -- Build files have been written to: /home/razorr/Softwares/Installed/HEP/Root/build; ```. </details>. `$ cmake --build . --target install -- -j4`; <details>; <summary>truncated output</summary>. ``` ; [ 75%] Building CXX object core/clingutils/CMakeFiles/ClingUtils.dir/src/TClingUtils.cxx.o; [ 75%] Built target Dictgen; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:30785,Security,hash,hash-style,30785,"ake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ```; 3. `cat /etc/*release`; ```sh; DISTRIB_ID=""Arch""; DISTRIB_RELEASE=""rolling""; DISTRIB_DESCRIPTION=""Arch Linux""; NAME=""Arch Linux""; PRETTY_NAME=""Arch Linux""; ID=arch; BUILD_ID=rolling; ANSI_COLOR=""38;2;23;147;209""; HOME_URL=""https://arch",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1640,Testability,Test,Test,1640,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1684,Testability,Test,Test,1684,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1762,Testability,Test,Test,1762,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:1804,Testability,Test,Test,1804,"r ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -DNDEBUG'); -- Compiler Flags: -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; -- ROOT default compression algorithm: zlib; -- PyROOT will be built for versions 3.10.4 (Main) and 2.7.18; -- Looking for ZLib; -- Found ZLIB: /usr/lib/libz.so (found version ""1.2.12""); -- Looking for nlohmann/json.hpp; -- nlohmann/json.hpp not found. Switching on builtin_nlohmannjson option; -- Looking for Freetype; -- Found Freetype: /usr/lib/libfreetype.so (found version ""2.12.1""); -- Looking for PCRE; -- Found PCRE: /usr/include (found version ""8.45""); -- Looking for LZMA; -- Looking for lzma_auto_decoder in /usr/lib/liblzma.so; -- Looking for lzma_auto_decoder in /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8130,Testability,Test,Test,8130,"eing switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:8184,Testability,Test,Test,8184,"eing switching ON 'builtin_ftgl' option; -- Checking for module 'davix>=0.6.4'; -- Package 'davix', required by 'virtual:world', not found; -- Looking for uuid_generate_random in uuid; -- Looking for uuid_generate_random in uuid - found; -- Found libuuid: /usr/include; -- Davix dependencies not found, switching OFF 'davix' option.; -- Looking for TBB; -- Found TBB: /usr (Required is at least version ""2018""); -- Looking for VDT; -- Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; -- Switching ON 'builtin_vdt' option; -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for sgemm_; -- Looking for sgemm_ - not found; -- Looking for sgemm_; -- Looking for sgemm_ - found; -- Found BLAS: /usr/lib/libblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9673,Testability,Test,Test,9673,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9710,Testability,Test,Test,9710,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9757,Testability,Test,Test,9757,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9803,Testability,Test,Test,9803,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9859,Testability,Test,Test,9859,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9909,Testability,Test,Test,9909,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:9969,Testability,Test,Test,9969,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10020,Testability,Test,Test,10020,"on module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /usr/bin/python3.10 (found version ""3.10.4""); -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- Targeting X86; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10170,Testability,Test,Test,10170,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10214,Testability,Test,Test,10214,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10267,Testability,Test,Test,10267,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10303,Testability,Test,Test,10303,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10349,Testability,Test,Test,10349,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10389,Testability,Test,Test,10389,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10439,Testability,Test,Test,10439,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10481,Testability,Test,Test,10481,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10532,Testability,Test,Test,10532,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10581,Testability,Test,Test,10581,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10640,Testability,Test,Test,10640,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10675,Testability,Test,Test,10675,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10720,Testability,Test,Test,10720,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10756,Testability,Test,Test,10756,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10802,Testability,Test,Test,10802,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10845,Testability,Test,Test,10845,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10898,Testability,Test,Test,10898,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:10948,Testability,Test,Test,10948,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11008,Testability,Test,Test,11008,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11057,Testability,Test,Test,11057,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11116,Testability,Test,Test,11116,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:11169,Testability,Test,Test,11169,HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Success; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/razorr/Softwares/Installed/HEP/Root/gitclone/build/unix/compiledata.sh; Making /home/razorr/Softwares/Installed/HEP/Root/build/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.15.37-1-lts; Processor 2 core Intel(R) Core(TM) i3-5010U CPU @ 2.10GHz (x86_64); Build type Release; Install path /home/razorr/Softwares/Installed/HEP/Root/install; Compiler GNU 11.2.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32215,Testability,LOG,LOGO,32215,"t yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ```; 3. `cat /etc/*release`; ```sh; DISTRIB_ID=""Arch""; DISTRIB_RELEASE=""rolling""; DISTRIB_DESCRIPTION=""Arch Linux""; NAME=""Arch Linux""; PRETTY_NAME=""Arch Linux""; ID=arch; BUILD_ID=rolling; ANSI_COLOR=""38;2;23;147;209""; HOME_URL=""https://archlinux.org/""; DOCUMENTATION_URL=""https://wiki.archlinux.org/""; SUPPORT_URL=""https://bbs.archlinux.org/""; BUG_REPORT_URL=""https://bugs.archlinux.org/""; LOGO=archlinux-logo; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:32230,Testability,log,logo,32230,"t yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-bootstrap --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --with-linker-hash-style=gnu --with-system-zlib --enable-__cxa_atexit --enable-cet=auto --enable-checking=release --enable-clocale=gnu --enable-default-pie --enable-default-ssp --enable-gnu-indirect-function --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-multilib --enable-plugin --enable-shared --enable-threads=posix --disable-libssp --disable-libstdcxx-pch --disable-werror --with-build-config=bootstrap-lto --enable-link-serialization=1 gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 11.2.0 (GCC); ```; 2. `clang -v`; ```sh; clang version 13.0.1; Target: x86_64-pc-linux-gnu; Thread model: posix; InstalledDir: /usr/bin; Found candidate GCC installation: /usr/bin/../lib/gcc/x86_64-pc-linux-gnu/11.2.0; Found candidate GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Selected GCC installation: /usr/bin/../lib64/gcc/x86_64-pc-linux-gnu/11.2.0; Candidate multilib: .;@m64; Candidate multilib: 32;@m32; Selected multilib: .;@m64; ```; 3. `cat /etc/*release`; ```sh; DISTRIB_ID=""Arch""; DISTRIB_RELEASE=""rolling""; DISTRIB_DESCRIPTION=""Arch Linux""; NAME=""Arch Linux""; PRETTY_NAME=""Arch Linux""; ID=arch; BUILD_ID=rolling; ANSI_COLOR=""38;2;23;147;209""; HOME_URL=""https://archlinux.org/""; DOCUMENTATION_URL=""https://wiki.archlinux.org/""; SUPPORT_URL=""https://bbs.archlinux.org/""; BUG_REPORT_URL=""https://bugs.archlinux.org/""; LOGO=archlinux-logo; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:396,Usability,clear,clear,396,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; Yes. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root fails to build in Arch Linux.; `$ cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; <details>; <summary>output</summary>. ```; -- The C compiler identification is GNU 11.2.0; -- The CXX compiler identification is GNU 11.2.0; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found Git: /usr/bin/git (found version ""2.36.0""); -- Detected ROOT_VERSION 6.27.01; -- Checking internet connectivity...; -- Yes; -- Looking for Python; -- Found Python3: /usr/bin/python3.10 (found version ""3.10.4"") found components: Interpreter Development NumPy Development.Module Development.Embed; -- Could NOT find Python2 (missing: Python2_NumPy_INCLUDE_DIRS NumPy) (found version ""2.7.18""); -- Found GCC. Major version 11, minor version 2; -- Looking for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success; -- Found Threads: TRUE; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Success; -- ROOT Platform: linux; -- ROOT Compiler: GNU 11.2.0; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = '-O3 -",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/issues/10528:29463,Usability,clear,clear,29463,"d from /home/razorr/Softwares/Installed/HEP/Root/build/include/Rtypes.h:195:; /home/razorr/Softwares/Installed/HEP/Root/build/etc/cling/std.modulemap:442:12: error: header 'bits/utility.h' not found; header ""bits/utility.h""; ^; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/ostream_insert.h:37:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/exception_defines.h>; ^; fatal error: too many errors emitted, stopping now [-ferror-limit=]; Error: Error loading the default rootcling header files.; make[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; make[1]: *** [CMakeFiles/Makefile2:24008: core/CMakeFiles/G__Core.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [ 75%] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TClingValue.cxx.o; [ 75%] Built target MetaCling; make: *** [Makefile:156: all] Error 2. ```. </details>. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Root builds without any errors. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. `mkdir -p HEP/root`; 2. `cd HEP/root`; 3. `mkdir build install`; 4. `git clone --depth=1 https://github.com/root-project/root gitclone`; 5. `cd build`; 6. `cmake -DCMAKE_INSTALL_PREFIX=../install ../gitclone`; 7. `cmake --build . --target install -- -j4`. ### Setup; <!--; 1. ROOT version; 8. Operating system; 9. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->; 1. `gcc -v`; ```sh; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/11.2.0/lto-wrapper; Target",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10528
https://github.com/root-project/root/pull/10531:208,Energy Efficiency,allocate,allocated,208,"This PR fixes allows to use external gradient (for example computed with CLAD in TFormula) in the GSLMultiFit algorithm. ; A fix is applied also in TF1::GradientPar where in case of CLAD gradient a vector is allocated for storing the gradient. Using an external pointer, for example coming from GSL has shown to be problematic.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10531
https://github.com/root-project/root/pull/10532:116,Deployability,update,update,116,"The standard `bool`, `true`, and `false` have been used in new RooFit; code for a few years now, and it's better to update also the old code; for consistency. This helps also for doxygen, when the a function with; one way of specifying the boolean is referenced by a signature that uses; the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10532
https://github.com/root-project/root/issues/10533:952,Availability,down,download,952,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:934,Deployability,install,install,934,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10533:489,Usability,clear,clear,489,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10533
https://github.com/root-project/root/issues/10538:1936,Availability,down,download,1936,"for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1918,Deployability,install,install,1918,"for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:2093,Deployability,release,release,2093,"for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10538:1107,Usability,clear,clear,1107,"); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I tried to create ""additional"" datasets for one RooFit sample. They do not show up in the XML file (and it seems also not in the root file of the model). When discussing this with @cburgard , we found that the `fAdditionalData` member of `Channel` [is supposed to hold additional datasets to be added to the XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/inc/RooStats/HistFactory/Channel.h#L96), but [is never used in `Channel::XML](https://github.com/root-project/root/blob/c8d49336b666355553879aea9448f7e9588ecb5e/roofit/histfactory/src/Channel.cxx#L105). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The additional datasets also get exported to XML/rootfile/etc.; ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Add an additional data sample to a workspace, save it. I have modified one of the python examples so that it should reproduce this issue.; It was first discovered in our analysis framework.; [histfactoryxmlexport.py.txt](https://github.com/root-project/root/files/8641363/histfactoryxmlexport.py.txt). ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Both with ROOT 6.20/06 from `AnalysisBase,21.2.204` and ROOT 6.24/06 from [LCG_101_ATLAS_20](https://lcginfo.cern.ch/release/101_ATLAS_20/); ### A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10538
https://github.com/root-project/root/issues/10539:478,Availability,down,downloads,478,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:833,Availability,Down,Download,833,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:1154,Availability,down,download,1154,"AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/root-v6.26.02-headers.txt); [root-headers-diff.txt](https://github.com/root-project/root/files/8646803/root-headers-diff.txt)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:786,Deployability,install,installed,786,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:805,Deployability,install,install,805,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:850,Deployability,release,release,850,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/issues/10539:881,Deployability,install,install,881,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Description. Files TXNetFile.h, TXNetFileStager.h, and TXNetSystem.h are missing in pre-built ROOT v6.26.02 from downloads. I tried to build ROOT from both 6.24.06 and 6.26.02 git tags using exactly the same CMake flags and found that TXNetFile.h and two others are missing in 6.26.02 again. ### Expected behavior; The files enumerated above should be included in the pre-build ROOT archive, and also should be built and installed by `make install`. ### To Reproduce; Download 6.26.02 release from https://root.cern/install/all_releases/ then call (all files are attached below). `tar tzf root_v6.26.02.Linux-ubuntu20-x86_64-gcc9.4.tar.gz root/include | grep /TXNet`. it prints nothing. ### Setup; 1. ROOT version: 6.26.02; 2. Operating system: Ubuntu 20; 3. How you obtained ROOT: binary download and also built it. ### Additional context; <!--; Add any other context about the problem here.; -->; you may also notice that the headers list for 6.26.02 is considerably shorter:; ```; $ wc -l root-v6.24.06-headers.txt root-v6.26.02-headers.txt; 2970 root-v6.24.06-headers.txt; 2840 root-v6.26.02-headers.txt; ```; Headers included in 6.24.06 but missing in 6.26.02:; ```; $ diff -u root-v6.24.06-headers.txt root-v6.26.02-headers.txt > root-headers-diff.txt; $ grep -c '^-\./' root-headers-diff.txt ; 238; ```; Headers missing in 6.24.06 but included in 6.26.02:; ```; $ grep -c '^+\./' root-headers-diff.txt ; 108; ```; Thank you!; ### Attachments; [root-v6.24.06-headers.txt](https://github.com/root-project/root/files/8646800/root-v6.24.06-headers.txt); [root-v6.26.02-headers.txt](https://github.com/root-project/root/files/8646801/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10539
https://github.com/root-project/root/pull/10543:89,Testability,test,test,89,"...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10543:170,Testability,test,test,170,"...because we'd only redefine the _nominal_ value, which would be extremely confusing. A test for this case will soon be added as part of a general improvement to Vary's test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10543
https://github.com/root-project/root/pull/10544:85,Availability,down,downcasting,85,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:245,Deployability,patch,patch,245,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/pull/10544:502,Testability,test,test,502,"When previous node of a RRange or RFilter node was a RJittedFilter,; we were wrongly downcasting _varied_ filters to the RJittedFilter type,; but varied filters are _not_ jitted filters, they are copies of the; actual concrete filter. With this patch, if the type of the previous node is RJittedFilter,; we treat it everywhere as the generic base class RFilterBase, which; fixes the problem and it is consistent with what we already do in; RVariedAction. The PR comes with the corresponding regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10544
https://github.com/root-project/root/issues/10545:354,Availability,error,error,354,"`Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:; ```cpp; auto h = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); .Vary(; ""x"",; [](int x) {; return ROOT::RVecI{x - 1, x + 1};; },; {""x""}, 2); .Stats<int>(""x"");; ROOT::RDF::Experimental::VariationsFor(h); // logic error:; // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/issues/10545:348,Testability,log,logic,348,"`Stats` RDF action should accepts systematic variations, but currently does not. Minimal reproducer:; ```cpp; auto h = ROOT::RDataFrame(10); .Define(""x"", [](ULong64_t e) { return int(e); }, {""rdfentry_""}); .Vary(; ""x"",; [](int x) {; return ROOT::RVecI{x - 1, x + 1};; },; {""x""}, 2); .Stats<int>(""x"");; ROOT::RDF::Experimental::VariationsFor(h); // logic error:; // The MakeNew method is not implemented for this action helper (TStatistic<BR/>). Cannot Vary its result.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10545
https://github.com/root-project/root/pull/10546:345,Deployability,update,updated,345,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:88,Integrability,message,message,88,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:426,Safety,avoid,avoid,426,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/pull/10546:96,Testability,log,logger,96,"This is done make the life of the developer easier when passing `nullptr` to the RooFit message logger. After all, just `nullptr` is much less verbose than the modern C++ code that had to be used so far (`static_cast<TObject*>(nullptr)`). It also often confused new contributors why `nullptr` could not be passed directly. All existing code was updated to not do the explicit casting to `TObject*` anymore. With this, we also avoid a lot of C-style casts in RooFit code. More info in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10546
https://github.com/root-project/root/issues/10548:617,Availability,error,error,617,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1351,Availability,error,error,1351,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1414,Availability,Error,Error,1414,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1453,Availability,Error,Error,1453,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/issues/10548:1520,Safety,abort,aborted,1520,"### Describe the bug. On Mac ARM we get (found by René):. ```; sftnight@macphsft26 build % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern/ |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on May 09 2022, 11:42:50 |; | From heads/master@v6-25-02-1202-g8dc4bc40fb |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_9:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; libc++abi: terminating with uncaught exception of type cling::CompilationException; sftnight@macphsft26 build %; ```. ### Expected behavior; ```; % root; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on May 09 2022, 05:37:55 |; | From heads/master@v6-25-02-1201-g797bb5dce1 |; | With Apple clang version 13.1.6 (clang-1316.0.21.2.3) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] whatever; input_line_13:2:3: error: use of undeclared identifier 'whatever'; (whatever); ^; Error in <HandleInterpreterException>: Error evaluating expression (whatever); Execution of your code was aborted.; root [1] ; ```; ### To Reproduce; Type something unknown at the ROOT prompt. ### Setup; MacOS, ARM1 machine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10548
https://github.com/root-project/root/pull/10550:390,Safety,avoid,avoids,390,"The `RooAbsPdf::_normSet` member should be not used, because it can; happen in many situations that the RooArgSet it points to gets out of; scope and then you get a crash. There were several cases reported on the; forum where this happened with a RooAddPdf recently, becaues with ROOT; 6.26 some logic of the RooAddPdf got changed to better deal with empty; normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf; directly, instead of `evaluate()`. This way, it has access to the actual; normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to; `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it; falls back to using `_copyOfLastNormSet`, which is guaranteed to still; be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:504,Security,access,access,504,"The `RooAbsPdf::_normSet` member should be not used, because it can; happen in many situations that the RooArgSet it points to gets out of; scope and then you get a crash. There were several cases reported on the; forum where this happened with a RooAddPdf recently, becaues with ROOT; 6.26 some logic of the RooAddPdf got changed to better deal with empty; normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf; directly, instead of `evaluate()`. This way, it has access to the actual; normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to; `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it; falls back to using `_copyOfLastNormSet`, which is guaranteed to still; be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10550:296,Testability,log,logic,296,"The `RooAbsPdf::_normSet` member should be not used, because it can; happen in many situations that the RooArgSet it points to gets out of; scope and then you get a crash. There were several cases reported on the; forum where this happened with a RooAddPdf recently, becaues with ROOT; 6.26 some logic of the RooAddPdf got changed to better deal with empty; normalization sets. This commit avoids using `_normSet` by overriding `getValV` in RooAddPdf; directly, instead of `evaluate()`. This way, it has access to the actual; normalization set that is passed to the call to `getVal()`. For the batch mode, we now pass `nullptr` to; `RooAddPdf::getNormAndCache()` instead of `_normSet`. In this case it; falls back to using `_copyOfLastNormSet`, which is guaranteed to still; be valid because it's a unique_ptr owned by the RooAddPdf itself. Needs to be backported to ROOT 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10550
https://github.com/root-project/root/pull/10554:83,Deployability,patch,patches,83,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10516; 2. https://github.com/root-project/root/pull/10525; 3. https://github.com/root-project/root/pull/10550",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10554
https://github.com/root-project/root/pull/10555:27,Deployability,patch,patch,27,# This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the; validation of private modulemaps fails due to a change in layout. This; change disables the check when DisablePCHValidation is active. See these bug reports:; * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5; * https://github.com/conda-forge/root-feedstock/issues/149; * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:571,Deployability,update,updated,571,# This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the; validation of private modulemaps fails due to a change in layout. This; change disables the check when DisablePCHValidation is active. See these bug reports:; * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5; * https://github.com/conda-forge/root-feedstock/issues/149; * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:147,Security,validat,validation,147,# This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the; validation of private modulemaps fails due to a change in layout. This; change disables the check when DisablePCHValidation is active. See these bug reports:; * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5; * https://github.com/conda-forge/root-feedstock/issues/149; * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/pull/10555:541,Testability,test,tested,541,# This Pull request:. This patch was proposed by @vgvassilev on mattermost. When building with a macOS SDK before 12.0 and running with 12.0+ the; validation of private modulemaps fails due to a change in layout. This; change disables the check when DisablePCHValidation is active. See these bug reports:; * https://root-forum.cern.ch/t/conda-root-and-macos-12-reprise/49135/5; * https://github.com/conda-forge/root-feedstock/issues/149; * https://github.com/conda-forge/root-feedstock/issues/167. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10555
https://github.com/root-project/root/issues/10556:470,Availability,ERROR,ERROR,470,"As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh; $ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ------------------------------------------------------------------; | Welcome to ROOT 6.26/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |; | From tags/v6-26-02@v6-26-02 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10556:282,Integrability,wrap,wrapper,282,"As mentioned [here](https://github.com/root-project/root/commit/24a1193e66b2499940fb581acf0144228bfdcd6e#diff-e181029772a3e9aeffcda7614c4b0b4af48d409768e3c48b8077f245a78f38c9R200-R204) in some setups the compiler is actually a symlink to `ccache`. When ROOT is compiled with such a wrapper, it stores `ccache` as the compiler in `compiledata.h` (with `#define CLING_CXX_RLTV ""ccache ""`) and then ROOT cannot figure out compiler include paths at runtime:. ```sh; $ root; ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths!; Invoking:; LC_ALL=C ccache -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++/p' -e '}'; Results was:; With exit code 0; ------------------------------------------------------------------; | Welcome to ROOT 6.26/02 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 12 2022, 16:28:03 |; | From tags/v6-26-02@v6-26-02 |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10556
https://github.com/root-project/root/issues/10557:955,Modifiability,variab,variable,955,"### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:; ```C++; model.createChi2(data);; RooChi2Var{""chi2"", ""chi2"", model, data};; ```. ### To Reproduce. ```C++; void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;; RooRealVar mean(""mean"",""mean"",5, 0, 10) ;; RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);; RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2; std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};; // Create chi2 variable directoy via constructor; RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results!; chi21->Print();; chi22.Print();. auto minimize = [](RooAbsReal& real){; RooMinimizer m(real);; m.setPrintLevel(-1);; m.migrad();; m.hesse();; std::unique_ptr<RooFitResult> r{m.save()};; r->Print();; };. // Even the minimization results are different, also when correctly; // resetting the fit parameters in between fits.; minimize(*chi21);; mean.setVal(5);; sigma.setVal(0.5);; mean.setError(0.0);; sigma.setError(0.0);; minimize(chi22);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10557:1065,Modifiability,variab,variable,1065,"### Describe the bug. The seemingly equivalent `RooAbsPdf::createChi2()` and `RooChi2Var::RooChi2Var()` for creating a chi2 function don't return the same function. Even the fit results when using these chi2 functions in the Minimization are different. One of them must have a bug, or at least they behave inconsistently which they should not. ### Expected behavior. The function returned by `RooAbsPdf::createChi2()` without any extra arguments should be equivalent to a `RooChi2Var` created without any extra arguments, e.g. these two should be equivalent:; ```C++; model.createChi2(data);; RooChi2Var{""chi2"", ""chi2"", model, data};; ```. ### To Reproduce. ```C++; void chi2varIssue() {. RooRealVar x(""x"",""x"",0,10) ;; RooRealVar mean(""mean"",""mean"",5, 0, 10) ;; RooRealVar sigma(""sigma"",""sigma"",0.5, 0.1, 10);. RooGaussian gauss(""gauss"",""gauss"",x,mean,sigma);. RooDataSet* d = gauss.generate(x,10000);; RooDataHist* dh = d->binnedClone();. // Create chi2 variable via RooAbsPdf::createChi2; std::unique_ptr<RooAbsReal> chi21{gauss.createChi2(*dh)};; // Create chi2 variable directoy via constructor; RooChi2Var chi22{""chi2"", ""chi2"", gauss, *dh};. // They give inconsistent results!; chi21->Print();; chi22.Print();. auto minimize = [](RooAbsReal& real){; RooMinimizer m(real);; m.setPrintLevel(-1);; m.migrad();; m.hesse();; std::unique_ptr<RooFitResult> r{m.save()};; r->Print();; };. // Even the minimization results are different, also when correctly; // resetting the fit parameters in between fits.; minimize(*chi21);; mean.setVal(5);; sigma.setVal(0.5);; mean.setError(0.0);; sigma.setError(0.0);; minimize(chi22);; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10557
https://github.com/root-project/root/issues/10559:110,Deployability,update,update,110,"RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```; 20220511/094820 At:100 N=104 TFile ; 20320223/050248 At:204 N=68423 CX = -11523.26 ; 20531200/160357 At:68627 N=14215937 CX = -24.78 ; 20531200/160357 At:14284564 N=1 END ; ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/issues/10559:384,Usability,usab,usable,384,"RNTuple's minifile writer seems to create subtly corrupted ROOT files. If such a file is opened by `TFile` in update mode and reopened for reading, the map reads like. ```; 20220511/094820 At:100 N=104 TFile ; 20320223/050248 At:204 N=68423 CX = -11523.26 ; 20531200/160357 At:68627 N=14215937 CX = -24.78 ; 20531200/160357 At:14284564 N=1 END ; ```. On first sight, the file remains usable/readable though.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10559
https://github.com/root-project/root/pull/10560:99,Integrability,depend,dependency,99,"This class is not really needed, we can use free functions instead. This removes an implicit inter-dependency between the head node and the backend. Now it's only the head node that stores a reference to the backend needed to execute the graph, similarly to RLoopManager",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10560
https://github.com/root-project/root/pull/10562:630,Deployability,configurat,configuration,630,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:877,Deployability,configurat,configuration,877,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:972,Deployability,Configurat,Configuration,972,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:630,Modifiability,config,configuration,630,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:877,Modifiability,config,configuration,877,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:972,Modifiability,Config,Configuration,972,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:412,Performance,optimiz,optimization,412,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10562:388,Testability,test,tested,388,"In a binned likelihood fit, it is possible to skip the PDF normalization; when the unnormalized binned PDF can be interpreted directly in terms of; event yields. This is now done by default for models HistFactory models,; which results in great speedups for binned fits with many channels. Some; RooFit users like ATLAS were already using this for a long time, so this; feature is battle-tested. To disable this optimization when using the `hist2workspace` executable,; add the `-disable_binned_fit_optimization` command line argument.; Directly in C++, you can also set the `binnedFitOptimization` to `false`; in the HistFactory configuration as follows:; ```C++; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, {.binnedFitOptimization=false});; ```; If your compiler doesn't support aggregate initialization with designators, you; need to create and edit the configuration struct explicitely:; ```C++; RooStats::HistFactory::HistoToWorkspaceFactoryFast::Configuration hfCfg;; hfCfg.binnedFitOptimization = false;; RooStats::HistFactory::MakeModelAndMeasurementFast(measurement, hfCfg);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10562
https://github.com/root-project/root/pull/10566:472,Availability,error,error,472,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:501,Availability,error,errors,501,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:677,Availability,error,error,677,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1009,Deployability,configurat,configuration,1009,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:818,Integrability,interface,interface,818,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:960,Integrability,interface,interface,960,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:1009,Modifiability,config,configuration,1009,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10566:282,Testability,test,test,282,"In the RooChi2Var, there was another case of inconsistency between; constructors that seemingly do the same but actually don't. A RooChi2Var should be created with the constructors that take RooFit; command arguments. However, there were also other constructors used by; the RooFit test statistic implementation details (i.e. in; `RooAbsOptTestStatistic::create`) that when used with default aruments; behave inconsistently with the command arg constructors: the default; error type is different, and errors will be estimated from the pdf and; not from the data. This lead to the confusing situation that when creates a `RooChi2Var`; without any command arguments, the default error mode is suddenly; different. This inconsistency should be removed by having only the; command argument constructors part of the public interface. Making these constructors private should not be a problem. There were; already considered implementaiton details before, and their interface; was already changed anyway to use the configuration structs in 6.26.; Nobody has complained about that so far. Closes #10557.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10566
https://github.com/root-project/root/pull/10568:307,Deployability,update,updated,307,# This Pull request:; ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/pull/10568:277,Testability,test,tested,277,# This Pull request:; ## Changes or fixes:. Fix typo that was introduced somehow in this commit https://github.com/root-project/root/commit/2b2d5b0eeabf16e066afc74977bcdf2d0555ca59#diff-0c661946530c21785a5dc0df61c398cfacd526ab455b2acd7b9dc761e7b99bdfR275. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10568
https://github.com/root-project/root/issues/10572:4380,Availability,down,download,4380,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:4362,Deployability,install,install,4362,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:496,Modifiability,variab,variables,496,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:589,Modifiability,variab,variable,589,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:641,Modifiability,variab,variable,641,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1234,Modifiability,variab,variable,1234,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1287,Modifiability,variab,variable,1287,"o the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1507,Modifiability,variab,variable,1507,"unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1558,Modifiability,variab,variable,1558,"unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] B",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1752,Modifiability,variab,variable,1752,"oolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedStrin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1804,Modifiability,variab,variable,1804,"oolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedStrin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1930,Modifiability,variab,variable,1930,"odeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:1982,Modifiability,variab,variable,1982,"odeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2205,Modifiability,variab,variable,2205,"sed-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2261,Modifiability,variab,variable,2261,"sed-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2388,Modifiability,variab,variable,2388,"rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2443,Modifiability,variab,variable,2443,"rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warn",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2688,Modifiability,variab,variable,2688,"d' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:2743,Modifiability,variab,variable,2743,"d' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; 2 warnings generated.; [8316/9530] Building CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3025,Modifiability,variab,variable,3025,"lding CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3078,Modifiability,variab,variable,3078,"lding CXX object gui/gui/CMakeFiles/Gui.dir/src/TGView.cxx.o; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:36: warning: variable 'cpyheight' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally somethin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3240,Modifiability,variab,variable,3240,"est, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3293,Modifiability,variab,variable,3293,"est, cpyheight, cpywidth;; ^; /Users/rdm/rootsrc/gui/gui/src/TGView.cxx:467:47: warning: variable 'cpywidth' set but not used [-Wunused-but-set-variable]; Int_t xsrc, ysrc, xdest, ydest, cpyheight, cpywidth;; ^; 2 warnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3455,Modifiability,variab,variable,3455,"arnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3508,Modifiability,variab,variable,3508,"arnings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3670,Modifiability,variab,variable,3670,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3723,Modifiability,variab,variable,3723,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:391,Usability,clear,clear,391,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Number of compiler warnings on unused variables on macOS:. ```; /Users/rdm/rootsrc/core/unix/src/TUnixSystem.cxx:4967:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable]; vm_size_t vsize, vprvt, rsize, size;; ^; 1 warning generated.; [6852/9530] Linking CXX static library lib/libclingUtils.a; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib: file: lib/libclingUtils.a(PlatformWin.cpp.o) has no symbols; [8118/9530] Building CXX object proof/proof/CMakeFiles/Proof.dir/src/TProof.cxx.o; /Users/rdm/rootsrc/proof/proof/src/TProof.cxx:1047:11: warning: variable 'cpuPin' set but not used [-Wunused-but-set-variable]; Bool_t cpuPin = kFALSE;; ^; 1 warning generated.; [8195/9530] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; /Users/rdm/rootsrc/graf2d/asimage/src/TASImage.cxx:2200:13: warning: variable 'disp' set but not used [-Wunused-but-set-variable]; Display *disp;; ^; 1 warning generated.; [8199/9530] Building CXX object graf2d/gpad/CMakeFiles/Gpad.dir/src/TPad.cxx.o; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:34: warning: variable 'pxold' set but not used [-Wunused-but-set-variable]; Int_t pxmin,pxmax,pymin,pymax,pxold,pyold,px,py;; ^; /Users/rdm/rootsrc/graf2d/gpad/src/TPad.cxx:1535:40: warning: variable 'pyold' set but not used [-Wunused-but-set-variable]; Int_t px",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/issues/10572:3875,Usability,clear,clear,3875,"nings generated.; [8479/9530] Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ^; 1 warning generated.; [8627/9530] Building CXX object gui/fitpanel/CMakeFiles/FitPanel.dir/src/TFitEditor.cxx.o; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:26: warning: variable 'py1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:34: warning: variable 'px2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:42: warning: variable 'py2old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; /Users/rdm/rootsrc/gui/fitpanel/src/TFitEditor.cxx:2806:18: warning: variable 'px1old' set but not used [-Wunused-but-set-variable]; static Int_t px1old, py1old, px2old, py2old; // to remember the square drawn.; ^; 4 warnings generated.; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No warnings. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile on macOS with Cocoa. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. Current master. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10572
https://github.com/root-project/root/pull/10574:479,Deployability,update,updated,479,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:56,Modifiability,variab,variables,56,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:271,Modifiability,variab,variable,271,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:326,Modifiability,variab,variable,326,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10574:449,Testability,test,tested,449,"# This Pull request:. ## Changes or fixes:; some unused variables warnings in MacOs cocoa. I not sure how to fix this one:; ```; Building CXX object graf2d/cocoa/CMakeFiles/GCocoa.dir/src/MenuLoader.mm.o; /Users/rdm/rootsrc/graf2d/cocoa/src/MenuLoader.mm:92:16: warning: variable 'menuItem' set but not used [-Wunused-but-set-variable]; NSMenuItem *menuItem = [aMenu addItemWithTitle : NSLocalizedString(@""Minimize"", nil); ```. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/10572",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10574
https://github.com/root-project/root/pull/10576:654,Deployability,update,updated,654,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues; 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. ; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:109,Safety,avoid,avoid,109,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues; 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. ; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/pull/10576:624,Testability,test,tested,624,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. ## Changes or fixes:. Profiling geometry building in CMSSW turned up two issues; 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2. ; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. . This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10576
https://github.com/root-project/root/issues/10577:748,Integrability,depend,depend,748,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1046,Integrability,depend,depend,1046,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:631,Performance,cache,cache,631,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:213,Testability,test,test,213,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:554,Testability,test,test,554,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:887,Testability,test,test,887,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:937,Testability,test,test,937,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10577:1128,Testability,test,test,1128,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10577
https://github.com/root-project/root/issues/10578:49,Availability,error,error,49,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:138,Availability,down,download-XROOTD,138,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:221,Availability,down,downloaded,221,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:294,Deployability,update,updated,294,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:72,Security,hash,hash,72,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:179,Security,hash,hash,179,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/issues/10578:264,Security,hash,hash,264,"When building root from source, I encountered an error that the SHA-256 hash in root_build/builtins/xrootd/XROOTD-prefix/src/XROOTD-stamp/download-XROOTD.cmake does not match the hash of the latest (5.4.2) version of the downloaded file. Most likely the hardcoded hash in this file needs to be updated.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10578
https://github.com/root-project/root/pull/10581:2281,Safety,avoid,avoid,2281,"dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with; the implicit `const char*` conversion we get a dangling pointer to the; TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10581:2417,Safety,avoid,avoid,2417,"dangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~^~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:789:30: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 789 | PDB(kDraw,1) Info(""SlaveBegin"", ""original object '%s' not found""; | ~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; 790 | "" or it is not a histogram"", objname);; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:784:60: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 784 | TH1 *hist = dynamic_cast<TH1*> (fInput->FindObject(objname));; | ~~~~~~~~~~~~~~~~~~^~~~~~~~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~; root/proof/proofplayer/src/TProofDraw.cxx:783:38: warning: dangling pointer to an unnamed temporary may be used [-Wdangling-pointer=]; 783 | if (objname && strlen(objname) > 0 && strcmp(objname, ""htemp"")) {; | ~~~~~~~~~~~~~~~~^~~; root/proof/proofplayer/src/TProofDraw.cxx:782:62: note: unnamed temporary defined here; 782 | const char *objname = fTreeDrawArgsParser.GetObjectName();; ```. Indeed, `GetObjectName()` returns a temporary `TString` here, and with; the implicit `const char*` conversion we get a dangling pointer to the; TString data. If we avoid the copy in `GetObjectName()` and company such that a `const&` is returned, we not only fix the dangling pointer problem but also avoid an unnecessary copy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10581
https://github.com/root-project/root/pull/10582:123,Availability,error,errors,123,"The logic in `TDecompLU` where a separate `bool` was tracking if a given; pointer should be ""deleted"" caused some compiler errors warnings like:. ```; root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:; root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]; 883 | delete [] pWorkd;; | ^~~~~~; root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here; 847 | Double_t workd[kWorkMax];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10582:4,Testability,log,logic,4,"The logic in `TDecompLU` where a separate `bool` was tracking if a given; pointer should be ""deleted"" caused some compiler errors warnings like:. ```; root/math/matrix/src/TDecompLU.cxx: In static member function ‘static Bool_t TDecompLU::InvertLU(TMatrixD&, Double_t, Double_t*)’:; root/math/matrix/src/TDecompLU.cxx:883:17: warning: ‘void operator delete [](void*)’ called on unallocated object ‘workd’ [-Wfree-nonheap-object]; 883 | delete [] pWorkd;; | ^~~~~~; root/src/root/math/matrix/src/TDecompLU.cxx:847:13: note: declared here; 847 | Double_t workd[kWorkMax];; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10582
https://github.com/root-project/root/pull/10585:27,Availability,down,downloading,27,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:39,Deployability,release,release,39,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:0,Security,hash,hashes,0,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/pull/10585:81,Security,secur,security,81,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10585
https://github.com/root-project/root/issues/10586:176,Performance,load,loading,176,"- [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process.; While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce; E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`; 2. Operating system: CentOS7; 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/issues/10586:449,Usability,user-friendly,user-friendly,449,"- [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process.; While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce; E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`; 2. Operating system: CentOS7; 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10586
https://github.com/root-project/root/pull/10588:178,Integrability,depend,depending,178,"- In matplolib one can use the ""Default X-Points"" feature to plot X/Y graphs: If one do not; specify the points in the x-axis, they will get the default values 0, 1, 2, 3, (etc. depending; on the length of the y-points). The matplotlib script will be:; ```; import matplotlib.pyplot as plt; import numpy as np; points = np.array([3, 8, 1, 10, 5, 7]); plt.plot(ypoints); plt. show(); ```; It is now possible to do the same with the ROOt TGraph:; ```; double y[6] = {3, 8, 1, 10, 5, 7};; auto g = new TGraph(6,y);; g->Draw();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10588
https://github.com/root-project/root/pull/10590:100,Integrability,depend,depend,100,"The RooBatchCompute library should not need to know about the data map; implementation. It does not depend on the architecture, and also there; are often incompatibilities when using `std::map` (or; `std::unordered_map`) with nvcc with the standard library headers on the; system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10590
https://github.com/root-project/root/pull/10592:91,Deployability,update,update,91,"The standard `double` was used in new RooFit code for a few years now,; and it's better to update also the old code for consistency. This helps; also for doxygen, when the a function with one way of specifying the; double is referenced by a signature that uses the other way.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10592
https://github.com/root-project/root/pull/10593:4,Availability,error,error,4,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:28,Performance,load,loadLibrary,28,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10593:439,Testability,test,tested,439,"The error occurs only when `loadLibrary()` is called with the argument `resolved = false`.; The const reference of lResolved in the statement `const std::string& canonicalLoadedLib = resolved ? libStem.str() : lResolved;` is a copy because the compiler insert the copy constructor and creates a temporary object. This is required, that the return type of libStem.str() and lResolved has the same value; type: prvalue. ## Checklist:. - [ ] tested changes locally. Related cling PR: https://github.com/root-project/cling/pull/455",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10593
https://github.com/root-project/root/pull/10594:419,Availability,error,error,419,"```; In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,; from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?; 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));; | ^~~~~~; | wmemcpy; gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1; ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10594:706,Availability,Error,Error,706,"```; In file included from /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/RModel.hxx:14,; from /builddir/build/BUILD/root-6.26.00/tmva/sofie/src/RModel.cxx:3:; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx: In member function 'void TMVA::Experimental::SOFIE::InitializedTensor::CastPersistentToShared()':; /builddir/build/BUILD/root-6.26.00/tmva/sofie/inc/TMVA/SOFIE_common.hxx:75:12: error: 'memcpy' is not a member of 'std'; did you mean 'wmemcpy'?; 75 | std::memcpy(tData.get(), fPersistentData,fSize * sizeof(float));; | ^~~~~~; | wmemcpy; gmake[2]: *** [tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/build.make:79: tmva/sofie/CMakeFiles/ROOTTMVASofie.dir/src/RModel.cxx.o] Error 1; ```. (cherry picked from commit 5c4c23d9d67bc35cabb0bff251de3e08914237c7). Backport of PR #10116 to fix the build with GCC 12.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10594
https://github.com/root-project/root/pull/10598:245,Availability,reliab,reliable,245,"The RooAbsMinimizerFcn object is copied by the fitter, so the; `_evalCounter` of the original object will never be increased. Hence,; `RooMinimizer::evalCount()` will always return zero, which is; unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests; to habe a second counter variable that is a member of the `RooMinimizer`; itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10598:308,Modifiability,variab,variable,308,"The RooAbsMinimizerFcn object is copied by the fitter, so the; `_evalCounter` of the original object will never be increased. Hence,; `RooMinimizer::evalCount()` will always return zero, which is; unexpected. To make `RooMinimizer::evalCount()` reliable again, this commit suggests; to habe a second counter variable that is a member of the `RooMinimizer`; itself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10598
https://github.com/root-project/root/pull/10602:467,Availability,avail,available,467,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:12,Deployability,patch,patch,12,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:392,Deployability,patch,patch,392,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:31,Testability,assert,assert,31,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/pull/10602:523,Testability,test,test,523,"Before this patch, in order to assert that the column type; returned by a Vary expression matched the type of the column we; always asked cling to provide a type id for the existing column; via TypeName2TypeID(GetColumnType(colName)). That failed if the; column had a type not known to the interpreter, e.g. because it; was Define'd and the expression returned a user-defined type. With this patch we use the typeid information coming from the; RDefine node if it is available, otherwise we try with cling. A corresponding test is coming soon in another PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10602
https://github.com/root-project/root/issues/10604:696,Availability,Error,Error,696,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:840,Deployability,install,installation,840,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:869,Deployability,install,installation,869,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:754,Integrability,message,message,754,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:799,Modifiability,variab,variable,799,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/issues/10604:1124,Safety,detect,detected,1124,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; I am trying to build Root (6.24.00_patches) against external XrootD that was built from a commit (`332967c` in my case).; However, ROOT complains that it can't find Xrootd:; ```; -- Looking for XROOTD; -- Found Xrootd version num: 20220304-332967c (setting -DROOTXRDVERS=20220304); -- Setting OLDPACK TRUE; CMake Error at cmake/modules/SearchInstalledSoftware.cmake:908 (message):; XROOTD not found. Set environment variable XRDSYS to point to your XROOTD; installation, or inlcude the installation of XROOTD in the; CMAKE_PREFIX_PATH. Alternatively, you can also enable the option; 'builtin_xrootd' to build XROOTD internally; Call Stack (most recent call first):; CMakeLists.txt:219 (include); ```. ### Expected behavior; XroodD should be detected. ### Additional context; In my case, the version of XrootD, as defined in `XrdVersion.hh` is `20220304-332967c` (date + commit ID, see [xrootd code](https://github.com/xrootd/xrootd/blob/master/genversion.sh#L193-L196)). Since it is not a dotted version, FindXROOTD [assumes](https://github.com/root-project/root/blob/master/cmake/modules/FindXROOTD.cmake#L47) that this is some old XrootD and uses the date part as a version. . One possible fix would be to look for `-` in version and use that as an indication of untagged version (same as if version is `unknown`, which is only used if XrootD couldn't use git to determine own version).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10604
https://github.com/root-project/root/pull/10605:138,Deployability,update,updated,138,# This Pull request:. ## Changes or fixes:; Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #10604,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:44,Safety,Detect,Detection,44,# This Pull request:. ## Changes or fixes:; Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #10604,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10605:108,Testability,test,tested,108,# This Pull request:. ## Changes or fixes:; Detection of XrootD built from git commit. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #10604,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10605
https://github.com/root-project/root/pull/10606:98,Testability,test,tested,98,This pull request replaces old uses of `std::runtime_error` by `RException`. ## Checklist:; - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10606
https://github.com/root-project/root/issues/10608:806,Modifiability,inherit,inheriting,806,"Continuing the matplotib investigation, I found out there is a kind of scatter plot ROOT cannot do in a straight forward way.; The matplotlib script is:. ```; import matplotlib.pyplot as plt; import numpy as np. x = np.random.randint(100, size=(100)); y = np.random.randint(100, size=(100)); colors = np.random.randint(100, size=(100)); sizes = 10 * np.random.randint(100, size=(100)). plt.scatter(x, y, c=colors, s=sizes, alpha=0.5, cmap='nipy_spectral'). plt.colorbar(). plt.show(); ```. And it gives this plot:. <img width=""538"" alt=""Screenshot 2022-05-18 at 17 19 17"" src=""https://user-images.githubusercontent.com/4697738/169078428-c311e8b2-3dd5-46ee-b079-74529cb2fc6d.png"">. With ROOT it can be done with an ad-hoc macro but that's quite some programming. Therefore I made a prototype of a new class inheriting from TGraph: TScatter. The script is:. ```; void scatter(); {; const int n = 100;; double x[n];; double y[n];; double c[n];; double s[n];. // Define four random data set; auto r = new TRandom();; for (int i=0; i<n; i++) {; x[i] = 100*r->Rndm(i);; y[i] = 100*r->Rndm(i);; c[i] = 900*r->Rndm(i);; s[i] = 1000*r->Rndm(i);; }. auto scat = new TScatter(n, x, y, c, s);; scat->Draw();; }; ```; And it gives:; <img width=""693"" alt=""Screenshot 2022-05-18 at 17 21 53"" src=""https://user-images.githubusercontent.com/4697738/169079349-e0958d09-1091-4049-8cf3-6cdb4dec6e82.png"">. Do you think that might be interesting to have ? @ferdymercury ? @lmoneta ? @linev ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10608
https://github.com/root-project/root/pull/10609:161,Testability,benchmark,benchmarking,161,Add the possibility to get the parameter values for each function; evaluation during the minimization. This is useful to get a consistent; minimization path for benchmarking.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10609
https://github.com/root-project/root/pull/10610:89,Modifiability,config,configurable,89,The direct creation of RooFit test statistics instances is discouraged; because the more configurable `createNLL` and `createChi2` should be; prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/pull/10610:30,Testability,test,test,30,The direct creation of RooFit test statistics instances is discouraged; because the more configurable `createNLL` and `createChi2` should be; prefered.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10610
https://github.com/root-project/root/issues/10611:770,Modifiability,rewrite,rewrite,770,"This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: ; `parent = parent.substr(0, posLastDot);`; to; `parent = parent.substr(0, posLastDotParent);`; will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.); For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:; `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:703,Testability,log,logic,703,"This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: ; `parent = parent.substr(0, posLastDot);`; to; `parent = parent.substr(0, posLastDotParent);`; will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.); For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:; `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/issues/10611:782,Testability,log,logic,782,"This is two bugs, really: . 1) Inside the ""do while"" loop at line 243 of TTreeReaderArray.cxx, the ""parent"" string never changes which results in the loop never exiting. Changing line 243 from: ; `parent = parent.substr(0, posLastDot);`; to; `parent = parent.substr(0, posLastDotParent);`; will restore the original intent of the code, I believe. 2) In the same loop as above, for leaf names that include ""."" characters, this loop will never properly find the correct leaf name to initialize the array size. (The change above in part 1 will not fix this.); For example: If my array is named something like: ""a.b.c[d.e.f]"" where ""a.b.c"" is the array name and ""d.e.f"" is the name of array length int, the logic in the loop will never find the correct leaf size. One could rewrite the logic such that every combination of characters in between "".""'s are tried, but this would be a bit complicated and cumbersome. Instead... Proposed change: Add an overloaded function call for TTreeReaderArray for the user to specify the array-length leaf name:; `TTreeReaderArray<float> myArr(treeReader, ""arrayLeafName"", ""arrayLengthLeafName"")`. With this, the code can attempt the user supplied array length name before it tries to search through the full leaf name for the appropriate combination.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10611
https://github.com/root-project/root/pull/10612:132,Availability,down,down,132,"More detail in the commit descriptions. This PR results in a big speedup for the batch mode, bringing the; runitme for stressRooFit down from 8 to 7 seconds for the CPU mode; (without the BatchMode, the stressRooFit suite takes 7.7 seconds to; run).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10612
https://github.com/root-project/root/pull/10613:83,Deployability,patch,patches,83,"This is a backport of all the RooFit PRs that were merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9956; 2. https://github.com/root-project/root/pull/10590; 3. https://github.com/root-project/root/pull/10612",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10613
https://github.com/root-project/root/pull/10617:223,Deployability,upgrade,upgrade,223,"By having the explicit template instantiation of `kDimension` with a definition in the header, the compiler emits the symbol in every translation unit that includes this header. This will be complained about by the ongoing upgrade to LLVM 13, but can already be seen today in regular compilation of two translation units. Instead move the template specializations to the library. FIXME: Works for GCC, but not for Clang!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10617
https://github.com/root-project/root/issues/10618:183,Availability,error,erroring,183,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:441,Performance,perform,performance,441,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:151,Security,validat,validation,151,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:306,Testability,assert,assert,306,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10618:490,Usability,clear,clear,490,"Looking e.g. at https://github.com/root-project/root/blob/master/tree/ntuple/v7/src/RField.cxx there are some places where a `R__ASSERT` is desirable (validation of input parameters, erroring out in certain edge cases), but in others I think we use it for ensuring that no bugs are present, in which case `assert` would be more appropriate. I did not see places where the checks are so expensive that the difference might matter in terms of performance, but it might be better to establish clear usage patterns before that happens :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10618
https://github.com/root-project/root/issues/10620:177,Modifiability,variab,variables,177,"### Is your feature request related to a problem? Please describe.; I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example; ```cxx; truth = df.Filter(has_truth, ...).; Define(""truth_computation"", expensive_computation_truth, ...);; reco = df.Filter(has_reco, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; ```; I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like; Ideally, one could then write something like; ```cxx; both = ROOT::RDF::Intersection(truth, reco);; both.Histo2D(..., {""truth_computation"", ""reco_computation""});; ```; Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered; I can calculate both quantities in the beginning; ```cxx; pre = df.Filter(has_truth || has_reco, ...).; Define(""truth_computation"", expensive_computation_truth, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; truth = pre.Filter(has_truth, ...);; reco = pre.Filter(has_reco, ...);; both = reco.Filter(has_truth, ...);; ```; but this will; 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive; 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/issues/10620:886,Security,access,access,886,"### Is your feature request related to a problem? Please describe.; I have a dataset with ""truth"" and ""reco"" values, though not every event has both set of values. I define new variables respectively, for example; ```cxx; truth = df.Filter(has_truth, ...).; Define(""truth_computation"", expensive_computation_truth, ...);; reco = df.Filter(has_reco, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; ```; I use both these dataframes to plot respective histograms. But then I'd also like to plot a 2D histogram that compares the values of `truth_computation` and `reco_computation` when both exist. ### Describe the solution you'd like; Ideally, one could then write something like; ```cxx; both = ROOT::RDF::Intersection(truth, reco);; both.Histo2D(..., {""truth_computation"", ""reco_computation""});; ```; Here, `both` consists of events that pass both filters, and has access to all definitions from both branches. ### Describe alternatives you've considered; I can calculate both quantities in the beginning; ```cxx; pre = df.Filter(has_truth || has_reco, ...).; Define(""truth_computation"", expensive_computation_truth, ...).; Define(""reco_computation"", expensive_computation_reco, ...);; truth = pre.Filter(has_truth, ...);; reco = pre.Filter(has_reco, ...);; both = reco.Filter(has_truth, ...);; ```; but this will; 1. call the filters `has_truth` and `has_reco` extra times, which may be expensive; 2. try to calculate reco quantities for truth events and vice versa, though this is probably not too bad if `expensive_computation_truth` can no-op on reco events and vice versa, but that's not always possible",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10620
https://github.com/root-project/root/pull/10621:6,Testability,test,tests,6,These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10621:145,Testability,test,test,145,These tests are expected to fail at the moment. RNTupleDS needs a little tweak to use RRVecField instead of RVectorField to read collections. Re-test and merge after #10623 is in.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10621
https://github.com/root-project/root/pull/10622:7,Availability,fault,faulty,7,"Due to faulty logic, we were using different RDefine objects for; each systematic variation even if the define itself did not depend; on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:126,Integrability,depend,depend,126,"Due to faulty logic, we were using different RDefine objects for; each systematic variation even if the define itself did not depend; on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10622:14,Testability,log,logic,14,"Due to faulty logic, we were using different RDefine objects for; each systematic variation even if the define itself did not depend; on the systematic variation under consideration.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10622
https://github.com/root-project/root/pull/10626:105,Availability,avail,available,105,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:495,Deployability,patch,patch,495,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1742,Deployability,update,updated,1742,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:530,Modifiability,variab,variables,530,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10626:1712,Testability,test,tested,1712,"TL;DR:; Jit `auto f1(..) { ... }` instead of `auto l1 = [](..) { ... };`. Now that we have C++14 support available, we can jit functions; with auto return types instead of lambda expressions as helper; functions for filters and defines. Functions might compile a bit; faster (it might matter when we have thousands) and make our; jitted code a bit more readable. There is also a chance that it will help with some symbol resolution issues with `perf` and jitted code (cc: @amadio ). Most of the patch is non-functional renames of variables and functions,; the only functional change is:. ```diff; --- a/tree/dataframe/src/RDFInterfaceUtils.cxx; +++ b/tree/dataframe/src/RDFInterfaceUtils.cxx; @@ -229,7 +229,7 @@ BuildLambdaString(const std::string &expr, const ColumnNames_t &vars, const Colu; };. std::stringstream ss;; - ss << ""[]("";; + ss << ""("";; for (auto i = 0u; i < vars.size(); ++i) {; std::string fullType;; const auto &type = varTypes[i];; @@ -274,7 +274,7 @@ static std::string DeclareLambda(const std::string &expr, const ColumnNames_t &v; - const auto lambdaBaseName = ""lambda"" + std::to_string(exprMap.size());; + const auto lambdaBaseName = ""func"" + std::to_string(exprMap.size());; const auto lambdaFullName = ""R_rdf::"" + lambdaBaseName;. - const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + "" = "" + lambdaExpr + ""\nusing "" +; + const auto toDeclare = ""namespace R_rdf {\nauto "" + lambdaBaseName + lambdaExpr + ""\nusing "" +; lambdaBaseName + ""_ret_t = typename ROOT::TypeTraits::CallableTraits<decltype("" +; lambdaBaseName + "")>::ret_type;\n}"";; ROOT::Internal::RDF::InterpreterDeclare(toDeclare.c_str());; ```. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10626
https://github.com/root-project/root/pull/10631:750,Testability,test,tested,750,"This pull request applies some changes (see below) in the implementation of RRecordField in order to support `std::pair` and `std::tuple` fields (as follow-up PRs). ## Changes or fixes:; - Compute once the offset for each member in the `RRecordField` constructor and reuse this information in other member functions.; - Provide a constructor that takes the list of member offsets and corresponding C++ type. This is required for the implementation of `std::pair` and `std::tuple` fields. Make the private members protected.; - Given that `RRecordField` takes the ownership of the child fields passed in the `std::vector<std::unique_ptr<Detail::RFieldBase>> &itemFields`, provide also a constructor that takes a rvalue reference. ## Checklist:; - [X] tested changes locally. Follow-up PRs: support for `std::pair`; support for `std::tuple` fields.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10631
https://github.com/root-project/root/pull/10633:73,Deployability,patch,patch,73,"This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but; when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c; * Modules/explicit-build-missing-files.cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10633:184,Testability,test,tests,184,"This reverts https://github.com/vgvassilev/clang/commit/a5ee33ae48. This patch previous tried to solve some problems with virtual files, but; when trying to upstream it, it brokes the tests below:. * Modules/module-file-modified.c; * Modules/explicit-build-missing-files.cpp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10633
https://github.com/root-project/root/pull/10635:495,Deployability,Update,Update,495,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:578,Deployability,update,updated,578,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:284,Modifiability,inherit,inherits,284,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10635:548,Testability,test,tested,548,"This pull request adds RField support for `std::pair<T1, T2>` (see details below). This PR supersedes #8103 (many thanks to @mxxo for the prototype implementation). ## Changes or fixes:; - Add `RPairField` class that represent a type-erased RField of `std::tuple<T1, T2>`. This class inherits from `RRecordField`.; Offsets to the `first` and `second` members are specified manually, either via `offsetof()` (for `RField<std::pair<T1, T2>>`), or using TClass for the type-erased `RPairField`.; - Update `doc/specifications.md`. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR is a follow-up of: #10631. This PR fixes #10324.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10635
https://github.com/root-project/root/pull/10636:203,Deployability,Update,Update,203,"1. Support full version of TCanvas in RBrowser (via gEnv settings); 2. Support TAxis context menus in RCanvas; 3. Let change ""LastCycle"" flag to in settings menu to let display only last TKey cycles; 4. Update JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10636
https://github.com/root-project/root/issues/10640:1333,Availability,error,error,1333,"owing directory; ```; : ls; file1.cxx file2.cxx; ```; With; ```cpp; // file1.cxx; namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx; namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE; ```. If I do the following:; 1. Open Python session; 2. Run gSystem.CompileMacro on the first file; 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open; 4. Run gSystem.CompileMacro on the second file. Then the following happens; ```python; Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> ROOT.gSystem.CompileMacro(""file1.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so; 1; >>> for filename in os.listdir():; ... if filename.startswith(""file1""):; ... os.remove(filename); ... ; >>> os.listdir(); ['file2.cxx']; >>> ROOT.gSystem.CompileMacro(""file2.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so; sh: -c: line 1: unexpected EOF while looking for matching `""'; sh: -c: line 2: syntax error: unexpected end of file; Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;; [... a lot of compilation flags here ...]; ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed!; 0; ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup; ROOT 6.26.02 from conda; Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1364,Availability,Error,Error,1364,"owing directory; ```; : ls; file1.cxx file2.cxx; ```; With; ```cpp; // file1.cxx; namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx; namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE; ```. If I do the following:; 1. Open Python session; 2. Run gSystem.CompileMacro on the first file; 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open; 4. Run gSystem.CompileMacro on the second file. Then the following happens; ```python; Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> ROOT.gSystem.CompileMacro(""file1.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so; 1; >>> for filename in os.listdir():; ... if filename.startswith(""file1""):; ... os.remove(filename); ... ; >>> os.listdir(); ['file2.cxx']; >>> ROOT.gSystem.CompileMacro(""file2.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so; sh: -c: line 1: unexpected EOF while looking for matching `""'; sh: -c: line 2: syntax error: unexpected end of file; Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;; [... a lot of compilation flags here ...]; ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed!; 0; ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup; ROOT 6.26.02 from conda; Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/issues/10640:1671,Availability,error,error,1671,"owing directory; ```; : ls; file1.cxx file2.cxx; ```; With; ```cpp; // file1.cxx; namespace MYNAMESPACE{. int myfun1(){ return 42; }. } // namespace MYNAMESPACE. // file2.cxx; namespace MYNAMESPACE{. int myfun2(){ return 84; }. } // namespace MYNAMESPACE; ```. If I do the following:; 1. Open Python session; 2. Run gSystem.CompileMacro on the first file; 3. Remove all the artifacts of that shared library (e.g. `rm file1*`), while keeping the Python session open; 4. Run gSystem.CompileMacro on the second file. Then the following happens; ```python; Python 3.10.4 | packaged by conda-forge | (main, Mar 24 2022, 17:38:57) [GCC 10.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; >>> ROOT.gSystem.CompileMacro(""file1.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so; 1; >>> for filename in os.listdir():; ... if filename.startswith(""file1""):; ... os.remove(filename); ... ; >>> os.listdir(); ['file2.cxx']; >>> ROOT.gSystem.CompileMacro(""file2.cxx""); Info in <TUnixSystem::ACLiC>: creating shared library /home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so; sh: -c: line 1: unexpected EOF while looking for matching `""'; sh: -c: line 2: syntax error: unexpected end of file; Error in <ACLiC>: Executing 'cd ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro"" ;; [... a lot of compilation flags here ...]; ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file1_cxx.so -o ""/home/vpadulan/Projects/rootcode/gsystem-compilemacro/file2_cxx.so""' failed!; 0; ```. By reading the error, it seems that the path to the compiled shared library from the first file is hardcoded in the ACLiC command for the second file. ### Expected behavior. The two files are completely unrelated, so creating a shared library from either should work even if the other has been removed (also with any related artifacts). ### Setup; ROOT 6.26.02 from conda; Fedora 34",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10640
https://github.com/root-project/root/pull/10641:668,Deployability,update,updated,668,# This Pull request:; Returns the newly added node from call to TGeoVolume::AddNode; Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:105,Safety,avoid,avoid,105,# This Pull request:; Returns the newly added node from call to TGeoVolume::AddNode; Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10641:638,Testability,test,tested,638,# This Pull request:; Returns the newly added node from call to TGeoVolume::AddNode; Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10641
https://github.com/root-project/root/pull/10642:672,Deployability,update,updated,672,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:109,Safety,avoid,avoid,109,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10642:642,Testability,test,tested,642,# This Pull request:; - Returns the newly added node from call to TGeoVolume::AddNode; - Allows an option to avoid voxelation. back port of #10576. ## Changes or fixes:; Profiling geometry building in CMSSW turned up two issues. 1. Doing a linear lookup for newly added nodes to a TGeoVolume was very slow2.; 2. CMS uses DD4Hep (which uses ROOT) as a geometry description system not as a geometry navigation system. The building of the voxels was slow and is never used in CMSSW. This change was temporarily incorporated into CMS' development branch and did not cause any noticeable problems and did give a speed boost. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10642
https://github.com/root-project/root/pull/10643:130,Integrability,rout,routines,130,Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to; the fit function object passed to minuit to do their own routines before; doing the actual Minimization. The parameters settings should better be; synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10643:220,Integrability,synchroniz,synchronized,220,Some users get the `RooMinimizer::getMultiGenFcn()` to get a pointer to; the fit function object passed to minuit to do their own routines before; doing the actual Minimization. The parameters settings should better be; synchronized before returning. @cburgard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10643
https://github.com/root-project/root/pull/10644:187,Deployability,update,updated,187,# This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/pull/10644:157,Testability,test,tested,157,# This Pull request:. Revert https://github.com/vgvassilev/clang/commit/1c6cc386f62f9a5a87cf268b4d35199721aec0f4. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10644
https://github.com/root-project/root/issues/10645:336,Availability,Error,Error,336,"Reproducer:. ```cpp; #include <TFile.h>; #include <TTreeReader.h>. int main() {; {; TFile f(""f16.root"", ""recreate"");; TTree t(""t"", ""t"");; float x = 42.f;; t.Branch(""x"", &x, ""x/f"");; t.Fill();; f.Write();; }. {; TFile f(""f16.root"");; TTreeReader r(""t"", &f);; TTreeReaderValue<Float16_t> rv(r, ""x"");; r.Next();; }; }; ```. produces. ```; Error in <TTreeReaderValueBase::CreateProxy()>: The branch x contains data of type Float16_t, which does not have a dictionary.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10645
https://github.com/root-project/root/pull/10647:0,Safety,Avoid,Avoid,0,Avoid using a deprecated function in RooAbsData::createHistogram,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10647
https://github.com/root-project/root/pull/10648:238,Performance,optimiz,optimized,238,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:0,Testability,Test,Tested,0,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:457,Testability,mock,mock,457,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:995,Testability,Test,Test,995,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10648:1056,Testability,Test,Test,1056,"Tested with. ```python; from dask.distributed import LocalCluster, Client; import ROOT. # Point RDataFrame calls to Dask RDataFrame object; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; ROOT.RDF.Experimental.Distributed.optimized = True. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=True); client = Client(cluster); return client. if __name__ == ""__main__"":. # Create the connection to the mock Dask cluster on the local machine; connection = create_connection(); # Create an RDataFrame that will use Dask as a backend for computations; df = RDataFrame(100, daskclient=connection, npartitions = 2). # First run with Count operations; def1 = df.Define(""x"",""rdfentry_"").Define(""y"",""rdfentry_"").Define(""z"",""rdfentry_""); def2 = df.Define(""aa"",""rdfentry_"").Filter(""aa > 50""); c1 = def1.Count(); c2 = def2.Count(); print(""\n\n"", c1.GetValue(), c2.GetValue()). # Second run with Count; c3 = df.Count(); print(""\n\n"", c3.GetValue()). # Test AsNumpy; print(df.Define(""x"",""rdfentry_"").AsNumpy()). # Test Snapshot; snap = df.Define(""x"",""rdfentry_"").Snapshot(""mytree"",""myfile.root""); print(snap._headnode.inputfiles); print(snap.Count().GetValue()); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10648
https://github.com/root-project/root/pull/10650:246,Deployability,update,updated,246,"In case of an objective funciton (FCN) given by the user, like in case of RooMinimizer, we don't clone the FCN before fitting, but we do after fitting or after running Hesse/Minos.; In this way the user can have the correct FCN state information updated during the fit. For example, with this Pull request, the correct number of function call can be returned by `RooMinimizer::evalCounter()`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10650
https://github.com/root-project/root/pull/10651:48,Availability,error,error,48,"This Pull request resets correctly the original error definition in the Minimizer class and fixes the problem of calling two times RooMinimizer::contour() (issue #10440). The problem is that resetting as before using the FitConfig class does not work because the ; values stored in the FitConfig are set in the Minimizer only before Fitting or when calling Hesse or Minos. So, the resetting works for a following call to migrad() but not for a call to contour(). . This PR fixes #10440",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10651
https://github.com/root-project/root/pull/10652:654,Deployability,configurat,configurations,654,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1147,Deployability,Update,Update,1147,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1238,Deployability,update,updated,1238,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:654,Modifiability,config,configurations,654,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:575,Testability,test,test,575,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:998,Testability,assert,assertion,998,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1131,Testability,test,test,1131,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:1208,Testability,test,tested,1208,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10652:622,Usability,usab,usable,622,"This pull request adds `std::tuple<...>` RField support (see notes below). Follow-up PR of #10631. ## Changes or fixes:; - Amend `RRecordField` offsets computation: account for padding inserted before each member to comply with the alignment requirements of the type.; - Add `std::tuple` RField support.; ISO C++ does not guarantee neither specific layout nor member names for `std::tuple`.; Therefore, for the type-erased `RTupleField`, we guess the offsets assuming that most implementations store it as a standard-layout type with members reversed w.r.t. the type list. A test has been added to check that this renders usable `RTupleField`s in all CI configurations, even when padding is added (see `char` members). ; **EDIT:** most implementations including libstdc++ (gcc), libc++ (llvm), and MSVC name members as `_0`, `_1`, ..., `_N-1`, following the order of the type list.; Use TClass to get their offsets; in case a particular `std::tuple` implementation does not define such members, an assertion will fail.; This fixes the issue of libc++ using a different member ordering w.r.t. other STL implementations (see failing test below).; - Update `specifications.md` accordingly. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10632.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10652
https://github.com/root-project/root/pull/10653:1401,Availability,redundant,redundant,1401,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:354,Deployability,patch,patch,354,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:1401,Safety,redund,redundant,1401,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:285,Testability,log,logic,285,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10653:459,Testability,log,logic,459,"Before this commit, whenever a function was constructing a node; of the computation graph it had to ""remember"" to also register; that node with the RLoopManager, which needs to know which nodes; are around so it can tell them e.g. to execute task initialization; and task finalization logic.; Deregistration happened in the node's destructors. With this patch, registration happen in the constructor and; deregistration in the destructor of a node, i.e. this logic is; where a reader might expect it to be and new code does not have; to ""remember"" to register objects with the RLoopManager. Jitted nodes of the computation graph (e.g. RJittedAction,; RJittedDefine) don't need to register themselves with the; RLoopManager: the _concrete_ nodes will be registered right; before the event loop, at jitting time, and that is good enough.; RJittedFilter is an exception: RLoopManager needs to know what; filters have been booked even before the event loop (i.e. before; concrete filters are instantiated by jitted code) in order to; return a correct list from RLoopManager::GetFiltersNames().; So RJittedFilters register themselves with RLoopManager at; construction time and deregister themselves in; RJittedFilter::SetFilter, i.e. when they can be sure that the; concrete filter has been instantiated in jitted code and it has; been registered with RLoopManager, making the RJittedFilter; registration redundant. To the reviewers: I'll make the naming more uniform (Register/Deregister instead of Book/Deregister) in a subsequent PR.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10653
https://github.com/root-project/root/pull/10655:89,Availability,error,error,89,# This Pull request:; Minor change in a table controller. ## Changes or fixes:; Possible error on reloads of a page when elements are highlighted. This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10655
https://github.com/root-project/root/pull/10656:116,Deployability,update,updated,116,# This Pull request:. ## Changes or fixes:; This issue: #10039 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10039,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/pull/10656:86,Testability,test,tested,86,# This Pull request:. ## Changes or fixes:; This issue: #10039 . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #10039,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10656
https://github.com/root-project/root/issues/10657:289,Usability,clear,clearly,289,"Hi, everyone. Recently, when I used THttpServer to show a Canvas, I met a problem.; Referring to [this example](https://root.cern/doc/master/canvas2_8C.html), I want to show this Canvas on the webpage. It works very well. But when I want to show more histograms, it looks too small to see clearly. I hope that the scroll bar will be added to the canvas when I want to show more histograms on the webpage. How should I do? Does anyone have ideas?. Thanks in advance.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10657
https://github.com/root-project/root/pull/10658:10,Deployability,patch,patch,10,"With this patch, RResultMap points to the one and only nominal; result and we do not duplicate work for the nominal value (i.e.; we don't handle the nominal case in RVariedAction anymore). Vincenzo please check whether things make sense for RMergeableValues.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10658
https://github.com/root-project/root/pull/10659:140,Availability,avail,available,140,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:80,Performance,load,loaded,80,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:88,Performance,Load,Loading,88,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:200,Testability,assert,assert,200,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10659:425,Testability,Assert,Assertion,425,"The crash occurs due to a missing guard that prevents `libcudart.so` from being loaded. Loading a library requires an executor which is not available in syntax-only mode. Without guard, the following assert is triggered in a debug build:; ```; cling: /home/sehrig/workspace/cling/llvm/tools/cling/lib/Interpreter/Interpreter.cpp:1657: const cling::DynamicLibraryManager *cling::Interpreter::getDynamicLibraryManager() const: Assertion `m_Executor.get() && ""We must have an executor""' failed.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10659
https://github.com/root-project/root/pull/10662:10,Deployability,patch,patch,10,"With this patch, RResultMap points to the one and only nominal; result and we do not duplicate work for the nominal value (i.e.; we don't handle the nominal case in RVariedAction anymore).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10662
https://github.com/root-project/root/pull/10663:412,Usability,guid,guide,412,"One of the overloads of `RooAbsData::createHistogram` was deprecated; because it behaved inconsistently with another more frequently used; overload (see https://github.com/root-project/root/pull/10411). However, I forgot to mention the deprecation in the documentation and; pointed it out only in the source code with the deprecated macro. This; commit adds the corresponding `\deprecated` note to the reference guide. Also, some code modernizations were applied to the source file while at it:. * replace `TString` with `std::string`. * replace `0` with `nullptr`. * replace iterator loops with range-based loops. * memory management with `std::unique_ptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10663
https://github.com/root-project/root/pull/10665:125,Testability,test,tests,125,"This PR brings coverage of RNTuple+RVec almost on par with RNTuple+std::vector, e.g. by templating some existing std::vector tests over the collection type. There is one issue: in `RNTuple.ComplexRVec`, the element type's constructor and destructor gets called a different number of times for RVec than for std::vector, but I _think_ RVec is right and std::vector is wrong because of https://github.com/root-project/root/issues/10520 . I'd like to hear what Jakob thinks though :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10665
https://github.com/root-project/root/pull/10667:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10553; 2. https://github.com/root-project/root/pull/10627",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10667
https://github.com/root-project/root/pull/10669:70,Security,validat,validation,70,When building with a macOS SDK before 12.0 and running with 12.0+ the validation of private modulemaps fails due to a change in layout. This change disables the check when DisablePCHValidation is active. (cherry picked from commit 85c757ad962e609779dcf8171e37cf70f611d238). Backport of PR #10555,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10669
https://github.com/root-project/root/pull/10671:273,Integrability,message,messages,273,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:84,Performance,perform,performance,84,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:64,Testability,test,tests,64,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10671:299,Testability,test,tested,299,"Some speedups to targeted RooFit classes to speed up the RooFit tests such that the performance gain with the batch mode is more prominent relatively (as this PR removes unnecessary overhead that affected both the batch mode and the scalar mode). More detail in the commit messages. All changes are tested by the stressRooFit suite, including the multidimentional case in the RooNDKeysPdf.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10671
https://github.com/root-project/root/pull/10672:18,Availability,error,error,18,Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:; ```; RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10672:185,Availability,error,error,185,Fix the following error when compiling code using ROOT on Windows with the wrong `-std:c++` version or without the the `-Zc:__cplusplus` compilation flag:; ```; RConfigure.h(27): fatal error C1021: invalid preprocessor command 'warning'; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10672
https://github.com/root-project/root/pull/10673:404,Deployability,Update,Update,404,"Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list; of cached object in RBrowserData. Tries to catch situation when ; closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and; therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10673:147,Performance,cache,cached,147,"Include `RBrowserData` and created `TCanvas` into `gROOT` list of cleanups. In case if any object is deleted, check if it also appears in list; of cached object in RBrowserData. Tries to catch situation when ; closing TFile let objects like histograms disappear. Also special handling of TFile which do not automatically has cleanup bit set and; therefore can be deleted without any notice for RBrowser. Update jsroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10673
https://github.com/root-project/root/pull/10674:27,Availability,down,downloading,27,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:39,Deployability,release,release,39,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:0,Security,hash,hashes,0,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10674:81,Security,secur,security,81,"hashes are not stable when downloading release sources from github, see; https://security.stackexchange.com/a/240209; https://github.com/root-project/root/issues/10503. (cherry picked from commit 8f05559cb9d74e5bc6c65bbd39a0dce82b18a3eb)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10674
https://github.com/root-project/root/pull/10675:4,Deployability,patch,patch,4,the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/pull/10675:33,Deployability,release,release,33,the patch is now included in the release; remove it. (cherry picked from commit 8e6f7236bc02d28cd5d767fc3d1462b1da211c64),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10675
https://github.com/root-project/root/issues/10676:264,Availability,error,error,264,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:412,Availability,error,error,412,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3944,Availability,error,error-skeleton,3944,"in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4243,Availability,error,error-skeleton,4243,"y_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_ru",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4806,Availability,error,error-skeleton,4806,"ff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynam",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5093,Availability,error,error-skeleton,5093,"; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:225,Deployability,install,installation,225,"I'm trying to work on this tutorial: https://indico.cern.ch/event/704163/contributions/2936719/attachments/1693833/2726445/Tutorial-PyROOT.pdf, but when I tried to import ROOT initially with my base environment and base ROOT installation, I got a module not found error. So in order to go around that, I redownloaded ROOT via conda and tried to run the myScript.py I wrote but I ended up getting this very large error, saying that the code broke:. he lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007ffa4ee78781 in llvm::sys::DynamicLibrary::addPermanentLibrary(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) () from /home/rebrobles/root/lib/libCling.so; #7 0x00007ffa4bf271ed in CreateInterpreter () from /home/rebrobles/root/lib/libCling.so; #8 0x00007ffa4fe05673 in TROOT::InitInterpreter() () from /home/rebrobles/root/lib/libCore.so.6.24; #9 0x00007ffa4fe05b6f in ROOT::Internal::GetROOT2() () from /home/rebrobles/root/lib/libCore.so.6.24; #10 0x00007ffa4bf1f89e in TClingLookupHelper__ExistingTypeCheck(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) () from /home/rebrobles/root/lib/libCling.so; #11 0x00007ffa4fee83ba in TClassEdit::ResolveTypedef[abi:cxx11](char const*, bool) () from /home/rebrobles/root/lib/libCore.so.6.24; #12 0x00007ffa4feeea6c in TClassEdit::TSplitType::ShortType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, int) () from /home/rebrobles/root/lib/libCore.so.6.24; #13 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36339,Modifiability,config,config,36339,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3422,Performance,optimiz,optimized,3422,"*) () from /home/rebrobles/root/lib/libCore.so.6.24; #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24; #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24; #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24; #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:3628,Performance,optimiz,optimized,3628,"b/libCore.so.6.24; #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24; #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24; #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:4445,Performance,optimiz,optimized,4445," entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5301,Performance,optimiz,optimized,5301,"(file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5323,Performance,optimiz,optimized,5323,"(file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5863,Performance,optimiz,optimized,5863,"jname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:5885,Performance,optimiz,optimized,5885,"jname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6015,Performance,optimiz,optimized,6015,"lopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6037,Performance,optimiz,optimized,6037,"lopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6060,Performance,optimiz,optimized,6060,"lopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6251,Performance,optimiz,optimized,6251,"519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6276,Performance,optimiz,optimized,6276,"519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6502,Performance,optimiz,optimized,6502,"=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6615,Performance,optimiz,optimized,6615,"10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6634,Performance,optimiz,optimized,6634,"10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6661,Performance,optimiz,optimized,6661,"10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6923,Performance,optimiz,optimized,6923,"; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6949,Performance,optimiz,optimized,6949,"; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:6971,Performance,optimiz,optimized,6971,"; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7157,Performance,optimiz,optimized,7157,"ction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7181,Performance,optimiz,optimized,7181,"ction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7206,Performance,optimiz,optimized,7206,"ction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7355,Performance,optimiz,optimized,7355,"80733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7556,Performance,optimiz,optimized,7556,"#41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7727,Performance,optimiz,optimized,7727,"_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7808,Performance,optimiz,optimized,7808,"_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7921,Performance,optimiz,optimized,7921,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7940,Performance,optimiz,optimized,7940,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:7967,Performance,optimiz,optimized,7967,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8229,Performance,optimiz,optimized,8229,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8255,Performance,optimiz,optimized,8255,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8277,Performance,optimiz,optimized,8277,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8463,Performance,optimiz,optimized,8463,"clude/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8487,Performance,optimiz,optimized,8487,"clude/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8512,Performance,optimiz,optimized,8512,"clude/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8661,Performance,optimiz,optimized,8661,"t.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:8862,Performance,optimiz,optimized,8862,"#48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9033,Performance,optimiz,optimized,9033,"_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9114,Performance,optimiz,optimized,9114,"_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9227,Performance,optimiz,optimized,9227,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9246,Performance,optimiz,optimized,9246,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9273,Performance,optimiz,optimized,9273,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9535,Performance,optimiz,optimized,9535,"000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9561,Performance,optimiz,optimized,9561,"000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9583,Performance,optimiz,optimized,9583,"000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9769,Performance,optimiz,optimized,9769,"clude/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9793,Performance,optimiz,optimized,9793,"clude/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9818,Performance,optimiz,optimized,9818,"clude/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:9967,Performance,optimiz,optimized,9967,"t.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10168,Performance,optimiz,optimized,10168,"#55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10339,Performance,optimiz,optimized,10339,"_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10420,Performance,optimiz,optimized,10420,"_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10533,Performance,optimiz,optimized,10533,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10552,Performance,optimiz,optimized,10552,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10579,Performance,optimiz,optimized,10579,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10841,Performance,optimiz,optimized,10841,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10867,Performance,optimiz,optimized,10867,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:10889,Performance,optimiz,optimized,10889,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11075,Performance,optimiz,optimized,11075,"clude/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11099,Performance,optimiz,optimized,11099,"clude/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11124,Performance,optimiz,optimized,11124,"clude/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11273,Performance,optimiz,optimized,11273,"t.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11474,Performance,optimiz,optimized,11474,"#62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11645,Performance,optimiz,optimized,11645,"_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11726,Performance,optimiz,optimized,11726,"_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11839,Performance,optimiz,optimized,11839,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11858,Performance,optimiz,optimized,11858,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:11885,Performance,optimiz,optimized,11885,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12147,Performance,optimiz,optimized,12147,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12173,Performance,optimiz,optimized,12173,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12195,Performance,optimiz,optimized,12195,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12381,Performance,optimiz,optimized,12381,"clude/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12405,Performance,optimiz,optimized,12405,"clude/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12430,Performance,optimiz,optimized,12430,"clude/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12579,Performance,optimiz,optimized,12579,"t.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12780,Performance,optimiz,optimized,12780,"#69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:12951,Performance,optimiz,optimized,12951,"_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13032,Performance,optimiz,optimized,13032,"_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13145,Performance,optimiz,optimized,13145,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13164,Performance,optimiz,optimized,13164,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13191,Performance,optimiz,optimized,13191,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13453,Performance,optimiz,optimized,13453,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13479,Performance,optimiz,optimized,13479,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13501,Performance,optimiz,optimized,13501,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13687,Performance,optimiz,optimized,13687,"clude/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13711,Performance,optimiz,optimized,13711,"clude/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13736,Performance,optimiz,optimized,13736,"clude/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:13885,Performance,optimiz,optimized,13885,"t.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14086,Performance,optimiz,optimized,14086,"#76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14257,Performance,optimiz,optimized,14257,"_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14338,Performance,optimiz,optimized,14338,"_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14451,Performance,optimiz,optimized,14451,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14470,Performance,optimiz,optimized,14470,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14497,Performance,optimiz,optimized,14497,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14759,Performance,optimiz,optimized,14759,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14785,Performance,optimiz,optimized,14785,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14807,Performance,optimiz,optimized,14807,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:14993,Performance,optimiz,optimized,14993,"clude/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15017,Performance,optimiz,optimized,15017,"clude/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15042,Performance,optimiz,optimized,15042,"clude/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15191,Performance,optimiz,optimized,15191,"t.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15392,Performance,optimiz,optimized,15392,"#83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15563,Performance,optimiz,optimized,15563,"_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15644,Performance,optimiz,optimized,15644,"_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15757,Performance,optimiz,optimized,15757,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15776,Performance,optimiz,optimized,15776,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:15803,Performance,optimiz,optimized,15803,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16065,Performance,optimiz,optimized,16065,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16091,Performance,optimiz,optimized,16091,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16113,Performance,optimiz,optimized,16113,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16299,Performance,optimiz,optimized,16299,"clude/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16323,Performance,optimiz,optimized,16323,"clude/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16348,Performance,optimiz,optimized,16348,"clude/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16497,Performance,optimiz,optimized,16497,"t.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16698,Performance,optimiz,optimized,16698,"#90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16869,Performance,optimiz,optimized,16869,"_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:16950,Performance,optimiz,optimized,16950,"_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17063,Performance,optimiz,optimized,17063,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17082,Performance,optimiz,optimized,17082,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17109,Performance,optimiz,optimized,17109,"nt=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/cli",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17405,Performance,optimiz,optimized,17405,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17429,Performance,optimiz,optimized,17429,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17451,Performance,optimiz,optimized,17451,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17477,Performance,optimiz,optimized,17477,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17502,Performance,optimiz,optimized,17502,"Object_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17672,Performance,optimiz,optimized,17672,"h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17801,Performance,optimiz,optimized,17801," #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:17979,Performance,optimiz,optimized,17979,"on/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18001,Performance,optimiz,optimized,18001,"on/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18024,Performance,optimiz,optimized,18024,"on/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18221,Performance,optimiz,optimized,18221,"124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18246,Performance,optimiz,optimized,18246,"124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18473,Performance,optimiz,optimized,18473,"locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18587,Performance,optimiz,optimized,18587,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18606,Performance,optimiz,optimized,18606,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18633,Performance,optimiz,optimized,18633,"EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18897,Performance,optimiz,optimized,18897,"02 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18923,Performance,optimiz,optimized,18923,"02 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:18945,Performance,optimiz,optimized,18945,"02 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19132,Performance,optimiz,optimized,19132,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19156,Performance,optimiz,optimized,19156,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19181,Performance,optimiz,optimized,19181,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19331,Performance,optimiz,optimized,19331,"3ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19533,Performance,optimiz,optimized,19533,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19705,Performance,optimiz,optimized,19705,"lFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19786,Performance,optimiz,optimized,19786,"lFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19900,Performance,optimiz,optimized,19900,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19919,Performance,optimiz,optimized,19919,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:19946,Performance,optimiz,optimized,19946,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20210,Performance,optimiz,optimized,20210,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20236,Performance,optimiz,optimized,20236,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20258,Performance,optimiz,optimized,20258,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20445,Performance,optimiz,optimized,20445,"/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20469,Performance,optimiz,optimized,20469,"/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20494,Performance,optimiz,optimized,20494,"/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20644,Performance,optimiz,optimized,20644,"23; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:20846,Performance,optimiz,optimized,20846,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21018,Performance,optimiz,optimized,21018,"lFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21099,Performance,optimiz,optimized,21099,"lFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21213,Performance,optimiz,optimized,21213,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21232,Performance,optimiz,optimized,21232,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21259,Performance,optimiz,optimized,21259,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21523,Performance,optimiz,optimized,21523,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21549,Performance,optimiz,optimized,21549,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21571,Performance,optimiz,optimized,21571,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21758,Performance,optimiz,optimized,21758,"/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21782,Performance,optimiz,optimized,21782,"/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21807,Performance,optimiz,optimized,21807,"/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:21957,Performance,optimiz,optimized,21957,"23; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22159,Performance,optimiz,optimized,22159,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22331,Performance,optimiz,optimized,22331,"lFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22412,Performance,optimiz,optimized,22412,"lFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22526,Performance,optimiz,optimized,22526,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22545,Performance,optimiz,optimized,22545,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22572,Performance,optimiz,optimized,22572,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22836,Performance,optimiz,optimized,22836,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22862,Performance,optimiz,optimized,22862,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:22884,Performance,optimiz,optimized,22884,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23071,Performance,optimiz,optimized,23071,"/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23095,Performance,optimiz,optimized,23095,"/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23120,Performance,optimiz,optimized,23120,"/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23270,Performance,optimiz,optimized,23270,"23; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23472,Performance,optimiz,optimized,23472,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23644,Performance,optimiz,optimized,23644,"lFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23725,Performance,optimiz,optimized,23725,"lFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23839,Performance,optimiz,optimized,23839,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23858,Performance,optimiz,optimized,23858,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:23885,Performance,optimiz,optimized,23885,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24149,Performance,optimiz,optimized,24149,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24175,Performance,optimiz,optimized,24175,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24197,Performance,optimiz,optimized,24197,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24384,Performance,optimiz,optimized,24384,"/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24408,Performance,optimiz,optimized,24408,"/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24433,Performance,optimiz,optimized,24433,"/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24583,Performance,optimiz,optimized,24583,"23; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24786,Performance,optimiz,optimized,24786,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24834,Performance,optimiz,optimized,24834,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:24992,Performance,optimiz,optimized,24992,"55b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25292,Performance,optimiz,optimized,25292,"val.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25316,Performance,optimiz,optimized,25316,"val.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25571,Performance,optimiz,optimized,25571,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25595,Performance,optimiz,optimized,25595,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /u",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25709,Performance,optimiz,optimized,25709,"99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25728,Performance,optimiz,optimized,25728,"99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:25755,Performance,optimiz,optimized,25755,"99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26053,Performance,optimiz,optimized,26053,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26077,Performance,optimiz,optimized,26077,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26099,Performance,optimiz,optimized,26099,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26125,Performance,optimiz,optimized,26125,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26150,Performance,optimiz,optimized,26150,"t_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26320,Performance,optimiz,optimized,26320,"ptimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized ou",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26449,Performance,optimiz,optimized,26449,"name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26627,Performance,optimiz,optimized,26627,"ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26649,Performance,optimiz,optimized,26649,"ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26672,Performance,optimiz,optimized,26672,"ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b0691",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26869,Performance,optimiz,optimized,26869,"24b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:26894,Performance,optimiz,optimized,26894,"24b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27121,Performance,optimiz,optimized,27121,"locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /us",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27235,Performance,optimiz,optimized,27235,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27254,Performance,optimiz,optimized,27254,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27281,Performance,optimiz,optimized,27281,"EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27545,Performance,optimiz,optimized,27545,"48 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27571,Performance,optimiz,optimized,27571,"48 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27593,Performance,optimiz,optimized,27593,"48 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27780,Performance,optimiz,optimized,27780,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27804,Performance,optimiz,optimized,27804,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27829,Performance,optimiz,optimized,27829,"n_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:27979,Performance,optimiz,optimized,27979,"3ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28181,Performance,optimiz,optimized,28181,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28353,Performance,optimiz,optimized,28353,"lFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28434,Performance,optimiz,optimized,28434,"lFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28548,Performance,optimiz,optimized,28548,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28567,Performance,optimiz,optimized,28567,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28594,Performance,optimiz,optimized,28594,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28858,Performance,optimiz,optimized,28858,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28884,Performance,optimiz,optimized,28884,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:28906,Performance,optimiz,optimized,28906,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29093,Performance,optimiz,optimized,29093,"/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29117,Performance,optimiz,optimized,29117,"/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29142,Performance,optimiz,optimized,29142,"/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29292,Performance,optimiz,optimized,29292,"23; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29494,Performance,optimiz,optimized,29494,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29666,Performance,optimiz,optimized,29666,"lFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29747,Performance,optimiz,optimized,29747,"lFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29861,Performance,optimiz,optimized,29861,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29880,Performance,optimiz,optimized,29880,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:29907,Performance,optimiz,optimized,29907,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30171,Performance,optimiz,optimized,30171,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30197,Performance,optimiz,optimized,30197,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30219,Performance,optimiz,optimized,30219,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30406,Performance,optimiz,optimized,30406,"/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30430,Performance,optimiz,optimized,30430,"/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30455,Performance,optimiz,optimized,30455,"/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30605,Performance,optimiz,optimized,30605,"23; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30807,Performance,optimiz,optimized,30807,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:30979,Performance,optimiz,optimized,30979,"lFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31060,Performance,optimiz,optimized,31060,"lFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31174,Performance,optimiz,optimized,31174,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31193,Performance,optimiz,optimized,31193,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31220,Performance,optimiz,optimized,31220,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31484,Performance,optimiz,optimized,31484,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31510,Performance,optimiz,optimized,31510,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31532,Performance,optimiz,optimized,31532,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31719,Performance,optimiz,optimized,31719,"/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31743,Performance,optimiz,optimized,31743,"/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31768,Performance,optimiz,optimized,31768,"/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:31918,Performance,optimiz,optimized,31918,"23; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32120,Performance,optimiz,optimized,32120,"_PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Object",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32292,Performance,optimiz,optimized,32292,"lFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32373,Performance,optimiz,optimized,32373,"lFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32487,Performance,optimiz,optimized,32487,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32506,Performance,optimiz,optimized,32506,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32533,Performance,optimiz,optimized,32533,"ptimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32797,Performance,optimiz,optimized,32797,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32823,Performance,optimiz,optimized,32823,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:32845,Performance,optimiz,optimized,32845,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33032,Performance,optimiz,optimized,33032,"/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33056,Performance,optimiz,optimized,33056,"/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33081,Performance,optimiz,optimized,33081,"/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33231,Performance,optimiz,optimized,33231,"23; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33434,Performance,optimiz,optimized,33434,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33482,Performance,optimiz,optimized,33482,"yEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33640,Performance,optimiz,optimized,33640,"55b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33940,Performance,optimiz,optimized,33940,"val.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:33964,Performance,optimiz,optimized,33964,"val.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34219,Performance,optimiz,optimized,34219,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34243,Performance,optimiz,optimized,34243,"ject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34357,Performance,optimiz,optimized,34357,"99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34376,Performance,optimiz,optimized,34376,"99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34403,Performance,optimiz,optimized,34403,"99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34701,Performance,optimiz,optimized,34701,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34725,Performance,optimiz,optimized,34725,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34747,Performance,optimiz,optimized,34747,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34773,Performance,optimiz,optimized,34773,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34798,Performance,optimiz,optimized,34798,"t_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:34968,Performance,optimiz,optimized,34968,"ptimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35282,Performance,optimiz,optimized,35282,"efault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35308,Performance,optimiz,optimized,35308,"efault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35378,Performance,optimiz,optimized,35378,"efault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:35401,Performance,optimiz,optimized,35401,"efault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (con",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36183,Performance,optimiz,optimized,36183,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36651,Performance,optimiz,optimized,36651,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36673,Performance,optimiz,optimized,36673,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36857,Performance,optimiz,optimized,36857,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36879,Performance,optimiz,optimized,36879,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/issues/10676:36906,Performance,optimiz,optimized,36906,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10676
https://github.com/root-project/root/pull/10677:114,Security,expose,exposed,114,"When TGraph2D points are almost aligned, the computation of the plot limits did not work for example like the one exposed here:; https://root-forum.cern.ch/t/issue-related-to-contour-plots-with-tgraph2d/50153. a reproducer is:; ```; void Contour(){; double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};; double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};; double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};; auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);; g->Draw(""cont4 z"");; }; ```. This PR also allows to define properly the 2D histogram. In the past old interpolator was used by SetHistogram(). Now the default is the new one.; ```; void Contour(){; double x[20] = {300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 300, 400};; double y[20] = {1.00e-07, 2.00e-07, 3.00e-07, 4.00e-07, 5.00e-07, 5.00e-07, 6.00e-07, 7.00e-07, 8.00e-07, 9.00e-07, 5.00e-07, 9.10e-07, 9.20e-07, 9.30e-07, 9.40e-07, 9.50e-07, 9.60e-07, 9.70e-07, 1.00e-06, 2.00e-06};; double z[20] = {17.7646, 15.2535, 17.7124, 9.47505, 9.16325, 8.72872, 6.42959, 3.16349, 5.01813, 4.37426, 3.21201, 3.60176, 1.77229, 1.80264, 1.38047, 0.816474, 0.801699, 0.385277, 16.3985, 16.0283};; auto g = new TGraph2D(""contour"",""contour"",20,x,y,z);; auto h = new TH2D(""h"",""h"",40,200,3000,40,1.00e-07,1.00e-06);; g->SetHistogram(h);; g->Draw(""cont4 z"");; }. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10677
https://github.com/root-project/root/issues/10678:143,Availability,error,error,143,"### Describe the bug; Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior; I expected to get a value different than 0 and no error. . ### To Reproduce; ```c++; #include <iostream> ; #include ""TH3.h"". int main() {; auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);; ; for(int i=1; i <= m_hist->GetNbinsX(); i++); for(int j=1; j <= m_hist->GetNbinsY(); j++); for(int k=1; k <= m_hist->GetNbinsZ(); k++); m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;; double y = 0.002;; double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; ; std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";; std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";; ; return 0;; }; ```; This outputs the following on my machine,; ```; bins = 29 1 1; Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain.; value = 0; value = 3; ```. ### Setup; Built for linuxx8664gcc on Apr 12 2022, 16:28:03; From tags/v6-26-02@v6-26-02; downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:225,Availability,error,error,225,"### Describe the bug; Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior; I expected to get a value different than 0 and no error. . ### To Reproduce; ```c++; #include <iostream> ; #include ""TH3.h"". int main() {; auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);; ; for(int i=1; i <= m_hist->GetNbinsX(); i++); for(int j=1; j <= m_hist->GetNbinsY(); j++); for(int k=1; k <= m_hist->GetNbinsZ(); k++); m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;; double y = 0.002;; double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; ; std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";; std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";; ; return 0;; }; ```; This outputs the following on my machine,; ```; bins = 29 1 1; Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain.; value = 0; value = 3; ```. ### Setup; Built for linuxx8664gcc on Apr 12 2022, 16:28:03; From tags/v6-26-02@v6-26-02; downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1009,Availability,Error,Error,1009,"### Describe the bug; Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior; I expected to get a value different than 0 and no error. . ### To Reproduce; ```c++; #include <iostream> ; #include ""TH3.h"". int main() {; auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);; ; for(int i=1; i <= m_hist->GetNbinsX(); i++); for(int j=1; j <= m_hist->GetNbinsY(); j++); for(int k=1; k <= m_hist->GetNbinsZ(); k++); m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;; double y = 0.002;; double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; ; std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";; std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";; ; return 0;; }; ```; This outputs the following on my machine,; ```; bins = 29 1 1; Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain.; value = 0; value = 3; ```. ### Setup; Built for linuxx8664gcc on Apr 12 2022, 16:28:03; From tags/v6-26-02@v6-26-02; downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/issues/10678:1210,Availability,down,downloaded,1210,"### Describe the bug; Calling Interpolate(x, y, z) with three values within axis ranges yields a ""cannot interpolate outside histogram domain"" error. . ### Expected behavior; I expected to get a value different than 0 and no error. . ### To Reproduce; ```c++; #include <iostream> ; #include ""TH3.h"". int main() {; auto m_hist = new TH3F(""3D"", ""boring histo"", 50, 0, 1000, 50, 0, 1000, 50, 0, 1000);; ; for(int i=1; i <= m_hist->GetNbinsX(); i++); for(int j=1; j <= m_hist->GetNbinsY(); j++); for(int k=1; k <= m_hist->GetNbinsZ(); k++); m_hist->SetBinContent(i, j, k, i + j + k);. double x = 575.474;; double y = 0.002;; double z = 0.002;. std::cout << ""bins = "" << m_hist->GetXaxis()->FindBin(x) << "" "" << m_hist->GetYaxis()->FindBin(y) << "" "" << m_hist->GetZaxis()->FindBin(z) << ""\n""; ; std::cout << ""value = "" << m_hist->Interpolate(x, y, z) << ""\n"";; std::cout << ""value = "" << m_hist->Interpolate(10, 10, 10) << ""\n"";; ; return 0;; }; ```; This outputs the following on my machine,; ```; bins = 29 1 1; Error in <UnknownClass::Interpolate>: Cannot interpolate outside histogram domain.; value = 0; value = 3; ```. ### Setup; Built for linuxx8664gcc on Apr 12 2022, 16:28:03; From tags/v6-26-02@v6-26-02; downloaded the ROOT pre-compiled binaries from your website.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10678
https://github.com/root-project/root/pull/10679:135,Availability,avail,available,135,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:303,Availability,avail,available,303,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:40,Integrability,wrap,wrapper,40,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:187,Integrability,wrap,wrapper,187,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/pull/10679:545,Testability,test,test,545,"`ROOT::TypeTraits::InvokeResult_t` is a wrapper for `std::invoke_result_t` that falls back to; `std::result_of_t` if the former is not available. It is useful as a; C++-standard-agnostic wrapper for this functionality, as; `std::result_of` has been deprecated in C++17 but `std::invoke_result`; is only available since C++17. I substituted all usages of `std::result_of` in `tree/` and `core/` with usages of `InvokeResult_t`, which removes deprecation warnings when building ROOT with C++17 (esp. with clang) and indirectly provides _a lot_ of test coverage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10679
https://github.com/root-project/root/issues/10680:561,Availability,failure,failure,561,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:607,Availability,error,error,607,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:748,Availability,error,error,748,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:874,Availability,error,error,874,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1015,Availability,error,error,1015,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1141,Availability,error,error,1141,"### Describe the bug; Cppyy can bind python callbacks, but not when an argument with a namespace is used. ### Expected behavior; I can define a callback signature with types not in global namespace. ### To Reproduce; ```python; import cppyy. cppyy.cppdef(r""""""\; #include <functional>. namespace foo {; class Foo {; public:; Foo() : bar(0) {};; int bar;; };; }. void apply(std::function<void(foo::Foo*)> f) {; foo::Foo x;; f(&x);; }; """"""); cppyy.gbl.apply(lambda x: print(x.bar)); ```; Expected output: `0`. What I get instead is a failure to compile:; ```; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_l",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1776,Availability,error,error,1776,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:1917,Availability,error,error,1917,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2043,Availability,error,error,2043,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2360,Deployability,install,install,2360,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2441,Deployability,install,install,2441,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2639,Deployability,upgrade,upgrade,2639,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/issues/10680:2647,Energy Efficiency,schedul,schedule,2647,"d(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:29: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:33: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:37: error: address of overloaded function 'apply' does not match required type 'void (int)'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^~~~~; input_line_24:12:6: note: candidate function has type mismatch at 1st parameter (expected 'int' but has 'std::function<void (foo::Foo *)>'); void apply(std::function<void(foo::Foo*)> f) {; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/tuple:1423:26: note: candidate template ignored: failed template argument deduction; constexpr decltype(auto) apply(_Fn && __f, _Tuple && __t); ^; input_line_28:5:60: error: use of undeclared identifier 'Foo'; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:64: error: expected expression; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; input_line_28:5:66: error: type name requires a specifier or qualifier; ((void (&)(function<void(Foo*)>))apply)(*(function<void(Foo*)>*)args[0]);; ^; ```; If I drop the `foo` namespace then it works fine. ### Setup; ROOT 6.22 or 6.24 with cppyy 1.6.2. Same behavior through conda-forge, homebrew, and cmssw. ### Additional context; If I install cppyy 2.3.1 through conda-forge, the code works. On the other hand, if I install cppyy 1.6.2 through pip (conda did not work) then a random integer is returned 😱 (probably reading junk memory).; So this might be a cppyy issue that is already resolved. If so, what is the upgrade schedule for ROOT+cppyy? Also, any idea for a workaround?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10680
https://github.com/root-project/root/pull/10682:354,Deployability,upgrade,upgrade,354,"This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10682:164,Modifiability,variab,variable,164,"This makes sure that the list of directories is actually empty in case neither `inc/` nor `v7/inc/` exist, and does not contain left-overs that were stored in this variable in a parent scope. After this change, `roottest/root/meta/rootcling/module.modulemap` is much shorter and in particular free of non-existent entries complained about by the LLVM 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10682
https://github.com/root-project/root/pull/10683:206,Deployability,patch,patch,206,"Before this commit, if users requested `VariationsFor(result)` but; `result` did not depend on any variation, we constructed a (no-op); RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation; graph if it's not needed. RResultMap had to be taught how to deal; with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/pull/10683:85,Integrability,depend,depend,85,"Before this commit, if users requested `VariationsFor(result)` but; `result` did not depend on any variation, we constructed a (no-op); RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation; graph if it's not needed. RResultMap had to be taught how to deal; with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10683
https://github.com/root-project/root/issues/10684:31,Deployability,integrat,integrate,31,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:31,Integrability,integrat,integrate,31,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/issues/10684:964,Usability,simpl,simpler,964,"When using the SofieFunctor to integrate the SOFIE inference in RDF from Python, it works if we declare in C++ and; JIT the code as in line 51 of the tutorial `tmva/TMVA_SOFIE_RDataFrame.py`, see ; https://github.com/root-project/root/blob/master/tutorials/tmva/TMVA_SOFIE_RDataFrame.py#L51. but if we replace that line with ; ```; sofie_functor = ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""); ```; and then later use the other signature of `RDataFrame::Define`; ```; df1.Define(""DNN_Value"", sofie_functor, [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. it does not work. Doing: ; `print(sofie_functor)` results in None object. Trying also this , it does not work: ; ```; df1.Define(""DNN_Value"", ROOT.TMVA.Experimental.SofieFunctor[7,'TMVA_SOFIE_Higgs_trained_model::Session'](0,""""), [""rdfslot_"",""m_jj"", ""m_jjj"", ""m_lv"", ""m_jlv"", ""m_bb"", ""m_wbb"", ""m_wwbb""]); ```. Trying instead to make a simpler reproducible with a similar template functor works fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10684
https://github.com/root-project/root/pull/10685:1028,Deployability,configurat,configuration,1028,"tting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1047,Deployability,configurat,configuration,1047,"tting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:285,Integrability,interface,interface,285,"This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:346,Modifiability,variab,variables,346,"This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:979,Modifiability,config,configured,979,"This commit builds on previous work for getting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1028,Modifiability,config,configuration,1028,"tting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1047,Modifiability,config,configuration,1047,"tting GDB support for JITted and interpreted code working in cling. It adds a JIT event listener as well to create perf map files to allow profiling of interpreted/JITted code with cling. The functionality provided is disabled by default. The interface to enable it has been chosen to be via environment variables to allow both interpreted code and code that only links against ROOT to optionally; enable debugging/profiling. For reference, I am attaching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10685:1491,Performance,load,load,1491,"aching examples using `hsimple.C` tutorial below:. ```sh; $ export CLING_DEBUG=1; $ gdb --args bin/root.exe -l tutorials/hsimple.C; GNU gdb (Gentoo 12.1 vanilla) 12.1; Copyright (C) 2022 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law.; Type ""show copying"" and ""show warranty"" for details.; This GDB was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break hsimple; Function ""hsimple"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (hsimple) pending.; (gdb) run; Starting program: /srv/root/src/build/bin/root.exe -l tutorials/hsimple.C; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 813528]; [Detaching after vfork from child process 813530]; [Detaching after vfork from child process 813533]; [Detaching after vfork from child process 813557]; root [0] ; Processing tutorials/hsimple.C... Breakpoint 1, hsimple (getFile=0) at tutorials/hsimple.C:36; 36	 TString filename = ""hsimple.root"";; (gdb) bt; #0 hsimple (getFile=0) at tutorials/hsimple.C:36; #1 0x00007ffff7add02b in __cling_Un1Qu30 (vpClingValue=0x7fffffffa390) at input_line_9:2; #2 0x00007ffff2cc087f in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /srv/root/src/build/lib/libCling.so; #3 0x00007ffff2c312f0 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10685
https://github.com/root-project/root/pull/10686:80,Safety,avoid,avoiding,80,Especially the integral code in `RooAbsAnaConvPdf` can be made more; concise by avoiding boilerplate code for iterators and manual memory; management.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10686
https://github.com/root-project/root/issues/10687:153,Testability,test,test,153,### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/issues/10687:217,Testability,test,test,217,### Describe the bug. AddShapeFactor from HistFactory::Sample does not work and causes crashes when used. ### To Reproduce. execute the attached script [test.tar.gz](https://github.com/root-project/root/files/8815596/test.tar.gz). ### Setup. latest ROOT master on archlinux,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10687
https://github.com/root-project/root/pull/10688:97,Availability,error,error,97,"When compiled with latest gcc / clib, one get warnings like:; ```; /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’; ```. It is because of declaration:; ```; char ut_host[UT_HOSTSIZE]; __attribute_nonstring__; /* Hostname for remote login. */; ```. Seems to be, `ut_host` cannot be used as null-terminated string.; Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10688:306,Testability,log,login,306,"When compiled with latest gcc / clib, one get warnings like:; ```; /usr/include/string.h:241:27: error: ‘char* __builtin_strchr(const char*, int)’ argument 1 declared attribute ‘nonstring’; ```. It is because of declaration:; ```; char ut_host[UT_HOSTSIZE]; __attribute_nonstring__; /* Hostname for remote login. */; ```. Seems to be, `ut_host` cannot be used as null-terminated string.; Therefore copy value in TString before using it. Plus replace 0 -> nullptr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10688
https://github.com/root-project/root/pull/10689:206,Deployability,patch,patch,206,"Before this commit, if users requested `VariationsFor(result)` but; `result` did not depend on any variation, we constructed a (no-op); RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation; graph if it's not needed. RResultMap had to be taught how to deal; with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10689:85,Integrability,depend,depend,85,"Before this commit, if users requested `VariationsFor(result)` but; `result` did not depend on any variation, we constructed a (no-op); RVariedAction anyway and added it to the computation graph. With this patch we do not add this no-op node to the computation; graph if it's not needed. RResultMap had to be taught how to deal; with this case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10689
https://github.com/root-project/root/pull/10690:424,Modifiability,refactor,refactoring,424,"This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:538,Safety,avoid,avoid,538,"This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10690:498,Usability,simpl,simplify,498,"This is an old branch I had from when I was working on ROOT, but at the time I could not merge it because it required at least CMake 3.12 to work, and we were still requiring only 3.9 at the time. I took the time to rework the commits against the current master yesterday and today, as rebasing was too hard. The original pull request that contained these changes was https://github.com/root-project/root/pull/4299, but the refactoring of core/ was removed. I hope now this would be ok to merge to simplify a bit how libCore is built and avoid having to add include directories by hand to targets that link against libCore.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10690
https://github.com/root-project/root/pull/10692:322,Deployability,Update,Update,322,Use import like:. import { connectWebWindow } from './jsrootsys/modules/webwindow.mjs';; import { source_dir } from './jsrootsys/modules/core.mjs';. This let use widgets also with http redirection where top server path; may be handled not directly by the `THttpServer`. Correctly use client versioning for JSROOT modules. Update JSROOT - fixing TPaveText problems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10692
https://github.com/root-project/root/issues/10693:2394,Availability,error,error,2394,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:189,Modifiability,config,configuring,189,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3049,Modifiability,config,configuring,3049,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:4,Testability,test,test,4,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:242,Testability,test,test,242,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:456,Testability,TEST,TEST,456,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:619,Testability,test,test,619,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:761,Testability,test,test,761,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:945,Testability,test,test,945,"The test `clingtest-check-cling` fails for me with the output below. It seems that C++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnlo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1133,Testability,test,test,1133,"++ standard is misconfigured somewhere.; I used GCC 11 and did not specify a `-DCMAKE_CXX_STANDARD` when configuring. GCC 11.3 defaults to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1214,Testability,test,test,1214,"lts to C++17, but in this test (see RUN: at line 3 and 4 below) clang is called with `-std=c++14` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/te",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1331,Testability,test,test,1331,"` instead (My guess is that's the default for clang 9). ```; 1: FAIL: Cling :: CodeUnloading/PCH/VTables.C (36 of 185); 1: ******************** TEST 'Cling :: CodeUnloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1528,Testability,test,test,1528,"Unloading/PCH/VTables.C' FAILED ********************; 1: Script:; 1: --; 1: : 'RUN: at line 1'; mkdir -p ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path"" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1693,Testability,test,test,1693,""" || true; 1: : 'RUN: at line 2'; rm -f ""CompGen.h.pch"" && rm -f ""/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstanc",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1791,Testability,test,test,1791,"oading/PCH/Output/Rel/Path/Relative.pch""; 1: : 'RUN: at line 3'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:1988,Testability,test,test,1988,"/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2051,Testability,test,test,2051,"/Inputs/CompGen.h -o CompGen.h.pch; 1: : 'RUN: at line 4'; clang -x c++-header -fexceptions -fcxx-exceptions -std=c++14 -pthread /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76;",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2215,Testability,test,test,2215,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2354,Testability,test,test,2354,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:2705,Testability,Assert,Assertion,2705,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/issues/10693:3122,Testability,test,test,3122,"ading/PCH/Inputs/CompGen.h -o /srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path/Relative.pch; 1: : 'RUN: at line 5'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -Xclang -include-pch -Xclang CompGen.h.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: : 'RUN: at line 6'; cat /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C | /srv/root/src/build/interpreter/llvm/src/bin/cling --nologo -I/srv/root/src/build/interpreter/llvm/src/tools/clang/include -I/srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH -I/srv/root/src/build/interpreter/cling/test/CodeUnloading/PCH/Output/Rel/Path -include-pch Relative.pch 2>&1 | /srv/root/src/build/interpreter/llvm/src/bin/FileCheck /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C; 1: --; 1: Exit Code: 1; 1: ; 1: Command Output (stderr):; 1: --; 1: /srv/root/src/root/interpreter/cling/test/CodeUnloading/PCH/VTables.C:11:12: error: CHECK: expected string not found in input; 1: // CHECK: I was executed; 1: ^; 1: <stdin>:1:1: note: scanning from here; 1: cling: /srv/root/src/root/interpreter/cling/lib/Interpreter/CIFactory.cpp:926: bool {anonymous}::SetupCompiler(clang::CompilerInstance*, const cling::CompilerOptions&, bool, bool): Assertion `LangOpts.CPlusPlus17 && ""Language version mismatch""' failed.; 1: ^; 1: <stdin>:6:52: note: possible intended match here; 1: #4 0x00007faf5092270e __pthread_kill_implementation /usr/src/debug/sys-libs/glibc-2.35-r5/glibc-2.35/nptl/pthread_kill.c:44:76; 1: ^; 1: ; 1: --; ```; Adding `-DCMAKE_CXX_STANDARD=17` to the command line when configuring did not help, clang is still called with `-std=c++14` in the test and it still fails.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10693
https://github.com/root-project/root/pull/10698:641,Deployability,update,updated,641,"## This Pull request:; Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:; ```; using namespace TMVA::Experimental::SOFIE;; RModelParser_ONNX parser;; RModel model = parser.Parse(""path/to/model.onnx"");; model.Generate();; ```. Here's how the options can be used to :; - not use the session class; ```; model.Generate(Options::kNoSession);; ```; - not save the weights in a file; ```; model.Generate(Options::kNoWeightFile);; ```; - not use both; ```; model.Generate(Options::kNoSession | Options::kNoWeightFile);; ```. ## Checklist:. - [x] tested changes locally; - [] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10698:612,Testability,test,tested,612,"## This Pull request:; Use enum as flags for RModel::Generate(). By default, SOFIE will generate a session class and store the weights in a file:; ```; using namespace TMVA::Experimental::SOFIE;; RModelParser_ONNX parser;; RModel model = parser.Parse(""path/to/model.onnx"");; model.Generate();; ```. Here's how the options can be used to :; - not use the session class; ```; model.Generate(Options::kNoSession);; ```; - not save the weights in a file; ```; model.Generate(Options::kNoWeightFile);; ```; - not use both; ```; model.Generate(Options::kNoSession | Options::kNoWeightFile);; ```. ## Checklist:. - [x] tested changes locally; - [] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10698
https://github.com/root-project/root/pull/10699:165,Deployability,patch,patch,165,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:843,Deployability,patch,patch,843,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:24,Safety,Sanity check,Sanity checks,24,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:298,Security,access,access,298,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:791,Security,access,accesses,791,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10699:889,Testability,test,test,889,"**First two commits**:. Sanity checks for a non-jitted Vary asked the nominal Define'd; columns static type information that a jitted Define did not have. With this patch RJittedDefine should also have that type; information in most if not all cases. **Last commit**:. Fix potential invalid memory access when using Vary. Users can vary a single column or multiple columns simultaneously.; In the latter case, RVariation::fLastResults contains, for each; processing slot, an RVec of RVecs of results where the outer; dimension runs over the different columns and the inner one over; the varied values of each column. Before this commit, RVariation was initializing fLastResults to; the wrong size in the case of multiple columns varied simultaneously,; which ended up causing invalid memory accesses during the event loop; in some cases. This patch fixes the problem and adds a regression test.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10699
https://github.com/root-project/root/pull/10702:392,Performance,optimiz,optimization,392,"When varying multiple columns simultaneously, RVariation was destroying; and re-creating the per-column RVecs of varied values at every entry,; which resulted in a change in the address of the varied values between; entries, which caused invalid reads on the part of the RVariationReader; (which assumes the addresses of varied values are stable). The issue was hidden by RVec's small buffer optimization, which was; keeping addresses stable as long as the number of variations fit the; small buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10702
https://github.com/root-project/root/pull/10703:87,Availability,error,error,87,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:140,Availability,error,error,140,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:369,Availability,error,error,369,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:681,Deployability,update,updated,681,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:154,Security,access,access,154,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/pull/10703:651,Testability,test,tested,651,"# This Pull request:. ## Changes or fixes:. At FreeBSD 13.1, the following compilation error appears:; ```; core/base/src/TUUID.cxx:444:33: error: member access into incomplete type 'struct sockaddr'; if (ifa->ifa_addr->sa_family != AF_INET) { // check only IP4; ^; /usr/include/ifaddrs.h:37:9: note: forward declaration of 'sockaddr'; struct sockaddr *ifa_addr;; ^; 1 error generated.; ```; The `struct sockaddr` is defined in the header file sys/socket.h ([specification](https://pubs.opengroup.org/onlinepubs/9699919799.2018edition/basedefs/sys_socket.h.html#tag_13_61)), which is missing. The header is added in this request. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10703
https://github.com/root-project/root/issues/10704:1584,Availability,Error,Error,1584,"- webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1769,Availability,Error,Error,1769,"- veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:22,Performance,load,loading,22,"# Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:88,Performance,load,loading,88,"# Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1730,Performance,load,load,1730,"- veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1787,Performance,Load,LoadPCM,1787,"- veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2136,Performance,load,loaded,2136,"TH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2717,Performance,load,loaded,2717,"e: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4249,Performance,load,load-test,4249,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4331,Performance,load,load-test,4331,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3425,Safety,detect,detect,3425,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:900,Testability,test,test,900,"# Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1090,Testability,Test,Test,1090," bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1174,Testability,Test,Test,1174,"ies that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1194,Testability,Test,Test,1194,"latform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1357,Testability,test,test,1357,"n_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT com",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1552,Testability,Test,Test,1552," opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:1572,Testability,Test,Test,1572,"_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2255,Testability,test,test,2255,"n up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:2324,Testability,Test,Test,2324,"n up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3164,Testability,test,tests,3164," a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTS",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3282,Testability,test,test,3282,"ibs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3630,Testability,test,tests,3630,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3695,Testability,test,test,3695,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3778,Testability,Test,Test,3778,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3798,Testability,Test,Test,3798,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3911,Testability,test,test,3911,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:3987,Testability,Test,Test,3987,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4007,Testability,Test,Test,4007,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4100,Testability,test,test,4100,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4169,Testability,Test,Test,4169,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4189,Testability,Test,Test,4189,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4254,Testability,test,test,4254,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/issues/10704:4336,Testability,test,test,4336,"s, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.exe`) rather than the actual shared; library. The reason seems to be that, because of some bad stripping; of path components, the shared library isn't found by Cling and then; the binary image falls back to the executable binary image. . ## Why this is problematic . Many build tools (e.g., Autotools) uses temporary directories that; start with a dot (`.`), including for building examples and tests. The; current behaviour of ROOT prevents building production level packages; with these tools that has rigorous test suites and rich examples. . More than that, ROOT should not assume _anything_ given a path _name_.; Rather, it should use system tools to detect if a given path is a; directory, a file, or what not. File and directory names are; completely volatile and proper tools should be used to deduct what it; is the code is dealing with. ## Additional tests . Sub-directory with dot in name . 	$ make clean ; 	$ make test LIBDIR=foo.libs ; 	...; 	LD_LIBRARY_PATH=foo.libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Sub-directory with leading underscore . 	$ make clean ; 	$ make test LIBDIR=_libs; 	...; 	LD_LIBRARY_PATH=_libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	; Current directory . 	$ make clean ; 	$ make test LIBDIR=. ; 	...; 	LD_LIBRARY_PATH=.:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo. [root-library-load-test.tar.gz](https://github.com/root-project/root/files/8843058/root-library-load-test.tar.gz)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10704
https://github.com/root-project/root/pull/10707:32,Integrability,message,message,32,"This Pull request removes a log message reported when using MethodCategory, see ; https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10707:28,Testability,log,log,28,"This Pull request removes a log message reported when using MethodCategory, see ; https://root-forum.cern.ch/t/stray-cout-in-tmva-getmvavalue/50287",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10707
https://github.com/root-project/root/pull/10709:132,Modifiability,config,config,132,Including that header from cling breaks building ROOT with; external llvm and clang (which is needed e.g. for the conda; package): `config.h` is not avaiable in that scenario. cc: @chrisburr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10709
https://github.com/root-project/root/pull/10710:30,Availability,error,error,30,Fix the following compilation error on Windows 64:; ```; dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10710:84,Availability,error,error,84,Fix the following compilation error on Windows 64:; ```; dataframe_vary.cxx : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10710
https://github.com/root-project/root/pull/10714:81,Testability,test,test,81,More details in the commit descriptions. These changes speed up the stressRooFit test suite by about 5 %.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10714
https://github.com/root-project/root/pull/10716:503,Energy Efficiency,efficient,efficiently,503,"This PR aims to provide solution to https://github.com/root-project/root/issues/7702. * A new constructor of the `RLoopManager` is provided which accepts the new structure `RDatasetSpec`.; * Within the `RDatasetSpec` it is possible to specify multiple tree and file names, hence the `RLoopManager` can internally construct `TChains`.; * `RDatasetSpec` also handles friend chains/trees, e.g. horizontal concatenation of column; * `RDatasetSpec` accepts entry range argument; * Teach `RunTreeProcessorMT` efficiently handle the range, e.g. allow range in MT executions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10716
https://github.com/root-project/root/pull/10720:1485,Deployability,update,updated,1485,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1536,Deployability,update,updated,1536,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1682,Deployability,update,updated,1682,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1350,Safety,redund,redundancy,1350,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:652,Security,hash,hashed,652,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:204,Testability,test,test,204,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1525,Testability,test,testing,1525,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1605,Testability,test,test,1605,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:1652,Testability,test,tested,1652,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/pull/10720:424,Usability,simpl,simplified,424,"# This Pull request:; Makes changes to ROOT v7 in order to comply with the API for DAOS 2.0.x, affecting the libraries `RPageStorageDaos`, `RDaos` and `libdaos_mock`, as well as the `ntuple_storage_daos` test suite. ## Changes or fixes:; - As of DAOS 2.0, pool service replica ranks are not longer specified in DAOS URIs. Thus, `daos_pool_connect` now forgoes the `svc_rank_list` argument.; - Container addresses follow the simplified pattern `daos://($pool)/($container)`. ; - `RPageStorageDaos` consequently drops parsing enforcement of the previous pattern.; - DAOS 2.0 introduced support for creating pools and containers from a label that is then hashed internally as a UUID. Pool and containers are now identifiable by user-provided labels of up to 127 characters (alphanumeric, colon, period, hyphen or underscore) or by 36-character UUIDs. Labels that match a UUID pattern are explicitly forbidden. ; - `RDaos` now only supports container creation from user-supplied labels (via `daos_cont_create_with_label`), due to deprecated usage of `daos_cont_create` with user-supplied UUIDs. However, existing containers may still be opened by their UUIDs. ; - `RPool` and `RContainer` maintain a copy of valid labels (when supplied) and UUIDs (after successfully opening pools and containers respectively); - Generation of object IDs in `RDaos`: new redundancy, sharding and object type flags; `daos_obj_generate_oid` replaces `daos_obj_generate_id`. ; - The `libdaos_mock` library is updated in lockstep.; - RNTuple backend testing is updated to follow the DAOS 2.0 URI pattern, using labels for default test pool and containers. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10720
https://github.com/root-project/root/issues/10722:644,Availability,error,error-in-thisroot-csh-during-installation,644,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:673,Deployability,install,installation,673,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:69,Usability,Guid,Guide,69,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:235,Usability,guid,guide,235,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:354,Usability,Guid,Guide,354,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/issues/10722:459,Usability,clear,clear,459,"### Explain what you would like to see improved; The Getting Started Guide is a bit misleading concerning the usage of thisroot.sh; https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/documentation/users-guide/GettingStarted.md. ### Optional: share how it could be improved; - Either add a 'watermark' on top saying ""Users Guide is deprecated, check instead XYZ""; - Or remove the part about export ROOTSYS...; - Or make it very clear on top that the recommended thing is to use thisroot.sh, and then only below as 'backup' the manual variant. ### Additional context; See here: https://root-forum.cern.ch/t/syntax-error-in-thisroot-csh-during-installation/50312/4?u=ferhue",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10722
https://github.com/root-project/root/pull/10723:20,Safety,avoid,avoid,20,...in an attempt to avoid bogus broken comparisons in the; RDFSnapshotArrays.SingleThread test case in dataframe_snapshot; on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/pull/10723:90,Testability,test,test,90,...in an attempt to avoid bogus broken comparisons in the; RDFSnapshotArrays.SingleThread test case in dataframe_snapshot; on some platforms.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10723
https://github.com/root-project/root/issues/10724:1320,Availability,error,error,1320,"ter2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, ; input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840; #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., ; compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341; #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, ; input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", ; compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40); at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448; #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, ; line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0); at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608; #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995; #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353; #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681; #14 0x00007f5aa7265443 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f5a8ad24ec0); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368; ```. That seems unnecessary; TClass and friends should know it's an enumerator and should know the value of it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/issues/10724:234,Integrability,wrap,wrapPoint,234,"Running `ROOT.TParameter[""char""]().Print()` triggers the following backtrace:. ```; #6 0x00007f5aa1508536 in cling::Interpreter::EvaluateInternal (this=0x55c3b6db88f0, ; input=""TParameter<char>::kMultiply;"", CO=..., V=0x7ffeae65ef40, wrapPoint=45); at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #7 0x00007f5aa1506307 in cling::Interpreter::process (this=0x55c3b6db88f0, ; input=""TParameter<char>::kMultiply;"", V=0x7ffeae65ef40, T=0x0, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:840; #8 0x00007f5aa175d89a in cling::MetaProcessor::process (this=0x55c3b78351a0, input_line=..., ; compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40, disableValuePrinting=false); at /home/axel/build/root/master2/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:341; #9 0x00007f5aa12b19c0 in HandleInterpreterException (metaProcessor=0x55c3b78351a0, ; input_line=0x55c3bb82fd10 ""TParameter<char>::kMultiply;"", ; compRes=@0x7ffeae65eefc: cling::Interpreter::kSuccess, result=0x7ffeae65ef40); at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2448; #10 0x00007f5aa12b265d in TCling::ProcessLine (this=0x55c3b6cef830, ; line=0x55c3bb8310e0 ""TParameter<char>::kMultiply;"", error=0x0); at /home/axel/build/root/master2/src/core/metacling/src/TCling.cxx:2608; #11 0x00007f5aa710b936 in Cppyy::GetDatamemberOffset (scope=18, idata=3); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1995; #12 0x00007f5aa7288e96 in CPyCppyy::BuildScopeProxyDict (scope=18, pyclass=0x55c3bb8545f0); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:353; #13 0x00007f5aa728a648 in CPyCppyy::CreateScopeProxy (name=""TParameter<char>"", parent=0x55c3b870c0b0); at /home/axel/build/root/master2/src/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:681; #14 0x00007f5aa7265443 i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10724
https://github.com/root-project/root/pull/10725:24,Deployability,Update,Update,24,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:95,Deployability,release,releases,95,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:163,Deployability,release,releases,163,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:246,Deployability,Update,Update,246,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:847,Deployability,update,updated,847,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10725:382,Testability,test,tested,382,# This Pull request:. * Update XRootD builtin from [`v5.4.2`](https://github.com/xrootd/xrootd/releases/tag/v5.4.2) to [`v5.4.3`](https://github.com/xrootd/xrootd/releases/tag/v5.4.3); * Follow up to PR #10025 for v5.4.2. ## Changes or fixes:. * Update XRootD builtin from v5.4.2 to v5.4.3; - c.f. https://github.com/xrootd/xrootd/issues/1699 for full details. ## Checklist:. - [x] tested changes locally. - I didn't build ROOT from source (though c.f. https://gitlab.cern.ch/atlas-amglab/atlstats/-/merge_requests/71 for a source build with effectively this change) but PR #10025 builds and ; ```console; $ curl -sLO https://github.com/xrootd/xrootd/archive/v5.4.3.tar.gz; $ sha256sum v5.4.3.tar.gz ; 56a29c88232f2f384e151b148fcaaa8d8db5c5fdc4615193978c8f4f3a99663c v5.4.3.tar.gz; ```. so as this PR is mirroring 10025 it should be fine. - [N/A] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10725
https://github.com/root-project/root/pull/10726:51,Availability,error,error,51,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:224,Availability,error,error,224,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:261,Deployability,update,updated,261,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:119,Modifiability,variab,variable,119,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/pull/10726:160,Testability,test,tested,160,"# This Pull request:; Fixes the cmakeDIr undefined error that occurs on Windows ; ## Changes or fixes:; Added cmakeDir variable to cpt.py. ## Checklist:. - [X] tested changes locally: Ran --last-stable nsis with cpt.py, the error does not occur anymore; - [NA] updated the docs (if necessary). This PR fixes issue 426 (https://github.com/root-project/cling/issues/426)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10726
https://github.com/root-project/root/issues/10727:351,Availability,error,error,351,"Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```; Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script.; at JSRoot.core.js:325:21; at JSRoot.core.js:3:77; at JSRoot.core.js:5:3; ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed?. To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```; <!DOCTYPE html>; <html>; <head>; <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; </head>; <body>; </body>; </html>. ```. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/issues/10727:1008,Performance,load,load,1008,"Hello. I have a Web service that has been using JSRoot script that is taken from the ROOT server with the following reference:. `<script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; `. It used to be working fine with ROOT v6 but after the 'latest' soft link had been moved to 7.1.0 the page stopped working giving the following error in JS console:. ```; Uncaught (in promise) TypeError: Failed to resolve module specifier '../modules/core.mjs'. The base URL is about:blank because import() is called from a CORS-cross-origin script.; at JSRoot.core.js:325:21; at JSRoot.core.js:3:77; at JSRoot.core.js:5:3; ```. I have fixed the Web service by replacing the 'latest' token in the JSRoot reference with '6.3.4' but I think it will stop working again as soon as this version will be removed from the ROOT server. Am I doing something wrong or otherwise could this problem be fixed?. To reproduce the problem one should create an HTML file with the following content in a Web server and load it from a Web browser:. ```; <!DOCTYPE html>; <html>; <head>; <script src=""https://root.cern/js/latest/scripts/JSRoot.core.js""></script>; </head>; <body>; </body>; </html>. ```. Cheers,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10727
https://github.com/root-project/root/pull/10728:184,Deployability,update,updated,184,"# This Pull request: ; Adds a new starting point for cpt.py. ## Changes or fixes:; Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10728:153,Testability,test,tested,153,"# This Pull request: ; Adds a new starting point for cpt.py. ## Changes or fixes:; Added if __name__ == ""__main__"" block to cpt.py. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes 406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10728
https://github.com/root-project/root/pull/10729:366,Availability,down,down,366,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:297,Deployability,patch,patch,297,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/pull/10729:150,Performance,perform,performance,150,"Having that bit set on TBranches causes _a lot_ of thread; contention (~TBranch -> ~TNamed -> RecursiveRemove).; Similarly for leaves. This mitigates performance issues with MT runs on certain samples; where all branches and leaves have this bit set. For a reproducer provided by a CMS user, this patch provides a factor 9 speed-up, up to a factor 30 for a stripped down version of said reproducer that exacerbates the issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10729
https://github.com/root-project/root/issues/10732:182,Availability,error,error,182,"we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1412,Availability,error,error,1412,"r::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:858,Modifiability,plugin,pluginFWCoreServicesPlugins,858,"we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1087,Modifiability,plugin,pluginFWCoreServicesPlugins,1087,"7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMult",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1284,Modifiability,plugin,pluginFWCoreServicesPlugins,1284," [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1426,Modifiability,variab,variable,1426,"r::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:1443,Security,access,access,1443,"r::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:8,Testability,test,testing,8,"we are [testing](https://github.com/cms-sw/cmsdist/pull/7911) latest [root changes in cmssw](https://github.com/root-project/root/compare/f1e8d0c17d...4c13caa0ac) and we are getting error [a] in `ROOT::Fit::Fitter` code. Could it be related to change in [this PR](https://github.com/root-project/root/pull/10650)? Note that root master commit f1e8d0c17d works fine. . By the way, the CMSSW code which calls `Fitter::FitFCN` is https://github.com/cms-sw/cmssw/blob/6d2f66057131baacc2fcbdd203588c41c885b42c/RecoPPS/ProtonReconstruction/src/ProtonReconstructionAlgorithm.cc#L269-L281. FYI @[iarspider](https://github.com/iarspider). [a]; ```; #0 0x00002aac70829ae1 in poll () from /lib64/libc.so.6; #1 0x00002aac78b8872f in full_read.constprop () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #2 0x00002aac78b890bc in edm::service::InitRootHandlers::stacktraceFromThread() () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2217,Testability,test,tests,2217,"esPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2223,Testability,test,testBuildDir,2223,"esPlugins.so; #3 0x00002aac78b8ba0b in sig_dostack_then_abort () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/pluginFWCoreServicesPlugins.so; #4 <signal handler called>; #5 __cxxabiv1::(anonymous namespace)::adjust_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2478,Testability,test,tests,2478,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2484,Testability,test,testBuildDir,2484,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2733,Testability,test,tests,2733,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/issues/10732:2739,Testability,test,testBuildDir,2739,"t_pointer<void> (offset=<error reading variable: Cannot access memory at address 0xfffffffffffffff0>, base=0x7ffc4c62b5b0) at ../../../../libstdc++-v3/libsupc++/tinfo.h:65; #6 __cxxabiv1::__dynamic_cast (src_ptr=0x7ffc4c62b5b0, src_type=0x2aac6e5a6df0 <typeinfo for ROOT::Math::IBaseFunctionMultiDimTempl<double>>, dst_type=0x2aac6e5a69f0 <typeinfo for ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData>>, src2dst=0) at ../../../../libstdc++-v3/libsupc++/dyncast.cc:55; #7 0x00002aac6e40b2d0 in ROOT::Fit::Fitter::GetDataFromFCN<ROOT::Fit::BasicFCN<ROOT::Math::IBaseFunctionMultiDimTempl<double>, ROOT::Math::IParametricFunctionMultiDimTempl<double>, ROOT::Fit::BinData> > (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/inc/Fit/Fitter.h:560; #8 0x00002aac6e407b8e in ROOT::Fit::Fitter::ExamineFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:984; #9 0x00002aac6e4023a1 in ROOT::Fit::Fitter::FitFCN (this=0x2aacc8992140) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-c963ca4826d5b69bf3ff29bd97e3fad4/root-6.27.01/math/mathcore/src/Fitter.cxx:305; #10 0x00002aace777dc21 in ProtonReconstructionAlgorithm::reconstructFromMultiRP(edm::RefVector<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite, edm::refhelper::FindUsingAdvance<std::vector<CTPPSLocalTrackLite, std::allocator<CTPPSLocalTrackLite> >, CTPPSLocalTrackLite> > const&, LHCInfo const&, std::ostream&) const () from /cvmfs/cms-ci.cern.ch/week0/cms-sw/cmsdist/7911/25338/CMSSW_12_5_ROOT6_X_2022-06-06-2300/lib/el8_amd64_gcc10/libRecoPPSProtonReconstruction.so; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10732
https://github.com/root-project/root/pull/10733:97,Deployability,Update,Update,97,Create `http` group for related classes; Re-format doxygen documentation of all related classes; Update JSROOT.md and THttpServer.md; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10733:134,Deployability,Update,Update,134,Create `http` group for related classes; Re-format doxygen documentation of all related classes; Update JSROOT.md and THttpServer.md; Update JSROOT,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10733
https://github.com/root-project/root/pull/10734:11,Deployability,release,release,11,A new beta release has been published this week:; https://docs.python.org/3.11/whatsnew/3.11.html,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10734
https://github.com/root-project/root/pull/10736:310,Modifiability,extend,extended,310,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:68,Performance,queue,queues,68,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:140,Safety,avoid,avoids,140,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:279,Testability,test,test,279,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10736:79,Usability,clear,cleared,79,"Change the buffer management in the new RooFit BatchMode such that; queues get cleared when the RooFitDriver gets destructed. Like this one avoids the steady increase in memory that one would get; when doing different fits in one go with different numbers of events,; such as in test suites or MC studies with extended models.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10736
https://github.com/root-project/root/pull/10738:163,Deployability,install,install,163,"# This Pull request:; Fixes the verbose output flag for cpt.py; ## Changes or fixes:; Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:234,Deployability,update,updated,234,"# This Pull request:; Fixes the verbose output flag for cpt.py; ## Changes or fixes:; Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/pull/10738:203,Testability,test,tested,203,"# This Pull request:; Fixes the verbose output flag for cpt.py; ## Changes or fixes:; Added cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON, then make -j (number of cores) install is called. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in meta issue list for cpt.py 406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10738
https://github.com/root-project/root/issues/10739:224,Safety,avoid,avoid,224,"### Explain what you would like to see improved; Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/issues/10739:92,Security,access,access,92,"### Explain what you would like to see improved; Implement a (templated) class that proxies access to STL collections. A major difference w.r.t. `TVirtualCollectionProxy` is that template specializations will be provided to avoid going through `TClass` in case the type is known at compile-time. This is a requirement for #10326, and enabling RField support for other STL collections.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10739
https://github.com/root-project/root/pull/10740:433,Availability,down,down,433,"After iterating over the shape factors and filling a temporary vector of; `ParamHistFunc` pointers that all point to args in the proto workspace,; there was another iteration over this vector, importing the objects; again into the workspace that are already in it. The problem was that the original objects were then deleted, but since; they were already in the workspace the workspace contents were deleted,; which caused segfaults down the line. Needs to be backported to 6.26. Second commit unrelated to the bugfix, just some code modernizations. Closes #10687.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10740
https://github.com/root-project/root/pull/10741:115,Safety,abort,abort,115,Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:; ```; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!terminate(); VCRUNTIME140!_std_terminate(); VCRUNTIME140_1!??; VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_CxxFrameHandler4(); d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(); ntdll!_chkstk(); ntdll!RtlUnwindEx(); ntdll!RtlUnwind(); VCRUNTIME140!_report_gsfailure(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(); ucrtbase!seh_filter_exe(); python!??; VCRUNTIME140!_C_specific_handler(); ntdll!_chkstk(); ntdll!RtlRaiseException(); ntdll!KiUserExceptionDispatcher(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/pull/10741:653,Safety,abort,abort,653,Fix the following crash when running `roodataset-numpy` and `roodatahist-numpy` on Windows 64:; ```; *** Break *** abort. ==========================================; =============== STACKTRACE ===============; ==========================================. ================ Thread 0 ================; C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(198): `anonymous namespace'::TExceptionHandlerImp::HandleException(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(); ucrtbase!raise(); ucrtbase!abort(); ucrtbase!terminate(); VCRUNTIME140!_std_terminate(); VCRUNTIME140_1!??; VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_NLG_Return2(); VCRUNTIME140_1!_CxxFrameHandler4(); d:\a01\_work\43\s\src\vctools\crt\vcstartup\src\gs\amd64\gshandlereh4.cpp(86): __GSHandlerCheck_EH4(); ntdll!_chkstk(); ntdll!RtlUnwindEx(); ntdll!RtlUnwind(); VCRUNTIME140!_report_gsfailure(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\base\src\TException.cxx(33): Throw(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(201): `anonymous namespace'::TExceptionHandlerImp::HandleException(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\core\winnt\src\TWinNTSystem.cxx(1766): TWinNTSystem::DispatchSignals(); ucrtbase!seh_filter_exe(); python!??; VCRUNTIME140!_C_specific_handler(); ntdll!_chkstk(); ntdll!RtlRaiseException(); ntdll!KiUserExceptionDispatcher(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\cppyy-backend\clingwrapper\src\clingwrapper.cxx(600): Cppyy::GetActualClass(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\bindings\pyroot\cppyy\CPyCppyy\src\ProxyWrappers.cxx(897): CPyCppyy::BindCppObject(); C:\build\night\LABEL\windows64\SPEC\default\V\master\root\b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10741
https://github.com/root-project/root/issues/10742:935,Performance,perform,performance,935,"This. ```cpp; #include <TFile.h>; #include <TROOT.h>. void foo() {; // works; auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();. // doesn't work; auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();; }; ```. yields. ```; Processing foo.cpp...; Collection name='Files', class='TList', size=0 // OK; Collection name='Files', class='TList', size=1 // KO; TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ; ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10742:1095,Performance,load,loads,1095,"This. ```cpp; #include <TFile.h>; #include <TROOT.h>. void foo() {; // works; auto *f2 = TFile::Open(""~/Scratchpad/work/UnROOT_RDataFrame_MiniBenchmark/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();. // doesn't work; auto *f = TFile::Open(""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root"", ""READ_WITHOUT_GLOBALREGISTRATION"");; gROOT->GetListOfFiles()->Print();; }; ```. yields. ```; Processing foo.cpp...; Collection name='Files', class='TList', size=0 // OK; Collection name='Files', class='TList', size=1 // KO; TFile: name=root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root, title=, option=READ; ```. i.e. the `READ_WITHOUT_GLOBALREGISTRATION` is ignored when using `TFile::Open` to read a file via xrootd. This might lead to unexpected performance degradation as well as use-after-deletes in some cases (e.g. a `TChain` with `kWithoutGlobalRegistration` uses `TFile::Open` to read a remote file, loads a tree (which will have the `kMustCleanup` bit reset by the `TChain`), then if the global list of files is cleaned before the `TChain` is destroyed the chain will have a dangling pointer to its `fFile` and `fTree`). This is likely not just an issue with xrootd files but all TFile implementations except the local.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10742
https://github.com/root-project/root/issues/10743:479,Integrability,Wrap,WrapperCall,479,"Given. ```python; import ROOT. df = ROOT.RDataFrame(""Events"", ""root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root""); ```. I see that `TROOT::EndOfProcessCleanups()` is called twice, once before the `RDataFrame` destructor, once after, with these callstacks:. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff7e7758a in WrapperCall (method=93825045955840, nargs=0, args_=0x7fffffffdc30, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, result=0x0) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #2 0x00007ffff7e778bc in Cppyy::CallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, nargs=0, args=0x7fffffffdc30) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:829; #3 0x00007ffff707536a in GILCallV (method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #4 0x00007ffff7077a1b in CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=0x7ffff70fd980 <(anonymous namespace)::InitExecFactories_t::InitExecFactories_t()::{lambda()#41}::operator()() const::e>, method=93825045955840, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #5 0x00007ffff7058a76 in CPyCppyy::CPPMethod::ExecuteFast (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #6 0x00007ffff7059020 in CPyCppyy::CPPMethod::ExecuteProtected (this=0x555558890a70, self=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ctxt=0x7fffffffdc10) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #7 0x00007ffff70582a9 in CPyCppyy::CPPMethod::Execu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3430,Performance,optimiz,optimized,3430," CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3452,Performance,optimiz,optimized,3452," CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:3479,Performance,optimiz,optimized,3479," CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7fffe4562830, args=0x7ffff7904070, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4043,Performance,optimiz,optimized,4043,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #6 0x0000555555555045 in _start (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4357,Performance,optimiz,optimized,4357,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #6 0x0000555555555045 in _start (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4379,Performance,optimiz,optimized,4379,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #6 0x0000555555555045 in _start (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/issues/10743:4406,Performance,optimiz,optimized,4406,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #6 0x0000555555555045 in _start (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10743
https://github.com/root-project/root/pull/10744:185,Deployability,configurat,configuration-option,185,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:275,Deployability,update,updated,275,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:185,Modifiability,config,configuration-option,185,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10744:245,Testability,test,tested,245,# This Pull request:. HistFactory doesn't currently allow to produce workspaces with weighted data.; This PR sets out to try and alleviate this shortcoming. ## Changes or fixes:. Add a configuration-option `storeDataError`. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10744
https://github.com/root-project/root/pull/10745:54,Availability,error,error,54,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:264,Deployability,update,updated,264,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:202,Modifiability,variab,variable,202,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10745:233,Testability,test,tested,233,"# This Pull request: ; Fixes the undefined llvm_flags error that occurs when --last-stable is called. ## Changes or fixes: ; Added a call to the download_llvm_binary function, which sets the llvm_flags variable. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue 423 (https://github.com/root-project/cling/issues/423)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10745
https://github.com/root-project/root/pull/10747:20,Availability,avail,available,20,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:593,Availability,avail,available,593,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:100,Energy Efficiency,schedul,scheduler,100,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:202,Energy Efficiency,schedul,scheduler,202,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:949,Integrability,depend,dependency,949,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/pull/10747:781,Testability,log,logic,781,"The number of cores available in the Dask cluster object, i.e. those; that are already known to the scheduler, can be retrieved from the; client object through the `ncores()` method. In some cases, the scheduler has no information about the worker; nodes when the user first creates it. Most notably, when connecting; to batch resources with e.g. an HTCondorCluster. In this case, the; number of cores is actually known only when the resource manager; starts the requested jobs and this can happen much later in the; application. In these cases, we can infer the number of cores that; will be available from the specification that was passed by the user; to when creating the cluster object. This is stored in dictionary; attributes of the cluster itself. In order to dispatch the logic on the types of clusters that; connect to batch computing resources, we have to import also the; dask_jobqueue module, which effectively becomes another runtime; dependency when using the Dask backend.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10747
https://github.com/root-project/root/issues/10749:232,Availability,error,errors,232,"This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto m = ROOT::Experimental::RNTupleModel::Create();; auto x = m->MakeField<int>(""x"", 42);; auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",; ""f.root"");; r->Fill();; }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");; df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();; }; ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/issues/10749:730,Testability,test,test,730,"This issue is just a reminder that we need to resolve this TODO:. https://github.com/root-project/root/blob/89776f40f6f9a0f1ea769ed86f8280696b85e01f/tree/dataframe/src/RNTupleDS.cxx#L288-L296. so that e.g. the following wrong usage errors out:. ```cpp; #include <ROOT/RNTuple.hxx>; #include <ROOT/RNTupleDS.hxx>; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto m = ROOT::Experimental::RNTupleModel::Create();; auto x = m->MakeField<int>(""x"", 42);; auto r = ROOT::Experimental::RNTupleWriter::Recreate(std::move(m), ""n"",; ""f.root"");; r->Fill();; }. auto df = ROOT::Experimental::MakeNTupleDataFrame(""n"", ""f.root"");; df.Filter([] (std::string &x) { return !x.empty(); }, {""x""}).Count().GetValue();; }; ```. (on my machine the test above executes without crashes, but that's just luck)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10749
https://github.com/root-project/root/pull/10750:6,Usability,simpl,simpler,6,It is simpler to read and faster to compile.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10750
https://github.com/root-project/root/pull/10752:69,Availability,error,error,69,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:331,Availability,error,error,331,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1036,Availability,error,error,1036,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:1409,Availability,error,error,1409,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10752:207,Usability,Clear,ClearMustCleanupBits,207,"I was failing to build ROOT on Fedora 36 (gcc 12) with the following error. ```; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx: In function ‘void ROOT::Internal::TreeUtils::ClearMustCleanupBits(TObjArray&)’:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:238:13: error: invalid use of incomplete type ‘class TBranch’; 238 | branch->ResetBit(kMustCleanup);; | ^~; In file included from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TTree.h:30,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/TChain.h:24,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/InternalTreeUtils.hxx:21,; from /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:9:; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:239:38: error: invalid use of incomplete type ‘class TBranch’; 239 | TObjArray *subBranches = branch->GetListOfBranches();; | ^~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/inc/ROOT/TIOFeatures.hxx:17:7: note: forward declaration of ‘class TBranch’; 17 | class TBranch;; | ^~~~~~~; /home/vpadulan/Programs/rootproject/rootsrc/tree/tree/src/InternalTreeUtils.cxx:241:33: error: invalid use of incomplete type ‘class TBranch’; 241 | TObjArray *leaves = branch->GetListOfLeaves();; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10752
https://github.com/root-project/root/pull/10754:25,Availability,fault,fault,25,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:516,Safety,avoid,avoid,516,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:712,Safety,avoid,avoid,712,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:375,Security,access,access,375,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:615,Testability,test,tests,615,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:672,Testability,test,tests,672,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:777,Testability,test,tests,777,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/pull/10754:920,Testability,test,tests,920,"There was a segmentation fault in the RooFit batch mode with; multithreading that happened when there were too many threads for the; number of events to be calculated. This caused a `std::size_t` underflow in this line:; ```C++; // roofit/batchcompute/src/RooBatchCompute.cxx; batches.setNEvents(nEvents - idx * batches.getNEvents());; ```; And then the computation tried to access entries that were out of; bounds. This commit adds one more line to reset the number of threads to how; many are needed. Like this we avoid the underflow and also spawing; unnecessary threads. This PR also changes which stressRooFit tests are declared as longtest,; such that the BatchMode tests are also run in the CI and we can avoid; problems like this in the future. Before, the interpreted tests were not declared as longtests, and the; compiled versions were not. This is now flipped, such that the compiled; BatchMode CPU and CUDA tests are also run without `longtest`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10754
https://github.com/root-project/root/issues/10758:70,Deployability,patch,patch,70,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:76,Deployability,release,release,76,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:149,Deployability,release,releases,149,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:384,Deployability,patch,patch,384,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:390,Deployability,release,release,390,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:610,Deployability,patch,patch,610,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:616,Deployability,release,release,616,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10758:1447,Deployability,patch,patches,1447,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.06. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/10840; - [x] https://github.com/root-project/root/issues/10869. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/9423; - [x] https://github.com/root-project/root/pull/10736; - [x] https://github.com/root-project/root/pull/10740; - [x] https://github.com/root-project/root/pull/10754; - [x] https://github.com/root-project/root/pull/10802; - [x] https://github.com/root-project/root/pull/10884; - [x] https://github.com/root-project/root/pull/10885; - [x] https://github.com/root-project/root/pull/10832; - [x] https://github.com/root-project/root/pull/10921; - [x] https://github.com/root-project/root/pull/10909; - [x] https://github.com/root-project/root/pull/9912; - [x] https://github.com/root-project/root/pull/10989; - [x] https://github.com/root-project/root/pull/11018; - [x] https://github.com/root-project/root/pull/11023. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/10803; 2. https://github.com/root-project/root/pull/10986; 3. https://github.com/root-project/root/pull/11057",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10758
https://github.com/root-project/root/issues/10759:171,Availability,error,errors,171,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:290,Availability,down,download,290,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:62,Modifiability,config,config,62,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:469,Modifiability,config,config,469,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:540,Modifiability,config,config,540,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:611,Modifiability,config,config,611,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:713,Modifiability,config,config,713,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:762,Modifiability,config,config,762,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:833,Modifiability,config,config,833,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:904,Modifiability,config,config,904,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:987,Modifiability,config,config,987,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1036,Modifiability,config,config,1036,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1107,Modifiability,config,config,1107,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1178,Modifiability,config,config,1178,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1249,Modifiability,config,config,1249,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/issues/10759:1267,Testability,test,test,1267,"- [x] Checked for duplicates. ### Describe the bug; The `root-config` script fails in several ways when located in a `PATH` containing spaces. . ### Expected behavior; No errors when there are spaces in the path. . ### To Reproduce; ```; mkdir foo\ bar; cd foo\ bar; wget https://root.cern/download/root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; tar xf root_v6.26.04.Linux-ubuntu18-x86_64-gcc7.5.tar.gz; source root/bin/thisroot.sh ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; ```; It also affects other output (as expected):; ```; $ root-config --incdir ; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me ./include; ```; and:; ```; $ root-config --version; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 26: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 31: [: too many arguments; /home/me/foo bar/root/bin/root-config: line 553: test: /home/me: binary operator expected; cannot read /home/me; ./include/RVersion.h; ```. ### Setup; 1. ROOT: versions: seen with 6.14, 6.26, likely others; 2. Operating system: any Linux-based system (seen with Ubuntu in WSL, Gentoo). ### Additional context; While spaces in paths are always nasty, this case was reported by a student of mine (who extracted the tarball in a subdirectory with spaces).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10759
https://github.com/root-project/root/pull/10760:1215,Testability,test,test,1215,"# This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,; Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h; math/mathcore/src/TMath.cxx; math/mathcore/test/testTMath.cxx; tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1220,Testability,test,testTMath,1220,"# This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,; Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h; math/mathcore/src/TMath.cxx; math/mathcore/test/testTMath.cxx; tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10760:1287,Testability,test,tested,1287,"# This Pull request:. Implemented relativistic version of breit wigner (non-relativistic case already exists in TMath). Define BreitWignerRelativistic(Double_t x, Double_t median=0, Double_t gamma=1) in TMath.h and then calculate in TMath.cxx, a similar non relativistic function BreitWigner already exists in the same location which was used as a template. A tutorial BreitWigner.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case. The output plot from tutorials/math/BreitWigner.C which produces a plot using the BreitWignerRelativistic function which is added in this pull request is [here](https://cernbox.cern.ch/index.php/s/JreHs4sOPzLiU2T). This pull request has been discussed previously in this pull request: https://github.com/root-project/root/pull/9926#issuecomment-1155029284 and in this forum post: https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844/. Due to issues merging this a new pull request has been made from a fresh pull of master. Tagging @lmoneta from previous pull request. Thank you for your help,; Jack. ## Changes or fixes:. math/mathcore/inc/TMath.h; math/mathcore/src/TMath.cxx; math/mathcore/test/testTMath.cxx; tutorials/math/BreitWigner.C. ## Checklist:. - [ x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10760
https://github.com/root-project/root/pull/10761:1842,Availability,error,errors,1842,"](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not filled correctly in the Asimov data that is created by; // AsymptoticCalculator::GenerateAsimovData(). But this is a completely; // different issue.; ```; Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:2071,Availability,error,errors,2071,"](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not filled correctly in the Asimov data that is created by; // AsymptoticCalculator::GenerateAsimovData(). But this is a completely; // different issue.; ```; Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1067,Modifiability,Config,ConfigParser,1067,"stant) by using something like. ```; <ParamSetting Val=1 Const=""True""> myNP </ParamSetting>; ```. However the Asimov dataset created by `hist2workspace` does not respect; this setting, because in; [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1142,Modifiability,config,config,1142,"tting Val=1 Const=""True""> myNP </ParamSetting>; ```. However the Asimov dataset created by `hist2workspace` does not respect; this setting, because in; [MakeCombiendModel](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10761:1435,Security,Validat,Validation,1435,"](https://root.cern/doc/master/HistoToWorkspaceFactoryFast_8cxx_source.html#l02109); the Asimov workspace is created before the ParamSettings are applied. This commit is fixing this problem. The problem can be reproduced with the following script/instructions:. ```C++; using namespace RooStats;; using namespace HistFactory;. // Step 1: initialize the XML files; //; // Run prepareHistFactory before in this directory; //; // Modify the GaussExample in the generated example to be:; //; // <Measurement Name=""GaussExample"" Lumi=""1."" LumiRelErr=""0.1"" >; // <POI>SigXsecOverSM</POI>; // <ParamSetting Const=""True"">Lumi</ParamSetting>; // <ParamSetting Val=""20"" Const=""True"">alpha_syst1</ParamSetting>; // </Measurement>. // Step 2: Create the RooWorkspace; //. ConfigParser parser{};; auto measurements = parser.GetMeasurementsFromXML(""config/example.xml"");. // Get the first example, the GaussExample; Measurement& meas = measurements.front();. // Collect the histograms from their files,; meas.CollectHistograms();. // Now, do the measurement; std::unique_ptr<RooWorkspace> ws{MakeModelAndMeasurementFast( meas )};. // Step 3: Validation plot to show mismatch between model and Asimov data; //. auto x = ws->var(""obs_x_channel1"");; auto data = ws->data(""asimovData"");; auto pdf = ws->pdf(""model_channel1"");. // Draw the asimov data together with the model and check if they match; TCanvas c1(""c1"");; RooPlot *xframe = x->frame();; data->plotOn(xframe);; pdf->plotOn(xframe);. xframe->Draw();. c1.SaveAs(""plot.png"");. // Note that the errors will be plotted wrongly if the Asimov data is; // correct. That's because if the changed alpha_syst1 value is considered; // correctly, the asimov dataset has non-integer weights. In this case, the; // plotting uses SumW2 errors instead of Poisson erros, and the weights; // squared is not filled correctly in the Asimov data that is created by; // AsymptoticCalculator::GenerateAsimovData(). But this is a completely; // different issue.; ```; Closes #8186.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10761
https://github.com/root-project/root/pull/10762:477,Energy Efficiency,efficient,efficient,477,"The `RooAbsReal::getPropagatedError()` function was using some of the; most expensive operations in RooFit for larger computation graphs:; cloning the model, and figuring out parameters and observables. This was done for no apparent reason, as the `RooAbsReal` is not mutated; by `getPropagaterError`. Parameter values are slightly changed for; reevaluation, but they are reset right after. A final call to `getVal()`; is enough to reset the original state, which is much more efficient than; cloning everything. This change was motivated by the following forum post:; https://root-forum.cern.ch/t/getpropagatederror-method-taking-too-long-to-run/50392",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10762
https://github.com/root-project/root/issues/10763:238,Availability,error,errors,238,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:109,Deployability,integrat,integration,109,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:889,Deployability,integrat,integration,889,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:992,Deployability,integrat,integration,992,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:109,Integrability,integrat,integration,109,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:889,Integrability,integrat,integration,889,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:992,Integrability,integrat,integration,992,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:170,Performance,perform,perform,170,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/issues/10763:730,Testability,Log,Log,730,"When using `RooGenericPdf` to implement custom PDF's, fitting becomes quite slow due to the use of numerical integration. This becomes a big problem when one needs to be perform several fits on the PDF (such as when studying systematical errors or statistical significances). It would be great if we could set an expression for the analytical integral the same way we already do for the PDF itself. As concrete example, if one needed to implement a PDF such as `f(x) = a/x + b*x + c`, it feels like we should be able to do; ```c; // Define custom pdf; RooGenericPdf my_pdf(""my_pdf"", ""x[1]/x[0] + x[2]*x[0] + x[3]"", RooArgList(x, a, b, c));; // Set formula for analytical integral; my_pdf.SetAnalyticalIntegralFormula(""x[1]*TMath::Log(x[0]) + x[2]*x[0]*x[0]/2 + x[0]*x[3]"");; ```. This would be implemented in such way that just creating an `RooGenericPdf` object would set it to numerical integration by default, and then calling `SetAnalyticalIntegralFormula()` would make it use analytical integration based on the supplied formula. Follow up from https://root-forum.cern.ch/t/analytical-integral-for-roogenericpdf/50409",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10763
https://github.com/root-project/root/pull/10766:960,Energy Efficiency,power,power,960,"The longtime-deprecated `RooStats::HistFactory::EstimateSummary` class; is removed, including the functions that use it. The information that it; was meant to store is managed by the; `RooStats::HistFactory::Measurement` object since many years. As printed out by the HistFactory in a warning message for a long time; already, setting the `Const` attribute to the `<NormFactor>` tag is; deprecated and it will be ignored. Instead, add; `<ParamSetting Const=""True""> myparam </ParamSetting>`; to your top-level XML's `<Measurement>` entry.; ; This deprecation implied that the constant parameter flag in the; `RooStats:HistFactory::NormFactor` class had no effect as well. To avoid; ambiguity in the future, the possibility to set and retrieve this flag with; `NormFactor::SetConst()` and `NormFactor::GetConst()` was removed, and the; aforementioned deprecated warning is not printed anymore. Closes #8059. FYI @gartrog and @cburgard, if as ATLAS Higgs factory power users you have; something against this change please let me know!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10766
https://github.com/root-project/root/pull/10766:293,Integrability,message,message,293,"The longtime-deprecated `RooStats::HistFactory::EstimateSummary` class; is removed, including the functions that use it. The information that it; was meant to store is managed by the; `RooStats::HistFactory::Measurement` object since many years. As printed out by the HistFactory in a warning message for a long time; already, setting the `Const` attribute to the `<NormFactor>` tag is; deprecated and it will be ignored. Instead, add; `<ParamSetting Const=""True""> myparam </ParamSetting>`; to your top-level XML's `<Measurement>` entry.; ; This deprecation implied that the constant parameter flag in the; `RooStats:HistFactory::NormFactor` class had no effect as well. To avoid; ambiguity in the future, the possibility to set and retrieve this flag with; `NormFactor::SetConst()` and `NormFactor::GetConst()` was removed, and the; aforementioned deprecated warning is not printed anymore. Closes #8059. FYI @gartrog and @cburgard, if as ATLAS Higgs factory power users you have; something against this change please let me know!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10766
https://github.com/root-project/root/pull/10766:674,Safety,avoid,avoid,674,"The longtime-deprecated `RooStats::HistFactory::EstimateSummary` class; is removed, including the functions that use it. The information that it; was meant to store is managed by the; `RooStats::HistFactory::Measurement` object since many years. As printed out by the HistFactory in a warning message for a long time; already, setting the `Const` attribute to the `<NormFactor>` tag is; deprecated and it will be ignored. Instead, add; `<ParamSetting Const=""True""> myparam </ParamSetting>`; to your top-level XML's `<Measurement>` entry.; ; This deprecation implied that the constant parameter flag in the; `RooStats:HistFactory::NormFactor` class had no effect as well. To avoid; ambiguity in the future, the possibility to set and retrieve this flag with; `NormFactor::SetConst()` and `NormFactor::GetConst()` was removed, and the; aforementioned deprecated warning is not printed anymore. Closes #8059. FYI @gartrog and @cburgard, if as ATLAS Higgs factory power users you have; something against this change please let me know!",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10766
https://github.com/root-project/root/pull/10768:121,Availability,error,error,121,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10768
https://github.com/root-project/root/pull/10768:171,Availability,Error,Error,171,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10768
https://github.com/root-project/root/pull/10768:426,Deployability,update,updated,426,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10768
https://github.com/root-project/root/pull/10768:337,Testability,test,test,337,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10768
https://github.com/root-project/root/pull/10768:396,Testability,test,tested,396,# This Pull request: Fixes the Implementation of Max Pool operator for 1d and 3d cases.; Earlier it was giving a runtime error for 1d and 3d cases of Max Pool operator. ; Error is described here.; ![image](https://user-images.githubusercontent.com/84740927/174000876-7cd1e82c-86b8-4713-bf11-ef36f66912a1.png); I have also added the unit test for Max Pool 1d and 3d Operator. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10768
https://github.com/root-project/root/pull/10770:58,Availability,failure,failure,58,# This Pull request:. ## Changes or fixes:; Fixes linking failure with libfreetype on macOS (arm and intel) due to missing brotli library. Brotli support is not needed for the fonts ROOT uses. ## Checklist:. - [x ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10770
https://github.com/root-project/root/pull/10770:245,Deployability,update,updated,245,# This Pull request:. ## Changes or fixes:; Fixes linking failure with libfreetype on macOS (arm and intel) due to missing brotli library. Brotli support is not needed for the fonts ROOT uses. ## Checklist:. - [x ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10770
https://github.com/root-project/root/pull/10770:215,Testability,test,tested,215,# This Pull request:. ## Changes or fixes:; Fixes linking failure with libfreetype on macOS (arm and intel) due to missing brotli library. Brotli support is not needed for the fonts ROOT uses. ## Checklist:. - [x ] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10770
https://github.com/root-project/root/pull/10772:538,Testability,test,test,538,"So far, the a constructorr match was reported for; `RooWorkspace::factory` when the number of constructor args was larger; than the number of args passed to `factory`. Obviously, this lead to false positives, and it should actually check if; the number of passed args (plus 2 for name and title) is somewhere; between the number of minimum and maximum arguments that the constructor; can take. In other works, instead of assuming there is an arbitrary; number of default arguments one should do the check with their exact; number. A unit test to check that this works now is also implemented. Closes #7965.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10772
https://github.com/root-project/root/issues/10774:375,Availability,Error,Error,375,"I encountered the following inconcistent behaviour in the `TTreeReader`; ```cpp; auto dfWriter0 = RDataFrame(3).Define(""x"", [] { return 1; });; dfWriter0.Snapshot<int>(""treeA"", ""file0.root"", {""x""});; auto chain = std::make_shared<TChain>(""treeA"");; chain->Add(""file0.root"");; TTreeReader r(chain.get(), chain->GetEntryList());; r.SetEntriesRange(4, 5);; ```; this produces: `Error in <TTreeReader::SetEntriesRange()>: Error setting first entry 4: one of the readers was not successfully initialized`, which is good (as expected). On the other hand, if the range becomes `r.SetEntriesRange(3, 5)` - start is now the last index + 1, there is no error produced or etc. Using gdb, I saw that there is a call in `SetEntriesRange` to `SetEntry(beginEntry - 1)` (https://github.com/root-project/root/blob/f841b96e634b7f7136b0c80da0f9394e8e370314/tree/treeplayer/src/TTreeReader.cxx#L438). `SetEntry` however, calls `SetEntryBase`, which modifies `fEntry`. Hence, the quickfix to call `SetEntry(beginEntry)` is obviously dangerous. CC: @eguiraud @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10774
https://github.com/root-project/root/issues/10774:418,Availability,Error,Error,418,"I encountered the following inconcistent behaviour in the `TTreeReader`; ```cpp; auto dfWriter0 = RDataFrame(3).Define(""x"", [] { return 1; });; dfWriter0.Snapshot<int>(""treeA"", ""file0.root"", {""x""});; auto chain = std::make_shared<TChain>(""treeA"");; chain->Add(""file0.root"");; TTreeReader r(chain.get(), chain->GetEntryList());; r.SetEntriesRange(4, 5);; ```; this produces: `Error in <TTreeReader::SetEntriesRange()>: Error setting first entry 4: one of the readers was not successfully initialized`, which is good (as expected). On the other hand, if the range becomes `r.SetEntriesRange(3, 5)` - start is now the last index + 1, there is no error produced or etc. Using gdb, I saw that there is a call in `SetEntriesRange` to `SetEntry(beginEntry - 1)` (https://github.com/root-project/root/blob/f841b96e634b7f7136b0c80da0f9394e8e370314/tree/treeplayer/src/TTreeReader.cxx#L438). `SetEntry` however, calls `SetEntryBase`, which modifies `fEntry`. Hence, the quickfix to call `SetEntry(beginEntry)` is obviously dangerous. CC: @eguiraud @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10774
https://github.com/root-project/root/issues/10774:643,Availability,error,error,643,"I encountered the following inconcistent behaviour in the `TTreeReader`; ```cpp; auto dfWriter0 = RDataFrame(3).Define(""x"", [] { return 1; });; dfWriter0.Snapshot<int>(""treeA"", ""file0.root"", {""x""});; auto chain = std::make_shared<TChain>(""treeA"");; chain->Add(""file0.root"");; TTreeReader r(chain.get(), chain->GetEntryList());; r.SetEntriesRange(4, 5);; ```; this produces: `Error in <TTreeReader::SetEntriesRange()>: Error setting first entry 4: one of the readers was not successfully initialized`, which is good (as expected). On the other hand, if the range becomes `r.SetEntriesRange(3, 5)` - start is now the last index + 1, there is no error produced or etc. Using gdb, I saw that there is a call in `SetEntriesRange` to `SetEntry(beginEntry - 1)` (https://github.com/root-project/root/blob/f841b96e634b7f7136b0c80da0f9394e8e370314/tree/treeplayer/src/TTreeReader.cxx#L438). `SetEntry` however, calls `SetEntryBase`, which modifies `fEntry`. Hence, the quickfix to call `SetEntry(beginEntry)` is obviously dangerous. CC: @eguiraud @vepadulano",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10774
https://github.com/root-project/root/pull/10775:1517,Deployability,update,updated,1517,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:793,Integrability,interface,interface,793,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:18,Modifiability,extend,extends,18,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:674,Modifiability,refactor,refactor,674,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:658,Performance,throughput,throughput,658,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:1115,Performance,optimiz,optimized,1115,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:722,Testability,test,tests,722,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10775:1487,Testability,test,tested,1487,"This pull request extends `RPageSink` to allow for vector commit of sealed pages. The prototype of the new functions is as follows:; ```c++; virtual std::vector<RNTupleLocator> CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges);; void CommitSealedPageV(std::span<RPageStorage::RSealedPageGroup> ranges);; ```. These changes enable (parallel) vector writes in concrete backends, e.g. in DAOS. Derived classes that do not override the base implementation will see a sequence of calls to `CommitSealedPage()`. The first measurements of vector writes on DAOS based on this PR, indicate an improvement of _an order of magnitude_ in the write throughput. The refactor in this PR passes all the RPageSinkBuf tests. ## Changes or fixes:; - Add `CommitSealedPageV()` to the public interface of `RPageSink`. This function carries out a vector write of a number of sealed page ranges. Each range applies to a given columnId.; The default implementation of `CommitSealedPageVImpl()` sequentially calls `CommitSealedPageImpl()` for each page on each range, but derived classes can override it to provide an optimized implementation.; - Use `CommitSealedPageV()` in RPageSinkBuf. If a buffered column contains only sealed pages, commit the whole range; via `CommitSealedPageV()`.; - If all buffered columns consist solely of sealed pages, coalesce all pages to be committed in a single `CommitSealedPageV()` call that includes a sealed page range per column. ## Checklist:; - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes #10719.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10775
https://github.com/root-project/root/pull/10776:424,Availability,fault,fault,424,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10776
https://github.com/root-project/root/pull/10776:484,Deployability,update,updated,484,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10776
https://github.com/root-project/root/pull/10776:157,Modifiability,variab,variable,157,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10776
https://github.com/root-project/root/pull/10776:454,Testability,test,tested,454,"# This Pull request:. ## Changes or fixes:. It is not checked in the existing code whether `getenv(""ROOTSYS"")` returns `NULL`. It does so if the environment variable is not defined; it is exactly what happens during building [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L584). Then `std::string` gets initialized from the C string from address 0, which may result in a segmentation fault. ## Checklist:. - [ x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10776
https://github.com/root-project/root/issues/10777:1033,Availability,error,error,1033,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1215,Availability,error,error,1215," reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1324,Availability,Error,Error,1324,"sue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2763,Availability,down,download,2763,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2531,Deployability,Install,Install,2531,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2745,Deployability,install,install,2745,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1676,Integrability,depend,dependencies,1676,"ebgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Ad",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2561,Integrability,depend,dependencies,2561,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:512,Modifiability,sandbox,sandbox,512,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1455,Modifiability,sandbox,sandbox,1455,"in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2852,Modifiability,sandbox,sandbox,2852,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:512,Testability,sandbox,sandbox,512,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1455,Testability,sandbox,sandbox,1455,"in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:2852,Testability,sandbox,sandbox,2852,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:3003,Testability,log,log,3003,".6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencies matching the selected feature set, then run `cmake` and `make` as suggested. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26.04; OS Ubuntu 22.04 (amd64) `pbuilder` sandbox on 20.04 system; Source: official tarball. ### Additional context; <!--; Add any other context about the problem here.; -->; nothing yet. Full log (1.2MB) [here](https://hypatia.aei.mpg.de/lsc-amd64-jammy/root-cds_6.26.04.sg-0.22+ubuntu22.04.0_amd64.--pbuilderlog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Root 6.26.04 build fails in a Ubuntu 22.04 `pbuilder` sandbox, with the following features enabled:; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_sh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/issues/10777:1557,Usability,clear,clear,1557,"led support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit webgui rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```; with the error; ```; [ 71%] Linking CXX executable ../bin/rootcling; /usr/bin/ld: ../lib/libCling.so.6.26.04: undefined reference to `typeinfo for clang::sema::FunctionScopeInfo' ; collect2: error: ld returned 1 exit status; make[4]: *** [main/CMakeFiles/rootcling.dir/build.make:101: bin/rootcling] Error 1; ```. This looks like an incompatibility between clang and cling - which both are builtin.; Building in a 20.04 `pbuilder` sandbox succeeds (same set of features as above, minus `webgui`, btw). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The same set of build instructions (with identical dependencies) succeeds on Debian 11 Bullseye and 10 Buster, with; ```; -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_nlohmannjson builtin_openui5 builtin_unuran builtin_vdt builtin_xrootd builtin_xxhash clad dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi mathmore mlp minuit2 mysql odbc opengl pgsql pyroot pythia8 r roofit rpath shadowpw shared soversion sqlite ssl tmva tmva-pymva tmva-rmva spectrum unuran vdt x11 xml xrootd; ```. (`webgui` is missing for a yet unknown reason). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Install required and optional dependencie",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10777
https://github.com/root-project/root/pull/10780:851,Availability,fault,faulty,851,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:1238,Deployability,update,updated,1238,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:989,Integrability,Depend,Depending,989,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:96,Modifiability,variab,variables,96,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:397,Modifiability,variab,variables,397,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:814,Modifiability,variab,variables,814,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:1006,Modifiability,variab,variable,1006,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:206,Performance,load,loader,206,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:242,Performance,load,loader,242,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10780:1208,Testability,test,tested,1208,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10780
https://github.com/root-project/root/pull/10781:87,Security,attack,attackers,87,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10781
https://github.com/root-project/root/pull/10781:508,Security,secur,secure,508,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10781
https://github.com/root-project/root/pull/10781:556,Security,secur,securitylab,556,"Restrict the GitHub token permissions only to the required ones; this way, even if the attackers will succeed in compromising your workflow, they won’t be able to do much. - Included permissions for the action. https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions. https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions. https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs. [Keeping your GitHub Actions and workflows secure Part 1: Preventing pwn requests](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/). Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10781
https://github.com/root-project/root/pull/10783:163,Deployability,Update,Update,163,"If ""server"" kind of web display is configured,; one still can use ""new TBrowser"". This requires that batch gui factory; allows to create web-based implementation. Update JSROOT, use nullptr in related classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10783
https://github.com/root-project/root/pull/10783:35,Modifiability,config,configured,35,"If ""server"" kind of web display is configured,; one still can use ""new TBrowser"". This requires that batch gui factory; allows to create web-based implementation. Update JSROOT, use nullptr in related classes",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10783
https://github.com/root-project/root/issues/10784:1948,Availability,Down,Download,1948,"n [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/issues/10784:2407,Availability,down,download,2407,"n [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/issues/10784:2389,Deployability,install,install,2389,"n [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/issues/10784:2484,Deployability,install,install,2484,"n [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/issues/10784:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; I created a 5D binning from some data. The `FindBin` function returns seemingly non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/issues/10784:1523,Usability,clear,clear,1523," non-existent bins. What is . ```; In [5]: binning.GetNBins(); Out [5]: 1001; In [6]: binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); Out [6]: 1004; In [7]: binning.GetBinContent(1004); TKDTreeBinning::GetBinContent:0: RuntimeWarning: No such bin. Returning 0.; Info in <TKDTreeBinning::GetBinContent>: 'bin' is between 0 and 1001.; Out [7]: 0; ```; The specified coordinates should be well within the binning range - if I understand the method correctly, the binning range is a hyper-rectangle that envelops all the data points, correct?; ```; In [15]: for i in range(5):; ...: print(f""Dim {i} - min:{binning.GetDataMin(i)}, max: {binning.GetDataMax(i)}""); ...:; Dim 0 - min:0.9872230887413025, max: 1.5643738508224487; Dim 1 - min:0.279508501291275, max: 0.8602268695831299; Dim 2 - min:-0.9999595284461975, max: 0.9999838471412659; Dim 3 - min:-0.9999908804893494, max: 0.9998750686645508; Dim 4 - min:-1.0, max: 1.0000001192092896; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; `FindBin()` should return a value within [0, `binning.GetNBins()` - 1]. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; - Download the ROOT file with the binning from [CERNBox](https://cernbox.cern.ch/index.php/s/86ZPwwpEStaiIdS); - Run the following in Python; ```python; import array; import ROOT; file = ROOT.TFile(""binning.root""); binning = file.Get(""TKDTreeBinning""); binning.FindBin(array.array(""d"", (1.2, 0.5, 0.5, 0.5, 0.5))); binning.GetBinContent(1004); ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/02; macOS 12.3.1; Homebrew install. ### Additional context; <!--; Add any other c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10784
https://github.com/root-project/root/pull/10787:124,Testability,log,logical,124,This addresses a warning of recent Clang versions about the `use of bitwise '|' with boolean operands [-Wbitwise-instead-of-logical]`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10787
https://github.com/root-project/root/pull/10789:30,Testability,test,test,30,This PR is a draft for now to test developments with the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10789
https://github.com/root-project/root/pull/10790:191,Energy Efficiency,allocate,allocate,191,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10790
https://github.com/root-project/root/pull/10790:35,Integrability,depend,dependent,35,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10790
https://github.com/root-project/root/pull/10790:434,Safety,safe,safe,434,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10790
https://github.com/root-project/root/pull/10790:406,Testability,test,tested,406,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10790
https://github.com/root-project/root/pull/10790:610,Testability,test,tested,610,"Although padding is implementation-dependent, most add enough padding at the end to comply with the requirements of the type with strictest alignment.; Given that `GetValueSize()` is used to allocate memory for the described type, not accouting trailing padding may cause issues. `ROOT::Experimental::RFieldDescriptor::CreateField()` has a direct use of RRecordField. Despite it seems to be working in all tested platforms, be on the safe side and add this padding. This, does not affect derived classes `RPairField` and `RTupleField`, that override determination of the size of the type. ## Checklist:; - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10790
https://github.com/root-project/root/pull/10791:400,Availability,error,errors,400,"Export RooSimultaneous channels as dictionary of names instead of having; the full pdf specification as the value. This change is done because all pdfs should be specified in the; top-level `pdf` structure. The code of the `RooJSONFactoryWSTool` is also refactored such that; `exportObject` doesn't need to take the node where is should put the; object. It's better if it figures out itself to avoid errors when; calling it. Also, I suggest to not strip the `model_` prefix of the name from the; pdf that specifies a HistFactory channel. Otherwise, the name values in; the RooSimultaneous don't match anymore, which is a problem now that we; use names as values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10791
https://github.com/root-project/root/pull/10791:254,Modifiability,refactor,refactored,254,"Export RooSimultaneous channels as dictionary of names instead of having; the full pdf specification as the value. This change is done because all pdfs should be specified in the; top-level `pdf` structure. The code of the `RooJSONFactoryWSTool` is also refactored such that; `exportObject` doesn't need to take the node where is should put the; object. It's better if it figures out itself to avoid errors when; calling it. Also, I suggest to not strip the `model_` prefix of the name from the; pdf that specifies a HistFactory channel. Otherwise, the name values in; the RooSimultaneous don't match anymore, which is a problem now that we; use names as values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10791
https://github.com/root-project/root/pull/10791:394,Safety,avoid,avoid,394,"Export RooSimultaneous channels as dictionary of names instead of having; the full pdf specification as the value. This change is done because all pdfs should be specified in the; top-level `pdf` structure. The code of the `RooJSONFactoryWSTool` is also refactored such that; `exportObject` doesn't need to take the node where is should put the; object. It's better if it figures out itself to avoid errors when; calling it. Also, I suggest to not strip the `model_` prefix of the name from the; pdf that specifies a HistFactory channel. Otherwise, the name values in; the RooSimultaneous don't match anymore, which is a problem now that we; use names as values.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10791
https://github.com/root-project/root/pull/10793:598,Availability,redundant,redundant,598,"Before this patch, each node in the computation graph was; re-creating or re-requesting column readers for datasource and TTree/TChain; columns separately. We now create column readers for datasource and TTree/TChain columns early and; store them in RLoopManager which then gives out pointers to the; same RColumnReaderBase objects to all nodes. This is the first part of a series of changes aimed at; centralizing ownership and creation of all kinds of column; readers (defines and variations will come in a subsequent PR).; Sharing column readers among nodes of the computation; graph saves some redundant work and it is a pre-requisite for bulk; processing at the level of RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10793
https://github.com/root-project/root/pull/10793:12,Deployability,patch,patch,12,"Before this patch, each node in the computation graph was; re-creating or re-requesting column readers for datasource and TTree/TChain; columns separately. We now create column readers for datasource and TTree/TChain columns early and; store them in RLoopManager which then gives out pointers to the; same RColumnReaderBase objects to all nodes. This is the first part of a series of changes aimed at; centralizing ownership and creation of all kinds of column; readers (defines and variations will come in a subsequent PR).; Sharing column readers among nodes of the computation; graph saves some redundant work and it is a pre-requisite for bulk; processing at the level of RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10793
https://github.com/root-project/root/pull/10793:598,Safety,redund,redundant,598,"Before this patch, each node in the computation graph was; re-creating or re-requesting column readers for datasource and TTree/TChain; columns separately. We now create column readers for datasource and TTree/TChain columns early and; store them in RLoopManager which then gives out pointers to the; same RColumnReaderBase objects to all nodes. This is the first part of a series of changes aimed at; centralizing ownership and creation of all kinds of column; readers (defines and variations will come in a subsequent PR).; Sharing column readers among nodes of the computation; graph saves some redundant work and it is a pre-requisite for bulk; processing at the level of RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10793
https://github.com/root-project/root/pull/10795:1066,Deployability,update,update,1066,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:1367,Deployability,update,updated,1367,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:18,Modifiability,refactor,refactors,18,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:105,Performance,perform,performance,105,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:181,Performance,perform,performance,181,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:281,Performance,queue,queues,281,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:327,Performance,queue,queues,327,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:762,Performance,queue,queues,762,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:897,Performance,queue,queues,897,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:1031,Performance,queue,queue,1031,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:852,Safety,avoid,avoiding,852,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:1337,Testability,test,tested,1337,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10795:121,Usability,simpl,simplified,121,"This Pull request refactors `DaosEventQueue` and asynchronous event management in `RDaos`, with improved performance and simplified polling of pending read-write requests. ; Better performance is achieved by eliminating the significant overhead that comes with instantiating event queues with every new request. Instead, event queues are now permanent and pool-wide, managed by `RPool`. ; The use of a symbolic parent event per call to `VectorReadWrite` better represents the intent behind that function, which is to only return upon successful processing of all asynchronous requests sent through it. ## Changes or fixes:; - Symbolic parent events are tied to batched asynchronous events originating from a single RW call, for easier polling.; - Poolwide event queues that are shared among its underlying containers and persist between RW calls, thus avoiding the expensive operation of creating queues every time `VectorReadWrite` is called.; - Explicit marking of request calls as synchronous in `FetchUpdateArgs` to bypass the queue. In such cases, object fetch/update calls to DAOS are sent with a null event pointer to signal that the request is blocking.; - The functions `daos_event_test` and `daos_event_parent_barrier`, used for polling and sending parent events respectively, are added to `libdaos_mock`. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10795
https://github.com/root-project/root/pull/10797:703,Testability,test,test,703,"This commit fixes two issues:. 1. Introduce `RooProduct` constructor from two RooAbsReals to be; consistent with the `RooRrodPdf`, which has a constructor from two; RooAbsPdfs. 2. Remove a useless dummy constructor for a `RooProdPdf` with no; factors, which somehow prevented the constructor from a RooFit; collection to be picked up correctly by `RooWorkspace::factory()`. The request to change the RooProduct and RooProdPdf constructors from; RooFit collections to take RooArgSets and not RooArgLists (https://github.com/root-project/root/issues/7809#issuecomment-817683625) was not; followed. This would be a breaking change for people that use; `RooProduct` to square a function for example. A unit test for the issue was also implemented. Closes https://github.com/root-project/root/issues/7809.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10797
https://github.com/root-project/root/pull/10798:314,Testability,stub,stub,314,"The `RooParametricStepFunction` is not used much, but still there is an; issue requesting to explain its usage better that needs to be closed. I don't think it's worth it to have a tutorial for it, but nothing; speaks about having a little complete usage example script in the; reference guide instead of the code stub that is there right now. This change to the documentation goes together with some gentle code; modernization in this commit. Closes #7748.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10798
https://github.com/root-project/root/pull/10798:288,Usability,guid,guide,288,"The `RooParametricStepFunction` is not used much, but still there is an; issue requesting to explain its usage better that needs to be closed. I don't think it's worth it to have a tutorial for it, but nothing; speaks about having a little complete usage example script in the; reference guide instead of the code stub that is there right now. This change to the documentation goes together with some gentle code; modernization in this commit. Closes #7748.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10798
https://github.com/root-project/root/issues/10799:54,Availability,error,error,54,"### Describe the bug. PyROOT fails with the following error with Python 3.11:; ~~~; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.04/tutorials/launcher.py"", line 21, in <module>; import ROOT; ^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/ROOT/__init__.py"", line 22, in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPIns",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:3824,Availability,error,errors,3824,"LT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:4112,Availability,fault,fault,4112,"t a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start_call_main () from /lib64/libc.so.6; #8 0x00007ffff78a8609 in __libc_start_main_impl () from /lib64/libc.so.6; #9 0x0000555555555095 in _start (); ~~~",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1278,Deployability,patch,patch,1278,".04/redhat-linux-build/lib/ROOT/__init__.py"", line 22, in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1291,Deployability,patch,patch,1291,"in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1310,Deployability,a/b,a/bindings,1310,"in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1458,Deployability,a/b,a/bindings,1458," importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; index 97ce06daa7..ed41b1637c 100644; --- a/bindings/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:2308,Deployability,a/b,a/bindings,2308,"port ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; index 97ce06daa7..ed41b1637c 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; @@ -78,8 +78,7 @@ PyTypeObject TypedefPointerToClass_Type = {; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,; (ternaryfunc)tpc_call, // tp_call; 0, 0, 0, 0,; - Py_TPFLAGS_DEFAULT |; - Py_TPFLAGS_HAVE_GC, // tp_flags; + Py_TPFLAGS_DEFAULT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:2460,Deployability,a/b,a/bindings,2460,"t/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; index 97ce06daa7..ed41b1637c 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; @@ -78,8 +78,7 @@ PyTypeObject TypedefPointerToClass_Type = {; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,; (ternaryfunc)tpc_call, // tp_call; 0, 0, 0, 0,; - Py_TPFLAGS_DEFAULT |; - Py_TPFLAGS_HAVE_GC, // tp_flags; + Py_TPFLAGS_DEFAULT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:2950,Deployability,a/b,a/bindings,2950,"tance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_TPFLAGS_HAVE_GC |; Py_TPFLAGS_CHECKTYPES, // tp_flags; (char*)""cppyy object proxy (internal)"", // tp_doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; index 97ce06daa7..ed41b1637c 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; @@ -78,8 +78,7 @@ PyTypeObject TypedefPointerToClass_Type = {; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,; (ternaryfunc)tpc_call, // tp_call; 0, 0, 0, 0,; - Py_TPFLAGS_DEFAULT |; - Py_TPFLAGS_HAVE_GC, // tp_flags; + Py_TPFLAGS_DEFAULT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_G",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:3106,Deployability,a/b,a/bindings,3106,"doc; - 0, // tp_traverse; + (traverseproc)op_traverse, // tp_traverse; (inquiry)op_clear, // tp_clear; (richcmpfunc)op_richcompare, // tp_richcompare; 0, // tp_weaklistoffset; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; index 97ce06daa7..ed41b1637c 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CustomPyTypes.cxx; @@ -78,8 +78,7 @@ PyTypeObject TypedefPointerToClass_Type = {; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,; (ternaryfunc)tpc_call, // tp_call; 0, 0, 0, 0,; - Py_TPFLAGS_DEFAULT |; - Py_TPFLAGS_HAVE_GC, // tp_flags; + Py_TPFLAGS_DEFAULT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:3644,Deployability,patch,patch,3644," 0, 0, 0, 0, 0, 0,; (ternaryfunc)tpc_call, // tp_call; 0, 0, 0, 0,; - Py_TPFLAGS_DEFAULT |; - Py_TPFLAGS_HAVE_GC, // tp_flags; + Py_TPFLAGS_DEFAULT, // tp_flags; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; #if PY_VERSION_HEX >= 0x02030000; , 0 // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:3897,Deployability,patch,patch,3897," // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start_call_main () from /lib64/libc.so.6; #8 0x00007ffff78a8609 in __libc_start_main_impl () from /lib64/libc.so.6; #9 0x00005555555550",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1006,Testability,test,test,1006," PyROOT fails with the following error with Python 3.11:; ~~~; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.04/tutorials/launcher.py"", line 21, in <module>; import ROOT; ^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/ROOT/__init__.py"", line 22, in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:1038,Testability,test,test,1038," PyROOT fails with the following error with Python 3.11:; ~~~; Traceback (most recent call last):; File ""/builddir/build/BUILD/root-6.26.04/tutorials/launcher.py"", line 21, in <module>; import ROOT; ^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/ROOT/__init__.py"", line 22, in <module>; import cppyy; ^^^^^^^^^^^^; File ""/builddir/build/BUILD/root-6.26.04/redhat-linux-build/lib/cppyy/__init__.py"", line 60, in <module>; importlib.import_module(libcppyy_mod_name); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/usr/lib/python3.11/importlib/__init__.py"", line 126, in import_module; return _bootstrap._gcd_import(name[level:], package, level); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; SystemError: type cppyy.CPPInstance has the Py_TPFLAGS_HAVE_GC flag but has no traverse function; ~~~. ### Expected behavior. ""import ROOT"" works. ### To Reproduce. 1. Compile ROOT with Python 3.11; 2. Try ""import ROOT"" in python ...; 3. ... or run the test suite and see every python test fail. ### Setup. 1. ROOT version: 6.26.04 + commit 484deb056dacf768aba4954073b41105c431bffc + commit 484deb056dacf768aba4954073b41105c431bffc; 2. Operating system: Fedora 37 (rawhide). ### Additional information. I tried the following patch:. ~~~{.patch}; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; index 73fb8099b5..2854b2e919 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/CPPInstance.cxx; @@ -332,6 +332,12 @@ static void op_dealloc(CPPInstance* pyobj); PyObject_GC_Del((PyObject*)pyobj);; }; ; +//----------------------------------------------------------------------------; +static int op_traverse(CPPInstance*, visitproc, void*); +{; + return 0;; +}; +; //----------------------------------------------------------------------------; static int op_clear(CPPInstance* pyobj); {; @@ -767,7 +773,7 @@ PyTypeObject CPPInstance_Type = {; Py_T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/issues/10799:3876,Testability,test,tests,3876," // tp_del; diff --git a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; index f9e92f9c8c..5da48364ac 100644; --- a/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; +++ b/bindings/pyroot/cppyy/CPyCppyy/src/MemoryRegulator.cxx; @@ -45,7 +45,7 @@ struct InitCPyCppyy_NoneType_t {; ((PyVarObject&)CPyCppyy_NoneType).ob_size = 0;; ; CPyCppyy_NoneType.tp_name = const_cast<char*>(""CPyCppyy_NoneType"");; - CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE | Py_TPFLAGS_HAVE_GC;; + CPyCppyy_NoneType.tp_flags = Py_TPFLAGS_HAVE_RICHCOMPARE;; ; CPyCppyy_NoneType.tp_traverse = (traverseproc)0;; CPyCppyy_NoneType.tp_clear = (inquiry)0;; ~~~; This patch either drops the Py_TPFLAGS_HAVE_GC flag when .tp_traverse is 0 or makes sure it is not 0. This helps with the ""has the Py_TPFLAGS_HAVE_GC flag but has no traverse function"" errors, and ""import ROOT"" works. Most of the python tests work with this patch, but a few of them segfaults during the Python garbage collection, so it is not the correct fix. Anyone familiar with cppyy that have some ideas?. ~~~; Thread 1 ""python3"" received signal SIGSEGV, Segmentation fault.; 0x00007ffff7c06cc0 in deduce_unreachable () from /lib64/libpython3.11.so.1.0; (gdb) bt; #0 0x00007ffff7c06cc0 in deduce_unreachable (); from /lib64/libpython3.11.so.1.0; #1 0x00007ffff7c069c7 in gc_collect_main () from /lib64/libpython3.11.so.1.0; #2 0x00007ffff7cd399c in _PyGC_CollectNoFail.isra.0 (); from /lib64/libpython3.11.so.1.0; #3 0x00007ffff7cd33f1 in finalize_modules () from /lib64/libpython3.11.so.1.0; #4 0x00007ffff7cbdfbb in Py_FinalizeEx () from /lib64/libpython3.11.so.1.0; #5 0x00007ffff7ccad19 in Py_RunMain () from /lib64/libpython3.11.so.1.0; #6 0x00007ffff7c8e96b in Py_BytesMain () from /lib64/libpython3.11.so.1.0; #7 0x00007ffff78a8550 in __libc_start_call_main () from /lib64/libc.so.6; #8 0x00007ffff78a8609 in __libc_start_main_impl () from /lib64/libc.so.6; #9 0x00005555555550",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10799
https://github.com/root-project/root/pull/10800:225,Testability,test,testReport,225,On some platforms first start of web browser takes longer than 15 s.; Make it now 70 s. Most often happens on `mac1015` platform like this one:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147815/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10800
https://github.com/root-project/root/pull/10800:263,Testability,test,test,263,On some platforms first start of web browser takes longer than 15 s.; Make it now 70 s. Most often happens on `mac1015` platform like this one:. https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147815/testReport/projectroot.gui.webdisplay/test/test_webgui_ping/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10800
https://github.com/root-project/root/pull/10803:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9423; 2. https://github.com/root-project/root/pull/10736; 3. https://github.com/root-project/root/pull/10740; 4. https://github.com/root-project/root/pull/10754; 5. https://github.com/root-project/root/pull/10802",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10803
https://github.com/root-project/root/pull/10804:86,Modifiability,variab,variable,86,This fixes a warning seen on macOS:; ```; zstd_compress_superblock.c:412:12: warning: variable 'litLengthSum' set but not used; ```; As we won't fix those there's no need to emit them.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10804
https://github.com/root-project/root/pull/10811:1990,Energy Efficiency,reduce,reduce,1990,"n the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT.RooFit.Cut(""BDT>0.0"")); ROOT.SetOwnership(smalldata, True). splot = ROOT.RooStats.SPlot(; ""splot"", ""splot"", smalldata, combmPDF, set1, set2, True, True; ). make_splot(toydata); make_splot(toydata); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10811
https://github.com/root-project/root/pull/10811:642,Integrability,wrap,wrapper,642,"In SPlots, `RooAbsArg::attachDataSet()` is called on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10811
https://github.com/root-project/root/pull/10811:524,Modifiability,variab,variables,524,"In SPlots, `RooAbsArg::attachDataSet()` is called on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10811
https://github.com/root-project/root/pull/10811:562,Modifiability,variab,variables,562,"In SPlots, `RooAbsArg::attachDataSet()` is called on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10811
https://github.com/root-project/root/pull/10811:1006,Usability,simpl,simpler,1006,"d on the input pdf,; redirecting the parameters of the pdf to the RooRealVars in the dataset.; This is not reversed, leaving the pdf in a corrupt state when the; dataset gets deleted. This can happen in particular if the SPlots object; created an owning clone of the dataset, attaches the pdf, and then goes; out of scope. This commit suggests to not attach the pdf to the dataset, as it is not; necessary. When looping over the dataset and evaluating the pdf later,; the pdf variables get synced with the dataset variables anyway. This was; done via `RooStats::SetParameters`, which is just a wrapper around; `RooAbsCollection::assign()`. I suggest to use `assign()` directly to make; more explicit to the reader what happens. It was verified that SPlot still works correctly, by looking at the output of; the `roostats/rs301_splot.C` tutorial, which is unaffected by this PR. Closes Jira issue [ROOT-8018](https://sft.its.cern.ch/jira/browse/ROOT-8018). A simpler reproducer of the problem based on the notebook in the Jira; issue is this one:. ```Python; import ROOT. bdt = ROOT.RooRealVar(""BDT"", ""some awesome BDT"", 0.0, 1.0); mass = ROOT.RooRealVar(""mass"", ""invariant mass"", 5100.0, 5300, ""MeV/c^{2}""). sigyield = ROOT.RooRealVar(""sigyield"", ""signal yield"", 100, 0, 100000); bkgyield = ROOT.RooRealVar(""bkgyield"", ""background yield"", 900, 0, 100000). bmassPDF = ROOT.RooGaussian(; ""bmass"",; ""B mass shape"",; mass,; ROOT.RooFit.RooConst(5200.0),; ROOT.RooFit.RooConst(20.0),; ); bkgmPDF = ROOT.RooExponential(; ""bkgmass"", ""bkg mass shape"", mass, ROOT.RooFit.RooConst(-1.0 / 200.0); ); combmPDF = ROOT.RooAddPdf(; ""fullmasspdf"",; ""full mass pdf"",; ROOT.RooArgList(bmassPDF, bkgmPDF),; ROOT.RooArgList(sigyield, bkgyield),; ). toydata = combmPDF.generate(ROOT.RooArgSet(bdt, mass), 10000); ROOT.SetOwnership(toydata, True). set1 = ROOT.RooArgList(sigyield, bkgyield); set2 = ROOT.RooArgList(). def make_splot(toydata):; smalldata = toydata.reduce(ROOT.RooFit.Cut(""BDT>0.0"")); ROOT.SetOwnership(small",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10811
https://github.com/root-project/root/pull/10812:92,Energy Efficiency,charge,charge,92,"We now register all RDefine nodes, incuding varied defines, with; RLoopManager, which is in charge of calling InitSlot on all; registered nodes, so we do not need to propagate the InitSlot call; from RVariation or RDefine to other RDefines.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10812
https://github.com/root-project/root/issues/10814:676,Availability,error,error,676,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10814
https://github.com/root-project/root/issues/10814:875,Availability,error,errors,875,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10814
https://github.com/root-project/root/issues/10814:924,Availability,down,download,924,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10814
https://github.com/root-project/root/issues/10814:1207,Availability,down,download,1207,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10814
https://github.com/root-project/root/issues/10814:1082,Testability,log,log,1082,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When building root 6.26/04 with gcc 11.2.1 the build process fails while compiling REveBox.cxx:. [ 89%] Building CXX object graf3d/eve7/CMakeFiles/ROOTEve.dir/src/REveBox.cxx.o; In file included from /usr/src/root-6.26.04/graf3d/eve7/src/REveBox.cxx:18:; /usr/include/nlohmann/json.hpp:847:7: error: redeclared with 9 template parameters; 847 | class basic_json;; | ^~~~~~~~~~. This is under CentOS 7, using devtoolset-11 and cmake3 (3.17.5). ### Expected behavior; It should compile without errors. ### To Reproduce. wget https://root.cern/download/root_v6.26.04.source.tar.gz; tar xzvf root_v6.26.04.source.tar.gz; cd root-6.26.04; cd build; scl enable devtoolset-11 bash; cmake3 ..; make >& make.log. ### Setup; root 6.26.04; CentOS 7, devtoolset-11 (gcc 11.2.1), cmake3 (3.17.5); Building from source (https://root.cern/download/root_v6.26.04.source.tar.gz). ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10814
https://github.com/root-project/root/pull/10815:530,Deployability,update,updated,530,"# This Pull request:; Fixes setting axis limits when log scale is on. ## Changes or fixes:; In the following case without this fix limits to X axis wouldn't be applied:. ```C++; root [0] TCanvas *c = new TCanvas("""","""",800,800); (TCanvas *) 0x55ad27dfcd50; root [1] c->SetLogx(); root [2] double x[]={1,2}; (double [2]) { 1.0000000, 2.0000000 }; root [3] TGraph *g = new TGraph(2,x,x); (TGraph *) 0x55ad2953bdd0; root [4] g->GetXaxis()->SetLimits(0,100); root [5] g->Draw(); ```. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10815
https://github.com/root-project/root/pull/10815:53,Testability,log,log,53,"# This Pull request:; Fixes setting axis limits when log scale is on. ## Changes or fixes:; In the following case without this fix limits to X axis wouldn't be applied:. ```C++; root [0] TCanvas *c = new TCanvas("""","""",800,800); (TCanvas *) 0x55ad27dfcd50; root [1] c->SetLogx(); root [2] double x[]={1,2}; (double [2]) { 1.0000000, 2.0000000 }; root [3] TGraph *g = new TGraph(2,x,x); (TGraph *) 0x55ad2953bdd0; root [4] g->GetXaxis()->SetLimits(0,100); root [5] g->Draw(); ```. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10815
https://github.com/root-project/root/pull/10815:500,Testability,test,tested,500,"# This Pull request:; Fixes setting axis limits when log scale is on. ## Changes or fixes:; In the following case without this fix limits to X axis wouldn't be applied:. ```C++; root [0] TCanvas *c = new TCanvas("""","""",800,800); (TCanvas *) 0x55ad27dfcd50; root [1] c->SetLogx(); root [2] double x[]={1,2}; (double [2]) { 1.0000000, 2.0000000 }; root [3] TGraph *g = new TGraph(2,x,x); (TGraph *) 0x55ad2953bdd0; root [4] g->GetXaxis()->SetLimits(0,100); root [5] g->Draw(); ```. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10815
https://github.com/root-project/root/pull/10817:0,Safety,Avoid,Avoid,0,Avoid potential problems with other older nlohmann version like 3.6. Fixes #10814,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10817
https://github.com/root-project/root/pull/10821:133,Performance,optimiz,optimization,133,"Add support for visualization of digit sets in the context of physics collections:; * tooltip related to selected collection item; * optimization for filtered items, e.g. only visible digits are streamed to client. Exmaple of RecHits visualization in CMS; ![Untitled](https://user-images.githubusercontent.com/2516492/175380176-3bf84d88-cd9a-410a-80db-264db1c5bed8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10821
https://github.com/root-project/root/pull/10822:598,Deployability,update,updated,598,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10822
https://github.com/root-project/root/pull/10822:99,Security,validat,validate,99,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10822
https://github.com/root-project/root/pull/10822:90,Testability,test,tests,90,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10822
https://github.com/root-project/root/pull/10822:176,Testability,test,tests,176,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10822
https://github.com/root-project/root/pull/10822:568,Testability,test,tested,568,"# This Pull request: Adds all the Basic Binary ONNX operators to TMVA/SOFIE with the unit tests to validate the code. 1) Adds all the four Basic Binary Operators with the unit tests; - Add; - Sub; - Mul; - Div. 2) Fix issue in parsing binary operators when one input is an initialized tensor; ; In Add,Sub, Mul or Div one of the input can be an initialized tensor therefore we don't have its input type registered before parsing. We need to look if the tensor is in Initializer tensor list. 3) Support for Multi-directional Broadcasting in SOFIE. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10822
https://github.com/root-project/root/pull/10823:232,Safety,avoid,avoid,232,"1. Fix leak with using TGraph2DPainter; 2. Fix leak with ""cont list"" draw option; 3. Use `std::unique_ptr` for all objects created and managed by hist painter, ensure proper deletion; 4. Use `std::vector` instead of plain C arrays, avoid any potential memory leak; 5. Replace plain `Form()` by `TString::Format()`; 6. Simplify some `TIter` loops; 7. Use more `nullptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10823
https://github.com/root-project/root/pull/10823:318,Usability,Simpl,Simplify,318,"1. Fix leak with using TGraph2DPainter; 2. Fix leak with ""cont list"" draw option; 3. Use `std::unique_ptr` for all objects created and managed by hist painter, ensure proper deletion; 4. Use `std::vector` instead of plain C arrays, avoid any potential memory leak; 5. Replace plain `Form()` by `TString::Format()`; 6. Simplify some `TIter` loops; 7. Use more `nullptr`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10823
https://github.com/root-project/root/issues/10824:285,Usability,clear,clearly,285,"Recently, we accidentally introduced a bug into RooFit when removing the IO constructor of `RooBernstein`, and we brought it back months later: https://github.com/root-project/root/pull/10816. It's unexpected that a class with a `ClassDef` version greater than zero (meaning that it's clearly intended for IO) can even compile without an IO constructor, essentially breaking it for IO!. Could we add some checks at compile time to make sure that any class with a non-zero `ClassDef` version has an IO constructor implemented?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10824
https://github.com/root-project/root/pull/10825:141,Safety,avoid,avoid,141,"All functions in RooRealSumFunc and RooRealSumPdf are overloaded in; exactly the same way. The two classes only differ in the base class. To avoid code duplication, the member functions are implemented as private; static functions in RooRealSumPdf, which the friend class RooRealSumFunc; can also use. This pattern might be used also to avoid further code; duplication, also with the other addition classes like RooAddition and; RooAddPdf in the future. This solution was preferred over changing the classes themselves, because; the right to run into schema evolution problems is much higher then. This closes also the RooRealSumFunc modernization issue #8374, as now; its implementation uses the code from the RooRealSumPdf which is already; modernized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10825
https://github.com/root-project/root/pull/10825:337,Safety,avoid,avoid,337,"All functions in RooRealSumFunc and RooRealSumPdf are overloaded in; exactly the same way. The two classes only differ in the base class. To avoid code duplication, the member functions are implemented as private; static functions in RooRealSumPdf, which the friend class RooRealSumFunc; can also use. This pattern might be used also to avoid further code; duplication, also with the other addition classes like RooAddition and; RooAddPdf in the future. This solution was preferred over changing the classes themselves, because; the right to run into schema evolution problems is much higher then. This closes also the RooRealSumFunc modernization issue #8374, as now; its implementation uses the code from the RooRealSumPdf which is already; modernized.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10825
https://github.com/root-project/root/pull/10826:196,Deployability,update,updated,196,Ref: https://reviews.llvm.org/D128319. # This Pull request:. This reverts commit 71e133dd0391deac1cf3761d2c5c253b3cb247ff. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10826
https://github.com/root-project/root/pull/10826:166,Testability,test,tested,166,Ref: https://reviews.llvm.org/D128319. # This Pull request:. This reverts commit 71e133dd0391deac1cf3761d2c5c253b3cb247ff. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10826
https://github.com/root-project/root/pull/10827:154,Deployability,patch,patch,154,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10827
https://github.com/root-project/root/pull/10827:69,Modifiability,variab,variable,69,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10827
https://github.com/root-project/root/pull/10827:102,Testability,log,log,102,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10827
https://github.com/root-project/root/pull/10827:119,Testability,test,tests,119,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10827
https://github.com/root-project/root/pull/10827:112,Usability,simpl,simple,112,This commit reverts root-project/root@69568116cd. The CtorsConstants variable is not used. The commit log has a simple tests which now works without this patch. Thanks to Jonas Hahnfeld (@hahnjo) for pointing this out!,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10827
https://github.com/root-project/root/issues/10828:304,Modifiability,extend,extended,304,"In ROOT 6.24/06 we see that merging produces unexpected results for the following situation:. - 2D histogram, Y axis has labels, X axis does not, SetCanExtend is set for the X axis; - h2 has more bins in X; - h1.Merge is called with a TList containing h2. The result has only the bins from h1 and is not extended to match h2. If the Y axis does not have labels, the X axis is correctly extended by the merge. A Python test case follows:. ```; from ROOT import TH2F, TList. NBINSX = 5; NBINSY = 1. horig = TH2F('horig', 'histogram', NBINSX, 0, NBINSX, NBINSY, 0, NBINSY); yax = horig.GetYaxis(); # if labels are not set for the y axis, the output is what is expected; for i in range(NBINSY):; yax.SetBinLabel(i+1, f'{i+1}'); horig.GetXaxis().SetCanExtend(True). hclone = horig.Clone(); hclone.LabelsInflate('X'); hclone.Fill(NBINSX-1, 0). l = TList(); l.Add(hclone); horig.Merge(l). print(f'Number of X bins in merged histogram: {horig.GetNbinsX()} (expected {hclone.GetNbinsX()})'); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10828
https://github.com/root-project/root/issues/10828:386,Modifiability,extend,extended,386,"In ROOT 6.24/06 we see that merging produces unexpected results for the following situation:. - 2D histogram, Y axis has labels, X axis does not, SetCanExtend is set for the X axis; - h2 has more bins in X; - h1.Merge is called with a TList containing h2. The result has only the bins from h1 and is not extended to match h2. If the Y axis does not have labels, the X axis is correctly extended by the merge. A Python test case follows:. ```; from ROOT import TH2F, TList. NBINSX = 5; NBINSY = 1. horig = TH2F('horig', 'histogram', NBINSX, 0, NBINSX, NBINSY, 0, NBINSY); yax = horig.GetYaxis(); # if labels are not set for the y axis, the output is what is expected; for i in range(NBINSY):; yax.SetBinLabel(i+1, f'{i+1}'); horig.GetXaxis().SetCanExtend(True). hclone = horig.Clone(); hclone.LabelsInflate('X'); hclone.Fill(NBINSX-1, 0). l = TList(); l.Add(hclone); horig.Merge(l). print(f'Number of X bins in merged histogram: {horig.GetNbinsX()} (expected {hclone.GetNbinsX()})'); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10828
https://github.com/root-project/root/issues/10828:418,Testability,test,test,418,"In ROOT 6.24/06 we see that merging produces unexpected results for the following situation:. - 2D histogram, Y axis has labels, X axis does not, SetCanExtend is set for the X axis; - h2 has more bins in X; - h1.Merge is called with a TList containing h2. The result has only the bins from h1 and is not extended to match h2. If the Y axis does not have labels, the X axis is correctly extended by the merge. A Python test case follows:. ```; from ROOT import TH2F, TList. NBINSX = 5; NBINSY = 1. horig = TH2F('horig', 'histogram', NBINSX, 0, NBINSX, NBINSY, 0, NBINSY); yax = horig.GetYaxis(); # if labels are not set for the y axis, the output is what is expected; for i in range(NBINSY):; yax.SetBinLabel(i+1, f'{i+1}'); horig.GetXaxis().SetCanExtend(True). hclone = horig.Clone(); hclone.LabelsInflate('X'); hclone.Fill(NBINSX-1, 0). l = TList(); l.Add(hclone); horig.Merge(l). print(f'Number of X bins in merged histogram: {horig.GetNbinsX()} (expected {hclone.GetNbinsX()})'); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10828
https://github.com/root-project/root/pull/10829:263,Deployability,update,updated,263,# This Pull request:. Fixes a bug in RooFitHS3 that could lead to segfaults in cases observables names in HistFuncs and their DataHists would mismatch. Adds new classes to importer and exporter json definitions. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10829
https://github.com/root-project/root/pull/10829:233,Testability,test,tested,233,# This Pull request:. Fixes a bug in RooFitHS3 that could lead to segfaults in cases observables names in HistFuncs and their DataHists would mismatch. Adds new classes to importer and exporter json definitions. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10829
https://github.com/root-project/root/pull/10830:156,Deployability,patch,patch,156,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830
https://github.com/root-project/root/pull/10830:74,Testability,test,tested,74,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830
https://github.com/root-project/root/pull/10830:118,Testability,test,tests,118,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830
https://github.com/root-project/root/pull/10830:208,Testability,test,test,208,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830
https://github.com/root-project/root/pull/10830:275,Testability,test,test,275,This revert https://github.com/vgvassilev/clang/commit/d5f1068de9. I have tested it in the cling and it breaks no new tests so I assume it; should be a NFC patch and we should remove it as it makes upstream; test suite failed.; Signed-off-by: Jun Zhang <jun@junz.org>. Let's test it in the ROOT repo.; CC @vgvassilev @Axel-Naumann,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10830
https://github.com/root-project/root/pull/10831:95,Modifiability,variab,variables,95,1. Use std::vector instead of plain arrays; 2. More use of `nullptr`; 3. Avoid usage of global variables for local data in `TGraphPainter` class; 4. Test gPad before call gPad->GetView(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10831
https://github.com/root-project/root/pull/10831:73,Safety,Avoid,Avoid,73,1. Use std::vector instead of plain arrays; 2. More use of `nullptr`; 3. Avoid usage of global variables for local data in `TGraphPainter` class; 4. Test gPad before call gPad->GetView(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10831
https://github.com/root-project/root/pull/10831:149,Testability,Test,Test,149,1. Use std::vector instead of plain arrays; 2. More use of `nullptr`; 3. Avoid usage of global variables for local data in `TGraphPainter` class; 4. Test gPad before call gPad->GetView(),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10831
https://github.com/root-project/root/pull/10832:694,Deployability,update,updated,694,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10832:138,Performance,perform,performance,138,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10832:525,Performance,perform,performance,525,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10832:86,Testability,Test,TestStatistics,86,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10832:155,Testability,Test,TestStatistics,155,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10832:664,Testability,test,tested,664,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10832
https://github.com/root-project/root/pull/10836:303,Energy Efficiency,reduce,reduced,303,"The RooPoisson is implemented with TMath::Poisson, which is normalized; if x covers the full definition range of the Poisson distribution, which; is zero to infinity. By correctly reporting this self-normalization in; that case, the creation of a dummy integral object that returns one is; avoided. The reduced overhead results in a significant speedup of; HistFactory fits with gamma constraints between 10 and 15 % in the hf001; tutorial example. To show that the integral object would only be a dummy integral, here is the relevant line of code: https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L103. To confirm the speedup, here is the `benchHistFactory` output before this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.109 ms 0.110 ms 6391; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.915 ms 0.917 ms 762; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.075 ms 0.076 ms 9156; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.66 ms 1.66 ms 423; ```. and after this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.102 ms 0.103 ms 6744; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.892 ms 0.894 ms 786; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.064 ms 0.065 ms 10835; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.61 ms 1.61 ms 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10836
https://github.com/root-project/root/pull/10836:290,Safety,avoid,avoided,290,"The RooPoisson is implemented with TMath::Poisson, which is normalized; if x covers the full definition range of the Poisson distribution, which; is zero to infinity. By correctly reporting this self-normalization in; that case, the creation of a dummy integral object that returns one is; avoided. The reduced overhead results in a significant speedup of; HistFactory fits with gamma constraints between 10 and 15 % in the hf001; tutorial example. To show that the integral object would only be a dummy integral, here is the relevant line of code: https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L103. To confirm the speedup, here is the `benchHistFactory` output before this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.109 ms 0.110 ms 6391; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.915 ms 0.917 ms 762; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.075 ms 0.076 ms 9156; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.66 ms 1.66 ms 423; ```. and after this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.102 ms 0.103 ms 6744; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.892 ms 0.894 ms 786; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.064 ms 0.065 ms 10835; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.61 ms 1.61 ms 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10836
https://github.com/root-project/root/pull/10836:817,Testability,Benchmark,Benchmark,817,"The RooPoisson is implemented with TMath::Poisson, which is normalized; if x covers the full definition range of the Poisson distribution, which; is zero to infinity. By correctly reporting this self-normalization in; that case, the creation of a dummy integral object that returns one is; avoided. The reduced overhead results in a significant speedup of; HistFactory fits with gamma constraints between 10 and 15 % in the hf001; tutorial example. To show that the integral object would only be a dummy integral, here is the relevant line of code: https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L103. To confirm the speedup, here is the `benchHistFactory` output before this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.109 ms 0.110 ms 6391; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.915 ms 0.917 ms 762; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.075 ms 0.076 ms 9156; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.66 ms 1.66 ms 423; ```. and after this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.102 ms 0.103 ms 6744; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.892 ms 0.894 ms 786; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.064 ms 0.065 ms 10835; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.61 ms 1.61 ms 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10836
https://github.com/root-project/root/pull/10836:1370,Testability,Benchmark,Benchmark,1370,"The RooPoisson is implemented with TMath::Poisson, which is normalized; if x covers the full definition range of the Poisson distribution, which; is zero to infinity. By correctly reporting this self-normalization in; that case, the creation of a dummy integral object that returns one is; avoided. The reduced overhead results in a significant speedup of; HistFactory fits with gamma constraints between 10 and 15 % in the hf001; tutorial example. To show that the integral object would only be a dummy integral, here is the relevant line of code: https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L103. To confirm the speedup, here is the `benchHistFactory` output before this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.109 ms 0.110 ms 6391; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.915 ms 0.917 ms 762; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.075 ms 0.076 ms 9156; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.66 ms 1.66 ms 423; ```. and after this PR:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ----------------------------------------------------------------------------------------------; hf001__BinnedFitOptimization_ON___BatchMode_OFF/1/0 0.102 ms 0.103 ms 6744; hf001__BinnedFitOptimization_OFF__BatchMode_OFF/0/0 0.892 ms 0.894 ms 786; hf001__BinnedFitOptimization_ON___BatchMode_ON_/1/1 0.064 ms 0.065 ms 10835; hf001__BinnedFitOptimization_OFF__BatchMode_ON_/0/1 1.61 ms 1.61 ms 431; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10836
https://github.com/root-project/root/pull/10838:0,Safety,Avoid,Avoid,0,Avoid potential problems with other older nlohmann version like 3.6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10838
https://github.com/root-project/root/pull/10839:30,Availability,error,error,30,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:91,Availability,error,error,91,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:532,Availability,error,error,532,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:396,Deployability,release,release,396,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:471,Deployability,release,release,471,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:499,Deployability,Release,Release,499,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:595,Deployability,release,release,595,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:310,Testability,Test,TestBody,310,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:328,Testability,Test,TestBody,328,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:419,Testability,test,test,419,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:494,Testability,test,test,494,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/pull/10839:618,Testability,test,test,618,"Fix the following compilation error of `ntuple_types` on Windows:; ```; ntuple_types.obj : error LNK2019: unresolved external symbol ""const ROOT::Experimental::RRecordField::`vftable'"" (??_7RRecordField@Experimental@ROOT@@6B@) referenced in function ""private: virtual void __thiscall RNTuple_CreateField_Test::TestBody(void)"" (?TestBody@RNTuple_CreateField_Test@@EAEXXZ) [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; C:\Users\bellenot\build\release\tree\ntuple\v7\test\Release\ntuple_types.exe : fatal error LNK1120: 1 unresolved externals [C:\Users\bellenot\build\release\tree\ntuple\v7\test\ntuple_types.vcxproj]; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10839
https://github.com/root-project/root/issues/10840:4116,Availability,error,error,4116,"ut for some special cases this seems to cause problems. I created the XML files for the problematic setups and tried to use `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be a valid XML that can be processed with histo2workspace. ### To Reproduce; Adding any Expression to the top level XML file that contains characters like `&`, `<` breaks histo2workpace and it seems that using formuale containing these characters in `AddPrepropcessFunction` crashes `MakeModelAndMeasurementFast`. ### Setup; 1. ROOT 6.26.04, but the histo2workspace issue not being able to read ther XML file is there also (at least) i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10840
https://github.com/root-project/root/issues/10840:1005,Deployability,release,releases,1005,"cked for duplicates. ### Describe the bug; Calling RooStats::HistFactory::MakeModelAndMeasurementFast(meas) leads to a seg violation in root 6.26.04 with gcc11 on CentOS7 machine (lxplus), while the same code worked with 6.24.06 with gcc8 on CentOS7 machine.; This is the relevant stack trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f43c411c60c in waitpid () from /lib64/libc.so.6; #1 0x00007f43c4099f62 in do_system () from /lib64/libc.so.6; #2 0x00007f43c6fe5a5c in TUnixSystem::StackTrace() () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libCore.so; #3 0x00007f43c6fe3155 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007f43c481adef in __dynamic_cast () from /cvmfs/sft.cern.ch/lcg/releases/gcc/11.2.0-8a51a/x86_64-centos7/lib64/libstdc++.so.6; #6 0x00007f43c51b2ff1 in RooAbsCollection::insert(RooAbsArg*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libRooFitCore.so; #7 0x00007f43c51b83db in RooAbsCollection::RooAbsCollection(RooAbsCollection const&, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libRooFitCore.so; #8 0x00007f43c52480f9 in RooArgList::RooArgList(RooArgList const&, char const*) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libRooFitCore.so; #9 0x00007f43c573c6f5 in RooStats::HistFactory::HistoToWorkspaceFactoryFast::createStatConstraintTerms(RooWorkspace*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, ParamHistFunc&, TH1 const*, RooStats::HistFactory::Constraint::Type, double) () from /cvmfs/sft.cern.ch/lcg/views/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10840
https://github.com/root-project/root/issues/10840:5165,Deployability,release,release,5165," `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be a valid XML that can be processed with histo2workspace. ### To Reproduce; Adding any Expression to the top level XML file that contains characters like `&`, `<` breaks histo2workpace and it seems that using formuale containing these characters in `AddPrepropcessFunction` crashes `MakeModelAndMeasurementFast`. ### Setup; 1. ROOT 6.26.04, but the histo2workspace issue not being able to read ther XML file is there also (at least) in 6.24.06; 2. CentOS7 (lxplus), tested with gcc8 and gcc11; 3. ROOT setup from LCG release, 101 (6.24.06) and 102 (6.26.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10840
https://github.com/root-project/root/issues/10840:3643,Integrability,Depend,Dependents,3643,"keModelAndMeasurementFast(RooStats::HistFactory::Measurement&) () from /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/lib/libHistFactory.so; ```. Note that this happens only for some setups, so I tried to debug it a bit and see what is special about the setups that crash. I will briefly describe what I found out:. We use AddPreprocessFunction() method to reparametrise our likelihood, this generally seems to work, but for some special cases this seems to cause problems. I created the XML files for the problematic setups and tried to use `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10840
https://github.com/root-project/root/issues/10840:5114,Testability,test,tested,5114," `hist2workspace` to try to identify the issues. I found out that the executable cannot read the XML files produced if it contains `&` and `<` or `>` as these are not valid XML characters and need to be escaped. So e.g. if the top level XML contains function like this:; ```; <Function Name=""morph_topWidth_0.700000"" Expression=""(0.+(((topWidth-0.700000)>=0)&&(fabs(topWidth-0.700000)<0.300000))*(1.-(fabs(topWidth-0.700000))/0.300000))"" Dependents=""topWidth[0.700000,0.700000,2.000000]"" />; ```; The `hist2workspace` executable will complain that it cannot parse the XML. I tried replacing the problematic characters with the XML replacements like `&gt;` etc. This makes the `hist2workspace` code run and it generates the workspace. However, if I try to replace the characters in the same way for the string passed to AddPrepropcessFunction, it doesnt parse the string and complains:; ```; input_line_48:2:89: error: use of undeclared identifier 'gt'; Double_t TFormula____id12625155560414669645(Double_t *x){ return (0.+(((x[0]-0.700000)&{gt;}=0)&#38;&#38;(fabs(x[0]-0.700000)&{lt;0.300000}))*(1.-(fabs(x[0]-0.700000))/0.300000)) ; }; ^; ```. I am not 100% sure these two issue - crash in the `MakeModelAndMeasurementFast` code and the XML parsing are related, but I think they could be. . ### Expected behavior; The code should not crash when calling `MakeModelAndMeasurementFast` as was the case in ROOT 6.24.06. The XML generated should be a valid XML that can be processed with histo2workspace. ### To Reproduce; Adding any Expression to the top level XML file that contains characters like `&`, `<` breaks histo2workpace and it seems that using formuale containing these characters in `AddPrepropcessFunction` crashes `MakeModelAndMeasurementFast`. ### Setup; 1. ROOT 6.26.04, but the histo2workspace issue not being able to read ther XML file is there also (at least) in 6.24.06; 2. CentOS7 (lxplus), tested with gcc8 and gcc11; 3. ROOT setup from LCG release, 101 (6.24.06) and 102 (6.26.04)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10840
https://github.com/root-project/root/pull/10842:452,Deployability,update,updated,452,"# This Pull request:. The HistFactory exporter tends to crash with ""edited"" HistFactory pdfs that look like genuine HistFactory upon first inspection but turn out not to be.; This PR delays the writing to the node of the JSOn structure until after all components have been found and identified, such that the exporter can cleanly abort in case an export with the HistFactory template is not possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10842
https://github.com/root-project/root/pull/10842:330,Safety,abort,abort,330,"# This Pull request:. The HistFactory exporter tends to crash with ""edited"" HistFactory pdfs that look like genuine HistFactory upon first inspection but turn out not to be.; This PR delays the writing to the node of the JSOn structure until after all components have been found and identified, such that the exporter can cleanly abort in case an export with the HistFactory template is not possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10842
https://github.com/root-project/root/pull/10842:422,Testability,test,tested,422,"# This Pull request:. The HistFactory exporter tends to crash with ""edited"" HistFactory pdfs that look like genuine HistFactory upon first inspection but turn out not to be.; This PR delays the writing to the node of the JSOn structure until after all components have been found and identified, such that the exporter can cleanly abort in case an export with the HistFactory template is not possible. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10842
https://github.com/root-project/root/pull/10843:7,Availability,error,error,7,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10843
https://github.com/root-project/root/pull/10843:505,Modifiability,variab,variables,505,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10843
https://github.com/root-project/root/pull/10843:565,Usability,simpl,simple,565,1. Fix error with copy and destroy of `TLatex::fTabSize`. Now it is `std::vector` and can be easily copied - if necessary. Also using as stack is much more convenient - just by using `emplace_back` and `pop_back`; 2. Fix bug in `TPie` copy constructor; 3. Fix memory leak with `TGaxis::fModLabs`. Array was never deleted and never copied properly. Extra problem because it may have pointer on list of labels from `TAxis`. Provide workaround for `TGaxis` objects stored before in ROOT files.; 4. Use stack variables while painting - no need to call `new/delete` for simple objects like `TLine` or `TMarker`; 5. Fix memory leak reading old version of TPolyLine; 6. Use `TString::Form` instead of `snprinf`; 7. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10843
https://github.com/root-project/root/pull/10844:55,Modifiability,evolve,evolve,55,"This simplifies client code and it makes it simpler to evolve RColumnRegister internals in the future, which will be needed e.g. for bulk processing in RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10844
https://github.com/root-project/root/pull/10844:5,Usability,simpl,simplifies,5,"This simplifies client code and it makes it simpler to evolve RColumnRegister internals in the future, which will be needed e.g. for bulk processing in RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10844
https://github.com/root-project/root/pull/10844:44,Usability,simpl,simpler,44,"This simplifies client code and it makes it simpler to evolve RColumnRegister internals in the future, which will be needed e.g. for bulk processing in RDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10844
https://github.com/root-project/root/pull/10846:277,Deployability,update,updated,277,# This Pull request:. ## Changes or fixes:; Added pythonizations to RDataFrame.; Filter now works with Python Functions.; New attribute PyDefine added to RDF.; PyDefine works with Python Functions whose return type is hinted. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10846
https://github.com/root-project/root/pull/10846:247,Testability,test,tested,247,# This Pull request:. ## Changes or fixes:; Added pythonizations to RDataFrame.; Filter now works with Python Functions.; New attribute PyDefine added to RDF.; PyDefine works with Python Functions whose return type is hinted. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10846
https://github.com/root-project/root/pull/10847:12,Deployability,patch,patch,12,"Before this patch, we were iterating until the end of the map; rather than until the end of the equal_range (this was not a; problem in practice because program logic guaranteed that we would; find what we were looking for and break out of the loop early).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10847
https://github.com/root-project/root/pull/10847:161,Testability,log,logic,161,"Before this patch, we were iterating until the end of the map; rather than until the end of the equal_range (this was not a; problem in practice because program logic guaranteed that we would; find what we were looking for and break out of the loop early).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10847
https://github.com/root-project/root/pull/10848:435,Deployability,update,updated,435,"# This Pull request: Lessens execution time, as the subprocess calls are quite expensive and take time, so using os calls are more Pythonic and quite a bit faster. ## Changes or fixes: Rewrote the exec_subprocess_call, exec_subprocess_check_output, and _perror functions to use the os module as opposed to the subprocess module. Also replaced certain subprocess calls with os calls. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned #406 in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10848
https://github.com/root-project/root/pull/10848:404,Testability,test,tested,404,"# This Pull request: Lessens execution time, as the subprocess calls are quite expensive and take time, so using os calls are more Pythonic and quite a bit faster. ## Changes or fixes: Rewrote the exec_subprocess_call, exec_subprocess_check_output, and _perror functions to use the os module as opposed to the subprocess module. Also replaced certain subprocess calls with os calls. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned #406 in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10848
https://github.com/root-project/root/pull/10849:16,Usability,guid,guidelines,16,As per C++ core guidelines.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10849
https://github.com/root-project/root/pull/10850:5,Deployability,patch,patch,5,This patch reduces the code bloat in TClingCallFunc trying to make the code more readable. cc: @sudo-panda,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10850
https://github.com/root-project/root/pull/10850:11,Energy Efficiency,reduce,reduces,11,This patch reduces the code bloat in TClingCallFunc trying to make the code more readable. cc: @sudo-panda,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10850
https://github.com/root-project/root/pull/10851:126,Safety,avoid,avoid,126,"Much of the functionality of RooAddition and RooAddPdf is implemented in exactly the; same way as in RooRealSumPdf. Hence, to avoid code duplication, we can; reuse the static functions in RooRealSumPdf that provide this; implementation.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10851
https://github.com/root-project/root/pull/10852:465,Deployability,release,release,465,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10852
https://github.com/root-project/root/pull/10852:473,Energy Efficiency,allocate,allocated,473,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10852
https://github.com/root-project/root/pull/10852:404,Modifiability,variab,variable,404,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10852
https://github.com/root-project/root/pull/10852:314,Testability,test,tests,314,"1. Use TString instead of plain char* in TCanvas methods; 2. Use std::vector<Bool_t> for TPad::fCollideGrid; 3. Fix memory leak in `TPad::DrawCollideGrid` and `TPad::DrawColorTable` methods; 4. Fix many-many memory leaks with usage of `<TPrimitive>::Draw<Primitive>` methods like `TLatex::DrawLatex` in tutorials, tests. In all these cases temporary object instance was not deleted. Now just using stack variable instead. ; 5. Improve some `TSpectrum2` tutorials - release allocated memory.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10852
https://github.com/root-project/root/pull/10853:160,Deployability,update,updated,160,# This Pull request:. ## Changes or fixes:; Add rs101_limitexample.py - Converted from rs101_limitexample.C. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # Part of [8758](https://github.com/root-project/root/issues/8758),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10853
https://github.com/root-project/root/pull/10853:130,Testability,test,tested,130,# This Pull request:. ## Changes or fixes:; Add rs101_limitexample.py - Converted from rs101_limitexample.C. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # Part of [8758](https://github.com/root-project/root/issues/8758),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10853
https://github.com/root-project/root/pull/10855:131,Usability,Simpl,Simplify,131,"System crashes when calling `strlen(nullptr)`, therefore protect in cases when argument can be directly set as external parameter. Simplify TMultiGraph::PaintPads, do not use `TString` as `strlen()` argument",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10855
https://github.com/root-project/root/pull/10857:727,Testability,test,test,727,"If the proxy normSet changed, we also have to set the value dirty flag; of the proxy owner. Otherwise, value for the new normalization set might; not get recomputed, which causes bugs!. The issue can be reproduced with this small code snippet:. ```C++; using namespace RooFit;. RooRealVar x(""x"", ""x"", 0, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, RooConst(0), RooConst(2));; RooAddition add(""add"", ""add"", {gauss});. std::cout << add.getVal() << std::endl;; std::cout << add.getVal(x) << std::endl;; ```. Without this commit, the value will be the same with and without; normalization set, because changing only the normalization set didn't; trigger a recomputation. This code snippet has also been implemented as a unit test now, where it; is tested that the values are different.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10857
https://github.com/root-project/root/pull/10857:750,Testability,test,tested,750,"If the proxy normSet changed, we also have to set the value dirty flag; of the proxy owner. Otherwise, value for the new normalization set might; not get recomputed, which causes bugs!. The issue can be reproduced with this small code snippet:. ```C++; using namespace RooFit;. RooRealVar x(""x"", ""x"", 0, -10, 10);; RooGaussian gauss(""gauss"", ""gauss"", x, RooConst(0), RooConst(2));; RooAddition add(""add"", ""add"", {gauss});. std::cout << add.getVal() << std::endl;; std::cout << add.getVal(x) << std::endl;; ```. Without this commit, the value will be the same with and without; normalization set, because changing only the normalization set didn't; trigger a recomputation. This code snippet has also been implemented as a unit test now, where it; is tested that the values are different.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10857
https://github.com/root-project/root/pull/10860:1538,Deployability,Update,Update,1538,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:1617,Deployability,update,updated,1617,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:593,Integrability,interface,interfaces,593,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:1049,Integrability,wrap,wrappers,1049,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:722,Performance,Load,LoadClusters,722,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:980,Performance,perform,performance,980,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:823,Security,Hash,Hash,823,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:1144,Security,Hash,Hash,1144,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/pull/10860:1587,Testability,test,tested,1587,"This pull request generalizes the `RDaos` backend to support multiple attribute keys per read-write operation, grouping requested blobs by their corresponding <object id, distribution key> pairs - defined as a struct `RDaosContainer::ROidDkeyPair(daos_obj_id_t, DistributionKey_t)`. . ## Changes or fixes:. - `RDaosObject::FetchUpdateArgs`, which prepares the arguments for requests to `daos_obj_fetch` or `daos_obj_update`. Now supports multiple attribute keys, I/O operation descriptors and I/O vectors, to send in one RW call to distributed storage.; - `RDaosContainer::RWOperation`, which interfaces between `RPageStorageDaos` and `RDaosObject`, supports multiple attribute keys and I/O vectors. ; - `RPageSourceDaos::LoadClusters` collects requested pages in an `unordered_map<ROidDkeyPair, RWOperation, ROidDkeyPair::Hash>` by their corresponding object IDs and distribution keys (currently, OID: unique page number and Dkey: const, so this PR should have no real effect on performance or results); - `RDaosContainer::VectorReadWrite` and its wrappers `WriteV`, `ReadV` now take an `unordered_map<ROidDkeyPair. RWOperation, ROidDkeyPair::Hash>` instead of `vector<RWOperation>`. This should allow for multiple requests spread throughout the container to be sent out in once call, each of which fetching or updating several blobs at once.; - `RDaosContainer::VectorReadWrite` implementation has been moved to `RDaos.cxx` file, de-templating the function argument (which is always expected to be either a `RDaosObject::Fetch` or a `::Update` non-static method). ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10860
https://github.com/root-project/root/issues/10861:207,Availability,error,error,207,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6760,Availability,error,error,6760,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6340,Deployability,configurat,configuration,6340,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:378,Energy Efficiency,green,greenc,378,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5397,Energy Efficiency,green,greenc,5397,"r.cpp:0:0; #29 0x0000000001c40f00 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) Parser.cpp:0:0; #30 0x000000000152a89e cling::IncrementalParser::ParseInternal(llvm::StringRef) IncrementalParser.cpp:0:0; #31 0x0000000001529c34 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5556,Energy Efficiency,green,greenc,5556,") IncrementalParser.cpp:0:0; #31 0x0000000001529c34 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5709,Energy Efficiency,green,greenc,5709,"ementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5843,Energy Efficiency,green,greenc,5843,"keTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6060,Energy Efficiency,green,greenc,6060,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6340,Modifiability,config,configuration,6340,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:3403,Performance,load,loadModule,3403,"void (clang::CompilerInstance&)>)::$_3>(long) CompilerInstance.cpp:0:0; #17 0x0000000003e4378f llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) CrashRecoveryContext.cpp:0:0; #18 0x0000000003e438b4 RunSafelyOnThread_Dispatch(void*) CrashRecoveryContext.cpp:0:0; #19 0x0000000003e4388d llvm::CrashRecoveryContext::RunSafelyOnThread(llvm::function_ref<void ()>, unsigned int) CrashRecoveryContext.cpp:0:0; #20 0x00000000019ac171 compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef, clang::FrontendInputFile, llvm::StringRef, llvm::StringRef, llvm::function_ref<void (clang::CompilerInstance&)>, llvm::function_ref<void (clang::CompilerInstance&)>) CompilerInstance.cpp:0:0; #21 0x00000000019aa3b1 compileAndLoadModule(clang::CompilerInstance&, clang::SourceLocation, clang::SourceLocation, clang::Module*, llvm::StringRef) CompilerInstance.cpp:0:0; #22 0x00000000019a964a clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__2::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) CompilerInstance.cpp:0:0; #23 0x0000000003b2a5be clang::Preprocessor::HandleHeaderIncludeOrImport(clang::SourceLocation, clang::Token&, clang::Token&, clang::SourceLocation, clang::DirectoryLookup const*, clang::FileEntry const*) PPDirectives.cpp:0:0; #24 0x0000000003b221d5 clang::Preprocessor::HandleIncludeDirective(clang::SourceLocation, clang::Token&, clang::DirectoryLookup const*, clang::FileEntry const*) PPDirectives.cpp:0:0; #25 0x0000000003b22b03 clang::Preprocessor::HandleDirective(clang::Token&) PPDirectives.cpp:0:0; #26 0x0000000003afa515 clang::Lexer::LexTokenInternal(clang::Token&, bool) Lexer.cpp:0:0; #27 0x0000000003af7b42 clang::Lexer::Lex(clang::Token&) Lexer.cpp:0:0; #28 0x0000000003b5a264 clang::Preprocessor::Lex(clang::Token&) Preprocessor.cpp:0:0; #29 0x0000000001c40f00 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) Parser.cpp:0:0; #30 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:995,Safety,abort,abort,995,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:385,Testability,test,test-products,385,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:568,Testability,Assert,Assertion,568,"- [x] Checked for duplicates. ### Describe the bug; ROOT 6.26/04 (https://github.com/root-project/root/tree/02b2af7af1be3430a3124236a7cdc6bb13cf90d2) fails to build with LLVM/Clang 14.0.6 with the following error from `rootcling`:. ```{Console}; [7221/9777] Generating G__Core.cxx, ../lib/Core.pcm; FAILED: core/G__Core.cxx lib/Core.pcm ...; <snip/>; rootcling_stage1: /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2799: unsigned int clang::ASTWriter::getSubmoduleID(clang::Module *): Assertion `(ID || !Mod) && ""asked for module ID for non-local, non-imported module""' failed.; #0 0x0000000003ee5514 PrintStackTraceSignalHandler(void*) Signals.cpp:0:0; #1 0x0000000003ee32cc llvm::sys::RunSignalHandlers() Signals.cpp:0:0; #2 0x0000000003ee5935 SignalHandler(int) Signals.cpp:0:0; #3 0x00007f1552225630 __restore_rt sigaction.c:0:0; #4 0x00007f1551316387 raise (/lib64/libc.so.6+0x36387); #5 0x00007f1551317a78 abort (/lib64/libc.so.6+0x37a78); #6 0x00007f155130f1a6 __assert_fail_base (/lib64/libc.so.6+0x2f1a6); #7 0x00007f155130f252 (/lib64/libc.so.6+0x2f252); #8 0x0000000001d23bf3 clang::ASTWriter::WriteSubmodules(clang::Module*) ASTWriter.cpp:0:0; #9 0x0000000001d34a01 clang::ASTWriter::WriteASTCore(clang::Sema&, llvm::StringRef, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*) ASTWriter.cpp:0:0; #10 0x0000000001d31700 clang::ASTWriter::WriteAST(clang::Sema&, std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> > const&, clang::Module*, llvm::StringRef, bool, bool) ASTWriter.cpp:0:0; #11 0x0000000001d7f347 clang::PCHGenerator::HandleTranslationUnit(clang::ASTContext&) GeneratePCH.cpp:0:0; #12 0x0000000001a4269c clang::MultiplexConsumer::HandleTranslationUnit(clang::ASTContext&) MultiplexConsumer.cpp:0:0; #13 0x0000000001ba6284 clang::ParseAST(clang::Sema&, bool, bool) ParseAST.cpp:0:0; #14 0x00000000019f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5404,Testability,test,test-products,5404,"r.cpp:0:0; #29 0x0000000001c40f00 clang::Parser::ParseTopLevelDecl(clang::OpaquePtr<clang::DeclGroupRef>&, bool) Parser.cpp:0:0; #30 0x000000000152a89e cling::IncrementalParser::ParseInternal(llvm::StringRef) IncrementalParser.cpp:0:0; #31 0x0000000001529c34 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5563,Testability,test,test-products,5563,") IncrementalParser.cpp:0:0; #31 0x0000000001529c34 cling::IncrementalParser::Initialize(llvm::SmallVectorImpl<llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5716,Testability,test,test-products,5716,"ementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:5850,Testability,test,test-products,5850,"keTypeTraits<cling::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6067,Testability,test,test-products,6067,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/issues/10861:6458,Usability,simpl,simplified,6458,"g::Transaction*> > > >&, bool) IncrementalParser.cpp:0:0; #32 0x000000000151d992 cling::Interpreter::Interpreter(int, char const* const*, char const*, std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > > const&, bool, cling::Interpreter const*) Interpreter.cpp:0:0; #33 0x00000000014a5117 std::__2::vector<std::__2::shared_ptr<clang::ModuleFileExtension>, std::__2::allocator<std::__2::shared_ptr<clang::ModuleFileExtension> > >::~vector() /scratch/greenc/test-products/clang/v14_0_6b/Linux64bit+3.10-2.17/bin/../include/c++/v1/vector:399:17; #34 0x00000000014a5117 RootClingMain(int, char**, bool) /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:4315:7; #35 0x00000000014b2135 ROOT_rootcling_Driver /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/dictgen/src/rootcling_impl.cxx:0:16; #36 0x00000000014f6b7e main /scratch/greenc/test-products/root/v6_26_04/source/root-6.26.04/core/rootcling_stage1/src/rootcling_stage1.cxx:46:4; #37 0x00007f1551302555 __libc_start_main (/lib64/libc.so.6+0x22555); #38 0x000000000143eb89 _start (/scratch/greenc/test-products/root/v6_26_04/build/Linux64bit+3.10-2.17-c13-p3912-prof/core/rootcling_stage1/src/rootcling_stage1+0x143eb89); <snip/>; ```. ### Expected behavior. Successful build. ### To Reproduce. Attempt to build ROOT with LLVM/Clang 14.0.6 and C++17 / `libc++` (precise configuration should be irrelevant provided `runtime_cxxmodules` is `ON`). ### Additional context. This was a second, simplified attempt after `rootcling` failed to find PSTL headers (_e.g._ `__pstl_memory`) in `<clang-lib>/clang/14.0.6/include` during the ROOT build when LLVM/Clang was compiled with parallel algorithms enabled in `libc++`. ~Currently attempting to reproduce on `master` branch.~. Fail with identical error on master (https://github.com/root-project/root/tree/7b7983fa8ab9e1a4af98776f7f80bea1f9b2b0b0).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10861
https://github.com/root-project/root/pull/10862:146,Availability,error,errors,146,# This Pull request: Makes the code flake8 compliant. ## Changes or fixes: Reformatted the entire file using yapf and got rid of remaining flake8 errors manually. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned https://github.com/root-project/root/pull/406 in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10862
https://github.com/root-project/root/pull/10862:215,Deployability,update,updated,215,# This Pull request: Makes the code flake8 compliant. ## Changes or fixes: Reformatted the entire file using yapf and got rid of remaining flake8 errors manually. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned https://github.com/root-project/root/pull/406 in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10862
https://github.com/root-project/root/pull/10862:184,Testability,test,tested,184,# This Pull request: Makes the code flake8 compliant. ## Changes or fixes: Reformatted the entire file using yapf and got rid of remaining flake8 errors manually. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned https://github.com/root-project/root/pull/406 in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10862
https://github.com/root-project/root/pull/10863:406,Deployability,update,updated,406,"# This Pull request: Replaced the subprocess.popen calls with os.popen calls. Using the os module in general will make build time faster. ## Changes or fixes: Replaced 11 subprocess.popen calls with os.popen calls, so with my previous pull request regarding the subprocess calls and this one, this entirely replaces the subprocess module use in the cpt. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned in #406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10863
https://github.com/root-project/root/pull/10863:375,Testability,test,tested,375,"# This Pull request: Replaced the subprocess.popen calls with os.popen calls. Using the os module in general will make build time faster. ## Changes or fixes: Replaced 11 subprocess.popen calls with os.popen calls, so with my previous pull request regarding the subprocess calls and this one, this entirely replaces the subprocess module use in the cpt. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes the issue mentioned in #406 (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10863
https://github.com/root-project/root/issues/10868:1080,Deployability,integrat,integration,1080,"### Describe the bug. The analytical integral of the RooPoisson is implemented wrongly for the case where the boundaries are `0 < a < 1e30` and `b >= 1e30`. ### Expected behavior. The integral should be correct. ### To Reproduce. The wrong integral can be reproduced with this code snippet. ```C++; void testPoissonIntegral() {. const double mu = 100;; const double inf = std::numeric_limits<double>::max();. // 1. Should be 1 because the probability to have x greater than 100000 is; // basically zero.; std::cout << getPoissonIntegral(0, 100000, mu) << std::endl;. // 2. Should be around 0.5, as the range of x is from the mean of the; // Poisson to basically infinity.; std::cout << getPoissonIntegral(100, 100000, mu) << std::endl;. // 3. Should be the same as the first integral; std::cout << getPoissonIntegral(0, inf, mu) << std::endl;. // 3. Should be the same as the second integral but it isn't!; std::cout << getPoissonIntegral(100, inf, mu) << std::endl;; }; ```. ### Setup. Any setup will do. ### Additional context. The problem is most likely that in the analytical integration code for the RooPoisson, it is hardcoded to return 1.0 if the upper boundary is infinite:; https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L102. An addition code branch is required for the case where the upper bound is infinite and the lower bound greater than zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10868
https://github.com/root-project/root/issues/10868:1080,Integrability,integrat,integration,1080,"### Describe the bug. The analytical integral of the RooPoisson is implemented wrongly for the case where the boundaries are `0 < a < 1e30` and `b >= 1e30`. ### Expected behavior. The integral should be correct. ### To Reproduce. The wrong integral can be reproduced with this code snippet. ```C++; void testPoissonIntegral() {. const double mu = 100;; const double inf = std::numeric_limits<double>::max();. // 1. Should be 1 because the probability to have x greater than 100000 is; // basically zero.; std::cout << getPoissonIntegral(0, 100000, mu) << std::endl;. // 2. Should be around 0.5, as the range of x is from the mean of the; // Poisson to basically infinity.; std::cout << getPoissonIntegral(100, 100000, mu) << std::endl;. // 3. Should be the same as the first integral; std::cout << getPoissonIntegral(0, inf, mu) << std::endl;. // 3. Should be the same as the second integral but it isn't!; std::cout << getPoissonIntegral(100, inf, mu) << std::endl;; }; ```. ### Setup. Any setup will do. ### Additional context. The problem is most likely that in the analytical integration code for the RooPoisson, it is hardcoded to return 1.0 if the upper boundary is infinite:; https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L102. An addition code branch is required for the case where the upper bound is infinite and the lower bound greater than zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10868
https://github.com/root-project/root/issues/10868:304,Testability,test,testPoissonIntegral,304,"### Describe the bug. The analytical integral of the RooPoisson is implemented wrongly for the case where the boundaries are `0 < a < 1e30` and `b >= 1e30`. ### Expected behavior. The integral should be correct. ### To Reproduce. The wrong integral can be reproduced with this code snippet. ```C++; void testPoissonIntegral() {. const double mu = 100;; const double inf = std::numeric_limits<double>::max();. // 1. Should be 1 because the probability to have x greater than 100000 is; // basically zero.; std::cout << getPoissonIntegral(0, 100000, mu) << std::endl;. // 2. Should be around 0.5, as the range of x is from the mean of the; // Poisson to basically infinity.; std::cout << getPoissonIntegral(100, 100000, mu) << std::endl;. // 3. Should be the same as the first integral; std::cout << getPoissonIntegral(0, inf, mu) << std::endl;. // 3. Should be the same as the second integral but it isn't!; std::cout << getPoissonIntegral(100, inf, mu) << std::endl;; }; ```. ### Setup. Any setup will do. ### Additional context. The problem is most likely that in the analytical integration code for the RooPoisson, it is hardcoded to return 1.0 if the upper boundary is infinite:; https://github.com/root-project/root/blob/master/roofit/roofit/src/RooPoisson.cxx#L102. An addition code branch is required for the case where the upper bound is infinite and the lower bound greater than zero.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10868
https://github.com/root-project/root/issues/10869:420,Testability,test,testsplot,420,"### What's wrong?. The signal yield is different before and after calling the `RooStats::SPlot` method. This happens if the signal model is a RooAddPdf. . ### Expected behavior. The signal yield should stay the same after calling the sPlot method. . ### To Reproduce; I have prepared a fairly minimal reproducer based on the `rs301_splot` example.; https://cernbox.cern.ch/index.php/s/2jCaTgG1I2kKakU; how to run: `root testsplot.C`. With ROOT 6.24/00:; the signal yield before and after sPlot is roughly the same✅:; ```; Signal yield before doing an sPlot: 285.981; Signal yield after doing an sPlot: 286.012; ```; With ROOT 6.26/04:; the signal yield after sPlot is reset to zero❌. ; ```; Signal yield before doing an sPlot: 285.981; Signal yield after doing an sPlot: 9.19709e-08; ```; This leads to nonsense behavior of the sWeights, as well as in subsequent plotting, etc.; Some investigation shows that the problem is visible when the signal model is a RooAddPdf, but the issue does not seem to be present if a single PDF is used for the signal. . ### Setup. 1. ROOT version: 6.26/04; 2. Operating system: CentOS 7; 3. How you obtained ROOT: from conda",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10869
https://github.com/root-project/root/issues/10870:205,Integrability,message,message,205,"As discussed during https://indico.cern.ch/event/1176978/ :+1: . - [x] always add `EXTRA_CLING_ARGS='-O0 -fno-omit-frame-pointer' when `CLING_DEBUG=1`; - [x] suggest re-running with `CLING_DEBUG=1` in the message surrounding the ROOT-generated stack traces; - [x] investigate the runtime and memory cost of `CLING_DEBUG=1`, consider having it on by default in some cases, e.g. for interactive usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10870
https://github.com/root-project/root/issues/10871:192,Availability,redundant,redundant,192,The RNTuple datasource currently does not look at cluster boundaries when splitting the dataset into entry ranges that are fed to TBB tasks via RDF. A more sensible task splitting would avoid redundant decompression work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10871
https://github.com/root-project/root/issues/10871:186,Safety,avoid,avoid,186,The RNTuple datasource currently does not look at cluster boundaries when splitting the dataset into entry ranges that are fed to TBB tasks via RDF. A more sensible task splitting would avoid redundant decompression work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10871
https://github.com/root-project/root/issues/10871:192,Safety,redund,redundant,192,The RNTuple datasource currently does not look at cluster boundaries when splitting the dataset into entry ranges that are fed to TBB tasks via RDF. A more sensible task splitting would avoid redundant decompression work.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10871
https://github.com/root-project/root/pull/10873:697,Testability,test,test,697,"As a normalization set within `evaluate()`, the RooGenericPdf used the; `RooAbsPdf::_normSet` member, and the RooFormulaVar used the; `RooAbsReal::_lastNSet` member. Both of them are not supposed to be used; outside the implementation of `RooAbsPdf::getValV()` and; `RooAbsReal::getValV()` and they are unreliable in any other context. Actually, in `evaluate()`, one should always use the normalization set; from the proxy, which is in this case a RooArgList (see for example how; the RooAddition does it). This commit suggests to do that for the; RooGenericPdf and RooFormulaVar. This change fixes the following Jira issue:; [ROOT-5101](https://sft.its.cern.ch/jira/browse/ROOT-5101). A new unit test is implemented in `testGenericPdf` to cover the problem; reported in that issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10873
https://github.com/root-project/root/pull/10873:721,Testability,test,testGenericPdf,721,"As a normalization set within `evaluate()`, the RooGenericPdf used the; `RooAbsPdf::_normSet` member, and the RooFormulaVar used the; `RooAbsReal::_lastNSet` member. Both of them are not supposed to be used; outside the implementation of `RooAbsPdf::getValV()` and; `RooAbsReal::getValV()` and they are unreliable in any other context. Actually, in `evaluate()`, one should always use the normalization set; from the proxy, which is in this case a RooArgList (see for example how; the RooAddition does it). This commit suggests to do that for the; RooGenericPdf and RooFormulaVar. This change fixes the following Jira issue:; [ROOT-5101](https://sft.its.cern.ch/jira/browse/ROOT-5101). A new unit test is implemented in `testGenericPdf` to cover the problem; reported in that issue.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10873
https://github.com/root-project/root/pull/10874:747,Testability,test,test,747,"There are two overloads of RooAbsCollection::addClone():. - RooAbsArg *addClone(const RooAbsArg& var, bool silent=false);; - void addClone(const RooAbsCollection& list, bool silent=false);. In the case of the RooAbsArg overload, we need to tell Python that it; doesn't own the returned pointer. That's because the function name; contains ""Clone"", which makes cppyy guess that the returned pointer; points to a clone owned by the caller. In the case of the; RooAbsCollection input, the return value will be `None` and we don't; need to change any ownership flags (in fact, calling; SetOwnership(None, False) would cause a crash). The check for the `None` return value was so far not done in the; pythonization and is added with this commit. A unit test was also added to check that the RooAbsCollection overloads; both work. This commit fixes the following Jira issue for good:; [ROOT-9580](https://sft.its.cern.ch/jira/browse/ROOT-9580).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10874
https://github.com/root-project/root/issues/10875:482,Availability,error,error,482,"- [x] Checked for duplicates. ### Describe the bug; ROOT sets `_HAS_CONDITIONAL_EXPLICIT=0` for MSVC's STL:; https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:647,Availability,error,error,647,"- [x] Checked for duplicates. ### Describe the bug; ROOT sets `_HAS_CONDITIONAL_EXPLICIT=0` for MSVC's STL:; https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:769,Availability,error,error,769,"- [x] Checked for duplicates. ### Describe the bug; ROOT sets `_HAS_CONDITIONAL_EXPLICIT=0` for MSVC's STL:; https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:935,Availability,error,error,935,"- [x] Checked for duplicates. ### Describe the bug; ROOT sets `_HAS_CONDITIONAL_EXPLICIT=0` for MSVC's STL:; https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1054,Availability,error,error,1054,"https://github.com/root-project/root/blob/2fc5e7a745ce898c80de820c624b4a4866756f74/interpreter/cling/lib/Interpreter/CIFactory.cpp#L811-L816. MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1217,Availability,error,error,1217," MSVC's STL (which I work on) has removed this codepath by merging https://github.com/microsoft/STL/pull/2796, which will ship in VS 2022 17.4 Preview 1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://go",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1336,Availability,error,error,1336,"1. As a result, ROOT will fail to build with:. ```; [trimmed...]\utility(151,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1520,Availability,error,error,1520,"\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(151,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsof",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1689,Availability,error,error,1689,"j]; [trimmed...]\utility(190,24): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating sy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1822,Availability,error,error,1822,"iers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Su",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1830,Availability,Error,Error,1830,"iers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Su",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:2429,Deployability,upgrade,upgrade,2429,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:2452,Integrability,depend,dependency,2452,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:1836,Performance,load,loading,1836,"iers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\utility(190,24): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Su",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10875:2889,Performance,throughput,throughput,2889,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10875
https://github.com/root-project/root/issues/10877:1308,Deployability,release,releases,1308,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:1450,Deployability,release,releases,1450,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:110,Integrability,message,message,110,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:180,Integrability,message,message,180,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:1601,Integrability,message,message,1601,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:1228,Performance,load,load,1228,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:1410,Performance,load,load,1410,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:866,Security,hash,hash,866,"Could not find any duplicate. ### Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/issues/10877:1665,Testability,Log,Login,1665,"Describe the bug; When starting ROOT on an arm64 machine a symbol-not-found message appears for about 10 times before getting to the prompt.; The message is related to SOFIE:. ```; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_ReshapeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Reshape(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; Symbol found in '/cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'; did you mean to load it with '.L /cvmfs/sft.cern.ch/lcg/releases/ROOT/6.26.04-22463/aarch64-centos7-gcc11-opt/lib/libROOTTMVASofieParser.so'?; ```. ROOT 6.24/06 works fine. ### Expected behavior; No warning message. ### To Reproduce; Steps to reproduce the behavior:; 1. Login on an ARM amchine with cvmfs, e.g. techlab-arm64-thunderx2-01 ; 2. Source dev4arm; `source /cvmfs/sft.cern.ch/lcg/views/dev4/Wed/aarch64-centos7-gcc11-opt/setup.sh`; 3. Start ROOT, e.g. `root -b -q`. ### Setup; 1. ROOT version: 6.26/04; 2. Operating system: aarch64, centos7; 3. LCG stack. ### Additional context; Affecting ATLAS (first noticed by Asoka Da Silva)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10877
https://github.com/root-project/root/pull/10882:72,Availability,failure,failure,72,In methods like `FindBranch` or `GetBranch` nullptr as argument causing failure. Avoid casting to `(char *)`. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10882
https://github.com/root-project/root/pull/10882:81,Safety,Avoid,Avoid,81,In methods like `FindBranch` or `GetBranch` nullptr as argument causing failure. Avoid casting to `(char *)`. Use `nullptr`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10882
https://github.com/root-project/root/pull/10883:309,Deployability,update,updated,309,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10883:21,Energy Efficiency,Reduce,Reduces,21,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10883:36,Modifiability,variab,variable,36,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10883:165,Modifiability,variab,variables,165,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10883:229,Modifiability,variab,variables,229,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10883:279,Testability,test,tested,279,"# This Pull request: Reduces global variable mutation, and is now easier to debug. ## Changes or fixes: Created a new Cpt class, moved all functions that use global variables to this class, and then made all the globals instance variables of the Cpt class. ## Checklist:. - [NA] tested changes locally; - [X] updated the docs (if necessary). This PR fixes issue mentioned in the meta-issue list #406 (https://github.com/root-project/cling/issues/406).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10883
https://github.com/root-project/root/pull/10885:183,Testability,test,test,183,"When getValV() was directly implemented in RooAddPdf, it was missed to; copy-paste the part from RooAbsPdf::getValV() where the normalization; sets for the proxies was synced. A unit test with the reproducer for an issue caused by missing the; syncing is also introduced with this commit, involving the SPlot from; RooStats. Closes #10869.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10885
https://github.com/root-project/root/pull/10886:103,Availability,failure,failures,103,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:431,Deployability,update,updated,431,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:202,Performance,Optimiz,Optimization-Cpu,202,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:41,Safety,timeout,timeouts,41,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:95,Safety,timeout,timeout,95,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:220,Safety,Timeout,Timeout,220,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:267,Safety,Timeout,Timeout,267,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:286,Safety,timeout,timeout,286,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:36,Testability,test,test,36,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:90,Testability,test,test,90,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:157,Testability,test,tests,157,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:340,Testability,test,tests,340,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10886:401,Testability,test,tested,401,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10886
https://github.com/root-project/root/pull/10889:706,Deployability,update,updated,706,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10889
https://github.com/root-project/root/pull/10889:206,Modifiability,config,configurable,206,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10889
https://github.com/root-project/root/pull/10889:497,Modifiability,config,configurable,497,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10889
https://github.com/root-project/root/pull/10889:676,Testability,test,tested,676,"This Pull request fixes a bug in `RPageSourceDaos` in which the cluster bunch default size does not get overridden by the one provided in `RNTupleReadOptions`. This change thus enables the prefetching of a configurable number of clusters while the current bunch is being processed, similarly to what is done in the constructor for `RPageSourceFile`. ## Changes or fixes:. - `RPageSourceDaos` ctor now uses the value in `RNTupleReadOptions::fClusterBunchSize` to initialize its `RClusterPool` with configurable read-ahead number of clusters, overwriting the default value of `1`. The change parallels the constructor implementation of `RPageSourceFile`. . ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Related to PR #9100, which introduced the prefetching capability.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10889
https://github.com/root-project/root/pull/10892:38,Availability,failure,failures,38,In order to debug not understood test failures that we could; not reproduce outside of the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10892
https://github.com/root-project/root/pull/10892:33,Testability,test,test,33,In order to debug not understood test failures that we could; not reproduce outside of the CI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10892
https://github.com/root-project/root/pull/10893:103,Performance,race condition,race condition,103,"In db1a2ceb40 (#9352), the C++ version of the rf408 tutorial was; improved:. * simplify code; * remove race condition; * fix typos. In this commit, the same changes are also applied to the corresponding; Python tutorial. Furthermore, two problems exclusive to the Python version were fixed:. * Replace second `RooDataSetHelper` with `RooDataHistHelper`; * Fix line breaks in data printing (now the output is formatted just; like in the C++ version). Closes #9360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10893
https://github.com/root-project/root/pull/10893:79,Usability,simpl,simplify,79,"In db1a2ceb40 (#9352), the C++ version of the rf408 tutorial was; improved:. * simplify code; * remove race condition; * fix typos. In this commit, the same changes are also applied to the corresponding; Python tutorial. Furthermore, two problems exclusive to the Python version were fixed:. * Replace second `RooDataSetHelper` with `RooDataHistHelper`; * Fix line breaks in data printing (now the output is formatted just; like in the C++ version). Closes #9360.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10893
https://github.com/root-project/root/issues/10895:111,Availability,error,errors,111,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:157,Availability,error,error,157,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:165,Availability,error,error,165,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:1113,Availability,error,error,1113,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:32,Testability,test,test,32,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:187,Testability,test,test,187,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:334,Testability,test,test,334,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:356,Testability,test,test,356,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/issues/10895:423,Testability,test,test,423,"### Describe the bug; ```; void test() { return 1; }; ```. Interpreting this snippet with cling does not raise errors. Compiling with AcLiC .C+ generates an error.` error: void function 'test' should not return a value [-Wreturn-type]`. ### Expected behavior; Interpreting should at least raise a warning?. ### To Reproduce; `root -l test.C`; vs; `root -l test.C+`. or copy-paste the function in the ROOT terminal and call test(). ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; Since I always teach my students to use ""root -l myscript.c+"", @Axel-Naumann asked me once for one example where compiling the code gave me more useful info when error appears than just interpreting, in order to find your own silly bugs when you write code. At that moment, I couldn't find a good example, it was more about past experience I had in the back of the mind, but this could be one (not specially relevant) case ;). (Maybe it's not exactly about cling, but rather to the fact that the compilation enables more warning flags than the 'interpret', thus making it easier to you to find your issues in the code).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10895
https://github.com/root-project/root/pull/10896:950,Deployability,update,updated,950,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10896
https://github.com/root-project/root/pull/10896:570,Testability,test,test,570,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10896
https://github.com/root-project/root/pull/10896:800,Testability,test,test,800,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10896
https://github.com/root-project/root/pull/10896:920,Testability,test,tested,920,"Created a new class in _function_utils to obtain function signature and jit the function. This will be further reused for Defines, which can may make _numbadeclare more modular. # This Pull request:. ## Changes or fixes:; 1. Added Filter pythonizations to RDF.; Filter now directly works with python functions.; 2. Resolved comments: 1,2 on repeated imports.; 3. Resolved comment: 3 on lazy imports; 4. Resolved comment: 4 on comments.; 5. Resolved comment: 5 on using a single pythonizer.; 6. Resolving comment: 7 on using multiple commits. Future commits will include test cases, Defines, and Tutorial changes.; 7. Resolved comment: 8 added docs for internal functions.; 8. Resolving comment: 9 on Pydefine. NOt implemented in this branch.; 9. The remaining comments are on the organisation of the test cases and tutorials which will be done in the different branches and will be addressed there. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10896
https://github.com/root-project/root/issues/10898:4948,Availability,failure,failures,4948,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:9,Deployability,upgrade,upgrade,9,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:142,Deployability,release,releaseMappedMemory,142,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:336,Deployability,release,releaseMappedMemory,336,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:5231,Deployability,update,update,5231,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:5604,Deployability,upgrade,upgrade,5604,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:664,Performance,optimiz,optimized,664,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:903,Performance,optimiz,optimized,903,"With the upgrade to llvm13, `llvm::orc::ResourceTracker` takes care of deleting the code sections upon unloading:; ```; #0 llvm::sys::Memory::releaseMappedMemory (M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/Support/Unix/Memory.inc:162; #1 0x00007fffee4988ab in llvm::(anonymous namespace)::DefaultMMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<ll",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:1391,Performance,optimiz,optimized,1391,"MMapper::releaseMappedMemory (; this=0x7ffff6a3c620 <llvm::(anonymous namespace)::DefaultMMapperInstance>, M=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:263; #2 0x00007fffee498701 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:237; #3 0x00007fffee4987a0 in llvm::SectionMemoryManager::~SectionMemoryManager (this=0x5555588b0570, ; __in_chrg=<optimized out>); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/SectionMemoryManager.cpp:239; #4 0x00007fffee41a1b4 in std::default_delete<llvm::RuntimeDyld::MemoryManager>::operator() (this=0x5555587feb70, ; __ptr=0x5555588b0570) at /usr/include/c++/11/bits/unique_ptr.h:85; #5 0x00007fffee418420 in std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >::~unique_ptr (this=0x5555587feb70, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/unique_ptr.h:361; #6 0x00007fffee41f27f in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__pointer=0x5555587feb70) at /usr/include/c++/11/bits/stl_construct.h:151; #7 0x00007fffee41e671 in std::_Destroy_aux<false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:196; #9 0x00007fffee41ae3b in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManag",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:2852,Performance,optimiz,optimized,2852,"false>::__destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:163; #8 0x00007fffee41cf98 in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*> (__first=0x5555587feb70, __last=0x5555587feb78); at /usr/include/c++/11/bits/stl_construct.h:196; #9 0x00007fffee41ae3b in std::_Destroy<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >*, std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > (__first=0x5555587feb70, __last=0x5555587feb78) at /usr/include/c++/11/bits/alloc_traits.h:848; #10 0x00007fffee4192ad in std::vector<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> >, std::allocator<std::unique_ptr<llvm::RuntimeDyld::MemoryManager, std::default_delete<llvm::RuntimeDyld::MemoryManager> > > >::~vector (this=0x7fffffff9280, __in_chrg=<optimized out>); at /usr/include/c++/11/bits/stl_vector.h:680; #11 0x00007fffee4162c1 in llvm::orc::RTDyldObjectLinkingLayer::handleRemoveResources (this=0x55555587cd40, ; K=93825045309680); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.cpp:336; #12 0x00007fffee378503 in llvm::orc::ExecutionSession::removeResourceTracker (this=0x555555cc9bb0, RT=...); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2162; #13 0x00007fffee36932a in llvm::orc::ResourceTracker::remove (this=0x5555587f28f0); at /home/axel/build/root/llvmupgrade/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:53; #14 0x00007fffec164fc7 in cling::IncrementalJIT::removeModule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:4943,Testability,test,test,4943,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/issues/10898:4998,Testability,assert,assertUnload-auto,4998,"dule (this=0x5555557aaed0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:184; #15 0x00007fffec0320a6 in cling::IncrementalExecutor::unloadModule (this=0x555555750eb0, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:181; #16 0x00007fffec031858 in cling::TransactionUnloader::RevertTransaction (this=0x7fffffff9610, T=0x55555886b420); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/TransactionUnloader.cpp:119; #17 0x00007fffec004b0f in cling::Interpreter::unload (this=0x555555607950, T=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1551; #18 0x00007fffec004c64 in cling::Interpreter::unload (this=0x555555607950, numberOfTransactions=1); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1572; #19 0x00007fffec28e780 in cling::MetaSema::actOnUCommand (this=0x5555561e0910, file=...); at /home/axel/build/root/llvmupgrade/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:222; #20 0x00007fffec2a04dd in cling::MetaParser::isUCommand (this=0x7fffffff9940, ; actionResult=@0x7fffffff993c: cling::MetaSema::AR_Success); ```. This leaves `TClingCallFunc::fWrapper` point to invalid memory and causes test failures at least in `roottest-root-meta-callfunc-assertUnload-auto`. I have disabled the deletion of the code segments, but that's just a temporary hack to make progress. We need a callback from the unloading to inform all `TClingCallFunc`s that use unloaded sections (including an update of `gWrapperStore` and friends), such that they can re-emit/-JIT the code if their `Decl` has not been unloaded. This serves as a marker to re-enable the deletion of the Sections, by enabling the `#if 0`'ed code around `interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:189` (in `IncrementalJIT::removeModule(const Transaction& T)`), as introduced by the llvm 13 upgrade.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10898
https://github.com/root-project/root/pull/10899:84,Deployability,patch,patch,84,"Rather than constructing a different reader for each node that; needs it, with this patch we now leverage RColumnRegister as; a ""cache"" of RDefineReaders and RVariationReaders so that nodes; in the computation graph share the same reader objects (per; processing slot). This is analogous to what RLoopManager does; for RDSColumnReaders and RTreeColumnReaders. Sharing column readers across the computation graph will be useful; for bulk loading of event values (which we do not want to repeat; for different instances of a given column's reader).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10899
https://github.com/root-project/root/pull/10899:129,Performance,cache,cache,129,"Rather than constructing a different reader for each node that; needs it, with this patch we now leverage RColumnRegister as; a ""cache"" of RDefineReaders and RVariationReaders so that nodes; in the computation graph share the same reader objects (per; processing slot). This is analogous to what RLoopManager does; for RDSColumnReaders and RTreeColumnReaders. Sharing column readers across the computation graph will be useful; for bulk loading of event values (which we do not want to repeat; for different instances of a given column's reader).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10899
https://github.com/root-project/root/pull/10899:437,Performance,load,loading,437,"Rather than constructing a different reader for each node that; needs it, with this patch we now leverage RColumnRegister as; a ""cache"" of RDefineReaders and RVariationReaders so that nodes; in the computation graph share the same reader objects (per; processing slot). This is analogous to what RLoopManager does; for RDSColumnReaders and RTreeColumnReaders. Sharing column readers across the computation graph will be useful; for bulk loading of event values (which we do not want to repeat; for different instances of a given column's reader).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10899
https://github.com/root-project/root/pull/10900:139,Availability,error,error-in-debian-bullseye,139,"Fix generation of `G__NetxNG.cxx` in paths with special characters, as described on the forum:; https://root-forum.cern.ch/t/6-26-04-build-error-in-debian-bullseye/50412",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10900
https://github.com/root-project/root/pull/10901:173,Deployability,update,updated,173,"# This Pull request:. ## Changes or fixes:; Add rs401c_FeldmanCousins.py, IntervalExamples.py, rs_numbercountingutils.py. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary); - [x] Formatted with `black --line-length=120 <tutorial file>.py`. This PR is a partial fix for #8758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10901
https://github.com/root-project/root/pull/10901:143,Testability,test,tested,143,"# This Pull request:. ## Changes or fixes:; Add rs401c_FeldmanCousins.py, IntervalExamples.py, rs_numbercountingutils.py. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary); - [x] Formatted with `black --line-length=120 <tutorial file>.py`. This PR is a partial fix for #8758",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10901
https://github.com/root-project/root/pull/10903:214,Availability,error,error-in-debian-bullseye,214,"…900). * Fix generation of G__NetxNG.cxx in paths with special characters. Fix generation of `G__NetxNG.cxx` in paths with special characters, as described on the forum:; https://root-forum.cern.ch/t/6-26-04-build-error-in-debian-bullseye/50412. * Update cmake/modules/RootMacros.cmake. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10903
https://github.com/root-project/root/pull/10903:248,Deployability,Update,Update,248,"…900). * Fix generation of G__NetxNG.cxx in paths with special characters. Fix generation of `G__NetxNG.cxx` in paths with special characters, as described on the forum:; https://root-forum.cern.ch/t/6-26-04-build-error-in-debian-bullseye/50412. * Update cmake/modules/RootMacros.cmake. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>. Co-authored-by: Axel Naumann <Axel.Naumann@cern.ch>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10903
https://github.com/root-project/root/pull/10905:11,Testability,log,logging,11,"There is a logging statement to estimate whether the number of requested; partitions is reasonable given the entries in the first file. This; should not happen every time, but on explicit user request. Python; logging defaults to WARNING, so move the statement to DEBUG to give; better control.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10905
https://github.com/root-project/root/pull/10905:210,Testability,log,logging,210,"There is a logging statement to estimate whether the number of requested; partitions is reasonable given the entries in the first file. This; should not happen every time, but on explicit user request. Python; logging defaults to WARNING, so move the statement to DEBUG to give; better control.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10905
https://github.com/root-project/root/pull/10906:205,Availability,Error,Errors,205,1. Major memory leak in `TMathText` - renderer was never deleted; 2. `TMathTex`t copy constructor and assign operator; 3. `TLegend` assign operator; 4. `TPaveText` copy constructor and assign operator; 5. Errors in `TPaveText::GetLine` and `TPaveText::GetLineWidth`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10906
https://github.com/root-project/root/pull/10908:74,Availability,error,error,74,Typical problem - direct copy of self-allocated memory which will lead to error in destructor; Also adjust some assign operators where `Copy` can be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10908
https://github.com/root-project/root/pull/10908:38,Energy Efficiency,allocate,allocated,38,Typical problem - direct copy of self-allocated memory which will lead to error in destructor; Also adjust some assign operators where `Copy` can be used.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10908
https://github.com/root-project/root/pull/10910:84,Performance,load,load,84,"When we run into an unkown identifier that is a namespace, we don't; really need to load its corresponding modules. Instead, we create a new; module that forward declared all namespaces and always load it first. By; doing so, we can avoid loading a lot of unnecessary modules. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910
https://github.com/root-project/root/pull/10910:197,Performance,load,load,197,"When we run into an unkown identifier that is a namespace, we don't; really need to load its corresponding modules. Instead, we create a new; module that forward declared all namespaces and always load it first. By; doing so, we can avoid loading a lot of unnecessary modules. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910
https://github.com/root-project/root/pull/10910:239,Performance,load,loading,239,"When we run into an unkown identifier that is a namespace, we don't; really need to load its corresponding modules. Instead, we create a new; module that forward declared all namespaces and always load it first. By; doing so, we can avoid loading a lot of unnecessary modules. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910
https://github.com/root-project/root/pull/10910:233,Safety,avoid,avoid,233,"When we run into an unkown identifier that is a namespace, we don't; really need to load its corresponding modules. Instead, we create a new; module that forward declared all namespaces and always load it first. By; doing so, we can avoid loading a lot of unnecessary modules. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10910
https://github.com/root-project/root/pull/10912:504,Availability,error,error,504,"If a RooAddPdf or RooAddModel has negative coefficients, the; RooAddGenContext can't be used and we need to fall back to the generic; RooGenContext. To achieve this without code duplication, a new templated static; function has been added to the `RooAddGenContext` that returns either a; new RooAddGenContext when there are no negative coeffiecients, or a; generic RooGenContext when there are. If for an existing RooAddGenContext the coeficients of the pdf are; changed to be negative, it will throw an error the next time you try to; generate an event and kindly ask the user to create a new generator; context. It was checked with the example code from #7252 that generating events for AddPdfs with negative coefficients works now. A separate commit in this PR applies some general code modernization to the RooAddGenContext.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10912
https://github.com/root-project/root/pull/10913:261,Deployability,update,updated,261,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10913
https://github.com/root-project/root/pull/10913:191,Security,validat,validate,191,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10913
https://github.com/root-project/root/pull/10913:92,Testability,test,tests,92,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10913
https://github.com/root-project/root/pull/10913:182,Testability,test,tests,182,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10913
https://github.com/root-project/root/pull/10913:231,Testability,test,tested,231,"# This Pull request: Adds the Tanh Activation function to SOFIE with the corresponding unit tests; 1. Adds the Tanh ONNX operator, an activation function to SOFIE.; 2. Adds the unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10913
https://github.com/root-project/root/pull/10914:295,Deployability,update,updated,295,"In the RooChi2Var and the related `createChi2` functions in RooAbsReal; and RooAbsPdf, the `DataError` was not explained precisely enough. This commit changes the documentation of the RooChi2Var constructor to; exactly explain what is going on, and the the documentation of the; `createChi2` is updated to link to the RooChi2Var documentation to avoid; code duplication. This commit also replaces some LaTeX formulae from titiles in the; documentation because they are not rendered there. Closes #8615.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10914
https://github.com/root-project/root/pull/10914:346,Safety,avoid,avoid,346,"In the RooChi2Var and the related `createChi2` functions in RooAbsReal; and RooAbsPdf, the `DataError` was not explained precisely enough. This commit changes the documentation of the RooChi2Var constructor to; exactly explain what is going on, and the the documentation of the; `createChi2` is updated to link to the RooChi2Var documentation to avoid; code duplication. This commit also replaces some LaTeX formulae from titiles in the; documentation because they are not rendered there. Closes #8615.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10914
https://github.com/root-project/root/issues/10919:624,Availability,Error,ErrorHandler,624,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10919
https://github.com/root-project/root/issues/10919:240,Safety,abort,aborting,240,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10919
https://github.com/root-project/root/issues/10919:96,Usability,Simpl,Simplest,96,"While virtual `Copy(TObject &obj)` method is used in copy constructors, wrong cast may happen.; Simplest reproducer:; ```; TProfile p;; TH1D h(p);; ```; Causes fatal crash:; ```; Fatal in <TProfile::Copy>: Cannot copy a TProfile in a TH1D; aborting; #0 0x00007f2293b0a83a in wait4 () from /lib64/libc.so.6; #1 0x00007f2293a7403b in do_system () from /lib64/libc.so.6; #2 0x00007f22942c5a3d in TUnixSystem::StackTrace() () from /home/linev/build/webgui/lib/libCore.so; #3 0x00007f229418294c in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/linev/build/webgui/lib/libCore.so; #4 0x00007f22942497bd in ErrorHandler () from /home/linev/build/webgui/lib/libCore.so; #5 0x00007f22941988f4 in TObject::Fatal(char const*, char const*, ...) const () from /home/linev/build/webgui/lib/libCore.so; #6 0x00007f227d6fbde8 in TProfile::Copy(TObject&) const [clone .cold] () from /home/linev/build/webgui/lib/libHist.so; #7 0x00007f227d80aba7 in TH1D::TH1D(TH1D const&) () from /home/linev/build/webgui/lib/libHist.so; #8 0x00007f228c9dc028 in ?? (); #9 0x00007f2293f83460 in ?? (); #10 0x00007f228f062cfe in cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #11 0x00007f228efd6ea4 in cling::Interpreter::executeTransaction(cling::Transaction&) () from /home/linev/build/webgui/lib/libCling.so; #12 0x00007f228f07511c in cling::IncrementalParser::commitTransaction(llvm::PointerIntPair<cling::Transaction*, 2u, cling::IncrementalParser::EParseResult, llvm::PointerLikeTypeTraits<cling::Transaction*>, llvm::PointerIntPairInfo<cling::Transaction*, 2u, llvm::PointerLikeTypeTraits<cling::Transaction*> > >&, bool) () from /home/linev/build/webgui/lib/libCling.so; #13 0x00007f228f076c68 in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/linev/build/webgui/lib/libCling.so; #14 0x00007f228efd4bb8 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<cha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10919
https://github.com/root-project/root/issues/10920:1021,Availability,Error,Error,1021,"s certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); =====================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:1210,Availability,avail,available,1210,"6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:77,Modifiability,variab,variables,77,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:839,Modifiability,variab,variable,839,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:1134,Modifiability,variab,variable,1134,"6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/libstdc++.so.6; #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:482,Testability,test,testtuple,482,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/issues/10920:666,Testability,test,testtuple,666,"### What's wrong. When trying to Snapshot a RDataFrame that contains certain variables of the array type, segmentation violation occurs in 6.26/04. This however works in 6.24/00. ### Expected behavior. No crash... ### To Reproduce. A minimal reproducer can be called by running this code. ```C++; #include ""TROOT.h""; #include ""TChain.h""; #include ""ROOT/RDataFrame.hxx""; using namespace ROOT;. void preselect_test(){; ROOT::EnableImplicitMT(3);. TChain tree(""DecayTree"");; tree.Add(""testtuple.root"");; RDataFrame df1(tree);. TCut AllCuts = ""1>0"";; auto df2 = df1.Filter(AllCuts.GetTitle());; df2.Snapshot(""DecayTree"", ""myoutput.root"");; }; ```; where the input file `testtuple.root` can be found here: https://cernbox.cern.ch/index.php/s/ujgGnDwpDpQZo44 ; In my example, the input file contains a few branches, in particular the array-type variable `Lambda_DTFL_KS_M` which has a size of `Lambda_DTFL_KS_nPV`. In ROOT 6.24/00 this code runs smoothly producing an output file.; In ROOT 6.26/04 the following happens:. ```; Error in <TBranch::TBranch>: Illegal leaf: Lambda_DTFL_KS_M/Lambda_DTFL_KS_M[Lambda_DTFL_KS_nPV]/F. If this is a variable size C array it's possible that the branch holding the size is not available. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f0f1ec60c in waitpid () from /lib64/libc.so.6; #1 0x00007f3f0f169f62 in do_system () from /lib64/libc.so.6; #2 0x00007f3f0f79f545 in TUnixSystem::StackTrace() () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #3 0x00007f3f0f79c8c7 in TUnixSystem::DispatchSignals(ESignals) () from /opt/miniconda/envs/root_forge/lib/libCore.so.6.26; #4 <signal handler called>; #5 0x00007f3efbe302d0 in ?? (); #6 0x0000009900000224 in ?? (); #7 0x0046561992848cc0 in ?? (); #8 0x00007f3f0fa886ba in ?? () from /opt/miniconda/envs/root_forge/lib/li",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10920
https://github.com/root-project/root/pull/10921:410,Deployability,update,updated,410,"# This Pull request:; Avoid removing elements of `RooArgSet` in `RooBarlowBeestonLL` while looping over them. This was broken since ROOT v6.18, after `RooAbsCollection` was moved to `std::vector` . This (re)enables the analytical treatment of statistical uncertainties in bins with the Barlow-Beeston-Lite procedure. ## Changes or fixes:; As described above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10921
https://github.com/root-project/root/pull/10921:22,Safety,Avoid,Avoid,22,"# This Pull request:; Avoid removing elements of `RooArgSet` in `RooBarlowBeestonLL` while looping over them. This was broken since ROOT v6.18, after `RooAbsCollection` was moved to `std::vector` . This (re)enables the analytical treatment of statistical uncertainties in bins with the Barlow-Beeston-Lite procedure. ## Changes or fixes:; As described above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10921
https://github.com/root-project/root/pull/10921:380,Testability,test,tested,380,"# This Pull request:; Avoid removing elements of `RooArgSet` in `RooBarlowBeestonLL` while looping over them. This was broken since ROOT v6.18, after `RooAbsCollection` was moved to `std::vector` . This (re)enables the analytical treatment of statistical uncertainties in bins with the Barlow-Beeston-Lite procedure. ## Changes or fixes:; As described above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10921
https://github.com/root-project/root/pull/10922:203,Deployability,install,installing,203,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10922
https://github.com/root-project/root/pull/10922:24,Modifiability,config,config,24,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10922
https://github.com/root-project/root/pull/10922:173,Modifiability,config,config,173,Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10922
https://github.com/root-project/root/pull/10923:253,Deployability,install,installing,253,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10923
https://github.com/root-project/root/pull/10923:26,Modifiability,config,config,26,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10923
https://github.com/root-project/root/pull/10923:74,Modifiability,config,config,74,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10923
https://github.com/root-project/root/pull/10923:223,Modifiability,config,config,223,* Fix an issue with `root-config --has-whatever`. Fix an issue with `root-config --has-whatever` as described on the forum: https://root-forum.cern.ch/t/tpythia8-h-file-not-found/50682; The `all_features` list in the `root-config` script was empty when installing it (but was OK in the build directory). * [skip-ci] Fix the comment,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10923
https://github.com/root-project/root/issues/10924:566,Availability,down,download,566,"- [x] Checked for duplicates. ### Describe the bug. ROOT can't recognize components like `std::experimental::tuple` ( Maybe it is because there're two `tuple`, one in `std` and one in `std::experimental`, so ROOT is confused). ![image](https://user-images.githubusercontent.com/77525145/177772823-0411a239-ecd0-4845-a5f9-966d628d4bb0.png). ### Expected behavior; works fine. ### To Reproduce; type `std::experimental::tuple<int, double> T;` in the repl. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; * ROOT version: main; * Operating System: Ubuntu 22 LTS; * Build ROOT from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10924
https://github.com/root-project/root/issues/10924:548,Deployability,install,install,548,"- [x] Checked for duplicates. ### Describe the bug. ROOT can't recognize components like `std::experimental::tuple` ( Maybe it is because there're two `tuple`, one in `std` and one in `std::experimental`, so ROOT is confused). ![image](https://user-images.githubusercontent.com/77525145/177772823-0411a239-ecd0-4845-a5f9-966d628d4bb0.png). ### Expected behavior; works fine. ### To Reproduce; type `std::experimental::tuple<int, double> T;` in the repl. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; * ROOT version: main; * Operating System: Ubuntu 22 LTS; * Build ROOT from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10924
https://github.com/root-project/root/pull/10927:646,Availability,avail,available,646,"This pull request introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:1848,Deployability,update,updated,1848,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:257,Energy Efficiency,allocate,allocates,257,"This pull request introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:702,Energy Efficiency,allocate,allocated,702,"This pull request introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and di",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:1667,Energy Efficiency,allocate,allocated,1667,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:1418,Modifiability,variab,variable,1418,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:1750,Testability,test,tested,1750,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10927:1809,Testability,test,tests,1809,"t introduces a structure (`RDaosKey`) to represent a blob's location within DAOS containers (comprising object ID, distribution key and attribute key) and adds a new mapping between ntuple pages to DAOS. The new mapping ( `kOidPerCluster` ) allocates one object per cluster and determines the distribution key from the column ID - with each page addressable by its own attribute key - , thus perpetuating the adjacency of values in the same cluster and column in the distributed store. I.e., neighboring values that are likely to be fetched together are coalesced to the same physical device in DAOS. The original mapping remains available as `kOidPerPage`, where each page is uniquely allocated its own object. In future, other mappings may be easily added by modifying the templated function `GetPageDaosKey` with that use case. RW calls in `RPageStorageDaos` use the mapping set in `kDefaultDaosMapping`, which is `kOidPerCluster`. ## Changes or fixes:; - Introduces `RDaosKey` as an abstract representation of a blob's location in DAOS comprising object ID, distribution key and attribute key.; - Mapping strategies are listed in the enumerator `EDaosMapping`, currently with values `kOidPerPage`, `kOidPerCluster`. ; - The function `GetPageDaosKey` determines the correct `RDaosKey` from page metadata in accordance with the strategy given by the templated argument of type `EDaosMapping`.; - The variable `kDefaultDaosMapping`, set to `kOidPerCluster`, holds the mapping for `RPageStorageDaos` RW calls.; - RNTuple page metadata (anchor, header, footer) blobs are mapped to a single object with three attribute keys, while a dedicated object is allocated to hold the pagelists (one for each cluster group). ## Checklist:. - [x] tested changes locally and on openlab cluster: passes unit tests, LHCb dataset on DAOS 2.0; - [x] updated the docs (if necessary). This PR partially fixes #8080 by introducing the new mapping that stores ""page groups"" as sharing the same object and distribution key.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10927
https://github.com/root-project/root/pull/10930:302,Availability,avail,available,302,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/pull/10930:890,Deployability,update,updated,890,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/pull/10930:340,Integrability,depend,dependent,340,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/pull/10930:596,Integrability,depend,depends,596,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/pull/10930:350,Modifiability,variab,variable,350,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/pull/10930:860,Testability,test,tested,860,"This pull request applies a number of fixes after the merge or PR #5913 (see below). ## Changes or fixes:; - Fix issues with documentation generation on macOS. In particular: ; 1. Fix `mktemp` command lines to only use template `X`s at the end.; 2. Use `sysctl -n hw.ncpu` instead to get the number of available CPUs on Darwin.; 3. Move OS-dependent variable assignments to the `Makefile`; - Ensure `libs.C` is ACLiC'ed before `modifyClassWebpage.sh` runs. Specifically, `modifyClassWebpages.sh` might spawn many `modifyClassWebpage.sh` processes via `xargs -P`. In turn, `modifyClassWebpage.sh` depends on `libs.C` which is ACLiC'ed if to generate `libs_C.so` where required.; However, if `libs_C.so` does not exist, multiple processes might race to create it. Thus, ensure that the macro is ACLiC'ed before `modifyClassWebpage.sh` runs. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10930
https://github.com/root-project/root/issues/10931:566,Availability,error,error,566,"In the ROOT 6.26 the default position of the legend in the output of RooMCStudy is not optimal, as part of numbers is cut away: see the top-right plot in the rf801 example https://root.cern.ch/doc/v626/rf801__mcstudy_8C.html . This used to be better positioned in 6.24: https://root.cern.ch/doc/v624/rf801__mcstudy_8C.html . It would be great to make the position optimal by default. (In the meantime, is there an easy way to change it manually?). Extra wish: would it be possible to invoke the Gaussian fit not only for the pull plot, but also for the ""value"" and ""error"" plots? (The two other plots in the top row of the rf801 example).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10931
https://github.com/root-project/root/pull/10936:185,Deployability,update,updated,185,# This Pull request: Rewrote parser arguments for better nomenclature. ## Changes or fixes: Multiple arguments now have with prefix. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue in list #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10936
https://github.com/root-project/root/pull/10936:154,Testability,test,tested,154,# This Pull request: Rewrote parser arguments for better nomenclature. ## Changes or fixes: Multiple arguments now have with prefix. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue in list #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10936
https://github.com/root-project/root/pull/10937:253,Deployability,update,updated,253,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10937
https://github.com/root-project/root/pull/10937:31,Integrability,depend,dependent,31,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10937
https://github.com/root-project/root/pull/10937:222,Testability,test,tested,222,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10937
https://github.com/root-project/root/pull/10938:389,Modifiability,variab,variable,389,"It can easily happen that the fit parameter labels in the `plotPull()`; produced by the RooMCStudy don't fit on the canvas, for example in the; `rf801` tutorial:. https://root.cern.ch/doc/v626/rf801__mcstudy_8C.html. This commit suggests to improve the likelihood that the labels overshoot; the canvas in two ways:. * custom parameter label text with greek letters instead of; written-out variable letters to save space. * move the labels a bit to the left. If the legend is still not looking good in a given usecase, the Gaussian; should be fit to the pull distribution by the user outside of; `plotPull()`, which only takes a handful lines and then they have full; control over the plot. The built-in Gaussian fit to `plotPull()` is only; for quick visualizations anyway. It is now explained how to do the; Gaussian fit yourself in the documentation of `plotPull()`. Closes #10931. Here is how the output of the `rs401c_FeldmanCousins.py` tutorial looks with this PR:. ![rf801_mcstudy](https://user-images.githubusercontent.com/6578603/178079738-d5490b09-c0a5-4f7a-b8f9-e820cd650304.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10938
https://github.com/root-project/root/pull/10943:229,Availability,error,errors,229,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10943
https://github.com/root-project/root/pull/10943:260,Availability,Error,Error,260,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10943
https://github.com/root-project/root/pull/10943:481,Deployability,update,updated,481,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10943
https://github.com/root-project/root/pull/10943:249,Testability,log,log,249,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10943
https://github.com/root-project/root/pull/10943:451,Testability,test,tested,451,This pull request fixes a remaining issue after merging #5913 and #10930 (see below). ## Changes or fixes:; - Remove the `.so` suffix and any trailing whitespace in the output generated by `libs.C`. This should fix the following errors found in the log:; ```; Error: file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/master_TMP/html/libRMVA.so __coll__graph.svg not found.; ```; - Remove dead code in `libs.C`. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10943
https://github.com/root-project/root/pull/10944:1669,Deployability,update,updated,1669,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:1492,Integrability,interface,interface,1492,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:18,Modifiability,extend,extends,18,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:1473,Modifiability,refactor,refactored,1473,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:640,Performance,optimiz,optimizations,640,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:735,Performance,Load,LoadClusters,735,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:1368,Performance,optimiz,optimized,1368,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10944:1589,Testability,test,tested,1589,"This Pull request extends `RPageSink::RPageSinkDaos` to implement `RPageSinkDaos::CommitSealedPageVImpl()`, of signature: ; ```c++; vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(span<RPageStorage::RSealedPageGroup> ranges); ```; , which is virtually declared in the parent class `RPageSink` since PR #10775. . The implemented method modifies the default behavior for committing page ranges, i.e. calling `::CommitSealedPage` repeatedly for each individual page. ; Instead, it coalesces the buffered page ranges - e.g. all pages in a column or cluster - into a batch of vector writes, enabling I/O parallelization after recent optimizations to the `RDaos` library. . As with the batched fetching case in `RPageSourceDaos::LoadClusters()`, the page write requests are aggregated by the pair (Object ID, Distribution Key). This pair is part of the `RDaosKey` determined by the mapping strategy set in `kDefaultDaosMapping` from the pages metadata and the `RPageSinkDaos` instance's atomic counter `fPageId` that uniquely identifies pages in the storage sink. ## Changes or fixes:. * Implements `std::vector<RNTupleLocator> RPageSinkDaos::CommitSealedPageVImpl(std::span<RPageStorage::RSealedPageGroup> ranges)`; * Modifies the default behavior in `RPageSink::CommitSealedPageV()` to coalesce pages before sending out the write request to storage; * Enables optimized (i.e. batched) vector write requests of multiple pages within a column range by exploiting the refactored `RDaos` interface and the generalized ntuple-object mappings in `RPageStorageDaos`. ## Checklist:. - [x] tested changes locally and on openlab cluster `olsky-03` with DAOS 2.0.x; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10944
https://github.com/root-project/root/pull/10945:253,Deployability,update,updated,253,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10945
https://github.com/root-project/root/pull/10945:31,Integrability,depend,dependent,31,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10945
https://github.com/root-project/root/pull/10945:222,Testability,test,tested,222,# This Pull request: Added new dependent arguments to the argument parser. ## Changes or fixes: Cannot call llvm tar and binary at the same time and cannot call llvm tar and llvm url at the same time. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue mentioned in #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10945
https://github.com/root-project/root/pull/10946:155,Deployability,update,updated,155,# This Pull request: Adds the Neg ONNX Operator with the corresponding unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10946
https://github.com/root-project/root/pull/10946:85,Security,validat,validate,85,# This Pull request: Adds the Neg ONNX Operator with the corresponding unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10946
https://github.com/root-project/root/pull/10946:76,Testability,test,tests,76,# This Pull request: Adds the Neg ONNX Operator with the corresponding unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10946
https://github.com/root-project/root/pull/10946:125,Testability,test,tested,125,# This Pull request: Adds the Neg ONNX Operator with the corresponding unit tests to validate the code. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10946
https://github.com/root-project/root/pull/10947:186,Deployability,update,updated,186,# This Pull request:. ## Changes or fixes:; Replaced while loops with the legacy iterators fwdIterator() with range based for loops. . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #8777,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10947
https://github.com/root-project/root/pull/10947:156,Testability,test,tested,156,# This Pull request:. ## Changes or fixes:; Replaced while loops with the legacy iterators fwdIterator() with range based for loops. . ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #8777,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10947
https://github.com/root-project/root/issues/10948:438,Availability,error,error,438,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; ### Describe the bug. When compiling some of my classes I got the following error message. The code was compiling before I removed some lines in one of the included header files. ```; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisSpectrum.cxx:78:1: error: redefinition of 'R__dummyintdefault78'; ClassImp(PairAnalysisSpectrum); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948
https://github.com/root-project/root/issues/10948:661,Availability,error,error,661,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; ### Describe the bug. When compiling some of my classes I got the following error message. The code was compiling before I removed some lines in one of the included header files. ```; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisSpectrum.cxx:78:1: error: redefinition of 'R__dummyintdefault78'; ClassImp(PairAnalysisSpectrum); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948
https://github.com/root-project/root/issues/10948:444,Integrability,message,message,444,"- [ x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; ### Describe the bug. When compiling some of my classes I got the following error message. The code was compiling before I removed some lines in one of the included header files. ```; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisSpectrum.cxx:78:1: error: redefinition of 'R__dummyintdefault78'; ClassImp(PairAnalysisSpectrum); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948
https://github.com/root-project/root/issues/10948:2902,Integrability,depend,depend,2902,"e _NAME2_(name1,name2) name1##name2; ^; <scratch space>:81:1: note: expanded from here; R__dummyintdefault78; ^; /Users/uhlig/software/fair/cbm/cbmroot_git/analysis/PWGDIL/dielectron/papaframework/PairAnalysisHistos.h:78:1: note: previous definition is here; ClassImp(PairAnalysisHn); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:361:24: note: expanded from macro 'ClassImp'; #define ClassImp(name) ClassImpUnique(name,default); ^; /opt/fairsoft/apr21p2/include/root/Rtypes.h:356:21: note: expanded from macro 'ClassImpUnique'; static int _R__UNIQUE_(_NAME2_(R__dummyint,key)) __attribute__((unused)) = \; ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:456:27: note: expanded from macro '_R__UNIQUE_'; # define _R__UNIQUE_(X) _R__JOIN_(X,__LINE__); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:453:27: note: expanded from macro '_R__JOIN_'; # define _R__JOIN_(X,Y) _NAME2_(X,Y); ^; /opt/fairsoft/apr21p2/include/root/ROOT/RConfig.hxx:435:33: note: expanded from macro '_NAME2_'; # define _NAME2_(name1,name2) name1##name2; ^; <scratch space>:59:1: note: expanded from here; R__dummyintdefault78; ```. ### Expected behavior. The code should compile without problems. ### To Reproduce. Put together some code which by chance has two ClassImp statements in the same line in two different files which end up in the same compilation unit.; In the end it turned out that the name expanded from the ClassImp statements does not depend on the name of the class but only one the line of the ClassImp statement in the code. Both calls. `ClassImp(PairAnalysisSpectrum)` . and . `ClassImp(PairAnalysisHn)`. generated the same name. `R__dummyintdefault78`. which is only defined by the line number. Adding one empty line in one of the files work around the problem. ### Setup. 1. ROOT version: 6.22.08; 2. Operating system: macosx 11 and 12. Probably will fail also on other systems and with newer ROOT versions. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10948
https://github.com/root-project/root/pull/10952:86,Performance,cache,cache,86,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10952:141,Performance,cache,cache,141,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10952:717,Performance,cache,cache,717,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10952:767,Performance,cache,cached,767,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10952:1049,Performance,cache,cache,1049,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10952:1041,Usability,clear,cleared,1041,"The RooWorkspace sometimes stores some RooArgSet prefixed with `CACHE_`; in itself to cache for example parameters or constraint sets. These cache sets are invalidated when elements are removed from them by; `RooWorkspace::RecursiveRemove()`. In this case, they should be removed; from the workspace such that they can be correctly recomputed later. This change fixes problems like this one reported on the forum:; https://root-forum.cern.ch/t/how-to-properly-redefine-pdf-in-rooworkspace/50757. In that usecase, the following sequence of events happened:. 1. Create pdf in workspace; 2. Fit this pdf (triggering the caching of the set of parameters); 3. Recursively remove everything from the workspace, but not the cache; sets as they are hidden from the user. The cached parameter sets are; now empty, as all parameters got removed from the workspace; 4. The same pdf from step 1 is recreated; 5. Fitting of this new pdf will now fail, because RooFit thinks it has; zero free parameters, as the call to `getParameters()` now returns; the cleared cache set!. An additional commit in this PR applies some general modernization of the RooWorkspace code.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10952
https://github.com/root-project/root/pull/10953:387,Testability,test,tested,387,# This Pull request:. ## Changes or fixes:; These new tutorial translations are added:; * tutorials/roostats/FourBinInstructional.py; * tutorials/roostats/MultivariateGaussianTest.py; * tutorials/roostats/Zbi_Zgamma.py; * tutorials/roostats/rs601_HLFactoryexample.py; * tutorials/roostats/rs701_BayesianCalculator.py; * tutorials/roostats/rs_bernsteinCorrection.py. ## Checklist:. - [x] tested changes locally; - [x] Formatted with black --line-length=120 <tutorial file>.py. This PR is a partial fix for #8758,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10953
https://github.com/root-project/root/pull/10955:244,Availability,error,error,244,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10955:501,Energy Efficiency,adapt,adapt,501,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10955:501,Modifiability,adapt,adapt,501,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10955:225,Safety,avoid,avoid,225,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10955:327,Safety,avoid,avoid,327,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10955:696,Safety,avoid,avoid,696,"Sone changes are made to both the Python and C++ version of the; `rf212_plottingInRanges_blinding` tutorial:. * move around the `-----` that denote section headers to fix the; notebook formatting; * rename `exp` to `expo` to avoid an ambiguity error because of; `std::expr` in C++ tutorial notebook; * use `std::unique_ptr` to avoid leaking of datasets. In particular, the call to `fitTo` includes now the; `Range(""left,right"")` command argument. Otherthise, the fit would also; try to make the model adapt to the empty bins in the blinded region,; giving a wrong fit result (it can be easily seen that the fit was wrong; before by increasing the number of events in the toy dataset to 100k). To avoid that the plotting takes the (now correct) fit range as; `NormRange()` and we can't show what happens if the normalization range; is not set, the `fitrange` string attribute is reset after fitting.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10955
https://github.com/root-project/root/pull/10956:357,Testability,test,test,357,"So far, a `RooKeysPdf` produced wrong kernel estimations for weighted; datasets, as sometimes the number of entries was used in place of the; sum of weights. This is fixed now. Also, the normalization by the sum of; weights is moved from the private `RooKeysPdf::g()` function that is; called for each event to the global normalization constant. A new unit test that checks if weighted datasets are correctly handled; by both the RooKeysPdf and the RooNDKeysPdf is also implemented.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10956
https://github.com/root-project/root/pull/10957:712,Usability,clear,clear,712,"So far, one had to remove string attributes of a RooAbsArg with the; `RooAbsArg::removeStringAttribute(const char* key, const char* value)`; method, passing `nullptr` as a value. Passing a `nullptr` to a function; that takes a `const char*` is not supported in PyROOT, as explained in; GitHub issue #10954. Therefore, a new function is added to RooAbsArg to; remove a string attribute without having to use `nullptr`. This new function called `removeStringAttribute()` is now used in all; the ROOT code to remove string attributes from RooAbsArgs, and also; mentioned in the warnings that tell the user that they might want to; remove the `fitrange` attribute. The verb `remove` was chosen instead of `delete`, `clear`, or `erase`,; because there was already a `RooAbsArg::removeServer()` method.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10957
https://github.com/root-project/root/pull/10959:715,Deployability,release,released,715,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10959
https://github.com/root-project/root/pull/10959:109,Integrability,depend,dependency,109,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10959
https://github.com/root-project/root/pull/10959:250,Integrability,depend,dependsOnValue,250,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10959
https://github.com/root-project/root/pull/10959:774,Safety,avoid,avoid,774,"In the `RooRealIntegral` constructor, there was a `O(N^2)` operation on; the computation graph, checking the dependency of the top-level function; on each other node. This is very expensive in the numer of RooAbsArgs N; is large. Instead of calling `dependsOnValue` for each leaf node, which is; very expensive because it's a recursive function, the value server; leaves are all put in a RooArgSet before the leaf iteration to check; quickly if a leaf is also a value server. This change speeds up the `createNLL` step of large models like the; ATLAS Higgs combination by at least a factor of two or three. In the same PR, I also bring a little other commit, where the ownership of the `cloneSet` in `cloneTree` is released before removing the top node element, in order to avoid ownership ambiguities.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10959
https://github.com/root-project/root/pull/10960:264,Deployability,update,updated,264,# This Pull request: Set skip-cleanup flags to true for check-requirements and create-dev-env. ## Changes or fixes: Set the skip-cleanup value to true for the create-dev-env option and check-requirements option. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue in meta-issue list #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10960
https://github.com/root-project/root/pull/10960:233,Testability,test,tested,233,# This Pull request: Set skip-cleanup flags to true for check-requirements and create-dev-env. ## Changes or fixes: Set the skip-cleanup value to true for the create-dev-env option and check-requirements option. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue in meta-issue list #406 (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10960
https://github.com/root-project/root/pull/10962:86,Testability,test,tests,86,"The guard R__USE_IMT was wrongly put around the class declaration, hence; none of the tests inside RDatasetSpecTest would compile if R__USE_IMT is; not defined.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10962
https://github.com/root-project/root/issues/10963:513,Availability,Error,Error,513,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:693,Deployability,configurat,configuration,693,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:807,Deployability,configurat,configuration,807,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:1067,Deployability,release,releases,1067,"thub.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:1456,Deployability,release,releases,1456," existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.04; 2. Operating system: CentOS7; 3. How you obtained ROOT: ```setupATLAS; lsetup ""root 6.26.04-x86_64-centos7-gcc11-opt""```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:693,Modifiability,config,configuration,693,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:807,Modifiability,config,configuration,807,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:1214,Usability,clear,clear,1214," existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.04; 2. Operating system: CentOS7; 3. How you obtained ROOT: ```setupATLAS; lsetup ""root 6.26.04-x86_64-centos7-gcc11-opt""```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/issues/10963:1289,Usability,clear,clear,1289," existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. When trying to compile a project against ROOT 6.26.04 sourced from CVMFS, cmake complains about nlohmann_json missing. ```; CMake Error at /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/Cmake/3.21.3/Linux-x86_64/share/cmake-3.21/Modules/CMakeFindDependencyMacro.cmake:47 (find_package):; Could not find a configuration file for package ""nlohmann_json"" that is; compatible with requested version ""3.10.5"". The following configuration files were considered but not accepted:. /usr/lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1; /lib64/cmake/nlohmann_json/nlohmann_jsonConfig.cmake, version: 3.6.1. Call Stack (most recent call first):; /cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/cmake/ROOTConfig.cmake:114 (find_dependency); CMakeLists.txt:1 (find_package); ```. <!--; A clear and concise description of what the wrong behavior is.; -->; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce. Use a CentOS7 machine and setup ROOT 6.26.04 from CVMFS; (/cvmfs/sft.cern.ch/lcg/releases/LCG_102/ROOT/6.26.04/x86_64-centos7-gcc11-opt/bin/root). Create a CMakeLists.txt file with the following contents:. `find_package( ROOT REQUIRED COMPONENTS Core RIO MathCore Matrix HistFactory RooFitCore RooFit Hist RooStats Minuit2 Minuit )`. Go to an empty folder, and call `cmake` on that CMakeLists.txt file. <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. 1. ROOT version: 6.26.04; 2. Operating system: CentOS7; 3. How you obtained ROOT: ```setupATLAS; lsetup ""root 6.26.04-x86_64-centos7-gcc11-opt""```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10963
https://github.com/root-project/root/pull/10964:5,Deployability,patch,patch,5,This patch was developed as part of an llvm upgrade in 2015. This patch is not needed anymore considering that the LLVM JIT has advanced significantly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10964
https://github.com/root-project/root/pull/10964:44,Deployability,upgrade,upgrade,44,This patch was developed as part of an llvm upgrade in 2015. This patch is not needed anymore considering that the LLVM JIT has advanced significantly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10964
https://github.com/root-project/root/pull/10964:66,Deployability,patch,patch,66,This patch was developed as part of an llvm upgrade in 2015. This patch is not needed anymore considering that the LLVM JIT has advanced significantly.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10964
https://github.com/root-project/root/issues/10965:970,Availability,down,downloaded,970,"### Describe the bug; RDataFrame constructed within a function with a TChain becomes inaccessible when returned, unless TChain is returned with it (segfault occurs). ### Expected behavior; RDataFrame constructed with a TChain should be able to be returned from a function. ### To Reproduce; ```python; import ROOT; import glob. def build_rdataframe(filepath, tree):; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return chain, Rdf. chain, df = build_rdataframe(""path/to/files"", ""tree""); print(df.Count().GetValue()); # works. def build_rdataframe_2(filepath, tree): ; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return Rdf. df = build_rdataframe_2(""path/to/files"", ""tree""); print(df.Count().GetValue()); # segfault; ```. ### Setup; 1. ROOT version 6.24.00 / Python 3.10.4 | ROOT version 6.20.06 / Python 2.7.5; 2. Arch Linux / Centos7; 3. ROOT downloaded from conda-forge / Arch linux repository / lxplus; (tested on multiple OSs/environments)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10965
https://github.com/root-project/root/issues/10965:1033,Testability,test,tested,1033,"### Describe the bug; RDataFrame constructed within a function with a TChain becomes inaccessible when returned, unless TChain is returned with it (segfault occurs). ### Expected behavior; RDataFrame constructed with a TChain should be able to be returned from a function. ### To Reproduce; ```python; import ROOT; import glob. def build_rdataframe(filepath, tree):; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return chain, Rdf. chain, df = build_rdataframe(""path/to/files"", ""tree""); print(df.Count().GetValue()); # works. def build_rdataframe_2(filepath, tree): ; chain = ROOT.TChain(tree); for file in glob.glob(filepath):; chain.Add(file); Rdf = ROOT.RDataFrame(chain). return Rdf. df = build_rdataframe_2(""path/to/files"", ""tree""); print(df.Count().GetValue()); # segfault; ```. ### Setup; 1. ROOT version 6.24.00 / Python 3.10.4 | ROOT version 6.20.06 / Python 2.7.5; 2. Arch Linux / Centos7; 3. ROOT downloaded from conda-forge / Arch linux repository / lxplus; (tested on multiple OSs/environments)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10965
https://github.com/root-project/root/pull/10966:2089,Deployability,update,updated,2089,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:2144,Deployability,update,updated,2144,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:1739,Energy Efficiency,efficient,efficiently,1739,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:1758,Energy Efficiency,reduce,reduces,1758,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:2256,Integrability,interface,interface,2256,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:690,Modifiability,extend,extended,690,"# This Pull request:. ## Changes or fixes:; The main feature is that this PR makes it possible (in the final commit 5227996a9941918404d0a36037daa2c91e29833a) to run minimizations with both LikelihoodGradientJob and LikelihoodJob activated at the same time. This adds likelihood parallelization at the event-level to the non-gradient phases of Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:1501,Modifiability,variab,variable,1501,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:1660,Performance,optimiz,optimization,1660,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:1001,Testability,test,test,1001,"# This Pull request:. ## Changes or fixes:; The main feature is that this PR makes it possible (in the final commit 5227996a9941918404d0a36037daa2c91e29833a) to run minimizations with both LikelihoodGradientJob and LikelihoodJob activated at the same time. This adds likelihood parallelization at the event-level to the non-gradient phases of Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/pull/10966:2059,Testability,test,tested,2059,"Minuit migrad minimization: 1. the setup phase where the initial gradient is calculated and 2. the line search phases. To make the above possible, a few bugs had to be fixed:; - `RooAbsL` classes have `evaluatePartition` which allows you to specify the range of events and components over which to evaluate the likelihood. This had some bugs: the extended term and possible subsidiary components were added for each partition, leading to N duplicates (for N partitions). Commits 3db2e0dd36478813cfb534451f459348e8d90da9 and c2a8bc9df029f65ee575e140825af6c509860538.; - As a result of this fix, which reorders some terms in the sum, the LikelihoodGradientJob test was failing for a specific case due to increased floating point differences. We would like to add back in an option for retaining bit-wise exact same results in the future, but since the minimization still converges to the same value within the desired precision, for now we leave it like this, since the user can still pick the old ways if they prefer their exact old results. Commit b7f7fa7b705e2dfb767187dce3f6a32275f30d9e.; - `LikelihoodJob` had a bug where it didn't reset its `result` sum variable to zero before doing a new sum. Commits 042e1577d8c303d532016537e7467d6e2fbfcd9c and 44197a2a64f77b47587e5ee200d360c4514b8098. Finally, I made a mini optimization in `LikelihoodJob` by using `publish_from_master_to_workers` more efficiently, which reduces communication overhead slightly (and makes the code a bit cleaner). Also in commit 567b7988d56b6c1db6102d857b523fc2da607dbc. Note that although this is a bit of a big PR, the commits are factored out into the above list of changes, so I hope this makes it easy to review. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). Documentation not yet updated, I will check if this is necessary (I didn't think so, because it doesn't actually add much to the user interface, all the classes were already there, they just didn't work before like this).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10966
https://github.com/root-project/root/issues/10967:405,Modifiability,rewrite,rewrite,405,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10967
https://github.com/root-project/root/issues/10967:255,Testability,Test,TestStatistics,255,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10967
https://github.com/root-project/root/issues/10967:309,Testability,test,test,309,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10967
https://github.com/root-project/root/issues/10967:516,Testability,test,tests,516,"#10966 fixes LikelihoodJob so that it can now be used for parallelizing non-gradient parts of the migrad minimization. This should be reflected in the relevant README.md section here: https://github.com/root-project/root/tree/master/roofit/roofitcore/src/TestStatistics#calculators. We have yet to thoroughly test the class on real life fits. We intend to do this in the coming weeks. After this, we will rewrite the docs, taking into account any possible fixes or API changes that may have been necessary after our tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10967
https://github.com/root-project/root/pull/10969:5,Deployability,patch,patch,5,"This patch is to verify if we really need to store identifiers that; are namespace in GlobalModuleIndex, which greatly increase the maximum; memory pressure. Send this to trigger ROOT's CI so we can have a full; test, and will be closed if the direction is wrong. **No need for code review or merge**. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10969
https://github.com/root-project/root/pull/10969:212,Testability,test,test,212,"This patch is to verify if we really need to store identifiers that; are namespace in GlobalModuleIndex, which greatly increase the maximum; memory pressure. Send this to trigger ROOT's CI so we can have a full; test, and will be closed if the direction is wrong. **No need for code review or merge**. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10969
https://github.com/root-project/root/issues/10970:268,Availability,avail,available,268,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:1208,Availability,avail,available,1208,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:284,Performance,load,loading,284,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:1224,Performance,load,loading,1224,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:1011,Testability,assert,asserts,1011,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:1104,Testability,assert,asserts,1104,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/issues/10970:1294,Testability,assert,asserts,1294,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10970
https://github.com/root-project/root/pull/10971:88,Security,validat,validate,88,# This Pull request: Pow ONNX Operator implemented with the corresponding unit tests to validate the written code. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10971
https://github.com/root-project/root/pull/10971:79,Testability,test,tests,79,# This Pull request: Pow ONNX Operator implemented with the corresponding unit tests to validate the written code. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10971
https://github.com/root-project/root/pull/10971:136,Testability,test,tested,136,# This Pull request: Pow ONNX Operator implemented with the corresponding unit tests to validate the written code. ## Checklist:. - [X] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10971
https://github.com/root-project/root/pull/10976:173,Deployability,update,updated,173,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: I inserted more space between functions. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10976
https://github.com/root-project/root/pull/10976:142,Testability,test,tested,142,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: I inserted more space between functions. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10976
https://github.com/root-project/root/pull/10977:167,Deployability,update,updated,167,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added whitespace around operators. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10977
https://github.com/root-project/root/pull/10977:136,Testability,test,tested,136,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added whitespace around operators. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10977
https://github.com/root-project/root/pull/10978:197,Deployability,update,updated,197,# This Pull request: This makes the code more flake8 compliant. ## Changes or fixes: Added an extra backslash to the escape sequence characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10978
https://github.com/root-project/root/pull/10978:166,Testability,test,tested,166,# This Pull request: This makes the code more flake8 compliant. ## Changes or fixes: Added an extra backslash to the escape sequence characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10978
https://github.com/root-project/root/pull/10979:176,Deployability,update,updated,176,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation for under indented lines. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10979
https://github.com/root-project/root/pull/10979:145,Testability,test,tested,145,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation for under indented lines. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10979
https://github.com/root-project/root/pull/10982:1244,Deployability,update,updated,1244,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:18,Modifiability,refactor,refactors,18,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:1056,Modifiability,refactor,refactored,1056,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:46,Performance,Load,LoadClusters,46,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:328,Performance,Load,LoadClusters,328,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:527,Performance,queue,queue,527,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:613,Performance,throughput,throughput,613,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:1031,Performance,Load,LoadClusters,1031,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/pull/10982:1193,Testability,test,tested,1193,"This Pull request refactors `RPageSourceDaos::LoadClusters()` to coalesce the fetch requests for pages in the same cluster bunch before calling `RDaosContainer::ReadV`, instead of launching a call to remote storage for the pages of each cluster separately. A cluster bunch corresponds to all clusters being fetched together by `LoadClusters()` at a time. . Since the call by `ReadV()` is ultimately blocking until all requests are done, this change enables the asynchronous page fetch requests from different clusters to share queue and flight time; thus, remote storage can parallelize them toward a higher read throughput. . The requests are still coalesced according to object ID and distribution key resulting from the mapping strategy in `kDefaultDaosMapping`. The modification allows support for new mappings that do not feature the ntuple cluster ID among the object ID and distribution key (i.e. such page requests may now be parallelized despite not being from the same cluster). ## Changes or fixes:; - `RPageSourceDaos::LoadClusters()` has been refactored to batch up page requests from all provided clusters before the blocking `RDaosContainer::ReadV()` call. ## Checklist:. - [x] tested changes locally + openlab `olsky-03`; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10982
https://github.com/root-project/root/issues/10984:514,Availability,error,error,514,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:1998,Availability,error,error,1998,"ge.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: error: no matching function for call to ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data()’; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: template argument deduction/substitution failed:; /usr/include/c++/11/bits/unique_ptr.h:321:11: note: candidate expects 2 arguments, 0 provided; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delet",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4034,Availability,Error,Error,4034,"lete<TInterpreterValue> >::pointer) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core In",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4174,Availability,Error,Error,4174,"| using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4257,Availability,Error,Error,4257,"| using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-p",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4868,Availability,down,download,4868,"ndidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:835,Deployability,Update,UpdateIsOnHeap,835,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4850,Deployability,install,install,4850,"ndidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5005,Deployability,configurat,configuration,5005,"rterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5034,Deployability,Configurat,Configuration,5034,"rterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5164,Deployability,Install,Install,5164,"dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot qt5web qt6web r roofit root7 rpath shadowpw shared soversion sqlite ssl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:2472,Modifiability,inherit,inherited,2472,"lddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: error: no matching function for call to ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data()’; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: template argument deduction/substitution failed:; /usr/include/c++/11/bits/unique_ptr.h:321:11: note: candidate expects 2 arguments, 0 provided; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:3135,Modifiability,inherit,inherited,3135,"rue>::__uniq_ptr_data()’; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: template argument deduction/substitution failed:; /usr/include/c++/11/bits/unique_ptr.h:321:11: note: candidate expects 2 arguments, 0 provided; 321 | : _M_t(); | ^~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate: ‘std::__uniq_ptr_data<TInterpreterValue, std::default_delete<TInterpreterValue>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >::pointer) [inherited from std::__uniq_ptr_impl<TInterpreterValue, std::default_delete<TInterpreterValue> >]’; 210 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:210:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5005,Modifiability,config,configuration,5005,"rterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5034,Modifiability,Config,Configuration,5034,"rterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5308,Security,secur,security,5308,"and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot qt5web qt6web r roofit root7 rpath shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-sofie tmva-pymva tmva-rmva spectrum unuran uring vc vdt veccore x11 xml xrootd; ```. ### Additional context; <!--; Add any other context about the problem here.; --",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5490,Security,secur,security,5490,"t triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot qt5web qt6web r roofit root7 rpath shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-sofie tmva-pymva tmva-rmva spectrum unuran uring vc vdt veccore x11 xml xrootd; ```. ### Additional context; <!--; Add any other context about the problem here.; -->; I have build VecGeom as a shared library, but this shouldn't make a difference. I think the VecGeom part of ROOT is just out of date (last change made 2 years ago).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:5806,Security,hash,hash-style,5806,"t triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-implicit-fallthrough -pipe -Wall -W -pthread ; C++ -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; Linker flags:; Executable -Wl,-z,relro -Wl,-z,now -rdynamic; Module -Wl,-z,relro -Wl,-z,now; Shared -Wl,-z,relro -Wl,-z,now -Wl,--no-undefined -Wl,--hash-style=""both"". -- Enabled support for: asimage builtin_clang builtin_cling builtin_llvm builtin_unuran builtin_vdt ccache dataframe davix dcache exceptions fftw3 fitsio fortran gdml gfal gnuinstall gsl_shared gviz http fcgi imt mathmore mlp minuit2 mpi mysql odbc opengl pgsql pyroot qt5web qt6web r roofit root7 rpath shadowpw shared soversion sqlite ssl tmva tmva-cpu tmva-sofie tmva-pymva tmva-rmva spectrum unuran uring vc vdt veccore x11 xml xrootd; ```. ### Additional context; <!--; Add any other context about the problem here.; -->; I have build VecGeom as a shared library, but this shouldn't make a difference. I think the VecGeom part of ROOT is just out of date (last change made 2 years ago).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When compiling with VecGeom enabled, I get this compile error:; ```; In file included from <builddir>/include/TObject.h:18,; from <builddir>/include/TNamed.h:25,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; <builddir>/include/TStorage.h: In static member function ‘static void TStorage::UpdateIsOnHeap(const volatile UInt_t&, volatile UInt_t&)’:; <builddir>/include/TStorage.h:133:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 133 | bits |= kIsOnHeap;; | ~~~~~^~~~~~~~~~~~; <builddir>/include/TStorage.h:135:12: warning: compound assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile]; 135 | bits &= ~kIsOnHeap;; | ~~~~~^~~~~~~~~~~~~; In file included from /usr/include/c++/11/memory:76,; from <builddir>/include/ROOT/TypeTraits.hxx:15,; from <builddir>/include/TString.h:30,; from <builddir>/include/TNamed.h:26,; from <builddir>/include/TDictionary.h:44,; from <builddir>/include/TClass.h:23,; from <builddir>/geom/vecgeom/G__ConverterVG.cxx:14:; /usr/include/c++/11/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<TInterpreterValue>; <template-parameter-2-2> = void; _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; std::nullptr_t = std::nullptr_t]’:; <builddir>/include/TInterpreter.h:280:85: required from here; /usr/include/c++/11/bits/unique_ptr.h:321:11: err",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10984:4343,Usability,clear,clear,4343,"ote: candidate expects 1 argument, 0 provided; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate: ‘std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >::__uniq_ptr_data(std::__uniq_ptr_data<_Tp, _Dp, <anonymous>, <anonymous> >&&) [with _Tp = TInterpreterValue; _Dp = std::default_delete<TInterpreterValue>; bool <anonymous> = true; bool <anonymous> = true]’; 211 | __uniq_ptr_data(__uniq_ptr_data&&) = default;; | ^~~~~~~~~~~~~~~; /usr/include/c++/11/bits/unique_ptr.h:211:7: note: candidate expects 1 argument, 0 provided; make[3]: *** [geom/vecgeom/CMakeFiles/G__ConverterVG.dir/build.make:96: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/G__ConverterVG.cxx.o] Error 1; make[3]: Leaving directory '<builddir>'; make[2]: *** [CMakeFiles/Makefile2:33593: geom/vecgeom/CMakeFiles/G__ConverterVG.dir/all] Error 2; make[2]: Leaving directory '<builddir>'; make[1]: *** [Makefile:159: all] Error 2; make[1]: Leaving directory '<builddir>'; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The compilation does not fail. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; Compile with `vecgeom` option. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Compiling ROOT v6.26.04 on Debian Unstable (amd64), with GCC 11.3.0 and VecGeom 1.2.0, with this configuration:; ```; -- ROOT Configuration . System Linux-5.18.0-2-amd64; Processor 4 core Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz (x86_64); Build type None; Install path /usr; Compiler GNU 11.3.0; Compiler flags:; C -g -O2 -ffile-prefix-map=<srcdir>=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -Wno-impl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10984
https://github.com/root-project/root/issues/10985:196,Deployability,install,installation,196,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I'm currently working on getting ROOT into the official Debian repositories for easy installation. However, a major hassle is the name of the shared libraries: these include very generic names like for example `libCore.so`, `libGui.so`, etc.; The conflict here is that Debian usually splits shared libraries in separate packages with their library name. However a package with e.g. the name `libcore` is just not explicit enough. A better and much more precise name would be `libROOTCore.so`. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; I see two possible ways to achieve this: one would be to simply add a prefix to all libraries globally, the other would be to rename the libraries in CMake itself.; The latter one is probably a time-consuming task, and also needs to handle cases like e.g. `libHist`, since both `libHist` and `libROOTHist` exist.; The prior one could be easily added with a CMake option, or just done automatically when building with `gnuinstall=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10985
https://github.com/root-project/root/issues/10985:791,Usability,simpl,simply,791,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->; I'm currently working on getting ROOT into the official Debian repositories for easy installation. However, a major hassle is the name of the shared libraries: these include very generic names like for example `libCore.so`, `libGui.so`, etc.; The conflict here is that Debian usually splits shared libraries in separate packages with their library name. However a package with e.g. the name `libcore` is just not explicit enough. A better and much more precise name would be `libROOTCore.so`. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->; I see two possible ways to achieve this: one would be to simply add a prefix to all libraries globally, the other would be to rename the libraries in CMake itself.; The latter one is probably a time-consuming task, and also needs to handle cases like e.g. `libHist`, since both `libHist` and `libROOTHist` exist.; The prior one could be easily added with a CMake option, or just done automatically when building with `gnuinstall=ON`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10985
https://github.com/root-project/root/pull/10986:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/10884; 2. https://github.com/root-project/root/pull/10885; 3. https://github.com/root-project/root/pull/10832; 4. https://github.com/root-project/root/pull/10921; 5. https://github.com/root-project/root/pull/10909",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10986
https://github.com/root-project/root/issues/10988:325,Performance,cache,cache,325,"### Describe the bug; I am experiencing strange behaviour with `RooAddPdf::fixCoefRange`. When I call `createIntegral` on a `RooAddPdf`, then call `fixCoefRange`, then call `createIntegral` again, the same value is returned (whilst the change of definition of the coefficients should change the integral). It seems to me the cache does not get cleared when calling `fixCoefRange`, as the behaviour is correct when calling `fixCoefRange` before any integral computation. ### To Reproduce; ```cpp; RooWorkspace w1;; w1.factory(""x[3., 0., 10.]"");; w1.var(""x"")->setRange(""range_int"", 0., 4.);; w1.factory(""AddPdf::sum(Gaussian(x, mean1[1.], sigma1[2.]), Gaussian(x, mean2[5.], sigma2[10.]), coef[0.3])"");; RooWorkspace w2(w1);. //Call createIntegral on workspace w1 only; cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;. w1.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w1.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. w2.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w2.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; cout << w2.pdf(""sum"")->createIntegral(RooArgSet(*w2.var(""x"")),RooFit::NormSet(RooArgSet(*w2.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; ```. This prints :; ```; 0.548209 //Before calling RooAddPdf::fixCoefRange; 0.548209 //After calling RooAddPdf::fixCoefRange but with a previous call to createIntegral; 0.463998 //After calling RooAddPdf::fixCoefRange without any previous call; ```; whilst I would expect : ; ```; 0.548209; 0.463998; 0.463998; ```. ### Setup; ROOT 6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10988
https://github.com/root-project/root/issues/10988:344,Usability,clear,cleared,344,"### Describe the bug; I am experiencing strange behaviour with `RooAddPdf::fixCoefRange`. When I call `createIntegral` on a `RooAddPdf`, then call `fixCoefRange`, then call `createIntegral` again, the same value is returned (whilst the change of definition of the coefficients should change the integral). It seems to me the cache does not get cleared when calling `fixCoefRange`, as the behaviour is correct when calling `fixCoefRange` before any integral computation. ### To Reproduce; ```cpp; RooWorkspace w1;; w1.factory(""x[3., 0., 10.]"");; w1.var(""x"")->setRange(""range_int"", 0., 4.);; w1.factory(""AddPdf::sum(Gaussian(x, mean1[1.], sigma1[2.]), Gaussian(x, mean2[5.], sigma2[10.]), coef[0.3])"");; RooWorkspace w2(w1);. //Call createIntegral on workspace w1 only; cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;. w1.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w1.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. w2.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w2.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; cout << w2.pdf(""sum"")->createIntegral(RooArgSet(*w2.var(""x"")),RooFit::NormSet(RooArgSet(*w2.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; ```. This prints :; ```; 0.548209 //Before calling RooAddPdf::fixCoefRange; 0.548209 //After calling RooAddPdf::fixCoefRange but with a previous call to createIntegral; 0.463998 //After calling RooAddPdf::fixCoefRange without any previous call; ```; whilst I would expect : ; ```; 0.548209; 0.463998; 0.463998; ```. ### Setup; ROOT 6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10988
https://github.com/root-project/root/pull/10989:1056,Deployability,patch,patch,1056,"Last year, with commit 3657e7c, the parameter index calculation was; changed to be on the fly instead of using a look-up map, which is much; faster. However, the implemented formula was not correct for two or three; dimensions, which is fixed by this commit. To make sure that the index computation is correct this time, the new; code was tested in this code snippet with various inputs:. ```C++; void runTest(int nx = 42, int ny = 42, int nz = 42) {; const int nxy = nx * ny;; const int nyz = ny * nz;. for (int i = 0; i < nx; ++i) {; for (int j = 0; j < ny; ++j) {; for (int k = 0; k < nz; ++k) {; const int index = k + j * nz + i * ny * nz;; const int gammaIndex = i + j * nx + k * nx * ny;. const int i2 = index / nyz;; const int tmp = index % nyz;; const int j2 = tmp / nz;; const int k2 = tmp % nz;. const int gammaIndex2 = i2 + j2 * nx + k2 * nxy;. if (gammaIndex2 != gammaIndex) {; std::cout << ""The unraveled indices were not correct!""; << std::endl;; return;; }; }; }; }; }; ```. Needs to be backported to the 6.26 branch to get into the 6.26.06 patch; release. This commit the following problem reported on the forum:; https://root-forum.cern.ch/t/cpycppyy-segfault-on-mac-m1/50822",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10989
https://github.com/root-project/root/pull/10989:1063,Deployability,release,release,1063,"Last year, with commit 3657e7c, the parameter index calculation was; changed to be on the fly instead of using a look-up map, which is much; faster. However, the implemented formula was not correct for two or three; dimensions, which is fixed by this commit. To make sure that the index computation is correct this time, the new; code was tested in this code snippet with various inputs:. ```C++; void runTest(int nx = 42, int ny = 42, int nz = 42) {; const int nxy = nx * ny;; const int nyz = ny * nz;. for (int i = 0; i < nx; ++i) {; for (int j = 0; j < ny; ++j) {; for (int k = 0; k < nz; ++k) {; const int index = k + j * nz + i * ny * nz;; const int gammaIndex = i + j * nx + k * nx * ny;. const int i2 = index / nyz;; const int tmp = index % nyz;; const int j2 = tmp / nz;; const int k2 = tmp % nz;. const int gammaIndex2 = i2 + j2 * nx + k2 * nxy;. if (gammaIndex2 != gammaIndex) {; std::cout << ""The unraveled indices were not correct!""; << std::endl;; return;; }; }; }; }; }; ```. Needs to be backported to the 6.26 branch to get into the 6.26.06 patch; release. This commit the following problem reported on the forum:; https://root-forum.cern.ch/t/cpycppyy-segfault-on-mac-m1/50822",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10989
https://github.com/root-project/root/pull/10989:339,Testability,test,tested,339,"Last year, with commit 3657e7c, the parameter index calculation was; changed to be on the fly instead of using a look-up map, which is much; faster. However, the implemented formula was not correct for two or three; dimensions, which is fixed by this commit. To make sure that the index computation is correct this time, the new; code was tested in this code snippet with various inputs:. ```C++; void runTest(int nx = 42, int ny = 42, int nz = 42) {; const int nxy = nx * ny;; const int nyz = ny * nz;. for (int i = 0; i < nx; ++i) {; for (int j = 0; j < ny; ++j) {; for (int k = 0; k < nz; ++k) {; const int index = k + j * nz + i * ny * nz;; const int gammaIndex = i + j * nx + k * nx * ny;. const int i2 = index / nyz;; const int tmp = index % nyz;; const int j2 = tmp / nz;; const int k2 = tmp % nz;. const int gammaIndex2 = i2 + j2 * nx + k2 * nxy;. if (gammaIndex2 != gammaIndex) {; std::cout << ""The unraveled indices were not correct!""; << std::endl;; return;; }; }; }; }; }; ```. Needs to be backported to the 6.26 branch to get into the 6.26.06 patch; release. This commit the following problem reported on the forum:; https://root-forum.cern.ch/t/cpycppyy-segfault-on-mac-m1/50822",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10989
https://github.com/root-project/root/issues/10990:444,Deployability,patch,patch,444,"- [x] Checked for duplicates (related to https://sft.its.cern.ch/jira/browse/ROOT-7904); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. A patch from Gentoo imported in d9ca8cb6e3b1e4bdd70041c43805f0851aea7c9e (https://gitweb.gentoo.org/repo/gentoo.git/plain/media-libs/libafterimage/files/libafterimage-giflib5-v2.patch) contains a bogus call; ```diff; +#if (GIFLIB_MAJOR>=5); + 		if ((status = GifAddExtensionBlock(&temp_save.ExtensionBlockCount, &temp_save.ExtensionBlocks,; + ExtCode, sizeof(ExtData), ExtData)) == GIF_OK); + status = DGifGetExtension(gif,&ExtCode,&ExtData);; +#else; ```; where; ```; GifByteType *ExtData;; ```; so `sizeof(ExtData)` is a size of a pointer when it's probably has to be a size of some data block. Which results in a crash when trying to use TEve:; ```; root [0] TEveManager::Create(); gif2ASImage():2300:</nix/store/jhzzgdncnmwzdb2jp9dhmv9bb2nyxcl3-root-6.24.06/icons/eve_text.gif> (null). *** Break *** segmentation violation; ```. ### Expected behavior. TEve works. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. ROOT 6.24.06 compiled against an external libAfterImage, with the same Gentoo patches applied to compile against giflib 5 ; Crash reproduced on macOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10990
https://github.com/root-project/root/issues/10990:620,Deployability,patch,patch,620,"- [x] Checked for duplicates (related to https://sft.its.cern.ch/jira/browse/ROOT-7904); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. A patch from Gentoo imported in d9ca8cb6e3b1e4bdd70041c43805f0851aea7c9e (https://gitweb.gentoo.org/repo/gentoo.git/plain/media-libs/libafterimage/files/libafterimage-giflib5-v2.patch) contains a bogus call; ```diff; +#if (GIFLIB_MAJOR>=5); + 		if ((status = GifAddExtensionBlock(&temp_save.ExtensionBlockCount, &temp_save.ExtensionBlocks,; + ExtCode, sizeof(ExtData), ExtData)) == GIF_OK); + status = DGifGetExtension(gif,&ExtCode,&ExtData);; +#else; ```; where; ```; GifByteType *ExtData;; ```; so `sizeof(ExtData)` is a size of a pointer when it's probably has to be a size of some data block. Which results in a crash when trying to use TEve:; ```; root [0] TEveManager::Create(); gif2ASImage():2300:</nix/store/jhzzgdncnmwzdb2jp9dhmv9bb2nyxcl3-root-6.24.06/icons/eve_text.gif> (null). *** Break *** segmentation violation; ```. ### Expected behavior. TEve works. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. ROOT 6.24.06 compiled against an external libAfterImage, with the same Gentoo patches applied to compile against giflib 5 ; Crash reproduced on macOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10990
https://github.com/root-project/root/issues/10990:1682,Deployability,patch,patches,1682,"- [x] Checked for duplicates (related to https://sft.its.cern.ch/jira/browse/ROOT-7904); <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. A patch from Gentoo imported in d9ca8cb6e3b1e4bdd70041c43805f0851aea7c9e (https://gitweb.gentoo.org/repo/gentoo.git/plain/media-libs/libafterimage/files/libafterimage-giflib5-v2.patch) contains a bogus call; ```diff; +#if (GIFLIB_MAJOR>=5); + 		if ((status = GifAddExtensionBlock(&temp_save.ExtensionBlockCount, &temp_save.ExtensionBlocks,; + ExtCode, sizeof(ExtData), ExtData)) == GIF_OK); + status = DGifGetExtension(gif,&ExtCode,&ExtData);; +#else; ```; where; ```; GifByteType *ExtData;; ```; so `sizeof(ExtData)` is a size of a pointer when it's probably has to be a size of some data block. Which results in a crash when trying to use TEve:; ```; root [0] TEveManager::Create(); gif2ASImage():2300:</nix/store/jhzzgdncnmwzdb2jp9dhmv9bb2nyxcl3-root-6.24.06/icons/eve_text.gif> (null). *** Break *** segmentation violation; ```. ### Expected behavior. TEve works. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup. ROOT 6.24.06 compiled against an external libAfterImage, with the same Gentoo patches applied to compile against giflib 5 ; Crash reproduced on macOS. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10990
https://github.com/root-project/root/issues/10991:2535,Availability,down,download,2535,"Simultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""a"");; sim.addPdf(g, ""b"");; sim.addPdf(g, ""c"");; ; sim.fitTo(*ds, RooFit::Save(true); , RooFit::BatchMode(true) // commenting this solves the issue; )->Print(""V"");; // _a_x parameter in results, cov matrix is ""Approximation only""; ; // works; //g.fitTo(*ds, RooFit::Save(true), RooFit::BatchMode(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; ROOT 6.26.04 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10991
https://github.com/root-project/root/issues/10991:2517,Deployability,install,install,2517,"Simultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds->addColumn(catThr));; ; RooSimultaneous sim(""sim"", """", *cat);; sim.addPdf(g, ""a"");; sim.addPdf(g, ""b"");; sim.addPdf(g, ""c"");; ; sim.fitTo(*ds, RooFit::Save(true); , RooFit::BatchMode(true) // commenting this solves the issue; )->Print(""V"");; // _a_x parameter in results, cov matrix is ""Approximation only""; ; // works; //g.fitTo(*ds, RooFit::Save(true), RooFit::BatchMode(true))->Print(""V"");; }; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Centos7; ROOT 6.26.04 from LCG dev4. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10991
https://github.com/root-project/root/issues/10991:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_ca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10991
https://github.com/root-project/root/issues/10991:1006,Usability,clear,clear,1006,"plicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When fitting a RooSimultaneous pdf using BatchMode(true) (which should be cpu) the fit contains additional parameters, one for each observable, called `_<first category label>_<obs name>`, where the category is the one used in the RooSimultaneous.; The fit converges, but fails at the HESSE step, leading to an ""approximation only"" covariance matrix.; The label used is, from what I understood, based on label ordering and not the indices.; The mapping from category label to index however influences the fit result. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No extra parameters, successful HESSE. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```C++; void test_batchModeCategory() {; RooRealVar x(""x"", """", 0, 1);; RooRealVar rnd(""rnd"", """", 0, 1);; // change this mapping from labels to indices to change the fit result (slightly); RooThresholdCategory catThr(""cat"", """", rnd, ""a"", 2);; catThr.addThreshold(1./3, ""b"", 0);; catThr.addThreshold(2./3, ""c"", 1);; ; RooRealVar m(""m"", """", 0.5, 0, 1);; RooGaussian g(""g"", """", x, m, RooFit::RooConst(0.1));; RooUniform rndPdf(""rndPdf"", """", rnd);; RooProdPdf pdf(""pdf"", """", RooArgSet(g, rndPdf));; ; auto ds = pdf.generate(RooArgSet(x, rnd), RooFit::Name(""ds""), RooFit::NumEvents(100));; auto cat = dynamic_cast<RooCategory*>(ds-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10991
https://github.com/root-project/root/pull/10992:206,Deployability,update,updated,206,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10992
https://github.com/root-project/root/pull/10992:143,Modifiability,variab,variables,143,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10992
https://github.com/root-project/root/pull/10992:175,Testability,test,tested,175,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Added indentation and spacing as well as getting rid of unused variables. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10992
https://github.com/root-project/root/pull/10993:76,Deployability,patch,patch,76,"# This Pull request:; Enables Barlow-Beeston in multidimensional fits. This patch was extensively tested and used by P. Hamilton et al. in LHCb. ## Changes or fixes:; Loop over all entries, not just the x-axis of a histogram. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10993
https://github.com/root-project/root/pull/10993:278,Deployability,update,updated,278,"# This Pull request:; Enables Barlow-Beeston in multidimensional fits. This patch was extensively tested and used by P. Hamilton et al. in LHCb. ## Changes or fixes:; Loop over all entries, not just the x-axis of a histogram. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10993
https://github.com/root-project/root/pull/10993:98,Testability,test,tested,98,"# This Pull request:; Enables Barlow-Beeston in multidimensional fits. This patch was extensively tested and used by P. Hamilton et al. in LHCb. ## Changes or fixes:; Loop over all entries, not just the x-axis of a histogram. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10993
https://github.com/root-project/root/pull/10993:248,Testability,test,tested,248,"# This Pull request:; Enables Barlow-Beeston in multidimensional fits. This patch was extensively tested and used by P. Hamilton et al. in LHCb. ## Changes or fixes:; Loop over all entries, not just the x-axis of a histogram. ## Checklist:. - [x ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10993
https://github.com/root-project/root/pull/10994:173,Availability,error,errors,173,# This Pull request: Is intended to fix the LLVM prebuilt binary build. ## Changes or fixes: Replaced subprocess calls that use wget with the wget function and fixed naming errors and fixed undefined error regarding llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10994
https://github.com/root-project/root/pull/10994:200,Availability,error,error,200,# This Pull request: Is intended to fix the LLVM prebuilt binary build. ## Changes or fixes: Replaced subprocess calls that use wget with the wget function and fixed naming errors and fixed undefined error regarding llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10994
https://github.com/root-project/root/pull/10994:278,Deployability,update,updated,278,# This Pull request: Is intended to fix the LLVM prebuilt binary build. ## Changes or fixes: Replaced subprocess calls that use wget with the wget function and fixed naming errors and fixed undefined error regarding llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10994
https://github.com/root-project/root/pull/10994:247,Testability,test,tested,247,# This Pull request: Is intended to fix the LLVM prebuilt binary build. ## Changes or fixes: Replaced subprocess calls that use wget with the wget function and fixed naming errors and fixed undefined error regarding llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10994
https://github.com/root-project/root/pull/10995:265,Deployability,integrat,integration,265,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10995
https://github.com/root-project/root/pull/10995:265,Integrability,integrat,integration,265,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10995
https://github.com/root-project/root/pull/10995:111,Performance,cache,cache,111,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10995
https://github.com/root-project/root/pull/10995:301,Performance,cache,cache,301,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10995
https://github.com/root-project/root/pull/10995:326,Testability,test,test,326,"When the normalization range for coefficient determination of a; RooAddPdf is changed, the AddPdf's projection cache needs to be reset,; just like it is already done in `RooAddPdf::fixCoefNormalization`.; Otherwise, there will be problems in the pdf evaluation and integration; because the projection cache is invalid. A unit test based on the GitHub issue that reported this problem is also; implemented. Closes https://github.com/root-project/root/issues/10988. Furthermore, another potential RooAddPdf problem is fixed, where several instances of RooRecursiveFraction were created with the same name (which could become problematic for example when using the new BatchMode).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10995
https://github.com/root-project/root/issues/10996:507,Deployability,Update,Update,507,"- [x] Checked for duplicates. ### Describe the bug; TASImage::FromPad + TASImage::Flip does not work in batch mode, no matter the rotation angle. ### Expected behavior; It should work also in batch mode. ### To Reproduce; Run the code in batch mode below to get a black output. Comment the line `Flip(0)` and you'll get the correct output.; ```cpp; void test(); {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; TH1F *h = new TH1F(""gaus"",""gaus"", 100, -5, 5);; h->FillRandom(""gaus"", 10000);; h->Draw();; c1->Update();. TCanvas *c2 = new TCanvas(""c2"",""c1 rotated"",600,600);; TASImage *img = new TASImage();; img->FromPad(c1);; img->Flip(0);; img->Mirror();; img->Draw(""x"");; c2->Print(""c2.png"");; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://root-forum.cern.ch/t/bug-of-tasimage-when-use-tasimage-flip/50827/; https://root-forum.cern.ch/t/timage-rendered-in-black-in-batch-not-in-interactive-mode/16781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10996
https://github.com/root-project/root/issues/10996:354,Testability,test,test,354,"- [x] Checked for duplicates. ### Describe the bug; TASImage::FromPad + TASImage::Flip does not work in batch mode, no matter the rotation angle. ### Expected behavior; It should work also in batch mode. ### To Reproduce; Run the code in batch mode below to get a black output. Comment the line `Flip(0)` and you'll get the correct output.; ```cpp; void test(); {; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; TH1F *h = new TH1F(""gaus"",""gaus"", 100, -5, 5);; h->FillRandom(""gaus"", 10000);; h->Draw();; c1->Update();. TCanvas *c2 = new TCanvas(""c2"",""c1 rotated"",600,600);; TASImage *img = new TASImage();; img->FromPad(c1);; img->Flip(0);; img->Mirror();; img->Draw(""x"");; c2->Print(""c2.png"");; }; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Apr 25 2022, 22:21:18 |; | From heads/master@v6-25-01-3897-gf39eb0e984 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://root-forum.cern.ch/t/bug-of-tasimage-when-use-tasimage-flip/50827/; https://root-forum.cern.ch/t/timage-rendered-in-black-in-batch-not-in-interactive-mode/16781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/10996
https://github.com/root-project/root/pull/10997:354,Deployability,update,updated,354,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10997
https://github.com/root-project/root/pull/10997:254,Modifiability,variab,variable,254,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10997
https://github.com/root-project/root/pull/10997:323,Testability,test,tested,323,"# This Pull request: Allows for the user to specify the number of cores used during make. ## Changes or fixes: Added a number-of-cores option to the parser and added a condition to check if option was used, and if it is,; the Build object cores instance variable will be set to the user passed number. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/10997
https://github.com/root-project/root/issues/11002:411,Availability,error,errors,411,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11002
https://github.com/root-project/root/issues/11002:454,Availability,error,error,454,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11002
https://github.com/root-project/root/issues/11002:781,Performance,perform,perform,781,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11002
https://github.com/root-project/root/pull/11003:205,Deployability,update,updated,205,# This Pull request:. ## Changes or fixes:. Clarifies ambiguous doxygen documentation of TCanvas constructor parameters concerning window vs canvas size. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11003
https://github.com/root-project/root/pull/11003:175,Testability,test,tested,175,# This Pull request:. ## Changes or fixes:. Clarifies ambiguous doxygen documentation of TCanvas constructor parameters concerning window vs canvas size. ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11003
https://github.com/root-project/root/issues/11004:356,Testability,test,test,356,"- [x] Checked for duplicates. ### Describe the bug; I see one small issue when saving a 600x600 TCanvas window as png. I get:; - Interactive mode: 598x571 pixels; - Batch mode: 596x572 pixels. ### Expected behavior; No pixel difference is found between running batch or not. Right now there is an offset of 1 up to 2 pixels. ### To Reproduce. ```cpp; void test() {; TCanvas *c = new TCanvas(""c1"",""c1"",600,600);; c->SaveAs(""c1.png"");; }; //root -l test.C -b -q; //root -l test.C -q; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11004
https://github.com/root-project/root/issues/11004:447,Testability,test,test,447,"- [x] Checked for duplicates. ### Describe the bug; I see one small issue when saving a 600x600 TCanvas window as png. I get:; - Interactive mode: 598x571 pixels; - Batch mode: 596x572 pixels. ### Expected behavior; No pixel difference is found between running batch or not. Right now there is an offset of 1 up to 2 pixels. ### To Reproduce. ```cpp; void test() {; TCanvas *c = new TCanvas(""c1"",""c1"",600,600);; c->SaveAs(""c1.png"");; }; //root -l test.C -b -q; //root -l test.C -q; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11004
https://github.com/root-project/root/issues/11004:471,Testability,test,test,471,"- [x] Checked for duplicates. ### Describe the bug; I see one small issue when saving a 600x600 TCanvas window as png. I get:; - Interactive mode: 598x571 pixels; - Batch mode: 596x572 pixels. ### Expected behavior; No pixel difference is found between running batch or not. Right now there is an offset of 1 up to 2 pixels. ### To Reproduce. ```cpp; void test() {; TCanvas *c = new TCanvas(""c1"",""c1"",600,600);; c->SaveAs(""c1.png"");; }; //root -l test.C -b -q; //root -l test.C -q; ```. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 11 2022, 18:39:08 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11004
https://github.com/root-project/root/pull/11005:284,Deployability,update,updated,284,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11005
https://github.com/root-project/root/pull/11005:401,Deployability,update,updated,401,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11005
https://github.com/root-project/root/pull/11005:371,Testability,test,tested,371,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11005
https://github.com/root-project/root/pull/11005:239,Usability,guid,guide,239,"… tutorials. # This Pull request: df001_Introduction tutorial. ## Changes or fixes:. The explanation of the actions in the part ""Operations on dataframe"" using ForEach() and TActionResultPtr<T> does not match with the RDataFrame Reference guide and is hence outdated. Now there is an updated text. Also, a few grammar mistakes are now corrected for. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11005
https://github.com/root-project/root/pull/11006:152,Deployability,update,updated,152,# This Pull request: df002 tutorial. ## Changes or fixes:. Typos and grammar mistakes are now fixed. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11006
https://github.com/root-project/root/pull/11006:122,Testability,test,tested,122,# This Pull request: df002 tutorial. ## Changes or fixes:. Typos and grammar mistakes are now fixed. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11006
https://github.com/root-project/root/pull/11007:169,Deployability,update,updated,169,# This Pull request: df004 tutorial. ## Changes or fixes:. Correction of minor grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11007
https://github.com/root-project/root/pull/11007:139,Testability,test,tested,139,# This Pull request: df004 tutorial. ## Changes or fixes:. Correction of minor grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11007
https://github.com/root-project/root/pull/11010:181,Deployability,update,updated,181,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11010
https://github.com/root-project/root/pull/11010:150,Testability,test,tested,150,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11010
https://github.com/root-project/root/pull/11011:181,Deployability,update,updated,181,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11011
https://github.com/root-project/root/pull/11011:150,Testability,test,tested,150,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes issue #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11011
https://github.com/root-project/root/pull/11012:181,Deployability,update,updated,181,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11012
https://github.com/root-project/root/pull/11012:150,Testability,test,tested,150,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Split lines that were longer than 79 characters. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11012
https://github.com/root-project/root/pull/11015:120,Integrability,depend,depending,120,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11015
https://github.com/root-project/root/pull/11015:177,Integrability,depend,dependsOnValue,177,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11015
https://github.com/root-project/root/pull/11015:540,Integrability,depend,depends,540,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11015
https://github.com/root-project/root/pull/11015:475,Modifiability,variab,variables,475,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11015
https://github.com/root-project/root/pull/11015:732,Security,hash,hash-assisted,732,"In `RooProdPdf::getConstraints()`, the full computation graph was; traversed two or three times for each component pdf, depending on the; code branch. There were calls to `pdf->dependsOnValue()` and; `pdf->getParameters(&observables)`, but both are very expensive for; large computation graphs because they check if any of the observables is; in the server list of any RooAbsArg in the graph. It is much cheaper to call `pdf->getParameters(nullptr)` to get all; value server variables of a pdf, and then use `overlaps` to check if the; pdf depends on observables or constrained parameters. To get then the set of actual parameters, it is suggested to use; `tmp.remove(observables)`, which is is cheap for RooArgSets because of; the hash-assisted find by name. This commit speeds up the `createNLL()` call for the ATLAS Higgs; combination workspace by 30 %. Here one can see the flamegraphs for createNLL in the ATLAS Higgs combination fit [before this commit](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_before_11015.svg) and [after](https://rembserj.web.cern.ch/rembserj/flamegraphs/perf_after_11015.svg).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11015
https://github.com/root-project/root/issues/11016:58,Deployability,integrat,integration,58,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:163,Deployability,integrat,integration,163,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:243,Deployability,integrat,integration,243,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:388,Deployability,integrat,integration,388,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:1056,Deployability,integrat,integrate-,1056,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:58,Integrability,integrat,integration,58,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:163,Integrability,integrat,integration,163,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:243,Integrability,integrat,integration,243,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:388,Integrability,integrat,integration,388,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11016:1056,Integrability,integrat,integrate-,1056,"### Describe the bug. When using the `""I""` option for bin integration to fit a TH2, the result is identical to the fit result without that option, even though bin integration should change the fit result. ### Expected behavior. Either the bin integration should be done and therefore the fit result changes, or there should be warning printed and a note in the documentation that the bin integration option only supports 1-d histograms. ### To Reproduce. ```C++; void script() {. auto f2 = new TF2(""f2"",""[norm]*(5-[coefx]*x)*(5-y)"",0,5,0,5);; f2->SetParameters(1.0, 1.0);. int nBins = 10;. auto h2 = new TH2D(""h2"", ""h2"", nBins, 0., 5., nBins, 0., 5.);. h2->FillRandom(""f2"", 500000);. gStyle->SetOptFit(1111);. // kick parameters a bit before fitting; f2->SetParameters(0.9, 0.9);. h2->Fit(f2, """", """");; // h2->Fit(f2, ""I"", """"); // gives exactly the the same result; }; ```. ### Setup. ROOT master on Arch Linux. ### Additional context. I observed this unexpected behavior when trying to reproduce a problem on the ROOT forum:; https://root-forum.cern.ch/t/integrate-tf2-function-over-each-bin/50882",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11016
https://github.com/root-project/root/issues/11017:2265,Availability,down,download,2265,"hat the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/issues/11017:2247,Deployability,install,install,2247,"hat the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/issues/11017:2336,Deployability,install,install,2336,"hat the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/issues/11017:391,Usability,clear,clear,391,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooReal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/issues/11017:893,Usability,simpl,simplified,893,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooReal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/issues/11017:1378,Usability,clear,clear,1378,"lear and concise description of what the wrong behavior is.; -->. I have some data in RDataFrame, and I want to fit them using RooFit. I book a `RooDataSet` using the `RooDataSetHelper` like this; ```cpp; auto data_set = df.Book<double, double>(; RooDataSetHelper(""data_set"", ""title"", RooArgSet(var1, var2)), {""var1"", ""var2""});; ```; The fit is wrong because the `data_set` doesn't respect the limits on `var1` and `var2`, resulting in an incorrect normalization. The only difference in the following simplified fits is that I used; ```cpp; auto data_set = df.Book<double, double>(; ```; for the first one, and ; ```cpp; auto data_set = df.Filter(""var2>2005 && var2<2020"").Book<double, double>(; ```; for the second one. ![all_wrong](https://user-images.githubusercontent.com/23052054/180235896-9f9d8cdb-5804-4567-9f0f-e1279c141777.png); ![all_right](https://user-images.githubusercontent.com/23052054/180235919-42ba997b-7bcb-4462-8b81-eab405454b1d.png). ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; I expected the RooDataSet to account for the RooRealVar range. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; 1. Get any `RDataFrame`; 2. Create a `RooRealVar` with limits narrower than the corresponding data in the `RDataFrame`; 3. Use `RooDataSetHelper` to book a `RooDataSet` from the `RDataFrame` using the `RooRealVar`; 4. Fit the `RooRealVar` of the `RooDataSet`; 5. The fit will be wrong unless you cut on the `RDataFrame` to match the limits of the `RooRealVar`. ### Setup; <!--; 1. ROOT version; 6. Operating system; 7. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; ROOT 6.26/04; macOS 12.4; Brew install. ### Additional context; <!--; Add any other cont",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11017
https://github.com/root-project/root/pull/11018:213,Performance,load,loadValues,213,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11018
https://github.com/root-project/root/pull/11018:182,Testability,log,logic,182,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11018
https://github.com/root-project/root/pull/11018:235,Testability,test,test,235,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11018
https://github.com/root-project/root/pull/11018:274,Testability,log,logic,274,"The RDataFrameHelper should be consistent with creating a RooDataSet; from a TTree, meaning out-of-range events should be skipped. This is; implemented in this commit, borrowing the logic from; `RooTreeDataStore::loadValues()`. A unit test is also implemented. The previous logic of just taking just all values to fill the dataset; was very dangerous, because these values then clipped to the RooRealVar; limits and biased the number of events observed at the boundaries. Closes https://github.com/root-project/root/issues/11017.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11018
https://github.com/root-project/root/pull/11019:387,Deployability,update,updated,387,"# This Pull request: Allows for users to have the option of just building the CPT not packaging it. ## Changes or fixes: Added a current-dev-build and last-stable-build option in the argument parser, and added additional if statements if it is the normal current-dev or last-stable option, so that there is also packaging like normal. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11019
https://github.com/root-project/root/pull/11019:356,Testability,test,tested,356,"# This Pull request: Allows for users to have the option of just building the CPT not packaging it. ## Changes or fixes: Added a current-dev-build and last-stable-build option in the argument parser, and added additional if statements if it is the normal current-dev or last-stable option, so that there is also packaging like normal. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11019
https://github.com/root-project/root/pull/11020:330,Deployability,update,updated,330,"# This Pull request: Adds another build option for building Cling with specific platform tags. . ## Changes or fixes: Added build options for the platform tags to the argument parser, then added additional if statements for checking whether the user wants to package it or not. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11020
https://github.com/root-project/root/pull/11020:299,Testability,test,tested,299,"# This Pull request: Adds another build option for building Cling with specific platform tags. . ## Changes or fixes: Added build options for the platform tags to the argument parser, then added additional if statements for checking whether the user wants to package it or not. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11020
https://github.com/root-project/root/issues/11021:478,Availability,ERROR,ERROR,478,"### Explain what you would like to see improved; My students and myself often encounter the following situation. We are trying to make a fit of a histogram to a Gaussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11021
https://github.com/root-project/root/issues/11021:544,Availability,ERROR,ERROR,544,"### Explain what you would like to see improved; My students and myself often encounter the following situation. We are trying to make a fit of a histogram to a Gaussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11021
https://github.com/root-project/root/issues/11021:1159,Availability,ERROR,ERROR,1159,"aussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d-d78474d7e0e1.png). And this is just after adding it, completely 'reset':. ![image](https://user-images.githubusercontent.com/10653970/180316839-3bc72bb9-7146-45c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11021
https://github.com/root-project/root/issues/11021:1254,Availability,ERROR,ERROR,1254,"by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d-d78474d7e0e1.png). And this is just after adding it, completely 'reset':. ![image](https://user-images.githubusercontent.com/10653970/180316839-3bc72bb9-7146-45ca-8133-5322e69ebeca.png). ### To Reproduce; ```cpp; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,600);; TH",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11021
https://github.com/root-project/root/issues/11021:786,Performance,tune,tune,786,"### Explain what you would like to see improved; My students and myself often encounter the following situation. We are trying to make a fit of a histogram to a Gaussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11021
https://github.com/root-project/root/pull/11022:262,Deployability,update,updated,262,# This Pull request: Reduces the use of the subprocess function and makes the code cleaner. ## Changes or fixes: Created a new extract_tar function to replace tar subprocess calls and pythonic tar extractions. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11022
https://github.com/root-project/root/pull/11022:21,Energy Efficiency,Reduce,Reduces,21,# This Pull request: Reduces the use of the subprocess function and makes the code cleaner. ## Changes or fixes: Created a new extract_tar function to replace tar subprocess calls and pythonic tar extractions. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11022
https://github.com/root-project/root/pull/11022:231,Testability,test,tested,231,# This Pull request: Reduces the use of the subprocess function and makes the code cleaner. ## Changes or fixes: Created a new extract_tar function to replace tar subprocess calls and pythonic tar extractions. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11022
https://github.com/root-project/root/pull/11023:111,Modifiability,Config,Config,111,"This PR enables the streaming of the RooLagrangianMorph by creating dictionaries also for `RooLagrangianMorph::Config`. Furthermore, some improvements are made to the RooLagrangianMorphFunc and its tutorials in separate commits. Tons of memory leaks are fixed in the `RooLagrangianMorphFunc` as well.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11023
https://github.com/root-project/root/pull/11024:156,Deployability,update,updated,156,# This Pull request: df009 tutorial. ## Changes or fixes:. Fixing grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11024
https://github.com/root-project/root/pull/11024:126,Testability,test,tested,126,# This Pull request: df009 tutorial. ## Changes or fixes:. Fixing grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11024
https://github.com/root-project/root/pull/11025:146,Deployability,update,updated,146,# This Pull request: df012. ## Changes or fixes:. Fixes grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11025
https://github.com/root-project/root/pull/11025:116,Testability,test,tested,116,# This Pull request: df012. ## Changes or fixes:. Fixes grammar mistakes in the documentation. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11025
https://github.com/root-project/root/issues/11026:2910,Performance,load,loadResult,2910,"mall diff in a couple classes to print debug statements; ```; --- a/tree/tree/src/TEntryList.cxx; +++ b/tree/tree/src/TEntryList.cxx; @@ -155,6 +155,8 @@ See comments to those functions for more details; #include ""TSystem.h""; #include ""TObjString.h""; ; +#include <iostream>; +; ClassImp(TEntryList);; ; ////////////////////////////////////////////////////////////////////////////////; @@ -839,6 +841,7 @@ Long64_t TEntryList::GetEntryAndTree(Int_t index, Int_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/issues/11026:2941,Performance,Load,LoadTree,2941,"mall diff in a couple classes to print debug statements; ```; --- a/tree/tree/src/TEntryList.cxx; +++ b/tree/tree/src/TEntryList.cxx; @@ -155,6 +155,8 @@ See comments to those functions for more details; #include ""TSystem.h""; #include ""TObjString.h""; ; +#include <iostream>; +; ClassImp(TEntryList);; ; ////////////////////////////////////////////////////////////////////////////////; @@ -839,6 +841,7 @@ Long64_t TEntryList::GetEntryAndTree(Int_t index, Int_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/issues/11026:3074,Performance,load,loadResult,3074,"mall diff in a couple classes to print debug statements; ```; --- a/tree/tree/src/TEntryList.cxx; +++ b/tree/tree/src/TEntryList.cxx; @@ -155,6 +155,8 @@ See comments to those functions for more details; #include ""TSystem.h""; #include ""TObjString.h""; ; +#include <iostream>; +; ClassImp(TEntryList);; ; ////////////////////////////////////////////////////////////////////////////////; @@ -839,6 +841,7 @@ Long64_t TEntryList::GetEntryAndTree(Int_t index, Int_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/issues/11026:3090,Performance,load,loadResult,3090,"mall diff in a couple classes to print debug statements; ```; --- a/tree/tree/src/TEntryList.cxx; +++ b/tree/tree/src/TEntryList.cxx; @@ -155,6 +155,8 @@ See comments to those functions for more details; #include ""TSystem.h""; #include ""TObjString.h""; ; +#include <iostream>; +; ClassImp(TEntryList);; ; ////////////////////////////////////////////////////////////////////////////////; @@ -839,6 +841,7 @@ Long64_t TEntryList::GetEntryAndTree(Int_t index, Int_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/issues/11026:3541,Performance,load,loadResult,3541,"_t &treenum); //Then, when GetEntryAndTree(21, treenum, kTRUE) is called, first entry of the; //third sublist will be returned; ; + std::cout << ""Got input index: "" << index << ""\n"";; ```; ```; --- a/tree/treeplayer/src/TTreeReader.cxx; +++ b/tree/treeplayer/src/TTreeReader.cxx; @@ -18,6 +18,7 @@; #include ""TTreeReaderValue.h""; #include ""TFriendProxy.h""; ; +#include <iostream>; ; // clang-format off; /**; @@ -547,6 +548,7 @@ TTreeReader::EEntryStatus TTreeReader::SetEntryBase(Long64_t entry, Bool_t local; const Long64_t loadResult = treeToCallLoadOn->LoadTree(entryAfterList);; fSetEntryBaseCallingLoadTree = kFALSE;; ; + std::cout << ""With entryAfterList="" << entryAfterList <<"" got loadResult="" << loadResult << ""\n"";; ```. I get the following output; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: -2147483648; Got tree index -1 and entry index -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, the input is the int limit + 1, from which one would expect the same tree and just one entry beyond the previous one, i.e. 48. Instead the result is tree index = -1 and entry index = -1. This is a bug resulting from a wrong signature in `TEntryList::GetEntryAndTree`:; https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/tree/src/TEntryList.cxx#L831. Which should accept a `Long64_t` like all other places in the class where",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/issues/11026:4739,Performance,Load,LoadTree,4739,"ndex -1; Got input index: -2147483648; With entryAfterList=1616 got loadResult=1616; What is the entry status? not kEntryBeyondEnd; ```. ## Things to notice. The total number of entries in the chain/tentrylist is larget than `std::numeric_limits<int>::max()`. With the first call to `GetEntryAndTree`, I give as input exactly the int limit, and the output is correct (index of the tree = 100, index of the entry in that tree = 47). With the next call, the input is the int limit + 1, from which one would expect the same tree and just one entry beyond the previous one, i.e. 48. Instead the result is tree index = -1 and entry index = -1. This is a bug resulting from a wrong signature in `TEntryList::GetEntryAndTree`:; https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/tree/src/TEntryList.cxx#L831. Which should accept a `Long64_t` like all other places in the class where an entry number is expected, but instead takes an `Int_t`. This results in a further bug in TTreeReader, that calls this method at https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L532. When the wrong entry index / tree index is returned, the consecutive call to [`treeToCallLoadOn->LoadTree(entryAfterList)`](https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L547) will give result `-2`, like shown in the output above. This will then set the entry status to `kEntryBeyondEnd` at https://github.com/root-project/root/blob/8323e504ae187954dcb9bcdfd5df2f9a5ed2abca/tree/treeplayer/src/TTreeReader.cxx#L571-L580 . Practically, the TTreeReader thinks there are no more entries to process. This means that e.g. an RDataFrame would also stop processing entries after this value. ### Expected behavior. The TEntryList is able to give the correct tree and entry index even after `std::numeric_limits<int>::max()`. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11026
https://github.com/root-project/root/pull/11027:72,Integrability,inject,injects,72,"Current state:; - the normalized name continues to remove `std::`; - it injects using declarations for the ""most common"" stdlib identifiers; - this PR adds `std::` where ""needed"", to the normalized name, to make identifiers ""compilable"" (in dictionary source). The last point requires to have an authoritative list of ""things in the std namespace"", to prepend `std::` to them. This does not scale - any stdlib implementation might have any non-public identifier that might be needed also for public types, e.g. some libstdc++ have `std::thread::id` as type alias to `std::__thread_id`. Alternatively, this PR could implement a ""if lookup fails, try again with prepending `std::`"". This is an issue for types such as `foo<bar, baz<boo,boz>>` where either any type must be tested for std-ization separately or all possible permutations (`std::foo<bar, baz<boo,boz>>`, `foo<std::bar, baz<boo,boz>>`,`std::foo<std::bar, baz<boo,boz>>`...) must be tried.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027
https://github.com/root-project/root/pull/11027:72,Security,inject,injects,72,"Current state:; - the normalized name continues to remove `std::`; - it injects using declarations for the ""most common"" stdlib identifiers; - this PR adds `std::` where ""needed"", to the normalized name, to make identifiers ""compilable"" (in dictionary source). The last point requires to have an authoritative list of ""things in the std namespace"", to prepend `std::` to them. This does not scale - any stdlib implementation might have any non-public identifier that might be needed also for public types, e.g. some libstdc++ have `std::thread::id` as type alias to `std::__thread_id`. Alternatively, this PR could implement a ""if lookup fails, try again with prepending `std::`"". This is an issue for types such as `foo<bar, baz<boo,boz>>` where either any type must be tested for std-ization separately or all possible permutations (`std::foo<bar, baz<boo,boz>>`, `foo<std::bar, baz<boo,boz>>`,`std::foo<std::bar, baz<boo,boz>>`...) must be tried.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027
https://github.com/root-project/root/pull/11027:771,Testability,test,tested,771,"Current state:; - the normalized name continues to remove `std::`; - it injects using declarations for the ""most common"" stdlib identifiers; - this PR adds `std::` where ""needed"", to the normalized name, to make identifiers ""compilable"" (in dictionary source). The last point requires to have an authoritative list of ""things in the std namespace"", to prepend `std::` to them. This does not scale - any stdlib implementation might have any non-public identifier that might be needed also for public types, e.g. some libstdc++ have `std::thread::id` as type alias to `std::__thread_id`. Alternatively, this PR could implement a ""if lookup fails, try again with prepending `std::`"". This is an issue for types such as `foo<bar, baz<boo,boz>>` where either any type must be tested for std-ization separately or all possible permutations (`std::foo<bar, baz<boo,boz>>`, `foo<std::bar, baz<boo,boz>>`,`std::foo<std::bar, baz<boo,boz>>`...) must be tried.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11027
https://github.com/root-project/root/pull/11028:774,Performance,load,loadResult,774,"Change signature of methods in TEntryList and derived class that expect; an entry index. Usually this is stored as Long64_t, but in `GetEntry`; and `GetEntryAndTree` methods this was passed as `Int_t` leading to; integer overflows. Fixes https://github.com/root-project/root/issues/11026. With respect to the reproducer in the linked issue, this PR outputs the following; ```; $: ./repro.o; std::numeric_limits<int>::max(): 2147483647; Total entries in chain: 2168958436; Total entries in entrylist: 2168958436; Giving input entry 2147483647; Got input index: 2147483647; Got tree index 100 and entry index 47; Giving input entry 2147483648; Got input index: 2147483648; Got tree index 100 and entry index 48; Got input index: 2147483648; With entryAfterList=2147483648 got loadResult=48; What is the entry status? not kEntryBeyondEnd; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11028
https://github.com/root-project/root/pull/11029:6,Availability,avail,available,6,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11029
https://github.com/root-project/root/pull/11029:151,Deployability,release,release,151,"It is available less and less often, and we do not actually; benefit a lot from printing the distro (stress) or we can get; the same info from /etc/os-release (cmake).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11029
https://github.com/root-project/root/pull/11033:164,Deployability,update,updated,164,# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11033
https://github.com/root-project/root/pull/11033:86,Security,validat,validate,86,# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11033
https://github.com/root-project/root/pull/11033:77,Testability,test,tests,77,# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11033
https://github.com/root-project/root/pull/11033:134,Testability,test,tested,134,# This Pull request: Adds the Cast ONNX Operator with the corresponding Unit tests to validate the written code. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11033
https://github.com/root-project/root/pull/11037:399,Deployability,update,updated,399,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037
https://github.com/root-project/root/pull/11037:21,Energy Efficiency,Reduce,Reduces,21,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037
https://github.com/root-project/root/pull/11037:36,Modifiability,variab,variable,36,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037
https://github.com/root-project/root/pull/11037:245,Modifiability,variab,variable,245,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037
https://github.com/root-project/root/pull/11037:368,Testability,test,tested,368,"# This Pull request: Reduces global variable mutation, making it easier to debug. ## Changes or fixes: Got rid of LLVM_GIT_URL, CLANG_GIT_URL, and CLING_GIT_URL and put them in their respective functions. I then got rid of the EXTRA_CMAKE_FLAGS variable and put it in the compile functions and replaced its global reference with the direct value. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11037
https://github.com/root-project/root/pull/11045:155,Testability,test,test,155,"Create a new type of merging, a special case when the histogram has an axis with label and the other axis is numeric and different but compatible. . A new test is added also in stressHIstogram for this new case. This fixes #10828",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11045
https://github.com/root-project/root/pull/11046:43,Integrability,interface,interface,43,"As an intermediate step, needed was to add interface to add a friend in RFriendInfo. The current v6-26 RDatasetSpec resides in the internal namespace. This is needed to allow the fix for friends support in DistRDF.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11046
https://github.com/root-project/root/pull/11047:1165,Availability,Error,Error,1165,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11047
https://github.com/root-project/root/pull/11047:1234,Availability,Error,Error,1234,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11047
https://github.com/root-project/root/pull/11047:1336,Availability,error,error,1336,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11047
https://github.com/root-project/root/pull/11047:584,Testability,test,test,584,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11047
https://github.com/root-project/root/pull/11047:1379,Testability,test,test,1379,"Consider the following code; ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. Before this PR, the output would be:; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```. After this PR:; ```; $: python test.py; [...]; File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Dask/Backend.py"", line 155, in dask_mapper; return mapper(current_range); File ""/home/vpadulan/programs/rootproject/rootbuild/fix-tentrylist-int-overflow-distrdf-debug/lib/DistRDF/Backends/Base.py"", line 116, in distrdf_mapper; raise RuntimeError(f""C++ exception thrown:\n\t{type(e).__name__}: {e.what()}""); RuntimeError: C++ exception thrown:; 	runtime_error: Graph was applied to a mix of scalar values and collections. This is not supported.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11047
https://github.com/root-project/root/pull/11049:4197,Availability,avail,available,4197,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4309,Availability,avail,available,4309,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1523,Deployability,integrat,integrator,1523,"itic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1716,Deployability,integrat,integrationRange,1716,"ch is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1832,Deployability,integrat,integrationRange,1832,"rial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1883,Deployability,integrat,integrationRange,1883,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:2007,Deployability,integrat,integrationRange,2007,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4799,Deployability,update,updated,4799,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1523,Integrability,integrat,integrator,1523,"itic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1716,Integrability,integrat,integrationRange,1716,"ch is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1832,Integrability,integrat,integrationRange,1832,"rial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic cas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:1883,Integrability,integrat,integrationRange,1883,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:2007,Integrability,integrat,integrationRange,2007,"s modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used functio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:632,Modifiability,variab,variables,632,"# This Pull request:. This follows on from a recent pull request which added a relativistic breit wigner to ROOT https://github.com/root-project/root/pull/10760, to add a relativistic voigt which is a natural extension. **Brief summary**; Files added:; math/mathmore/inc/Math/VoigtRelativistic.h - Defines VoigtRelativistic class with two functions, evaluate which calculates the relativistic voigt, and dumpingFunction which calculates the relativisitic voigt's dumping function. ; math/mathmore/src/VoigtRelativistic.cxx - Implements the two functions defined in VoigtRelativistic.h . This implementation uses the redefinition of variables in https://arxiv.org/pdf/1711.09304.pdf which is required to write the integral in a computationally feasiable way.; tutorials/math/Voigt.C - Add a tutorial which shows the use of the new VoigtRelativistic class two produce two plots, comparing relativistic voigt to non relativistic voigt, both as the voigt itself and their dumping functions.; Files modified:; math/mathmore/CMakeLists.txt; math/mathmore/inc/Math/LinkDef.h - These two files needed to be modified to compile my changes adding in the relativisitc voigt. **Full description**; Implemented relativistic version of voigt (non-relativistic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this val",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:2290,Modifiability,variab,variables,2290,"tic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:3377,Safety,detect,detector,3377,"ition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case woul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4422,Testability,test,test,4422,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4524,Testability,test,test,4524,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4589,Testability,test,tests,4589,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4769,Testability,test,tested,4769,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:2267,Usability,simpl,simple,2267,"tic case already exists in TMath). As previously discussed in the ROOT forum https://root-forum.cern.ch/t/relativistic-breit-wigner-and-relativistic-voigt/48844 , the relativistic version has been added to mathmore rather than TMath, as it requires including a header file with an integrator which is CPU intensive. This has hence been added as it's own class in mathmore, with two functions:. static double evaluate(double x, double median, double sigma, double lg, double integrationRange=26.615717509251260);; static double dumpingFunction(double median, double sigma, double lg, double integrationRange=26.615717509251260);. The default integrationRange was chosen as the integral has been wrote in a form where it is multiplied by exp(-t^2), and this value of integrationRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:2871,Usability,simpl,simply,2871,"tionRange results in going to the point where exp(-t^2) reaches the minimum value stored by a double. A relativistic voigt is a convolution of a relativistic breit wigner and a gaussian, doing this naively is computationally infeasible however a fairly simple redefinition of variables allows rewriting the integral in a form that is reasonable to compute. This is shown in https://arxiv.org/pdf/1711.09304.pdf equation 9 which has been used here. I am unsure how referencing works with ROOT. [Note: the function used here is not actually identical to equation 9, as the paper linked uses a different normalization than ROOT does for the non relativistic voigt which is already implemented in TMath. I have renormalized this equation to be consistent with the non relativistic case already in ROOT). The two functions that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namesp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/pull/11049:4572,Usability,learn,learn,4572,"s that have been defined are:. evaluate, simply gives the value of the relativisitic voigt at the point requested; dumpingFunction, this is a commonly used function which is defined as the value of the relativistic voigt at its peak, divided by the value of the relativistic breit wigner at the peak that is part of the relativistic voigt. This is useful as it quantifies how much the voigt is smeared by the gaussian, which as a physical effect in particle physics is usually easily translated to how much sensitivity to a signal you lose due to detector effects. A tutorial Voigt.C has been added in tutorials/math which produces plots comparing the non relativistic and relativistic case of voigt and the dumping function. The output plots from tutorials/math/Voigt.C which produces a plot using the new VoigtRelativistic class which is added in this pull request is here [Voigt](https://cernbox.cern.ch/index.php/s/3Vu40dk74wUDfWe) [DumpingFunction](https://cernbox.cern.ch/index.php/s/Xv3act8hvpaqeCM). As mentioned this relativistic voigt is implemented in mathmore, however there is already a non relativistic voigt in TMath ( called Voigt https://root.cern.ch/doc/master/namespaceTMath.html ). I'm unsure if this is possible but it would be ideal if the documentation here could mention in the non relativistic voigt case that there is a relativistic version available as I think as is very few people even if they want a relativistic case would realise there is one now available (in fact I think many people would just assume the voigt in TMath is relativistic). I have not added a test as I am unsure exactly how to and the non relativistic voigt that already exists does not have a test either to use as a template. I will try to learn how to add tests in the future and hopefully add one for this and the relativistic breit wigner case in the future. Thank you for your help,; Jack. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11049
https://github.com/root-project/root/issues/11050:210,Availability,error,error,210,"### Describe the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:760,Availability,error,error,760,"### Describe the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:1475,Availability,Error,Error,1475," the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:1544,Availability,Error,Error,1544," the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:1646,Availability,error,error,1646," the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:1762,Availability,error,error,1762," the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12; Fedora 36",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11050:894,Testability,test,test,894,"### Describe the bug; If an exception happens on the C++ side during the execution of an RDF task within a Dask worker process, this is not properly propagated. Most times it leads to some kind of unrepairable error. Take the following example. ```python; from dask.distributed import LocalCluster, Client; import ROOT; RDataFrame = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame. def create_connection():; cluster = LocalCluster(n_workers=2, threads_per_worker=1, processes=False); client = Client(cluster); return client. if __name__ == ""__main__"":; connection = create_connection(); df = RDataFrame(100, daskclient=connection); df = df.Define(""x"", ""1"").Define(""y"", ""ROOT::RVecF{1., 2., 3.}""); g = df.Graph(""x"", ""y""); gv = g.GetValue(); ```. The expected error here is that the graph cannot be filled with columns of mixed scalar/vector types. Running the code above gives; ```; $: python test.py; RDataFrame::Run: event loop was interrupted; Warning in <TBufferFile::WriteObjectAny>: since runtime_error has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it.; Warning in <TStreamerInfo::Build>: runtime_error: base class exception has no streamer or dictionary it will not be saved; Warning in <TStreamerInfo::Build>: runtime_error: __cow_string has no streamer or dictionary, data member ""_M_msg"" will not be saved; Error in <TClass::New>: cannot create object of class runtime_error; Error in <TBufferFile::ReadObject>: could not create object of class runtime_error; *** Break *** bus error; ```; Followed by the usual gdb stacktrace produced by ROOT. This happens because Dask tries to serialize the error object in order to send it back to the user. But the exception cannot be serialized by ROOT as stated in the warning. ### Expected behavior; The C++ exceptions should be properly propagated to the user. ### Setup; ROOT master; GCC 12",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11050
https://github.com/root-project/root/issues/11051:97,Availability,error,error,97,"This was spotted by @vepadulano. As the title suggests: RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python. Minimal repro:; ```py; >>> import ROOT; >>> ds2 = ROOT.RDF.Experimental.RDatasetSpec(""tree"", ""z.root"", (10, 7)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 5 overloaded methods succeeded. Full details:; RDatasetSpec::RDatasetSpec(ROOT::RDF::Experimental::RDatasetSpec&&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const vector<string>& fileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 2; RDatasetSpec::RDatasetSpec(const vector<pair<string,string> >& treeAndFileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: takes at most 2 arguments (3 given); RDatasetSpec::RDatasetSpec(const ROOT::RDF::Experimental::RDatasetSpec&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const string& fileNameGlob, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 3; ```; This is instead supposed to trigger:; ```cpp; RDatasetSpec::REntryRange::REntryRange(Long64_t begin, Long64_t end) : fBegin(begin), fEnd(end); {; if (fBegin > fEnd); throw std::logic_error(""The starting entry cannot be larger than the ending entry in the ""; ""creation of a dataset specification."");; }; ```; P.S. very interesting that an overload is not recognized depending on the same basic types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11051
https://github.com/root-project/root/issues/11051:1637,Integrability,depend,depending,1637,"This was spotted by @vepadulano. As the title suggests: RDatasetSpec is not throwing the correct error when the begin entry > end entry in Python. Minimal repro:; ```py; >>> import ROOT; >>> ds2 = ROOT.RDF.Experimental.RDatasetSpec(""tree"", ""z.root"", (10, 7)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: none of the 5 overloaded methods succeeded. Full details:; RDatasetSpec::RDatasetSpec(ROOT::RDF::Experimental::RDatasetSpec&&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const vector<string>& fileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 2; RDatasetSpec::RDatasetSpec(const vector<pair<string,string> >& treeAndFileNameGlobs, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: takes at most 2 arguments (3 given); RDatasetSpec::RDatasetSpec(const ROOT::RDF::Experimental::RDatasetSpec&) =>; TypeError: takes at most 1 arguments (3 given); RDatasetSpec::RDatasetSpec(const string& treeName, const string& fileNameGlob, const ROOT::RDF::Experimental::RDatasetSpec::REntryRange& entryRange = {}) =>; TypeError: could not convert argument 3; ```; This is instead supposed to trigger:; ```cpp; RDatasetSpec::REntryRange::REntryRange(Long64_t begin, Long64_t end) : fBegin(begin), fEnd(end); {; if (fBegin > fEnd); throw std::logic_error(""The starting entry cannot be larger than the ending entry in the ""; ""creation of a dataset specification."");; }; ```; P.S. very interesting that an overload is not recognized depending on the same basic types.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11051
https://github.com/root-project/root/pull/11052:639,Energy Efficiency,reduce,reduces,639,"People know that they can use `TF1::SetParameters()` to set the; parameter values of a TF1. For example, when you have two parameters:; ```C++; TF1 myexpo(""myexp"", ""[coef] * std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(1.0, 0.5);; ```. When people get rid of all parameters except for one, they therefore; automatically assume that this will work:. ```C++; TF1 myexpo(""myexp"", ""std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(0.5);; ```. However, it doesn't work because `SetParameters` requires at least two; arguments. This commit suggests to fix that and generalize the function; to take only one parameter as well. This reduces the surprises people have when interacting with a TF1 and; therefore improves the user experience for first-time ROOT users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11052
https://github.com/root-project/root/pull/11052:729,Usability,user experience,user experience,729,"People know that they can use `TF1::SetParameters()` to set the; parameter values of a TF1. For example, when you have two parameters:; ```C++; TF1 myexpo(""myexp"", ""[coef] * std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(1.0, 0.5);; ```. When people get rid of all parameters except for one, they therefore; automatically assume that this will work:. ```C++; TF1 myexpo(""myexp"", ""std::exp(-[rate] * x)"", 0, 10);; myexpo.SetParameters(0.5);; ```. However, it doesn't work because `SetParameters` requires at least two; arguments. This commit suggests to fix that and generalize the function; to take only one parameter as well. This reduces the surprises people have when interacting with a TF1 and; therefore improves the user experience for first-time ROOT users.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11052
https://github.com/root-project/root/pull/11054:305,Availability,error,error,305,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11054
https://github.com/root-project/root/pull/11054:1170,Deployability,update,updated,1170,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11054
https://github.com/root-project/root/pull/11054:1140,Testability,test,tested,1140,"Fix typo in `CompressionSettings()` function declaration to match definition in `Compression.cxx`. Many thanks for reporting @mnowakgit!. This typo caused the following to fail:; ```; root [0] auto c = ROOT::RCompressionSetting::EAlgorithm::kZSTD;; root [1] CompressionSettings(c, 5);; input_line_10:2:3: error: no matching function for call to 'CompressionSettings'; (CompressionSettings(((*(enum ROOT::RCompressionSetting::EAlgorithm::EValues*)0x7f02285f4010)), 5)); ^~~~~~~~~~~~~~~~~~~; /home/jalopezg/_build/include/Compression.h:124:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'RCompressionSetting::EAlgorithm' for 1st argument; int CompressionSettings(RCompressionSetting::EAlgorithm algorithm, int compressionLevel);; ^; /home/jalopezg/_build/include/Compression.h:126:5: note: candidate function not viable: no known conversion from 'enum ROOT::RCompressionSetting::EAlgorithm::EValues' to 'ROOT::ECompressionAlgorithm' for 1st argument; int CompressionSettings(ROOT::ECompressionAlgorithm algorithm, int compressionLevel);; ^; ```. ## Checklist:; - [X] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11054
https://github.com/root-project/root/pull/11055:162,Deployability,update,updated,162,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11055
https://github.com/root-project/root/pull/11055:119,Testability,Test,Tests,119,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11055
https://github.com/root-project/root/pull/11055:132,Testability,test,tested,132,This PR adds support for parsing the Keras Reshape layer in SOFIE RModel. ## Checklist:; - [x] Parsing function; - [x] Tests; - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11055
https://github.com/root-project/root/pull/11057:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/9912; 2. https://github.com/root-project/root/pull/10989; 3. https://github.com/root-project/root/pull/11018; 4. https://github.com/root-project/root/pull/11023",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11057
https://github.com/root-project/root/pull/11058:246,Deployability,update,updated,246,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11058
https://github.com/root-project/root/pull/11058:21,Energy Efficiency,Reduce,Reduces,21,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11058
https://github.com/root-project/root/pull/11058:36,Modifiability,variab,variable,36,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11058
https://github.com/root-project/root/pull/11058:120,Modifiability,variab,variables,120,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11058
https://github.com/root-project/root/pull/11058:215,Testability,test,tested,215,# This Pull request: Reduces global variable mutation. ## Changes or fixes: Removed the CPT_SRC_DIR and REVISION global variables and implemented them in the functional parameter passing style. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11058
https://github.com/root-project/root/issues/11059:70,Deployability,patch,patch,70,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:76,Deployability,release,release,76,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:149,Deployability,release,releases,149,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:438,Deployability,patch,patch,438,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:444,Deployability,release,release,444,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:664,Deployability,patch,patch,664,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:670,Deployability,release,release,670,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:800,Deployability,patch,patch,800,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:806,Deployability,release,release,806,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:868,Deployability,release,release,868,"The usual issue to collect what is needed for RooFit in the next 6.26 patch release, this time for 6.26.08. The related issues for the previous 6.26 releases:; 1. https://github.com/root-project/root/issues/9508; 2. https://github.com/root-project/root/issues/10112; 3. https://github.com/root-project/root/issues/10493; 4. https://github.com/root-project/root/issues/10758. **GitHub issues** that still need to be addressed for the next patch release:. - [x] https://github.com/root-project/root/issues/11332; - [x] https://github.com/root-project/root/issues/11396. The bugfix PRs that need to be backported in this order to the 6.26 branch before the next 6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/1084",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:2095,Deployability,update,updates,2095,"oot-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/10842; - [x] https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials; - [x] https://github.com/root-project/root/pull/11507; - [x] https://github.com/root-project/root/pull/10811; - [x] https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11133; 2. https://github.com/root-project/root/pull/11402; 3. https://github.com/root-project/root/pull/11427; 4. https://github.com/root-project/root/pull/11505; 5. https://github.com/root-project/root/pull/11528",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:2437,Deployability,patch,patches,2437,"oot-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/10842; - [x] https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials; - [x] https://github.com/root-project/root/pull/11507; - [x] https://github.com/root-project/root/pull/10811; - [x] https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11133; 2. https://github.com/root-project/root/pull/11402; 3. https://github.com/root-project/root/pull/11427; 4. https://github.com/root-project/root/pull/11505; 5. https://github.com/root-project/root/pull/11528",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/issues/11059:1683,Testability,test,testRooSimultaneous,1683,"6.26 patch release:. - [x] https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); - [x] https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; - [x] https://github.com/root-project/root/pull/11162; - [x] https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; - [x] https://github.com/root-project/root/pull/11134; Excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11195; - [x] https://github.com/root-project/root/pull/11346; - [x] https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization; - [x] https://github.com/root-project/root/pull/11401; - [x] https://github.com/root-project/root/pull/11406; Only the last commit that changes the PDF cloning behavior, also excluding the `testRooSimultaneous` changes in that commit; - [x] https://github.com/root-project/root/pull/11416; excluding the first commit with the code modernization; - [x] https://github.com/root-project/root/pull/11417; - [x] https://github.com/root-project/root/pull/11419; - [x] https://github.com/root-project/root/pull/10842; - [x] https://github.com/root-project/root/pull/11500; Excluding the last commit that only updates the tutorials; - [x] https://github.com/root-project/root/pull/11507; - [x] https://github.com/root-project/root/pull/10811; - [x] https://github.com/root-project/root/pull/11531; Except for the second commit that fixes something that was introduced in the 6.28 development cycle. The backports were grouped in a few PRs to `v6-26-00-patches`:. 1. https://github.com/root-project/root/pull/11133; 2. https://github.com/root-project/root/pull/11402; 3. https://github.com/root-project/root/pull/11427; 4. https://github.com/root-project/root/pull/11505; 5. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11059
https://github.com/root-project/root/pull/11060:1363,Deployability,update,updated,1363,"…h when ROOT uses G4 units. # This Pull request:; The PR fixes the computation of the radiation length and nuclear interaction length; which are computed wrongly when ROOT uses in G4 units. ## Changes or fixes:; All in TGeoMaterial.cpp; The fix is based on an initial pull request from Ivana:; https://github.com/root-project/root/pull/9401 ; which did miss the necessary changes for mixtures. Output from constructing Iron from:; ```; 99.5 % Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; 0.5 % Element: C Z=6 N=12.000000 A=12.010700 [g/mole]; ```; - ROOT units:; ```; $> root.exe material_test.C\(\""ROOT\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=0.0271712 index=0; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	1.75666 [cm] ; 		 Interaction Length: 	16.9589 [cm] ; ```; - Geant4 units:; ```; $> root.exe material_test.C\(\""G4\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=0.271712 index=3; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	17.5666 [mm] ; 		 Interaction Length: 	169.589 [mm] ; ```; PDG (https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/iron_Fe.html):; ```; Specific gravity 	 7.874 	g cm-3; Nuclear interaction length 	132.1 	g cm-2 	16.77 	cm; Radiation length 	 13.84 	g cm-2 	1.757 	cm; ```. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060
https://github.com/root-project/root/pull/11060:1333,Testability,test,tested,1333,"…h when ROOT uses G4 units. # This Pull request:; The PR fixes the computation of the radiation length and nuclear interaction length; which are computed wrongly when ROOT uses in G4 units. ## Changes or fixes:; All in TGeoMaterial.cpp; The fix is based on an initial pull request from Ivana:; https://github.com/root-project/root/pull/9401 ; which did miss the necessary changes for mixtures. Output from constructing Iron from:; ```; 99.5 % Element: FE Z=26 N=56.000000 A=55.845000 [g/mole]; 0.5 % Element: C Z=6 N=12.000000 A=12.010700 [g/mole]; ```; - ROOT units:; ```; $> root.exe material_test.C\(\""ROOT\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=1.75666 intlen=0.0271712 index=0; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	1.75666 [cm] ; 		 Interaction Length: 	16.9589 [cm] ; ```; - Geant4 units:; ```; $> root.exe material_test.C\(\""G4\""\); Material Iron A=55.845 Z=26 rho=7.874 radlen=17.5666 intlen=0.271712 index=3; TGeoMaterial Iron; 		 Density: 		7.874 [g/cm^3]; 		 Radiation Length: 	17.5666 [mm] ; 		 Interaction Length: 	169.589 [mm] ; ```; PDG (https://pdg.lbl.gov/2020/AtomicNuclearProperties/HTML/iron_Fe.html):; ```; Specific gravity 	 7.874 	g cm-3; Nuclear interaction length 	132.1 	g cm-2 	16.77 	cm; Radiation length 	 13.84 	g cm-2 	1.757 	cm; ```. ## Checklist:. - [X ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11060
https://github.com/root-project/root/issues/11061:1484,Availability,down,download,1484,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11061
https://github.com/root-project/root/issues/11061:1466,Deployability,install,install,1466,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11061
https://github.com/root-project/root/issues/11061:1243,Testability,test,test,1243,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11061
https://github.com/root-project/root/issues/11061:609,Usability,clear,clear,609,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11061
https://github.com/root-project/root/issues/11061:774,Usability,clear,clear,774,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . I am using the example from https://gist.github.com/cranmer/46fff8d22015e5a26619 ; it was OK for ROOT 6.24 but fails for e.g. dev3 LCG nightly build . ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; There is a segfault in segfault for RooMomentMorph for ROOT>6.24 . ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. no segfault . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. at lxplus: ; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_102/x86_64-centos7-gcc11-opt/setup.sh; python test.py ; ```; where `tst.py` is a content of https://gist.github.com/cranmer/46fff8d22015e5a26619 with a fixed print statement. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Fails for ROOT > 6.24 ; 2. lxplus ; 3. LCG . ### Additional context; <!--; Add any other context about the problem here.; -->. actuallt my examples are more complicated, but since it fails even for the example from the expert, I use his example",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11061
https://github.com/root-project/root/pull/11063:158,Availability,error,error,158,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:287,Availability,error,error,287,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:438,Availability,Error,Error,438,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:483,Availability,down,downside,483,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:590,Availability,error,errors,590,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:862,Availability,error,error-distrdf-release,862,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:1789,Availability,Error,Error,1789," like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./test.o; terminate called after throwing an instance of 'std::invalid_argument'; what(): Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:876,Deployability,release,release,876,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:87,Integrability,protocol,protocols,87,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:293,Integrability,message,message,293,"The public TFile constructor cannot be used for files that must be read through remote protocols. This is a common source of confusion for users. I split the error in two commits, one for the C++ constructor and one for its pythonization. I would like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:2220,Safety,Abort,Aborted,2220," like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./test.o; terminate called after throwing an instance of 'std::invalid_argument'; what(): Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11063:2001,Testability,test,test,2001," like to discuss:; 1. The wording of the error message; 2. The usage of `std::exception` in the C++ side. This should be a better practice in general, but the rest of TFile uses the `TObject::Error` method for this kind of problems. The downside of that is that it doesn't really stop the execution of the program. With the current status, the errors would look like this; ```python; >>> import ROOT; >>> f = ROOT.TFile(""https://root.cern/files/tutorials/hsimple.root""); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/vpadulan/programs/rootproject/rootinstall/tfile-constructor-error-distrdf-release/lib/ROOT/_pythonization/_tfile.py"", line 88, in _TFileConstructor; raise ValueError(""Cannot handle path to remote file '{}' in TFile constructor. Use TFile::Open instead."".format(args[0])); ValueError: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; ```; ```; $: root.exe; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 27 2022, 19:14:18 |; | From heads/master@v6-25-02-1893-ge1d4a59786 |; | With c++ (GCC) 12.1.1 20220507 (Red Hat 12.1.1-1) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] TFile f{""https://root.cern/files/tutorials/hsimple.root""};; Error in <TRint::HandleTermInput()>: std::invalid_argument caught: Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead; ```; ```; $: ./test.o; terminate called after throwing an instance of 'std::invalid_argument'; what(): Cannot handle path to remote file 'https://root.cern/files/tutorials/hsimple.root' in TFile constructor. Use TFile::Open instead.; Aborted (core dumped); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11063
https://github.com/root-project/root/pull/11065:267,Deployability,integrat,integrate,267,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11065
https://github.com/root-project/root/pull/11065:267,Integrability,integrat,integrate,267,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11065
https://github.com/root-project/root/pull/11065:770,Testability,Test,Tests,770,"This PR adds support for defining, parsing and generating code for custom operator in TMVA SOFIE. SOFIE is being developed following the ONNX standards, but cases may arise when a particular operator is not defined or developed. In those scenarios, an user can still integrate the operator using the custom operator implementation. . For adding a custom operator in `RModel`, the user has to define the input tensor names, output tensor names, attribute values, output tensor shapes and a header file name. The `Generate()` function for the custom operator must be defined in a separate header file under a namespace, which is called for computing the output tensor values. . ## Checklist:; - [x] `ROperator_Custom` class; - [x] Including usage in generated code; - [x] Tests for ROperator_Custom operator; - [ ] Tutorials explaining the usage",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11065
https://github.com/root-project/root/pull/11066:18,Deployability,update,updates,18,"This pull request updates the description of `TClass:CopyCollectionProxy()`, which was (sort of) misleading. Probably the name of the member function is not descriptive either, but that's a different topic. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11066
https://github.com/root-project/root/pull/11066:228,Deployability,update,updated,228,"This pull request updates the description of `TClass:CopyCollectionProxy()`, which was (sort of) misleading. Probably the name of the member function is not descriptive either, but that's a different topic. ## Checklist:; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11066
https://github.com/root-project/root/issues/11067:65,Deployability,integrat,integration,65,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/issues/11067:77,Deployability,configurat,configuration,77,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/issues/11067:522,Deployability,configurat,configuration,522,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/issues/11067:65,Integrability,integrat,integration,65,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/issues/11067:77,Modifiability,config,configuration,77,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/issues/11067:522,Modifiability,config,configuration,522,"### Describe the bug; It is not possible to change the numerical integration configuration of RooIntegrator1D when computing an improper integral. RooImproperIntegrator1D does not forward RooNumIntConfig to RooIntegrator1D (which leads to default settings being used), except in the case of a non-improper integral :. https://github.com/root-project/root/blob/7694b13fc812bf8b533196a114ccf9930754b6ed/roofit/roofitcore/src/RooImproperIntegrator1D.cxx#L166-L178. ### Expected behavior; RooImproperIntegrator1D forwards the configuration to RooIntegrator1D in all cases. ### To Reproduce; ```cpp; RooRealVar x(""x"", ""x"", 0., -1e31, 1e8);; RooRealVar mean(""mean"", ""Location parameter of Landau distribution"", 5.);; RooRealVar sigma(""sigma"", ""Scale parameter of Landau distribution"", 5.);; RooLandau landau(""landau"", ""landau"", x, mean, sigma);. RooNumIntConfig intConfig(*RooAbsReal::defaultIntegratorConfig());; intConfig.getConfigSection(""RooIntegrator1D"").setRealValue(""maxSteps"", 30);; landau.setIntegratorConfig(intConfig);. RooAbsReal* integral = landau.createIntegral(x);; cout << integral->getVal() << endl;; ```; Produces : `... did not converge after 20 steps` instead of 30 steps; Changing `-1e31` to `-1e-29` then produces the correct result (30 steps). ### Setup; ROOT v6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11067
https://github.com/root-project/root/pull/11068:751,Deployability,update,updated,751,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11068
https://github.com/root-project/root/pull/11068:224,Modifiability,extend,extended,224,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11068
https://github.com/root-project/root/pull/11068:721,Testability,test,tested,721,"# This Pull request:. ## Changes or fixes:; **Commit 1 (2932c2af9ce19d346807a39d990d77efd1169e09): bug fix.** When using a fractional event range smaller than an actual (integral) event, rounding to integers would cause the extended term in unbinned likelihoods in `RooUnbinnedL` to be added multiple times.; **Commit 2 (18cb82c9ef0aed0b30f08b62b3161aa3a2bc3a29): new `LikelihoodJob` mode.** `LikelihoodJob` would parallelize over events, just like the old bulk parallelization mode of `RooNLLVar` (through `RooRealMPFE`). Now it can also parallelize over components and the two modes can be mixed as well to parallelize over both, allowing the user to define an optimal splitting for their usecase. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11068
https://github.com/root-project/root/pull/11069:169,Deployability,update,updated,169,# This Pull request:. - TMVA Pythonizations; - Translations of TMVA tutorial files into Python. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11069
https://github.com/root-project/root/pull/11069:139,Testability,test,tested,139,# This Pull request:. - TMVA Pythonizations; - Translations of TMVA tutorial files into Python. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11069
https://github.com/root-project/root/issues/11071:5045,Availability,fault,fault,5045,"x00007fc428f761ec in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #32 0x00007fc428f14a66 in QApplicationPrivate::notify_helper(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #33 0x00007fc428f1e0f0 in QApplication::notify(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #34 0x00007fc4283a380a in QCoreApplication::notifyInternal2(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #35 0x00007fc42878c7d3 in QGuiApplicationPrivate::processMouseEvent(QWindowSystemInterfacePrivate::MouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #36 0x00007fc42878e10b in QGuiApplicationPrivate::processWindowSystemEvent(QWindowSystemInterfacePrivate::WindowSystemEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #37 0x00007fc42876835b in QWindowSystemInterface::sendWindowSystemEvents(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #38 0x00007fc4121c732e in () at /usr/lib/x86_64-linux-gnu/libQt5XcbQpa.so.5; #39 0x00007fc4269c117d in g_main_context_dispatch () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #40 0x00007fc4269c1400 in () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #41 0x00007fc4269c14a3 in g_main_context_iteration () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #42 0x00007fc4283fb435 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #43 0x00007fc4283a23ab in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #44 0x00007fc4283aa116 in QCoreApplication::exec() () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #45 0x00007fc42d2d32ad in G4UIQt::SessionStart() () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #46 0x00005623027898e4 in main (); ===========================================================. WARNING - Attempt to delete the physical volume store while geometry closed !; Segmentation fault (core dumped). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:479,Deployability,install,install,479,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:608,Deployability,install,install,608,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:730,Deployability,install,install,730,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:860,Deployability,install,install,860,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:966,Deployability,install,install,966,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:1089,Deployability,install,install,1089,"vent const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:1220,Deployability,install,install,1220,"sitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #23 0x00007fc4290fe5fe in QToolButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/lib",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:1369,Deployability,install,install,1369,"t const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #23 0x00007fc4290fe5fe in QToolButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #24 0x00007fc428f572b6 in QWidget::event(QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #25 0x00007fc4290fe6a8",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:1493,Deployability,install,install,1493,"home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #23 0x00007fc4290fe5fe in QToolButton::mouseReleaseEvent(QMouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #24 0x00007fc428f572b6 in QWidget::event(QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #25 0x00007fc4290fe6a8 in QToolButton::event(QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #26 0x00007fc428f14a66 in QApplicationPrivate::notif",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:4825,Deployability,install,install,4825,"x00007fc428f761ec in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #32 0x00007fc428f14a66 in QApplicationPrivate::notify_helper(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #33 0x00007fc428f1e0f0 in QApplication::notify(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #34 0x00007fc4283a380a in QCoreApplication::notifyInternal2(QObject*, QEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #35 0x00007fc42878c7d3 in QGuiApplicationPrivate::processMouseEvent(QWindowSystemInterfacePrivate::MouseEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #36 0x00007fc42878e10b in QGuiApplicationPrivate::processWindowSystemEvent(QWindowSystemInterfacePrivate::WindowSystemEvent*) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #37 0x00007fc42876835b in QWindowSystemInterface::sendWindowSystemEvents(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5; #38 0x00007fc4121c732e in () at /usr/lib/x86_64-linux-gnu/libQt5XcbQpa.so.5; #39 0x00007fc4269c117d in g_main_context_dispatch () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #40 0x00007fc4269c1400 in () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #41 0x00007fc4269c14a3 in g_main_context_iteration () at /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0; #42 0x00007fc4283fb435 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #43 0x00007fc4283a23ab in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #44 0x00007fc4283aa116 in QCoreApplication::exec() () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #45 0x00007fc42d2d32ad in G4UIQt::SessionStart() () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #46 0x00005623027898e4 in main (); ===========================================================. WARNING - Attempt to delete the physical volume store while geometry closed !; Segmentation fault (core dumped). ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/issues/11071:150,Safety,Detect,DetectorConstruction,150,"```; 6 0x00007fc41ee3de62 in Fatima::ReadSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSFatima.so; #7 0x00007fc42d774f3d in DetectorConstruction::ReadAllSensitive(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #8 0x00007fc42d756444 in EventAction::EndOfEventAction(G4Event const*) () at /home/apal/nptool/NPSimulation/lib/libNPSCore.so; #9 0x00007fc42b8aaf23 in G4EventManager::DoProcessing(G4Event*) () at /home/apal/G4/geant4-install/lib/libG4event.so; #10 0x00007fc42d2240f7 in G4RunManager::DoEventLoop(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #11 0x00007fc42d221d22 in G4RunManager::BeamOn(int, char const*, int) () at /home/apal/G4/geant4-install/lib/libG4run.so; #12 0x00007fc42d23fb27 in G4RunMessenger::SetNewValue(G4UIcommand*, G4String) () at /home/apal/G4/geant4-install/lib/libG4run.so; #13 0x00007fc42d14f35f in G4UIcommand::DoIt(G4String) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #14 0x00007fc42d16cc9a in G4UImanager::ApplyCommand(char const*) () at /home/apal/G4/geant4-install/lib/libG4intercoms.so; #15 0x00007fc42d2e28bf in G4VBasicShell::ExecuteCommand(G4String const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #16 0x00007fc42d2e7afe in G4VBasicShell::ApplyShellCommand(G4String const&, bool&, bool&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #17 0x00007fc42d2daac4 in G4UIQt::ButtonCallback(QString const&) () at /home/apal/G4/geant4-install/lib/libG4interfaces.so; #18 0x00007fc4283cf328 in QMetaObject::activate(QObject*, int, int, void**) () at /usr/lib/x86_64-linux-gnu/libQt5Core.so.5; #19 0x00007fc428f0e3e6 in QAction::triggered(bool) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #20 0x00007fc428f10aa2 in QAction::activate(QAction::ActionEvent) () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #21 0x00007fc42900ae10 in () at /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5; #22 0x00007fc42900b035 in QAbstractButton::mouseRele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11071
https://github.com/root-project/root/pull/11074:31,Deployability,integrat,integrator,31,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:180,Deployability,Configurat,Configuration,180,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:338,Deployability,integrat,integrator,338,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:349,Deployability,configurat,configuration,349,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:417,Deployability,configurat,configuration,417,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:510,Deployability,integrat,integrator,510,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:545,Deployability,configurat,configuration,545,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:31,Integrability,integrat,integrator,31,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:197,Integrability,Depend,Depends,197,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:338,Integrability,integrat,integrator,338,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:510,Integrability,integrat,integrator,510,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:42,Modifiability,config,config,42,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:180,Modifiability,Config,Configuration,180,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:349,Modifiability,config,configuration,349,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:417,Modifiability,config,configuration,417,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:521,Modifiability,config,config,521,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11074:545,Modifiability,config,configuration,545,"If you print a default numeric integrator config object, it will tell; you for the RooImproperIntegrator1D:. ```; *** RooImproperIntegrator1D ***; Capabilities: [1-D] [OpenEnded]; Configuration:; (Depends on 'RooIntegrator1D'); ```. However, in almost all of the code branches, it does not use the; `RooIntegrator1D` of the given numeric integrator configuration, but; falls back to the default by not forwarding the configuration to the; created `RooIntegrator1D`. This commit fixes that, copying the correct integrator config to create; a new configuration object with the required summation rule for the; `RooIntegrator1D`. Closes https://github.com/root-project/root/issues/11067.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11074
https://github.com/root-project/root/pull/11076:19,Deployability,patch,patches,19,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11076
https://github.com/root-project/root/pull/11076:207,Deployability,patch,patch,207,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11076
https://github.com/root-project/root/pull/11076:27,Integrability,wrap,wraps,27,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11076
https://github.com/root-project/root/pull/11076:195,Testability,test,tested,195,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11076
https://github.com/root-project/root/pull/11076:242,Testability,test,tests,242,"The previous cling patches wraps `DeferredDeclsToEmit(vector<GlobalDecl>)`; into a struct that contains a `llvm::GlobalVlaue`, but it seems that this; field is useless and can be dropped. I have tested this patch in Cling and; spotted no new tests failing, so let's give ROOT a try. Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11076
https://github.com/root-project/root/pull/11077:173,Deployability,install,install,173,"# This Pull request:. ## Changes or fixes:. Adds an option to the `ROOT_STANDARD_LIBRARY_PACKAGE` macro to allow renaming libraries with sub-optimal names (e.g. libGui). On install, it will symlink from the legacy name to the new name (e.g. libGui.so -> libROOTGui.so). This is still a draft with a proof of concept. The libraries have not been renamed yet and it is not optional at the moment (requires for Windows and nice to have for distributions). ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary); - [ ] make it optional; - [ ] prefix all libraries with ROOT. This PR fixes #10985.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11077
https://github.com/root-project/root/pull/11077:504,Deployability,update,updated,504,"# This Pull request:. ## Changes or fixes:. Adds an option to the `ROOT_STANDARD_LIBRARY_PACKAGE` macro to allow renaming libraries with sub-optimal names (e.g. libGui). On install, it will symlink from the legacy name to the new name (e.g. libGui.so -> libROOTGui.so). This is still a draft with a proof of concept. The libraries have not been renamed yet and it is not optional at the moment (requires for Windows and nice to have for distributions). ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary); - [ ] make it optional; - [ ] prefix all libraries with ROOT. This PR fixes #10985.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11077
https://github.com/root-project/root/pull/11077:474,Testability,test,tested,474,"# This Pull request:. ## Changes or fixes:. Adds an option to the `ROOT_STANDARD_LIBRARY_PACKAGE` macro to allow renaming libraries with sub-optimal names (e.g. libGui). On install, it will symlink from the legacy name to the new name (e.g. libGui.so -> libROOTGui.so). This is still a draft with a proof of concept. The libraries have not been renamed yet and it is not optional at the moment (requires for Windows and nice to have for distributions). ## Checklist:. - [ ] tested changes locally; - [x] updated the docs (if necessary); - [ ] make it optional; - [ ] prefix all libraries with ROOT. This PR fixes #10985.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11077
https://github.com/root-project/root/pull/11078:188,Deployability,update,updated,188,Implemented pythonization to RDF Define.; Define can now directly accept a python callable.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11078
https://github.com/root-project/root/pull/11078:158,Testability,test,tested,158,Implemented pythonization to RDF Define.; Define can now directly accept a python callable.; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11078
https://github.com/root-project/root/pull/11079:927,Safety,safe,safer,927,"Copy assignment for RooAbsArgs was implemented in an unexpected and; inconsistent way. While one would expect that the copy assignment is; copying the object, it said in the documentation of; `RooAbsArg::operator=` that it will ""assign all boolean and string; properties of the original bject. Transient properties and client-server; links are not assigned."" This contradicted with the implementation,; where the server links were actually copied too. Indeed it is; questionable that adding also the servers of the `other` RooAbsArg makes; sense when the proxies are not changed. There was also a memory leak of the `_ownedComponents`, because; `_ownedComponents` got reset to `nullptr` without deleting the; pointed-to owned collection. Furthermore, in `RooAbsRealLValue`, the assigment operator was; overloaded by a function that only assigns the value of another; `RooAbsReal`. With all these inconsistencies, it was deemed safer to disable copy; assignment of RooAbsArgs from now on.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11079
https://github.com/root-project/root/issues/11080:302,Deployability,patch,patch,302,"Would it be possible to backport:. https://github.com/root-project/root/pull/11060 (already merged into [root-project:master]) ; (from what I understand a followup PR is also needed). to the v6.24 branch, and retag a new version of ROOT after that is done. ; This would use use it as part of a LCG 101 patch release. Many thanks. FYI @andresailer @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11080
https://github.com/root-project/root/issues/11080:308,Deployability,release,release,308,"Would it be possible to backport:. https://github.com/root-project/root/pull/11060 (already merged into [root-project:master]) ; (from what I understand a followup PR is also needed). to the v6.24 branch, and retag a new version of ROOT after that is done. ; This would use use it as part of a LCG 101 patch release. Many thanks. FYI @andresailer @bellenot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11080
https://github.com/root-project/root/pull/11086:136,Deployability,update,updated,136,# This Pull request: Adds the Shape ONNX Operator with the corresponding unit tests. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11086
https://github.com/root-project/root/pull/11086:78,Testability,test,tests,78,# This Pull request: Adds the Shape ONNX Operator with the corresponding unit tests. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11086
https://github.com/root-project/root/pull/11086:106,Testability,test,tested,106,# This Pull request: Adds the Shape ONNX Operator with the corresponding unit tests. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11086
https://github.com/root-project/root/pull/11089:203,Deployability,patch,patch,203,"In a synthetic benchmark that only fills a single histogram for; which no binning was provided (i.e. the case in which; BufferedFillHelper gets used), these are sample runtimes on my; laptop before this patch:. ```; 0 3735; 1 3742; 2 3534; 4 3191; 8 2733; 16 1725; ```. and after:; ```; 0 3552; 1 3876; 2 2466; 4 1696; 8 1202; 16 1038; ```. where over 8 threads hyper-threading kicks in and 0 threads means; no `EnableImplicitMT()` at all.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11089
https://github.com/root-project/root/pull/11089:15,Testability,benchmark,benchmark,15,"In a synthetic benchmark that only fills a single histogram for; which no binning was provided (i.e. the case in which; BufferedFillHelper gets used), these are sample runtimes on my; laptop before this patch:. ```; 0 3735; 1 3742; 2 3534; 4 3191; 8 2733; 16 1725; ```. and after:; ```; 0 3552; 1 3876; 2 2466; 4 1696; 8 1202; 16 1038; ```. where over 8 threads hyper-threading kicks in and 0 threads means; no `EnableImplicitMT()` at all.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11089
https://github.com/root-project/root/pull/11092:61,Energy Efficiency,allocate,allocated,61,"In quite a few places in RooFit, TFile objects were manually allocated; but not deleted afterwards.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11092
https://github.com/root-project/root/pull/11093:267,Availability,error,errors,267,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11093
https://github.com/root-project/root/pull/11093:293,Availability,error,errors,293,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11093
https://github.com/root-project/root/pull/11093:277,Safety,avoid,avoid,277,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11093
https://github.com/root-project/root/pull/11093:238,Testability,log,logging,238,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11093
https://github.com/root-project/root/pull/11093:260,Testability,log,logged,260,"The RooAbsPdf version number is incremented, going with the removal of; some unused data members:. * `_rawValue`; * `_traceCount`; * `_negCount`. Furthermore, the `_errorCount` member is now made transient, because it; is only related to logging, counting the logged errors to avoid printing; errors them repeatedly.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11093
https://github.com/root-project/root/pull/11094:173,Deployability,update,updated,173,# This Pull request:; Adds a unit test for testing the use of Geant4 units when creating materials. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11094
https://github.com/root-project/root/pull/11094:34,Testability,test,test,34,# This Pull request:; Adds a unit test for testing the use of Geant4 units when creating materials. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11094
https://github.com/root-project/root/pull/11094:43,Testability,test,testing,43,# This Pull request:; Adds a unit test for testing the use of Geant4 units when creating materials. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11094
https://github.com/root-project/root/pull/11094:143,Testability,test,tested,143,# This Pull request:; Adds a unit test for testing the use of Geant4 units when creating materials. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11094
https://github.com/root-project/root/pull/11096:230,Security,access,accessing,230,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096
https://github.com/root-project/root/pull/11096:288,Testability,test,tests,288,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096
https://github.com/root-project/root/pull/11096:511,Testability,test,tests,511,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096
https://github.com/root-project/root/pull/11096:534,Testability,test,test,534,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096
https://github.com/root-project/root/pull/11096:599,Testability,test,test,599,These changes backport the commits that add numba support in cppyy master to PyROOT. It currently supports passing objects to C++ functions and returning builtin types from the functions inside numba JIT'ed code. It also supports accessing data members and methods from class types. The [tests added](https://github.com/sudo-panda/roottest/compare/502450f83a346aa1267fc4f48b6d749fa6038611..numba) can also be used to understand the support that is provided through this PR. ## Checklist:. - [ ] Pass all python tests in `roottest` (1 test failing - `roottest-python-memory-memory`); - [ ] Add numba test to `roottest`,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11096
https://github.com/root-project/root/pull/11097:95,Deployability,update,updated,95,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11097
https://github.com/root-project/root/pull/11097:65,Testability,test,tested,65,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11097
https://github.com/root-project/root/pull/11098:231,Deployability,update,updated,231,"# This Pull request: Improves the download_llvm_binary function . ## Changes or fixes: Added LLVM 13 support, fixed the binary flags, and fixed the llvm_config_path and llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11098
https://github.com/root-project/root/pull/11098:200,Testability,test,tested,200,"# This Pull request: Improves the download_llvm_binary function . ## Changes or fixes: Added LLVM 13 support, fixed the binary flags, and fixed the llvm_config_path and llvm_dir. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11098
https://github.com/root-project/root/issues/11099:219,Availability,avail,available,219,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:279,Availability,down,down,279,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:2141,Deployability,release,release,2141,"in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""). if __name__ == ""__main__"":; main(); ```; just setup ROOT from a LCG release and run it, it will print memory use on each iteration, for me it grows by ~35MB on each loop. ### Setup; Tested this with ROOT 6.24.06 from LCG_101 and ROOT 6.26.04 from LCG_102 on CentOS7 host (x86_64-centos7-gcc11-opt). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:1031,Testability,test,testfile,1031,". ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:1064,Testability,test,test,1064," which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""). if __name_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:2255,Testability,Test,Tested,2255,"in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={vms_mb} MB. Delta RSS={rss_delta_mb:.2f} MB VMS={vms_delta_mb:.2f} MB""). if __name__ == ""__main__"":; main(); ```; just setup ROOT from a LCG release and run it, it will print memory use on each iteration, for me it grows by ~35MB on each loop. ### Setup; Tested this with ROOT 6.24.06 from LCG_101 and ROOT 6.26.04 from LCG_102 on CentOS7 host (x86_64-centos7-gcc11-opt). ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/issues/11099:814,Usability,simpl,simple,814,"- [X] Checked for duplicates. ### Describe the bug; We have a long-running service which reads some information from ROOT files and we have noticed that this service regularly grows its memory use until it consumes all available memory and gets killed. I think I have tracked it down to reading one particular object type `TMap`. We have relatively large `TMap` object stored in files, the key in TMap is `TObjString` and values are `TObjArray` of `TObjString`. Every time when TMap is read from a file the memory use grows dramatically by many megabytes, even though the Python object is discarded almost immediately after use. ### Expected behavior; Memory use should not grow indefinitely, memory should be deallocated when Python object is destroyed. ### To Reproduce; I managed to reproduce this issue with a simple script, attached here:; ```python; import os; import tempfile. import psutil; import ROOT. def main():. proc = psutil.Process(). with tempfile.TemporaryDirectory() as tmpdir:. file_name = os.path.join(tmpdir, ""testfile.root""); print(""Creating test root file"", file_name); _make_file_with_tmap(file_name). mem0 = proc.memory_info(); rootfile = ROOT.TFile.Open(file_name, ""READ""); while True:. ann_obj = rootfile.Get(""annotations""); # ann_obj.DeleteAll() # DeleteAll seems to slow leak but not 100%; del ann_obj. mem1 = proc.memory_info(); _memstat(mem0, mem1); mem0 = mem1. def _make_file_with_tmap(file_name):. rootfile = ROOT.TFile.Open(file_name, ""RECREATE""). map = ROOT.TMap(). for i in range(50_000):. key = ROOT.TObjString(""long_histogram_name_"" * 10 + str(i)); value = ROOT.TObjArray(); value.Add(ROOT.TObjString(""annotation"")); value.Add(ROOT.TObjString(f""10000"")); map.Add(key, value). rootfile.WriteTObject(map, ""annotations""); rootfile.Close(). def _memstat(mem0, mem1):; MB = 1024 * 1024; rss_mb = mem1.rss // MB; vms_mb = mem1.vms // MB; rss_delta_mb = (mem1.rss - mem0.rss) / MB; vms_delta_mb = (mem1.vms - mem0.vms) / MB; print(f""Memory stat: RSS={rss_mb} MB, VMS={v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11099
https://github.com/root-project/root/pull/11102:150,Deployability,configurat,configurations,150,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:190,Deployability,Integrat,Integrates,190,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:320,Deployability,install,installed,320,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:437,Deployability,update,updated,437,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:190,Integrability,Integrat,Integrates,190,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:150,Modifiability,config,configurations,150,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:99,Performance,throughput,throughputs,99,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:91,Testability,test,testing,91,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:344,Testability,test,test,344,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11102:407,Testability,test,tested,407,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11102
https://github.com/root-project/root/pull/11103:374,Deployability,update,updated,374,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11103
https://github.com/root-project/root/pull/11103:344,Testability,test,tested,344,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11103
https://github.com/root-project/root/pull/11104:374,Deployability,update,updated,374,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11104
https://github.com/root-project/root/pull/11104:344,Testability,test,tested,344,…… (#11060). * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. * Fix computation of the radiation length and nuclear interaction length when ROOT uses G4 units. (cherry picked from commit 103bb7e4d930b4921debceec6ad7d418bacae4fc). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11080,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11104
https://github.com/root-project/root/pull/11107:356,Usability,clear,clear,356,"It happens often that you want to create a RooDataHist just to serve a; RooHistPdf or a RooHistFunc. In this case, it is convenient for the; HistPdf/HistFunc to take ownership of the RooDataHist. The cleanest way to implement this is probably via additional; constructors that take the RooDataHist via `std::unique_ptr`, such that; the ownership is always clear. A new transient member of; HistPdf/HistFunc is then taking over the ownership. With this change, it is easy to fix one of the remaining memory leaks in; the RooLagrangianMorphFunc. I second commit in this PR applies also some general code modernization to RooHistPdf and RooHistFunc.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11107
https://github.com/root-project/root/pull/11108:254,Testability,test,test,254,"Before this PR, the lambda passed to VecOps::Map could not; take arguments by non-const reference as the implementation was; adding a const qualifier to the RVec arguments. We now instead forward RVecs from Map to MapImpl keeping their; cv qualifiers. A test has been added.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11108
https://github.com/root-project/root/pull/11111:191,Modifiability,variab,variable,191,"In the `rootcint` command defined in `RootMacros.cmake`, the; `COMPILE_DEFINITIONS` from the target are forwarded as compiler flags. The `COMPILE_DEFINITIONS` are stored in the `module_defs` variable with; a generator expression:. ```; set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>); ```. Then, the definitions are added to the rootcint command with this; expression:. ```; ""$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ```. This code was almost copied exactly from the CMake documentation; example:. https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html. In particular, the `BOOL` check makes sure that the if the target; property is empty, we will not get a bare `-D` with nothing after it,; corrupting the rootcint command. However, there is no protection against the case where the; `COMPILE_DEFINITIONS` target property is not empty, but its elements are; empty strings! This happened to me in my recent build. Instead of trying to figure out where the empty strings are added to the; `COMPILE_DEFINITIONS`, it is better to also protect against empty target; property elements in the CMake generator expressions, which is; implemented in this commit. This PR is backported in https://github.com/root-project/root/pull/11132.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11111
https://github.com/root-project/root/issues/11112:1906,Availability,error,error,1906,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11112
https://github.com/root-project/root/issues/11112:1959,Availability,Error,Error,1959,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11112
https://github.com/root-project/root/issues/11112:2244,Availability,Error,Error,2244,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11112
https://github.com/root-project/root/issues/11112:2491,Availability,error,error,2491,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11112
https://github.com/root-project/root/issues/11112:2533,Availability,Error,Error,2533,"ma(""sigma"", ""sigma"", 5, 1, 100);; RooRealVar alphaL(""alphaL"", ""alphaL"", 1.05, 0.1, 10);; RooRealVar alphaR(""alphaR"", ""alphaR"", 1.3, 0.1, 10);; RooRealVar nL(""nL"", ""nL"", 5, 0.1, 10);; RooRealVar nR(""nR"", ""nR"", 2, 0.1, 10);. auto resetParameters = [&]() {; x0.setVal(80.0);; sigma.setVal(3.0);; alphaL.setVal(1.0);; alphaR.setVal(1.0);; nL.setVal(3.0);; nR.setVal(3.0);. x0.setError(0.0);; sigma.setError(0.0);; alphaL.setError(0.0);; alphaR.setError(0.0);; nL.setError(0.0);; nR.setError(0.0);; };. RooCrystalBall cb{""cb"", ""cb"", x, x0, sigma, sigma, alphaL, nL, alphaR, nR};. std::size_t nEvents = 1000;. std::unique_ptr<RooDataSet> data{cb.generate(x, nEvents)};. resetParameters();; FitResPtr res0{cb.fitTo(*data, PrintLevel(-1), Save(1))};; res0->Print();. resetParameters();; FitResPtr res1{cb.fitTo(*data, PrintLevel(-1), Save(1), SumW2Error(true))};; res1->Print();. resetParameters();; FitResPtr res2{cb.fitTo(*data, PrintLevel(-1), Save(1), AsymptoticError(true))};; res2->Print();; ```. The output will be as follows, with the current ROOT master:; ```. No error correction:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.47e-02; alphaR 2.3792e-01 +/- 5.51e-02; nL 1.0000e+01 +/- 6.13e+00; nR 5.1244e+00 +/- 2.23e+00; sigma 1.0000e+00 +/- 1.95e-01; x0 9.0956e+01 +/- 2.93e-01. SumW2Error():. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 2.28e-02; alphaR 2.3794e-01 +/- 5.85e-02; nL 1.0000e+01 +/- 1.47e-02; nR 5.1241e+00 +/- 2.48e+00; sigma 1.0000e+00 +/- 1.43e-03; x0 9.0957e+01 +/- 3.00e-01. Asymptotic error:. Floating Parameter FinalValue +/- Error ; -------------------- --------------------------; alphaL 1.7354e-01 +/- 8.94e-02; alphaR 2.3794e-01 +/- 3.91e-01; nL 1.0000e+01 +/- 1.10e-04; nR 5.1241e+00 +/- 1.72e+01; sigma 1.0000e+00 +/- 5.90e-03; x0 9.0957e+01 +/- 1.20e+00. ```. ### Setup. ROOT master on Arch Linux. ### Additional context. None.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11112
https://github.com/root-project/root/pull/11113:707,Deployability,update,updated,707,"# This Pull request:. ## Changes or fixes:; The actual calculation of the Hessian / covariance matrix done by MnHesse was contained to a single function. Since the only needed internal state was the `MnStrategy` object, it was easy to turn this calculation function into a static member function. The implementation of the ""internal interface"" (previously the calculation function) now forwards its call to a static class member `std::function` object. By default, this object is set to be the now-static calculation function. However, this `std::function` object is public, so users can easily replace it with any Hessian calculator function they prefer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11113
https://github.com/root-project/root/pull/11113:333,Integrability,interface,interface,333,"# This Pull request:. ## Changes or fixes:; The actual calculation of the Hessian / covariance matrix done by MnHesse was contained to a single function. Since the only needed internal state was the `MnStrategy` object, it was easy to turn this calculation function into a static member function. The implementation of the ""internal interface"" (previously the calculation function) now forwards its call to a static class member `std::function` object. By default, this object is set to be the now-static calculation function. However, this `std::function` object is public, so users can easily replace it with any Hessian calculator function they prefer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11113
https://github.com/root-project/root/pull/11113:677,Testability,test,tested,677,"# This Pull request:. ## Changes or fixes:; The actual calculation of the Hessian / covariance matrix done by MnHesse was contained to a single function. Since the only needed internal state was the `MnStrategy` object, it was easy to turn this calculation function into a static member function. The implementation of the ""internal interface"" (previously the calculation function) now forwards its call to a static class member `std::function` object. By default, this object is set to be the now-static calculation function. However, this `std::function` object is public, so users can easily replace it with any Hessian calculator function they prefer. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11113
https://github.com/root-project/root/pull/11114:85,Safety,safe,safer,85,This is part of the effort of making memory management in RooFit more; automatic and safer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11114
https://github.com/root-project/root/pull/11115:487,Deployability,update,updated,487,# This Pull request:; Fix to compute radiation length on call TGeoMixture::ComputeDerivedQuantities(); The call leads to wrong results if the TGeoManager was created before the ; TGeo units change. This was not detected by the test previously prepared; for PR https://github.com/root-project/root/pull/11060. ## Changes or fixes:; Fix to call TGeoMixture::ComputeRadiationLength() to take into account the correct; unit normalizations. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11060,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11115
https://github.com/root-project/root/pull/11115:211,Safety,detect,detected,211,# This Pull request:; Fix to compute radiation length on call TGeoMixture::ComputeDerivedQuantities(); The call leads to wrong results if the TGeoManager was created before the ; TGeo units change. This was not detected by the test previously prepared; for PR https://github.com/root-project/root/pull/11060. ## Changes or fixes:; Fix to call TGeoMixture::ComputeRadiationLength() to take into account the correct; unit normalizations. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11060,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11115
https://github.com/root-project/root/pull/11115:227,Testability,test,test,227,# This Pull request:; Fix to compute radiation length on call TGeoMixture::ComputeDerivedQuantities(); The call leads to wrong results if the TGeoManager was created before the ; TGeo units change. This was not detected by the test previously prepared; for PR https://github.com/root-project/root/pull/11060. ## Changes or fixes:; Fix to call TGeoMixture::ComputeRadiationLength() to take into account the correct; unit normalizations. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11060,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11115
https://github.com/root-project/root/pull/11115:457,Testability,test,tested,457,# This Pull request:; Fix to compute radiation length on call TGeoMixture::ComputeDerivedQuantities(); The call leads to wrong results if the TGeoManager was created before the ; TGeo units change. This was not detected by the test previously prepared; for PR https://github.com/root-project/root/pull/11060. ## Changes or fixes:; Fix to call TGeoMixture::ComputeRadiationLength() to take into account the correct; unit normalizations. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #11060,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11115
https://github.com/root-project/root/pull/11116:12,Deployability,patch,patch,12,"Before this patch (and since a2156969b4), Snapshot was enforcing; alphabetical ordering of the output branches. The ordering; specified as argument, however, could carry meaning: it might; make sense to have branches carrying related physics information; close together in the TTree so that they appear close to each; other e.g. in TTree::Print or in TBrowser. With this patch we keep the original column ordering (the one; explicitly specified by the user or the one coming from TTree); when creating output branches. One exception are branches from the input TTree that are; Redefine'd in case of auto-generated lists of output columns:; Define'd and Redefine'd columns appear before TTree branches,; which might move the position of branches that have been; Redefine'd with respect to others that have not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11116
https://github.com/root-project/root/pull/11116:371,Deployability,patch,patch,371,"Before this patch (and since a2156969b4), Snapshot was enforcing; alphabetical ordering of the output branches. The ordering; specified as argument, however, could carry meaning: it might; make sense to have branches carrying related physics information; close together in the TTree so that they appear close to each; other e.g. in TTree::Print or in TBrowser. With this patch we keep the original column ordering (the one; explicitly specified by the user or the one coming from TTree); when creating output branches. One exception are branches from the input TTree that are; Redefine'd in case of auto-generated lists of output columns:; Define'd and Redefine'd columns appear before TTree branches,; which might move the position of branches that have been; Redefine'd with respect to others that have not.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11116
https://github.com/root-project/root/pull/11117:333,Availability,failure,failures,333,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:728,Availability,failure,failure,728,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:661,Deployability,release,releases,661,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:685,Energy Efficiency,sustainab,sustainable,685,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:791,Integrability,interface,interfaces,791,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:273,Testability,assert,assertions,273,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:323,Testability,assert,assertion,323,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:644,Testability,test,tested,644,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:718,Testability,assert,assertion,718,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:541,Usability,clear,clearly,541,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11117:742,Usability,simpl,simply,742,"The `computeCategoryOldStyle` function in the RooMultiCategory class; gave wrong results in case the multi-category uses categories where the; ordinal number of the category doesn't match the category index. Since the `computeCategoryOldStyle` function was still used for; assertions in debug mode, this caused unnecessary assertion failures as; reported on the forum:. https://root-forum.cern.ch/t/roorealvar-setbinning-with-name-in-pyroot/51069. The code in the forum, together with some added printouts in; `RooMultiCategory::evaluate()` clearly demonstrated that the old-style; implementation is wrong. As the new implementation is already tested for a few releases now, the; most sustainable way to fix the wrong assertion failure is to simply; remove the comparison with the old-style interfaces in debug builds. Since after this change, the `RooMultiCatIter` is only used for the deprecated; `RooSuperCategory::MakeIterator()`, this PR also suggests to remove that; deprecated function together with the `RooMultiCatIter`. This is kind of a followup to https://github.com/root-project/root/pull/5502.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11117
https://github.com/root-project/root/pull/11121:11,Energy Efficiency,reduce,reduce,11,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11121
https://github.com/root-project/root/pull/11121:175,Energy Efficiency,reduce,reduce,175,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11121
https://github.com/root-project/root/pull/11121:305,Modifiability,refactor,refactoring,305,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11121
https://github.com/root-project/root/pull/11121:132,Testability,log,logic,132,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11121
https://github.com/root-project/root/pull/11121:236,Testability,benchmark,benchmark,236,"This is to reduce the amount of code generated for every separate; RInterface instantiation. The PR should not otherwise modify any logic or functionality. I hoped this would reduce compile times of RDF-heavy code, but on an artificial benchmark the changes have little to no effect. This might be a good refactoring to have nonetheless. What do people think?. In order to minimize conflicts with other PRs, this must be merged after:. - https://github.com/root-project/root/pull/11314; - https://github.com/root-project/root/pull/11307; - https://github.com/root-project/root/pull/11306; - https://github.com/root-project/root/pull/11149",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11121
https://github.com/root-project/root/pull/11123:175,Integrability,interface,interface,175,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11123
https://github.com/root-project/root/pull/11123:23,Modifiability,variab,variable,23,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11123
https://github.com/root-project/root/pull/11123:312,Modifiability,extend,extending,312,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11123
https://github.com/root-project/root/pull/11123:2,Safety,Avoid,Avoid,2,"* Avoid coning of plot variable twice then plotting a `RooAbsReal`, as the new BatchMode doesn't like model cloning; * Some minor fixes in `BatchModeHelpers`; * Improving the interface of `RooAbsReal::createPlotProjection`; * Use also the different BatchMode backends in the `createNLL` calls in `stressRooFit`, extending text coverage also to (profile) likelihood scans with the new BatchMode. The likelihood scans in the tutorials are up to 10 times faster now when using the new BatchMode compared to RooFit legacy. More detail can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11123
https://github.com/root-project/root/issues/11124:261,Availability,error,error,261,"There is a missing include in `df103_NanoAODHiggsAnalysis.C`. Trying to compile gives:; ```; $ g++ -g -Wall -Wextra -Wpedantic -O2 -o h higgs.cpp $(root-config --cflags --libs); higgs.cpp: In function 'void df103_NanoAODHiggsAnalysis(bool)':; higgs.cpp:459:15: error: 'RunGraphs' is not a member of 'ROOT::RDF'; 459 | ROOT::RDF::RunGraphs({df_h_sig_4mu, df_h_bkg_4mu, df_h_data_4mu,; | ; ```; Quickfix: `#include <ROOT/RDFHelpers.hxx>`. Also, currently I get the following warnings:; ```; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11124
https://github.com/root-project/root/issues/11124:153,Modifiability,config,config,153,"There is a missing include in `df103_NanoAODHiggsAnalysis.C`. Trying to compile gives:; ```; $ g++ -g -Wall -Wextra -Wpedantic -O2 -o h higgs.cpp $(root-config --cflags --libs); higgs.cpp: In function 'void df103_NanoAODHiggsAnalysis(bool)':; higgs.cpp:459:15: error: 'RunGraphs' is not a member of 'ROOT::RDF'; 459 | ROOT::RDF::RunGraphs({df_h_sig_4mu, df_h_bkg_4mu, df_h_data_4mu,; | ; ```; Quickfix: `#include <ROOT/RDFHelpers.hxx>`. Also, currently I get the following warnings:; ```; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ...; Warning in <TCanvas::Constructor>: Deleting canvas with same name: c; ```. CC: @eguiraud",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11124
https://github.com/root-project/root/pull/11125:73,Usability,clear,clearer,73,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11125
https://github.com/root-project/root/pull/11125:176,Usability,clear,clearer,176,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11125
https://github.com/root-project/root/pull/11125:521,Usability,guid,guidelines,521,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11125
https://github.com/root-project/root/pull/11125:1368,Usability,clear,clear,1368,"This PR changes names such as `ROOT::RDF::MakeCsvDataFrame` to the nicer/clearer convention `ROOT::RDF::FromCSV`, deprecating the previous spellings. Although what's nicer and clearer is generally subjective, I think there is strong enough evidence in this case to warrant the change: . - https://root-forum.cern.ch/t/makenumpydataframe-function-name/50566; - the `FromXXX` naming convention is already widespread across libraries and programming languages (e.g. [rust naming conventions](https://rust-lang.github.io/api-guidelines/naming.html#naming), [pandas](https://pandas.pydata.org/pandas-docs/stable/reference/frame.html#serialization-io-conversion); - the current naming convention does not work for factory functions that we might want in the future such as `ROOT::RDF::FromJSONDatasetSpec` (`MakeJSONDatasetSpecDataFrame`, `MakeJSONDataFrame`?). ### To do. - [x] check with @jblomer that moving `ROOT::Experimental::MakeNTupleDataFrame` to `ROOT::RDF::Experimental::FromNTuple` (not the change of namespace) is ok; - [x] rename `ROOT.RDF.MakeNumpyDataFrame` to `ROOT.RDF.FromNumpy`: @etejedor how do I deprecate a Python-only method?; - [x] `FromCSV` vs `FromCsv` -- I think it should be `CSV`, just like we already have [`TBufferJSON::FromJSON`](https://root.cern/doc/master/classTBufferJSON.html#abefb8455a4514bc7ea5e722ebd2dc203). P.S.; in case it wasn't clear, this is basically a RFC :)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11125
https://github.com/root-project/root/issues/11128:664,Availability,Error,Error,664,"- [x] Checked for duplicates. When using clang trunk to build ROOT (main branch), it fails due to `case value is not a constant expression`. ```; ❯ clang --version; clang version 16.0.0 (https://github.com/llvm/llvm-project/ dde41c6c560b67165c7ac884815cd50fdce446f8); Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /home/jun/opt/clang/bin; ```. cmake commands:; ```; cmake -DCMAKE_BUILD_TYPE=Debug \; -DCMAKE_EXPORT_COMPILE_COMMANDS=YES \; -DCMAKE_C_COMPILER=clang \; -DCMAKE_CXX_COMPILER=clang++ \; -DCMAKE_EXE_LINKER_FLAGS=""-fuse-ld=lld"" \; -GNinja .. ```; System info:; I have tried Ubuntu 22 and WSL (Ubuntu 20) and got the same results. Error message:; ```; FAILED: io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o ; /home/jun/opt/clang/bin/clang++ -I/home/jun/dev/root/io/io/inc -I/home/jun/dev/root/core/unix/inc -I/home/jun/dev/root/core/foundation/v7/inc -I/home/jun/dev/root/core/base/v7/inc -I/home/jun/dev/root/core/clingutils/inc -I/home/jun/dev/root/core/textinput/inc -I/home/jun/dev/root/core/thread/inc -I/home/jun/dev/root/core/zip/inc -I/home/jun/dev/root/core/rint/inc -I/home/jun/dev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:2060,Availability,error,error,2060,"ev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:2396,Availability,error,error,2396,"rrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:2743,Availability,error,error,2743,"es/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:3105,Availability,error,error,3105,"ectionStreamer.cxx:392:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:3492,Availability,error,error,3492,"amer.cxx:394:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:3828,Availability,error,error,3828,"ollectionStreamer.cxx:396:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStream",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:4175,Availability,error,error,4175,"/home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:398:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:4537,Availability,error,error,4537,"ectionStreamer.cxx:445:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:4924,Availability,error,error,4924,"amer.cxx:450:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:5260,Availability,error,error,5260,"ollectionStreamer.cxx:454:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX ob",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:5607,Availability,error,error,5607,"/home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:5969,Availability,error,error,5969,"r.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or a potential bug in ROOT we haven't discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:6295,Availability,error,errors,6295,"r.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or a potential bug in ROOT we haven't discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:6613,Availability,failure,failure,6613,"r.cxx:458:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: error: case value is not a constant expression; case EProperty(kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:867:18: note: integer value 536870912 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: error: case value is not a constant expression; case EProperty(kIsPointer | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:870:18: note: integer value 4097 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISSTRING):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:873:18: note: integer value 536875008 is outside the valid range of values [0, 63] for this enumeration type; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: error: case value is not a constant expression; case EProperty(kIsPointer | kBIT_ISTSTRING | kIsClass):; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx:876:18: note: integer value 1073745921 is outside the valid range of values [0, 63] for this enumeration type; 12 errors generated.; [4730/6768] Building CXX object io/io/CMakeFiles/RIO.dir/src/TBufferJSON.cxx.o; ninja: build stopped: subcommand failed.; ```. In addition, I found that the last time I build ROOT using clang trunk (before version 16), it was fine. So I guess there're some changes in the upstream that trigger this failure. However, I'm not sure if is it a false positive of clang diagnostic or a potential bug in ROOT we haven't discovered yet.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:323,Deployability,Install,InstalledDir,323,"- [x] Checked for duplicates. When using clang trunk to build ROOT (main branch), it fails due to `case value is not a constant expression`. ```; ❯ clang --version; clang version 16.0.0 (https://github.com/llvm/llvm-project/ dde41c6c560b67165c7ac884815cd50fdce446f8); Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /home/jun/opt/clang/bin; ```. cmake commands:; ```; cmake -DCMAKE_BUILD_TYPE=Debug \; -DCMAKE_EXPORT_COMPILE_COMMANDS=YES \; -DCMAKE_C_COMPILER=clang \; -DCMAKE_CXX_COMPILER=clang++ \; -DCMAKE_EXE_LINKER_FLAGS=""-fuse-ld=lld"" \; -GNinja .. ```; System info:; I have tried Ubuntu 22 and WSL (Ubuntu 20) and got the same results. Error message:; ```; FAILED: io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o ; /home/jun/opt/clang/bin/clang++ -I/home/jun/dev/root/io/io/inc -I/home/jun/dev/root/core/unix/inc -I/home/jun/dev/root/core/foundation/v7/inc -I/home/jun/dev/root/core/base/v7/inc -I/home/jun/dev/root/core/clingutils/inc -I/home/jun/dev/root/core/textinput/inc -I/home/jun/dev/root/core/thread/inc -I/home/jun/dev/root/core/zip/inc -I/home/jun/dev/root/core/rint/inc -I/home/jun/dev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/issues/11128:670,Integrability,message,message,670,"- [x] Checked for duplicates. When using clang trunk to build ROOT (main branch), it fails due to `case value is not a constant expression`. ```; ❯ clang --version; clang version 16.0.0 (https://github.com/llvm/llvm-project/ dde41c6c560b67165c7ac884815cd50fdce446f8); Target: x86_64-unknown-linux-gnu; Thread model: posix; InstalledDir: /home/jun/opt/clang/bin; ```. cmake commands:; ```; cmake -DCMAKE_BUILD_TYPE=Debug \; -DCMAKE_EXPORT_COMPILE_COMMANDS=YES \; -DCMAKE_C_COMPILER=clang \; -DCMAKE_CXX_COMPILER=clang++ \; -DCMAKE_EXE_LINKER_FLAGS=""-fuse-ld=lld"" \; -GNinja .. ```; System info:; I have tried Ubuntu 22 and WSL (Ubuntu 20) and got the same results. Error message:; ```; FAILED: io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o ; /home/jun/opt/clang/bin/clang++ -I/home/jun/dev/root/io/io/inc -I/home/jun/dev/root/core/unix/inc -I/home/jun/dev/root/core/foundation/v7/inc -I/home/jun/dev/root/core/base/v7/inc -I/home/jun/dev/root/core/clingutils/inc -I/home/jun/dev/root/core/textinput/inc -I/home/jun/dev/root/core/thread/inc -I/home/jun/dev/root/core/zip/inc -I/home/jun/dev/root/core/rint/inc -I/home/jun/dev/root/core/clib/inc -I/home/jun/dev/root/core/meta/inc -I/home/jun/dev/root/core/gui/inc -I/home/jun/dev/root/core/cont/inc -I/home/jun/dev/root/core/foundation/inc -I/home/jun/dev/root/core/base/inc -I/home/jun/dev/root/Build/ginclude -I/home/jun/dev/root/core/clib/res -I/home/jun/dev/root/builtins -fcolor-diagnostics -std=c++14 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -g -fPIC -std=c++14 -MD -MT io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -MF io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o.d -o io/io/CMakeFiles/RIO.dir/src/TGenCollectionStreamer.cxx.o -c /home/jun/dev/root/io/io/src/TGenCollectionStreamer.cxx; /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11128
https://github.com/root-project/root/pull/11129:118,Integrability,depend,depend,118,"In pass through mode, the RooRealIntegral should have registered the; function as a value server, because we directly depend on its value. It's important to do this correctly, because the new BatchMode uses the; value server interface to analyze the computation graph. Furthermore, it is now ensured that in pass-through mode, no servers are; registered other than the actual function and the additional factorized; observables. There are also some other commits to ensure no invalid proxies are created; via copy/move assignment and construction. Final commit in this PR does some code modernization of the RooRealIntegral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11129
https://github.com/root-project/root/pull/11129:225,Integrability,interface,interface,225,"In pass through mode, the RooRealIntegral should have registered the; function as a value server, because we directly depend on its value. It's important to do this correctly, because the new BatchMode uses the; value server interface to analyze the computation graph. Furthermore, it is now ensured that in pass-through mode, no servers are; registered other than the actual function and the additional factorized; observables. There are also some other commits to ensure no invalid proxies are created; via copy/move assignment and construction. Final commit in this PR does some code modernization of the RooRealIntegral.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11129
https://github.com/root-project/root/issues/11130:316,Availability,error,error,316,"from https://github.com/root-project/root/issues/11130#issuecomment-1207464193; ```; [ 91%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSumL.cxx.o; In file included from /build/root/src/root-6.26.06/graf3d/eve7/src/REveBoxSet.cxx:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1286,Availability,Error,Error,1286,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1585,Availability,Error,Error,1585,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1753,Availability,error,error,1753,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2110,Availability,error,error,2110,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2196,Availability,Error,Error,2196,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2203,Availability,Error,Error,2203,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1028,Deployability,upgrade,upgraded,1028,"ub.com/root-project/root/issues/11130#issuecomment-1207464193; ```; [ 91%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSumL.cxx.o; In file included from /build/root/src/root-6.26.06/graf3d/eve7/src/REveBoxSet.cxx:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1216,Deployability,Install,Install,1216,"src/root-6.26.06/graf3d/eve7/src/REveBoxSet.cxx:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the def",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2209,Performance,load,loading,2209,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:160,Testability,Test,TestStatistics,160,"from https://github.com/root-project/root/issues/11130#issuecomment-1207464193; ```; [ 91%] Building CXX object roofit/roofitcore/CMakeFiles/RooFitCore.dir/src/TestStatistics/RooSumL.cxx.o; In file included from /build/root/src/root-6.26.06/graf3d/eve7/src/REveBoxSet.cxx:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1562,Testability,stub,stubs-,1562,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1591,Testability,log,log,1591,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:1959,Testability,assert,assert,1959,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2007,Testability,assert,assert,2007,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2090,Testability,stub,stubs,2090,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2122,Testability,stub,stubs-,2122,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/issues/11130:2165,Testability,stub,stubs-,2165,"x:20:; /usr/include/nlohmann/json.hpp:5085:8: error: reference to ‘json’ is ambiguous; 5085 | inline nlohmann::json operator """" _json(const char* s, std::size_t n); | ^~~~~~~~; In file included from /usr/include/nlohmann/detail/meta/type_traits.hpp:22,; from /usr/include/nlohmann/detail/exceptions.hpp:22,; from /usr/include/nlohmann/detail/conversions/from_json.hpp:23,; from /usr/include/nlohmann/adl_serializer.hpp:14,; from /usr/include/nlohmann/json.hpp:35:; /usr/include/nlohmann/json_fwd.hpp:61:7: note: candidates are: ‘using json = class nlohmann::json_v3_11_1::basic_json<>’; 61 | using json = basic_json<>;; | ^~~~; .....; ```. ---. <details>; <summary>Original bug report regarding glibc 2.36</summary>. ### Describe the bug; ArchLinux recently upgraded to `glibc 2.36`, and that resulted in ROOT not compiling with either GCC 11.3.0 or GCC 12.1.1. ### Expected behaviour; ROOT should compile with `glibc 2.36`. ### To Reproduce; 1. Install `glibc 2.36` and relevant compilers; 2. Try to build ROOT; 3. Error during build. ### Setup; 1. ROOT version: 6.26/06 (or any other version); 2. Operating system: Arch Linux x86; 3. Build from source with GCC 11.3.0 / 12.1.1. ### Additional context; An interesting caveat is that it seems ROOT also requires 32-bit specific headers (`gnu/stubs-32.h`) as well.; Error log:; ```cpp; ...; [ 73%] Built target Thread; [ 73%] Generating G__RIO.cxx, ../../lib/libRIO.rootmap; In file included from <built-in>:400:; <command line>:1:9: error: macro name must be an identifier; #define -compilerI/usr/include/c++/12.1.1 1; ^; In file included from input_line_3:1:; In file included from /build/root/src/build/etc/cling/lib/clang/9.0.1/include/assert.h:8:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files. ; ```; </details>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11130
https://github.com/root-project/root/pull/11131:77,Testability,test,tested,77,"Fix: https://github.com/root-project/root/issues/11124; This tutorial is not tested by the CI, hence CI is skipped.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11131
https://github.com/root-project/root/pull/11132:191,Modifiability,variab,variable,191,"In the `rootcint` command defined in `RootMacros.cmake`, the; `COMPILE_DEFINITIONS` from the target are forwarded as compiler flags. The `COMPILE_DEFINITIONS` are stored in the `module_defs` variable with; a generator expression:. ```; set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>); ```. Then, the definitions are added to the rootcint command with this; expression:. ```; ""$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ```. This code was almost copied exactly from the CMake documentation; example:. https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html. In particular, the `BOOL` check makes sure that the if the target; property is empty, we will not get a bare `-D` with nothing after it,; corrupting the rootcint command. However, there is no protextion against the case where the; `COMPILE_DEFINITIONS` target property is not empty, but its elements are; empty strings! This happened to me in my recent build. Instead of trying to figure out where the empty strings are added to the; `COMPILE_DEFINITIONS`, it is better to also protect against empty target; property elements in the CMake generator expressions, which is; implemented in this commit. This is a backport of https://github.com/root-project/root/pull/11111.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11132
https://github.com/root-project/root/pull/11133:108,Deployability,patch,patches,108,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11133
https://github.com/root-project/root/pull/11133:305,Deployability,patch,patch,305,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11133
https://github.com/root-project/root/pull/11133:311,Deployability,release,release,311,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11133
https://github.com/root-project/root/pull/11133:373,Deployability,release,release,373,"This is a backport of all the relevant bugfix RooFit PRs that were recently merged to `master` to `v6-26-00-patches` (in the right order, to not have the commit history diverge too much). 1. https://github.com/root-project/root/pull/11023; Only the last commit, which has not been backported for the last patch release yet (the rest of PR was backported before the 6.26.04 release); 2. https://github.com/root-project/root/pull/11123; Only the first commit that relates to the batch mode; 3. https://github.com/root-project/root/pull/11162; 4. https://github.com/root-project/root/pull/11129; Only the first two commits that are note just code modernization; 5. https://github.com/root-project/root/pull/11134; 6. https://github.com/root-project/root/pull/11195; 7. https://github.com/root-project/root/pull/11346; 8. https://github.com/root-project/root/pull/11343; Only the first commit that is not code modernization. Furthermore, an initial commit is added to sync the RooLagrangianMorphFunc with the `master` before the first backported commit, in order to make the cherry-picking of backport commits easier. Addresses https://github.com/root-project/root/issues/11059.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11133
https://github.com/root-project/root/pull/11134:55,Performance,optimiz,optimize,55,"The new RooFit batchMode skipped zero-weight events to optimize the; likelihood calculation. However, this should not be done in general,; because it is unexpected to users is the output of batched computations; is not aligned with the original dataset. This commit also adds a smaller commit with a change to ensure that; norm set args are part of the graph in NormalizationHelpers, also used; in the new BatchMode.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11134
https://github.com/root-project/root/issues/11135:922,Availability,error,error-when-call-createphi-in-llvm,922,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11135
https://github.com/root-project/root/issues/11135:1118,Availability,down,down,1118,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11135
https://github.com/root-project/root/issues/11135:609,Security,HasH,HasHungOffUses,609,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11135
https://github.com/root-project/root/issues/11135:692,Security,HasH,HasHungOffUses,692,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11135
https://github.com/root-project/root/issues/11135:598,Testability,Assert,Assertion,598,"- [x] Checked for duplicates. ### Describe the bug; ```; [ 1675s] [100%] Generating tutorials/hsimple.root; [ 1675s] cd /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/tutorials && LD_LIBRARY_PATH=/home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /home/abuild/rpmbuild/BUILD/root-6.26.06/_builddir/bin/root.exe -l -q -b -n -x hsimple.C -e return; [ 1675s] ; [ 1675s] Processing hsimple.C...; [ 1675s] root.exe: /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/llvm/src/include/llvm/IR/User.h:216: void llvm::User::setNumHungOffUseOperands(unsigned int): Assertion `HasHungOffUses && ""Must have hung off uses to use this method""' failed.; ```. The `HasHungOffUses` member is initialized in the overloaded `clang::User::operator new`, which may trigger undefined behavior. See e.g.:. https://github.com/llvm/llvm-project/issues/47560; https://stackoverflow.com/questions/34892732/error-when-call-createphi-in-llvm. ### Expected behavior; Builtin libLLVM works correctly. Though this is an LLVM upstream issue, either force-disabling LTO, or adding a CMake option to pass this down to the LLVM build (similar to `LLVM_BUILD_TYPE`) might be an option. ### To Reproduce; CXXFLAGS=... -O2 -flto=auto; cmake -B _builddir -S .. && make. ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Tumbleweed; 3. build from source",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11135
https://github.com/root-project/root/pull/11137:213,Availability,error,error,213,"# This Pull request: Helps the debian packaging effort. ## Changes or fixes: Fixed the subprocess commands in the debianize() function credit to dimitry-ishenko and have also modified ProgressBar.py, which caused error before. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11137
https://github.com/root-project/root/pull/11137:279,Deployability,update,updated,279,"# This Pull request: Helps the debian packaging effort. ## Changes or fixes: Fixed the subprocess commands in the debianize() function credit to dimitry-ishenko and have also modified ProgressBar.py, which caused error before. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11137
https://github.com/root-project/root/pull/11137:248,Testability,test,tested,248,"# This Pull request: Helps the debian packaging effort. ## Changes or fixes: Fixed the subprocess commands in the debianize() function credit to dimitry-ishenko and have also modified ProgressBar.py, which caused error before. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11137
https://github.com/root-project/root/issues/11138:156,Availability,error,error,156,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:467,Availability,Error,Error,467,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:618,Availability,Error,Error,618,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:771,Availability,Error,Error,771,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:474,Deployability,install,install,474,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:625,Deployability,install,install,625,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:778,Deployability,install,install,778,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:1521,Deployability,install,installed,1521,"ludes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fails; #target_link_libraries(shLib PRIVATE objLib) # <-- OK. add_executable(main); target_sources(main PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/main.cxx); target_link_libraries(main PUBLIC shLib). install(TARGETS main shLib EXPORT exportTest); install(EXPORT exportTest DESTINATION lib/exportTest); ```; (`libA.cxx` and `objA.cxx` are empty files. `main.cxx` just contains an empty main function: `int main(int, char**) { return 0;}`). ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Leap 15.4, SLE15SP4. ### Additiona",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:2190,Deployability,install,install,2190,"et ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fails; #target_link_libraries(shLib PRIVATE objLib) # <-- OK. add_executable(main); target_sources(main PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/main.cxx); target_link_libraries(main PUBLIC shLib). install(TARGETS main shLib EXPORT exportTest); install(EXPORT exportTest DESTINATION lib/exportTest); ```; (`libA.cxx` and `objA.cxx` are empty files. `main.cxx` just contains an empty main function: `int main(int, char**) { return 0;}`). ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Leap 15.4, SLE15SP4. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:2237,Deployability,install,install,2237,"et ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fails; #target_link_libraries(shLib PRIVATE objLib) # <-- OK. add_executable(main); target_sources(main PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/main.cxx); target_link_libraries(main PUBLIC shLib). install(TARGETS main shLib EXPORT exportTest); install(EXPORT exportTest DESTINATION lib/exportTest); ```; (`libA.cxx` and `objA.cxx` are empty files. `main.cxx` just contains an empty main function: `int main(int, char**) { return 0;}`). ### Setup; 1. ROOT version: 6.26.06; 2. openSUSE Leap 15.4, SLE15SP4. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/issues/11138:436,Modifiability,Config,Configuring,436,"- [x] Checked for duplicates. ### Describe the bug. When trying to build with `--builtin_llvm=OFF --builtin_clang=OFF --builtin_cling=ON`, CMake reports an error. ```; [ 52s] -- Enabled support for: builtin_cling builtin_openui5 dataframe davix exceptions fftw3 gdml gnuinstall http imt mathmore mlp minuit2 mysql opengl pgsql roofit rpath runtime_cxxmodules shared soversion sqlite ssl tmva tmva-cpu spectrum x11 xml xrootd; [ 52s] -- Configuring done; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingInterpreter"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingMetaProcessor"" that is not in any export set.; [ 53s] CMake Error: install(EXPORT ""ROOTExports"" ...) includes target ""Cling"" which requires target ""clingUtils"" that is not in any export set.; [ 54s] -- Generating done; ```. ### Expected behavior; CMake call succeeds. ### To Reproduce; The problem is caused by the SHARED libCling (TARGET Cling) specyfing the 3 OBJECT libraries from above as PUBLIC link libraries:. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/core/metacling/src/CMakeLists.txt#L107-L112. https://github.com/root-project/root/blob/69002fa23d19ad50ff8dd6c7678a6343748ba3fd/cmake/modules/RootMacros.cmake#L889. `CLING_LIBRARIES` is `clingInterpreter;clingMetaProcessor;clingUtils`. OBJECT libraries which are just used as convenience libraries and are not installed should by specified as PRIVATE link libraries. A minimal reproducer is given below, with `PRIVATE` it works fine, with `PUBLIC` `cmake -B _builddir -S .` fails.; ```; project(exportTest). cmake_minimum_required(VERSION 3.1). add_library(objLib OBJECT); target_sources(objLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/objA.cxx). add_library(shLib SHARED); target_sources(shLib PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/libA.cxx); target_link_libraries(shLib PUBLIC objLib) # <-- fail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11138
https://github.com/root-project/root/pull/11139:98,Modifiability,refactor,refactored,98,"The `RooAddModel::CacheElem` was exactly the same as for the RooAddPdf.; Hence, the RooAddPdf was refactored a bit such that the code to generate; the CacheElem could be reused in the RooAddModel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11139
https://github.com/root-project/root/pull/11139:18,Performance,Cache,CacheElem,18,"The `RooAddModel::CacheElem` was exactly the same as for the RooAddPdf.; Hence, the RooAddPdf was refactored a bit such that the code to generate; the CacheElem could be reused in the RooAddModel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11139
https://github.com/root-project/root/pull/11139:151,Performance,Cache,CacheElem,151,"The `RooAddModel::CacheElem` was exactly the same as for the RooAddPdf.; Hence, the RooAddPdf was refactored a bit such that the code to generate; the CacheElem could be reused in the RooAddModel.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11139
https://github.com/root-project/root/pull/11140:126,Availability,error,errors,126,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Automatically split the lines and fixed other errors. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11140
https://github.com/root-project/root/pull/11140:186,Deployability,update,updated,186,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Automatically split the lines and fixed other errors. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11140
https://github.com/root-project/root/pull/11140:155,Testability,test,tested,155,# This Pull request: Makes the code more flake8 compliant. ## Changes or fixes: Automatically split the lines and fixed other errors. ## Checklist:. - [X] tested changes locally; - [NA] updated the docs (if necessary). This PR fixes #406 mentioned in meta-issue list (https://github.com/root-project/cling/issues/406),MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11140
https://github.com/root-project/root/pull/11141:148,Deployability,update,updated,148,…antities() (#11115). cherry-picked from cd992545ae. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11141
https://github.com/root-project/root/pull/11141:118,Testability,test,tested,118,…antities() (#11115). cherry-picked from cd992545ae. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11141
https://github.com/root-project/root/pull/11142:96,Deployability,update,updated,96,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11142
https://github.com/root-project/root/pull/11142:66,Testability,test,tested,66,# This Pull request:. ## Changes or fixes:. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11142
https://github.com/root-project/root/pull/11144:353,Deployability,update,updated,353,"# This Pull request:. Moves GetTopLevelBranchNames from the RDF Internals namespace to the Internal TreeUtils namespace, as it does not rely on RDF and creates unnecessary dependencies. ## Changes or fixes:; - Move GetTopLevelBranch names and its implementation from `/tree/dataframe` to `/tree/tree`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11144
https://github.com/root-project/root/pull/11144:172,Integrability,depend,dependencies,172,"# This Pull request:. Moves GetTopLevelBranchNames from the RDF Internals namespace to the Internal TreeUtils namespace, as it does not rely on RDF and creates unnecessary dependencies. ## Changes or fixes:; - Move GetTopLevelBranch names and its implementation from `/tree/dataframe` to `/tree/tree`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11144
https://github.com/root-project/root/pull/11144:323,Testability,test,tested,323,"# This Pull request:. Moves GetTopLevelBranchNames from the RDF Internals namespace to the Internal TreeUtils namespace, as it does not rely on RDF and creates unnecessary dependencies. ## Changes or fixes:; - Move GetTopLevelBranch names and its implementation from `/tree/dataframe` to `/tree/tree`. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11144
https://github.com/root-project/root/pull/11145:130,Energy Efficiency,reduce,reduce,130,"The export of RooWorkspace contents to CINT didn't work anymore since; ROOT 6, and the code associated to it should be removed to reduce; maintanance burden.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11145
https://github.com/root-project/root/issues/11146:161,Availability,Error,Error,161,"- [x] Checked for duplicates. ```; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h: In member function 'llvm::Error cling::IncrementalJIT::RemovableObjectLinkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11146
https://github.com/root-project/root/issues/11146:365,Availability,error,error,365,"- [x] Checked for duplicates. ```; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h: In member function 'llvm::Error cling::IncrementalJIT::RemovableObjectLinkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11146
https://github.com/root-project/root/issues/11146:1307,Availability,Error,Error,1307,"inkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor NotifyFreed;. // NB! `LinkedObjects` needs to be destroyed before `NotifyFreed` because; // `~ConcreteLinkedObject` calls `NotifyFreed`; std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11146
https://github.com/root-project/root/issues/11146:1466,Deployability,Patch,Patched,1466,"inkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor NotifyFreed;. // NB! `LinkedObjects` needs to be destroyed before `NotifyFreed` because; // `~ConcreteLinkedObject` calls `NotifyFreed`; std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11146
https://github.com/root-project/root/issues/11146:597,Security,Access,AccessSymbolTable,597,"- [x] Checked for duplicates. ```; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h: In member function 'llvm::Error cling::IncrementalJIT::RemovableObjectLinkingLayer::removeObject(llvm::orc::VModuleKey)':; [ 82s] /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:118:49: error: 'std::map<long unsigned int, std::unique_ptr<llvm::orc::LegacyRTDyldObjectLinkingLayerBase::LinkedObject> > llvm::orc::LegacyRTDyldObjectLinkingLayer::LinkedObjects' is private within this context; [ 82s] = static_cast<const AccessSymbolTable*>(LinkedObjects[K].get());; [ 82s] ^~~~~~~~~~~~~; [ 82s] In file included from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/IncrementalJIT.h:22:0,; [ 82s] from /home/abuild/rpmbuild/BUILD/root-6.26.06/interpreter/cling/lib/Interpreter/BackendPasses.cpp:12:; [ 82s] /usr/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h:475:55: note: declared private here; [ 82s] std::map<VModuleKey, std::unique_ptr<LinkedObject>> LinkedObjects;; [ 82s] ^~~~~~~~~~~~~; [ 82s] make[2]: *** [interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/build.make:125: interpreter/cling/lib/Interpreter/CMakeFiles/obj.clingInterpreter.dir/BackendPasses.cpp.o] Error 1; ```; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/cling/lib/Interpreter/IncrementalJIT.h#L111-L112. Patched version in ROOT:; https://github.com/root-project/root/blob/cd992545ae18f0d036e382408d4acfccfa16db48/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L473-L476. Upstream (LLVM 9.x):; https://github.com/llvm/llvm-project/blob/c1a0a213378a458fbea1a5c77b315c7dce08fd05/llvm/include/llvm/ExecutionEngine/Orc/RTDyldObjectLinkingLayer.h#L465; ```; private:; ExecutionSession &ES;. ResourcesGetter GetResources;; NotifyLoadedFtor NotifyLoaded;; NotifyFinalizedFtor NotifyFinalized;; NotifyFreedFtor Not",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11146
https://github.com/root-project/root/pull/11148:96,Availability,error,error,96,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11148
https://github.com/root-project/root/pull/11148:613,Availability,mask,mask,613,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11148
https://github.com/root-project/root/pull/11148:141,Deployability,release,released,141,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit https://github.com/root-project/root/commit/ac36d879629fd67cf6fc9e955923ec9f98a2361c. An alternative solution appears to be replacing `EProperty` (which refers; to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. This PR fixes #11128",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11148
https://github.com/root-project/root/pull/11149:124,Availability,down,down,124,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11149
https://github.com/root-project/root/pull/11149:203,Usability,simpl,simplify,203,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11149
https://github.com/root-project/root/pull/11149:273,Usability,simpl,simple,273,"To this end, we now propagate compile-time information on how many columns are varied (one or more than one simultaneously) down from `Vary` to `RVariation`. We can take advantage of this information to simplify a number of; helper functions, e.g. substituting SFINAE with simple function; overloading, and to specify a storage type for results of `Vary ` expressions potentially different from the type returned by the expression itself, which will be necessary to implement bulk evaluation of systematic variations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11149
https://github.com/root-project/root/pull/11150:165,Testability,test,test,165,`NeverWrittenOut.root` is actually written out (because the exception; is thrown during the event loop). Change the file name so that it's deleted at the end of the test.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11150
https://github.com/root-project/root/pull/11151:20,Integrability,interface,interface,20,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11151
https://github.com/root-project/root/pull/11151:332,Integrability,interface,interface,332,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11151
https://github.com/root-project/root/pull/11151:769,Performance,perform,performance,769,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11151
https://github.com/root-project/root/pull/11151:707,Testability,test,test,707,"The `RooAbsBinning` interface for bin index lookups was changed to; enable vectorized implementations. Instead of having the override; `RooAbsBinning::binNumber()`, the binning implementations now have to; override the `RooAbsBinning::binNumbers()` function to evaluate the bin; indices of multiple values in one function call. The interface of `RooAbsBinning::binNumbers()` is designed to facilitate; the accregation of bin indices over multiple dimensions, and it uses a; `double` ouput vector such that the caller can reuse the output buffer; for other computations. The former `RooAbsBinning::binNumber()` method is now implement in terms; of the vectorized version, such that we automatically get wide test; coverage. It was verified that this doesn't come with a performance; overhead. This will greatly facilitate the vectorization of the RooHistPdf and; RooHistFunc later. A second commit in this PR applies some other improvements to the `RooBinning` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11151
https://github.com/root-project/root/pull/11152:106,Deployability,configurat,configurations,106,"The file uses `std::numeric_limits`, defined in `<limits>` . That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11152
https://github.com/root-project/root/pull/11152:106,Modifiability,config,configurations,106,"The file uses `std::numeric_limits`, defined in `<limits>` . That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11152
https://github.com/root-project/root/pull/11152:216,Modifiability,config,configuring,216,"The file uses `std::numeric_limits`, defined in `<limits>` . That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11152
https://github.com/root-project/root/pull/11153:37,Availability,error,errors,37,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:144,Availability,error,error,144,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1939,Availability,error,error,1939,"vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2180,Availability,error,error,2180,"r,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2634,Availability,error,error,2634,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2861,Availability,error,error,2861,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3092,Availability,error,error,3092,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3330,Availability,error,error,3330,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:240,Deployability,release,release,240,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:448,Deployability,release,release,448,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:960,Deployability,release,release,960,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1486,Deployability,release,release,1486,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1801,Deployability,release,release,1801,"::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2042,Deployability,release,release,2042,"vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2289,Deployability,release,release,2289,"r,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2497,Deployability,release,release,2497,"\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2723,Deployability,release,release,2723,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2955,Deployability,release,release,2955,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3193,Deployability,release,release,3193,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3477,Deployability,release,release,3477,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3584,Deployability,release,release,3584,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:368,Integrability,message,message,368,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:583,Integrability,message,message,583,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1092,Integrability,message,message,1092,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1615,Integrability,message,message,1615,"::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2417,Integrability,message,message,2417,"\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:263,Testability,test,test,263,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:471,Testability,test,test,471,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:983,Testability,test,test,983,"This fixes the following compilation errors on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' mus",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1060,Testability,test,test,1060,"on Windows:; ```; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C2039: 'TreeUtils': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\rel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1509,Testability,test,test,1509,"llenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1120): message : while compiling class template member function 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\datafr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:1824,Testability,test,test,1824,"::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\rele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2065,Testability,test,test,2065,"vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\test\datasource_sqlite.cxx(41): message : see reference to function template instantiation 'ROOT::RDF::RResultPtr<ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxpro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2312,Testability,test,test,2312,"r,void>> ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>::Snapshot(std::string_view,std::string_view,std::string_view,const ROOT::RDF::RSnapshotOptions &)' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2520,Testability,test,test,2520,"\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDataFrame.hxx(41): message : see reference to class template instantiation 'ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2746,Testability,test,test,2746,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:2978,Testability,test,test,2978,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3216,Testability,test,test,3216,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3500,Testability,test,test,3500,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/pull/11153:3607,Testability,test,test,3607,"ROOT::RDF::RInterface<ROOT::RDF::RInterface<Proxied,DataSource>::RLoopManager,void>' being compiled [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,64): error C3083: 'TreeUtils': the symbol to the left of a '::' must be a type [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,75): error C2039: 'GetTopLevelBranchNames': is not a member of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RSqliteDS.hxx(27): message : see declaration of 'ROOT::RDF::Internal' [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,1): error C3861: 'GetTopLevelBranchNames': identifier not found [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1123,18): error C2737: 'treeBranchNames': const object must be initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1130,1): error C3536: 'treeBranchNames': cannot be used before it is initialized [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; C:\Users\bellenot\git\master\tree\dataframe\inc\ROOT/RDF/RInterface.hxx(1132,1): error C2661: 'std::vector<std::string,std::allocator<std::string>>::insert': no overloaded function takes 1 arguments [C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj]; Done Building Project ""C:\Users\bellenot\build\x86\release\tree\dataframe\test\datasource_sqlite.vcxproj"" (default targets) -- FAILED.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11153
https://github.com/root-project/root/issues/11154:62,Availability,error,error-on-fitresult-scan,62,As shown in the code attached in https://root-forum.cern.ch/t/error-on-fitresult-scan/51014; one cannot use FitResult::Scan when the Fitter class has been deleted.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11154
https://github.com/root-project/root/pull/11155:166,Deployability,update,updated,166,# This Pull request:; Add a draft implementation of zero-copy merge of RNTuples.; @jblomer . ## Changes or fixes:. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11155
https://github.com/root-project/root/pull/11155:136,Testability,test,tested,136,# This Pull request:; Add a draft implementation of zero-copy merge of RNTuples.; @jblomer . ## Changes or fixes:. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11155
https://github.com/root-project/root/pull/11156:105,Deployability,configurat,configurations,105,"The file uses `std::numeric_limits`, defined in `<limits>`. That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT. (cherry picked from commit d2e56f982e303d83784f28e1524bc24c39b350c4). Backport of PR https://github.com/root-project/root/pull/11152",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11156
https://github.com/root-project/root/pull/11156:105,Modifiability,config,configurations,105,"The file uses `std::numeric_limits`, defined in `<limits>`. That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT. (cherry picked from commit d2e56f982e303d83784f28e1524bc24c39b350c4). Backport of PR https://github.com/root-project/root/pull/11152",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11156
https://github.com/root-project/root/pull/11156:215,Modifiability,config,configuring,215,"The file uses `std::numeric_limits`, defined in `<limits>`. That header is transitively included in most configurations, but for example not when building with a recent libstdc++ (with less transitive includes) and configuring with cxx14 and without VDT. (cherry picked from commit d2e56f982e303d83784f28e1524bc24c39b350c4). Backport of PR https://github.com/root-project/root/pull/11152",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11156
https://github.com/root-project/root/pull/11157:88,Modifiability,variab,variables,88,"First delete nop method `TMVA::SVWorkingSet::PrintStat()`, then remove many more unused variables in various areas. **Note**: If you absolutely require your part of this PR be split out, we can discuss but it's going to be work that I'd like to avoid if possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11157
https://github.com/root-project/root/pull/11157:245,Safety,avoid,avoid,245,"First delete nop method `TMVA::SVWorkingSet::PrintStat()`, then remove many more unused variables in various areas. **Note**: If you absolutely require your part of this PR be split out, we can discuss but it's going to be work that I'd like to avoid if possible.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11157
https://github.com/root-project/root/pull/11159:541,Testability,test,tested,541,"Minuit2's MnHesse sometimes returns success, but the matrix contains only NaN values (this should be fixed, but that is a bigger issue not addressed here). In this case, IsAboveMaxEdm() returns false, since NaN < threshold is false, irregardless of the threshold. This leads to Minuit2 wrongly reporting that the minimum is ""valid"". This fix makes sure that IsAboveMaxEdm() returns true if the Edm value is NaN and the fit is reported as **invalid**, which is not perfect but better than the current confusing behavior. ## Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11159
https://github.com/root-project/root/issues/11160:93,Deployability,release,release,93,"- [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on; https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:; 1. git clone http://root.cern.ch/git/root.git; 2. rootvers=""6-26-06""; git checkout v$rootvers; 3. mkdir ../root-build; cd ../root-build; 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06; 2. Operating system Linux Fedora 36; 3. git clone http://root.cern.ch/git/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/issues/11160:167,Deployability,release,release,167,"- [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on; https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:; 1. git clone http://root.cern.ch/git/root.git; 2. rootvers=""6-26-06""; git checkout v$rootvers; 3. mkdir ../root-build; cd ../root-build; 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06; 2. Operating system Linux Fedora 36; 3. git clone http://root.cern.ch/git/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/issues/11160:329,Deployability,release,release,329,"- [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on; https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:; 1. git clone http://root.cern.ch/git/root.git; 2. rootvers=""6-26-06""; git checkout v$rootvers; 3. mkdir ../root-build; cd ../root-build; 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06; 2. Operating system Linux Fedora 36; 3. git clone http://root.cern.ch/git/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/issues/11160:119,Security,hash,hash,119,"- [ ] Checked for duplicates. ### Describe the bug. Compilation of Root v6-26-06 from github release fails. The SHA256 hash is wrong and has been corrected after this release on; https://github.com/root-project/root/commit/ce4ca3e1537be6776b93ef7bf8cd39d942c7de27. ### Expected behavior. Compilation of Root v6-26-06 from github release succeeds. ### To Reproduce. Steps to reproduce the behavior:; 1. git clone http://root.cern.ch/git/root.git; 2. rootvers=""6-26-06""; git checkout v$rootvers; 3. mkdir ../root-build; cd ../root-build; 4. cmake -DCMAKE_INSTALL_PREFIX=$rootinstall -Dbuiltin_xrootd=ON -Droofit=ON -Dpythia8=ON -Dmysql=OFF ../root-sources. ### Setup. 1. ROOT version v6-26-06; 2. Operating system Linux Fedora 36; 3. git clone http://root.cern.ch/git/root.git",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11160
https://github.com/root-project/root/pull/11161:238,Availability,redundant,redundant,238,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:92,Deployability,update,updateCoefficients,92,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:135,Energy Efficiency,Reduce,Reduce,135,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:155,Performance,cache,cache,155,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:312,Performance,perform,performance,312,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:65,Safety,Avoid,Avoid,65,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:195,Safety,avoid,avoid,195,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:232,Safety,Avoid,Avoid,232,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11161:238,Safety,redund,redundant,238,"This PR applies several improvements to the RooAddPdf class:. 1. Avoid code duplication of `updateCoefficients()` with RooAddModel; 2. Reduce footprint of cache object by using `std::vector` and avoid creating dummy RooRealVars; 3. Avoid redundant computation of raw coefficient values in BatchMode, which fixes performance problems in important fits like the ATLAS Higgs combination. More details can be found in the commit descriptions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11161
https://github.com/root-project/root/pull/11162:0,Deployability,Integrat,Integrating,0,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1129,Deployability,integrat,integration,1129,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1281,Deployability,integrat,integration,1281,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:0,Integrability,Integrat,Integrating,0,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1129,Integrability,integrat,integration,1129,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1281,Integrability,integrat,integration,1281,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:347,Modifiability,variab,variable,347,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:675,Testability,test,tests,675,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:686,Testability,test,testRooWrapperPdf,686,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:772,Testability,test,test,772,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:777,Testability,test,testRooWrapperPdf,777,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:808,Testability,test,testNestedPDFs,808,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:907,Testability,test,testNestedPDFs,907,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:949,Testability,test,tests,949,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11162:1236,Testability,test,tests,1236,"Integrating a RooAbsRealLValue like a RooRealVar doesn't work in RooFit,; which one can check with this code:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; std::unique_ptr<RooAbsReal> xint{x.createIntegral(x)};; xint->Print();; ```. The integral of x from -5 to 5 should be zero, but the integral object; only returns the current value of the variable. Some users expect the integral to work, and give the same result as; this, which correctly prints out zero:. ```C++; RooRealVar x{""x"", ""x"", 2.0, -5.0, 5.0};; RooProduct xId{""xId"", ""xId"", RooArgList{x}};; std::unique_ptr<RooAbsReal> xint{xId.createIntegral(x)};; xint->Print();; ```. This is assumed in two RooFit unit tests:. * [testRooWrapperPdf](https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testRooWrapperPdf.cxx#L27); * [testNestedPDFs](https://github.com/guitargeek/roottest/blob/master/root/roofitstats/vectorisedPDFs/testNestedPDFs.cxx#L45) in roottest. Both tests **work only by chance** because the stored x value is the; same as its integral! As soon as the x value or limits would change, the; results don't make sense anymore. As the integration of RooAbsRealLValues never worked correctly and was; not used anywhere outside artificial unit tests, this commit suggests so; prohibit the integration of RooAbsRealLValues by throwing an exception; if `RooAbsRealLValue::createIntegral()` is called. Related to https://github.com/root-project/roottest/pull/894.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11162
https://github.com/root-project/root/pull/11163:11,Deployability,release,released,11,Soon-to-be-released Clang 15 will complain:; ```; warning: unqualified call to 'std::move' [-Wunqualified-std-cast-call]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11163
https://github.com/root-project/root/pull/11167:11,Deployability,release,released,11,Soon-to-be-released Clang 15 complains:; ```; a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11167
https://github.com/root-project/root/pull/11168:11,Deployability,release,released,11,Soon-to-be-released Clang 15 complains:; ```; a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```; and; ```; passing arguments to a function without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11168
https://github.com/root-project/root/pull/11169:11,Deployability,release,released,11,Soon-to-be-released Clang 15 complains:; ```; a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11169
https://github.com/root-project/root/pull/11170:111,Integrability,interface,interface,111,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:517,Security,validat,validate,517,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:465,Testability,test,testParamHistFunc,465,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11170:489,Testability,test,test,489,"So far, the `ParamHistFunc` BatchMode implementation was still; sub-uptimal because it used the non-vectorized interface of the; RooDataHist. Using the new `RooAbsBinning::binNumbers()` function too look up; multiple bin indices at once, the implementaiton can be improved and; sped. In the three-dimensional many-bin case, the new implementation is a bit; more than three times faster than the old one. This should benefit; HistFactory fits with many bins. A new `testParamHistFunc` unit test was also introduced to validate the; results of a ParamHistFunc both with and without the batch mode,; comparing to manually computed reference results.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11170
https://github.com/root-project/root/pull/11171:960,Deployability,update,updated,960,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:187,Modifiability,extend,extended,187,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11171:930,Testability,test,tested,930,"This PR improves the speed for evaluating weights in `RooHistPdf`; and `RooHistFunc` for one dimensional histograms with no interpolation.; In the future, `RooDataHist::weights()` can be extended to cover; cases with higher dimensions and interpolation. The function `RooDataHist::weights()` was implemented to enable; vectorized evaluations of bin weights. In `RooHistPdf` it is implemented; using the new function `RooHistPdf::computeBatch()`, which calls; `RooDataHist::weights()` in the case of no interpolation and 1D; histograms, and `RooAbsReal::computeBatch()` otherwise. In; `RooHistFunc::computeBatch`, `RooDataHist::weights()` is called in the; case of no interpolation and 1D histograms and is unchanged in the other cases. To calculate the weight, bin indices are stored as a vector; using `RooAbsBinning::binNumbers`, which was implemented in #11151. # This Pull request:. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11171
https://github.com/root-project/root/pull/11172:391,Availability,fault,fault,391,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:101,Energy Efficiency,allocate,allocated,101,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:720,Security,access,access,720,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:281,Testability,test,test,281,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:321,Testability,test,test,321,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/pull/11172:328,Testability,test,test,328,"By leveraging std::max_align_t, insure that the return addressed (offset-ed; compared to the address allocated by TStorage::ObjectAlloc) is still well; aligned. In https://root-forum.cern.ch/t/libnew-so-and-tcanvas/51039/8, executing; in rootn.exe:. TMapFile *mf=TMapFile::Create(""test.map"",""recreate""); TH1 *h=new TH1F(""test"",""test"",100,-5,5); h->Fill (0); h->Draw(). led to a segmentation fault in. during the execution of:. => 0x00007ffff2a62a12 <+162>:	movaps %xmm0,0x10(%r12). with an address that was ending in '8'. When allocating; the TMethodCall, the address returned was aligned on a 16 bit; boundary but the memory counting over-allocating was shifting; the address by 'only' 8 bits, leading to a mis-aligned access; by this vector memcpy.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11172
https://github.com/root-project/root/issues/11173:334,Availability,Error,Error,334,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/issues/11173:1306,Usability,simpl,simple,1306,"Reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>; #include <ROOT/RDFHelpers.hxx>; #include <cstdlib>. int main(); {; auto df = ROOT::RDataFrame(10).Filter(""rdfentry_ > 0"", ""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"");; ROOT::RDF::SaveGraph(df, ""out.dot"");; std::system(""dot -Tpng out.dot > out.png"");; }; ```. yields:. ```; Error: not well-formed (invalid token) in line 1; ... <HTML>Title with special chars: !@#$%^&*()-=_+{}[] ...; in label of node 1; ```. `out.dot` has the following contents:. ```dot; digraph {; 	1 [label=<Title with special chars: !@#$%^&*()-=_+{}[]<>?/>, style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=<Empty source<BR/>Entries: 10>, style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. and changing it to the following seems to fix the problem (enclosing `label` value between quotes rather than between `<>`, substituting `<BR/>` with `\n`:. ```dot; digraph {; 	1 [label=""Title with special chars: !@#$%^&*()-=_+{}[]<>?/"", style=""filled"", fillcolor=""#0f9d58"", shape=""hexagon""];; 	0 [label=""Empty source\nEntries: 10"", style=""filled"", fillcolor=""#f4b400"", shape=""ellipse""];; 	0 -> 1;; }; ```. @ikabadzhov I am not sure whether we need to use HTML rather than plain strings for something else than line breaks. If not, then the two simple substitutions above might be a viable fix.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11173
https://github.com/root-project/root/pull/11174:91,Availability,error,errors,91,"The overload taking a path opens the file and then `mmap` its contents. This can cause bus errors when another process truncates the file while we are trying to read it. Instead just read the first 1024 bytes, which should be enough for `identify_magic` to do its work.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11174
https://github.com/root-project/root/pull/11176:1613,Availability,failure,failures,1613,"In RooAbsPdf, the following check is done to check if the normalization; set has changed:; ```C++; RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet); ```. This works, but like the previous pointer comparison it still gives; false results if the `_normSet` was replaced buy another RooArgSet at; the same memory location. The problem can be reproduced with this code:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y); RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));; RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf; RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution; // which should not be the case!; std::cout << model.getVal(x) << std::endl;; std::cout << model.getVal({x, y}) << std::endl;; ```. The solution would be to replace the `_normSet` member directly with; its unique ID value, but then it could not be used anymore. Hence we; need both. This commit also adds a new private `RooAbsPdf` member functions to set; the `_normSet` together with the new `_normSetId` member, and one; protected `isActiveNormSet(RooArgSet const*)` function. The latter; function is comparing the input to the current `_normSet`, but shortcuts; to `false` is the ID does not match with the last `_normSet` ID. Like; this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in; RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:825,Integrability,depend,depend,825,"In RooAbsPdf, the following check is done to check if the normalization; set has changed:; ```C++; RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet); ```. This works, but like the previous pointer comparison it still gives; false results if the `_normSet` was replaced buy another RooArgSet at; the same memory location. The problem can be reproduced with this code:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y); RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));; RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf; RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution; // which should not be the case!; std::cout << model.getVal(x) << std::endl;; std::cout << model.getVal({x, y}) << std::endl;; ```. The solution would be to replace the `_normSet` member directly with; its unique ID value, but then it could not be used anymore. Hence we; need both. This commit also adds a new private `RooAbsPdf` member functions to set; the `_normSet` together with the new `_normSetId` member, and one; protected `isActiveNormSet(RooArgSet const*)` function. The latter; function is comparing the input to the current `_normSet`, but shortcuts; to `false` is the ID does not match with the last `_normSet` ID. Like; this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in; RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/pull/11176:1504,Safety,avoid,avoid,1504,"In RooAbsPdf, the following check is done to check if the normalization; set has changed:; ```C++; RooFit::getUniqueId(nset) != RooFit::getUniqueId(_normSet); ```. This works, but like the previous pointer comparison it still gives; false results if the `_normSet` was replaced buy another RooArgSet at; the same memory location. The problem can be reproduced with this code:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Create signal pdf gauss(x)*gauss(y); RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));; RooProdPdf sig(""sig"", ""sig"", {gx, gy});. // Create composite pdf; RooAddPdf model(""model"", ""model"", RooArgList(sig), RooConst(100.));. // The results of the last two lines depend on the order of execution; // which should not be the case!; std::cout << model.getVal(x) << std::endl;; std::cout << model.getVal({x, y}) << std::endl;; ```. The solution would be to replace the `_normSet` member directly with; its unique ID value, but then it could not be used anymore. Hence we; need both. This commit also adds a new private `RooAbsPdf` member functions to set; the `_normSet` together with the new `_normSetId` member, and one; protected `isActiveNormSet(RooArgSet const*)` function. The latter; function is comparing the input to the current `_normSet`, but shortcuts; to `false` is the ID does not match with the last `_normSet` ID. Like; this, we avoid dereferencing invalid `_normSet` pointers. This change is mainly done to fix several of the ASAN build failures in; RooFit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11176
https://github.com/root-project/root/issues/11177:410,Integrability,depend,depending,410,"Take a model with completely independent identical observables that have both a signal and a background component:; ```; p(x,y) = p(x) * p(y) = (s(x) + b(x)) * (s(y) + b(y)) ; ```; It should be equivalent to define this as a sum of products:; ```; p(x,y) = s(x,y) + b(x,y) = s(x) * s(y) + b(x) * b(y); ```; All sums in these expressions are normalized sums. However, in RooFit, you get different probabilities depending on how you define the model, either as a product of sums or sum of products. The case of sum of products seems to be wrong, as it doesn't factorize correctly. This can be reproduced with the following script:. ```C++; using namespace RooFit;. // Create observables; RooRealVar x(""x"", ""x"", -5, 5);; RooRealVar y(""y"", ""y"", -5, 5);. // Gaussian signal in x and y; RooGaussian gx(""gx"", ""gx"", x, RooConst(0), RooConst(1));; RooGaussian gy(""gy"", ""gy"", y, RooConst(0), RooConst(1));. // Polynomial background in x and y; RooPolynomial px(""px"", ""px"", x, RooArgSet(-0.1, 0.004));; RooPolynomial py(""py"", ""py"", y, RooArgSet(-0.1, 0.004));. // Normalization sets to try for model evaluation; RooArgSet nsetx{x};; RooArgSet nsety{y};; RooArgSet nsetxy{x, y};. {; // Formulate model as a product of sums; RooAddPdf modelx(""modelx"", ""modelx"", {gx, px}, RooConst(0.1));; RooAddPdf modely(""modely"", ""modely"", {gy, py}, RooConst(0.1));; RooProdPdf model(""model"", ""model"", {modelx, modely});. std::cout << ""Product of sums:"" << std::endl;. std::cout << ""p(x) = "" << modelx.getVal(nsetx) << std::endl;; std::cout << ""p(y) = "" << modely.getVal(nsety) << std::endl;; std::cout << ""p(x) * p(y) = "" << model.getVal(nsetxy) << std::endl;; std::cout << std::endl;; }. {; // Formulate model as a sum of products; RooProdPdf sig(""sig"", ""sig"", {gx, gy});; RooProdPdf bkg(""bkg"", ""bkg"", {px, py});; RooAddPdf model(""model"", ""model"", {sig, bkg}, RooConst(0.1));. std::cout << ""Sum of products:"" << std::endl;. std::cout << ""p(x) = "" << model.getVal(nsetx) << std::endl;; std::cout << ""p(y) = "" << model.getVal(ns",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11177
https://github.com/root-project/root/pull/11178:96,Availability,error,error,96,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:540,Availability,mask,mask,540,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/pull/11178:141,Deployability,release,released,141,"Current `clang-16` from main complains: ""case value is not a constant expression"". Even if that error is probably relaxed before Clang 16 is released early next year, there is really no point in converting an integer into an enum just to get a numeric value back. This is (intentionally) a partial revert of commit ac36d879629f. An alternative solution appears to be replacing `EProperty` (which refers to the enum type in `TVirtualCollectionProxy`) with `::EProperty` from `TDictionary.h`. However, since the enum values are used as a bit mask and `fCase` is defined as `UInt_t` anyhow, it makes more sense to compare integer constants from the start. Closes #11128. (cherry picked from commit cc28da57f0b8e2878a2c047504a49762d7d8dfb5). Backport of PR https://github.com/root-project/root/pull/11148",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11178
https://github.com/root-project/root/issues/11179:113,Availability,error,error,113,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:187,Availability,error,error,187,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:407,Availability,error,error,407,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:630,Availability,error,error,630,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:815,Availability,error,errors,815,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:914,Deployability,release,release,914,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11179:946,Deployability,upgrade,upgrade,946,"Similar to https://github.com/root-project/root/issues/11128, the `builtin_tbb` is affected by the new warning / error about UB in constant expressions:; ```; ginclude/tbb/task.h:579:48: error: integer value 2 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type binding_completed = kind_type(bound+1);; ^; ginclude/tbb/task.h:580:39: error: integer value 3 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type detached = kind_type(binding_completed+1);; ^; ginclude/tbb/task.h:581:36: error: integer value 4 is outside the valid range of values [0, 1] for this enumeration type [-Wenum-constexpr-conversion] ; static const kind_type dying = kind_type(detached+1);; ^; 3 errors generated.; ```. Looking at the source code, this is still present in the last ""normal"" TBB release, so we probably have to upgrade to oneTBB... ### Related issues; * https://github.com/root-project/root/issues/7063; * https://github.com/root-project/root/issues/8260; * https://github.com/root-project/root/issues/8815",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11179
https://github.com/root-project/root/issues/11182:58,Deployability,install,install,58,- [x] Checked for duplicates. ### Describe the bug; `make install` installs h2root.1 and g2root.1 man pages.; ; ### Expected behavior; h2root.1 is not installed. ### To Reproduce; ```; cmake -Dfortran:BOOL=OFF ...; make; make install; ```. ### Setup; 1. ROOT version: 6.26.06. ### Additional context; https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:67,Deployability,install,installs,67,- [x] Checked for duplicates. ### Describe the bug; `make install` installs h2root.1 and g2root.1 man pages.; ; ### Expected behavior; h2root.1 is not installed. ### To Reproduce; ```; cmake -Dfortran:BOOL=OFF ...; make; make install; ```. ### Setup; 1. ROOT version: 6.26.06. ### Additional context; https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:151,Deployability,install,installed,151,- [x] Checked for duplicates. ### Describe the bug; `make install` installs h2root.1 and g2root.1 man pages.; ; ### Expected behavior; h2root.1 is not installed. ### To Reproduce; ```; cmake -Dfortran:BOOL=OFF ...; make; make install; ```. ### Setup; 1. ROOT version: 6.26.06. ### Additional context; https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/issues/11182:226,Deployability,install,install,226,- [x] Checked for duplicates. ### Describe the bug; `make install` installs h2root.1 and g2root.1 man pages.; ; ### Expected behavior; h2root.1 is not installed. ### To Reproduce; ```; cmake -Dfortran:BOOL=OFF ...; make; make install; ```. ### Setup; 1. ROOT version: 6.26.06. ### Additional context; https://github.com/root-project/root/blob/6018b5fd4598094ce75f8ab293ba5b115e8b66d8/CMakeLists.txt#L590-L595. `h2root.1` and `g2root.1` should be conditionally added to `MAN_PATT_EXCLUDE`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11182
https://github.com/root-project/root/pull/11183:1341,Deployability,update,updated,1341,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:1300,Testability,test,tested,1300,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/pull/11183:524,Usability,simpl,simple,524,"Unlike histograms, `TGraph` points are not necessarily stored in memory in ascending ""X"" coordinate pattern. Generaly speaking, when adding points to the `TGraph`, they are not sorted with respect to their X values. I noticed that this breaks the fitting algorithm. . In my particular case, the `TGraph` was filled ""backwards"" - starting with points with larger X values and adding points in decreasing X. Graph plots just fine and visually looks just the same the same as if it was filled in ascending X manner. However, a simple `""gaus""` fit did not converge and ended up having a negative normalization constant (`Constant` fitting parameter). # This Pull request:; Modifies the way the `BinData` object is populated with `TGraph` points. Instead of adding `TGraph`'s points to the `BinData` in the same pattern they are aligned in the memory, we add points to the `BinData` in strictly ascending order of their X values, starting with lowest. ## Changes or fixes:; An `indexRemap` vector is created prior to populating the `BinData` object for a `TGraph`. This vector governs a new iteration strategy for the `TGraph` points allowing for the adding of the graph points to the `BinData` starting with points with lowest X coordinate values and in ongoing ascending order. ## Checklist:. - [ yes ] tested changes locally; - [ not needed ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/11183
https://github.com/root-project/root/issues/11186:12,Testability,test,tests,12,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:88,Testability,test,test-testRooPoisson,88,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:164,Testability,test,test-testRooBinSamplingPdf,164,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:244,Testability,test,test-testNaNPacker,244,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:318,Testability,test,test-testRooSimultaneous,318,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:372,Testability,test,test-stressroofit,372,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
https://github.com/root-project/root/issues/11186:419,Testability,test,test-stressroofit-interpreted,419,"Many RooFit tests are failing when built with AddressSanitizer:; * `gtest-roofit-roofit-test-testRooPoisson` (`stack-use-after-return`); * `gtest-roofit-roofitcore-test-testRooBinSamplingPdf` (`heap-use-after-free`); * `gtest-roofit-roofitcore-test-testNaNPacker` (`stack-use-after-scope`); * `gtest-roofit-roofitcore-test-testRooSimultaneous` (`heap-use-after-free`); * `test-stressroofit` (`heap-use-after-free`); * `test-stressroofit-interpreted` (`heap-use-after-free`); * `tutorial-roofit-rf107_plotstyles` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood` (`heap-use-after-free`); * `tutorial-roofit-rf204b_extendedLikelihood_rangedFit` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph` (`stack-use-after-return`); * `tutorial-roofit-rf107_plotstyles-py` (`heap-use-after-free`); * `tutorial-roofit-rf203_ranges-py` (`heap-use-after-free`); * `tutorial-roofit-rf204a_extendedLikelihood-py` (`heap-use-after-free`); * `tutorial-roofit-rf212_plottingInRanges_blinding-py` (`heap-use-after-free`); * `tutorial-roofit-rf705_linearmorph-py` (`stack-use-after-return`). The top of the stack trace (for the first test) is:; ```; READ of size 8 at 0x7ff2148150b8 thread T0; #0 0x7ff21d16bd79 in RooFit::UniqueId<RooArgSet>::operator unsigned long() const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooFit/UniqueId.h:52:38; #1 0x7ff21d16bd79 in RooAbsPdf::getValV(RooArgSet const*) const /home/jhahnfel/ROOT/src/roofit/roofitcore/src/RooAbsPdf.cxx:369:36; #2 0x37edc6 in RooAbsReal::getVal(RooArgSet const&) const /home/jhahnfel/ROOT/src/roofit/roofitcore/inc/RooAbsReal.h:119:29; #3 0x37edc6 in RooPoisson_Bare_Test::TestBody()::$_0::operator()(int, double, double) const /home/jhahnfel/ROOT/src/roofit/roofit/test/testRooPoisson.cxx:21:5; #4 0x37e8e9 in RooPoisson_Bare_Test::TestBody() /home/jhahnfel/ROOT/src/roofit/roofit/test/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/11186
