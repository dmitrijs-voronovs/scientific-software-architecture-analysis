id,quality_attribute,keyword,matched_word,match_idx,sentence,source,filename,author,repo,version,wiki,url
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8620,Integrability,interface,interface,8620,":. getShape; public Shape getShape(); throws UnsupportedOperationException; It is not possible to convert a PointROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Descri",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8772,Integrability,interface,interface,8772,"ntROI to a java.awt.Shape.; throws UnsupportedOperationException. Specified by:; getShape in interface ROI; Returns:; Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; to",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:8877,Integrability,interface,interface,8877,"Throws:; UnsupportedOperationException. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLengt",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9056,Integrability,interface,interface,9056,"h between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeig",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9169,Integrability,interface,interface,9169,"tion copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9344,Integrability,interface,interface,9344,"y:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Descriptio",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9558,Integrability,interface,interface,9558,"ginal ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9670,Integrability,interface,interface,9670,"orizontal translation; dy - vertical translation; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stac",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:9886,Integrability,interface,interface,9886,"I; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10071,Integrability,interface,interface,10071,"rom interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10181,Integrability,interface,interface,10181,"idth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10352,Integrability,interface,interface,10352,"st is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10481,Integrability,interface,interface,10481,"s true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10555,Integrability,interface,interface,10555,"ains in interface ROI; Parameters:; x - ; y - ; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10680,Integrability,interface,interface,10680," ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10754,Integrability,interface,interface,10754,"of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeome",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10880,Integrability,interface,interface,10880,"th in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in in",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:10954,Integrability,interface,interface,10954,"th; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from int",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11123,Integrability,interface,interface,11123,"calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11205,Integrability,interface,interface,11205,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11327,Integrability,interface,interface,11327,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11409,Integrability,interface,interface,11409,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11493,Integrability,interface,interface,11493,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11577,Integrability,interface,interface,11577,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11686,Integrability,interface,interface,11686,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11779,Integrability,interface,interface,11779,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11878,Integrability,interface,interface,11878,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:11969,Integrability,interface,interface,11969,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:12138,Integrability,interface,interface,12138,"etScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:481,Modifiability,extend,extends,481,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:693,Modifiability,inherit,inherited,693,". PointsROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PointsROI. java.lang.Object; qupath.lib.roi.PointsROI. All Implemented Interfaces:; Serializable, ROI. public class PointsROI; extends Object; implements Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3689,Modifiability,inherit,inherited,3689,"le to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3818,Modifiability,inherit,inherited,3818," int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interfac",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:2208,Performance,cache,caches,2208,"ox. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y,; double maxDist). Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). It is not possible to convert a PointROI to a java.awt.Shape. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:5214,Performance,cache,caches,5214,"id. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would occur for a single-point ROI). Specified by:; isEmpty in interface ROI; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. toString; public String toString(). getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back after",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:3763,Security,hash,hashCode,3763,". Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). A Points ROI is empty if it contains no points (*not* if its bounds have no width or height... boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. protected void; recomputeBounds();  ; ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. protected void; updateBounds(double x,; double y);  ; ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. getNearest; public Point2 getNearest(double x,; double y,; double maxDist); Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. Parameters:; x - ; y - ; maxDist - ; Returns:. recomputeBounds; protected void recomputeBounds(). updateBounds; protected void updateBounds(double x,; double y). isEmpty; public boolean isEmpty(); A Points ROI is empty if it contains no points (*not* if its bounds have no width or height...; since this would ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PointsROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:1512,Availability,avail,available,1512,"ject; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; g",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10069,Availability,avail,available,10069,"s the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3326,Deployability,update,updatePlane,3326," calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6988,Deployability,update,updatePlane,6988,"nterface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7012,Deployability,update,updatePlane,7012,"nterface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7199,Deployability,update,updatePlane,7199,"ecified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11291,Energy Efficiency,efficient,efficient,11291,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:674,Integrability,interface,interfaces,674,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:700,Integrability,interface,interface,700,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:725,Integrability,interface,interfaces,725,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3578,Integrability,interface,interface,3578,"; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; ge",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3603,Integrability,interface,interfaces,3603,"idity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3710,Integrability,interface,interface,3710,"int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied fr",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3809,Integrability,interface,interface,3809,"y(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4013,Integrability,interface,interface,4013,"cted) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Descripti",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4215,Integrability,interface,interface,4215," ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4308,Integrability,interface,interface,4308,"ion of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; d",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4402,Integrability,interface,interface,4402," on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled vers",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4495,Integrability,interface,interface,4495,"alize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4589,Integrability,interface,interface,4589,"ce qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal sc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4694,Integrability,interface,interface,4694,"escription copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scal",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:4908,Integrability,interface,interface,4908,"Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5038,Integrability,interface,interface,5038,"OI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse""",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5154,Integrability,interface,interface,5154," Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of thi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5362,Integrability,interface,interface,5362,"s the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; getCentroidY in interface ROI; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getL",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5535,Integrability,interface,interface,5535,"escription copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, dou",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:5925,Integrability,interface,interface,5925,"ers:; x - ; y - ; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape obj",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6068,Integrability,interface,interface,6068,"anslated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6151,Integrability,interface,interface,6151,"ranslate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different Im",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6256,Integrability,interface,interface,6256,"c ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new pl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6389,Integrability,interface,interface,6389,"ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; G",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6605,Integrability,interface,interface,6605,"tical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6737,Integrability,interface,interface,6737,"iginY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public dou",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:6963,Integrability,interface,interface,6963,"ntation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7067,Integrability,interface,interface,7067,"nterface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7214,Integrability,interface,interface,7214,"ecified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7356,Integrability,interface,interface,7356,"Length(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public doub",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7673,Integrability,interface,interface,7673,"double). getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bo",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7806,Integrability,interface,interface,7806,"this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Descripti",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:7919,Integrability,interface,interface,7919,"ied by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8126,Integrability,interface,interface,8126,"g the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8236,Integrability,interface,interface,8236,"plane to use; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lin",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8397,Integrability,interface,interface,8397," the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interf",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8509,Integrability,interface,interface,8509," represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8598,Integrability,interface,interface,8598,"d regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from inte",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8710,Integrability,interface,interface,8710,"Area; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Sp",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8807,Integrability,interface,interface,8807,"d from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8899,Integrability,interface,interface,8899,"ed by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a ti",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:8998,Integrability,interface,interface,8998,"e Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9092,Integrability,interface,interface,9092,"e pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9186,Integrability,interface,interface,9186,"cified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9301,Integrability,interface,interface,9301,"urns:; See Also:. ROI.getLength(). getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9400,Integrability,interface,interface,9400,"I; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9529,Integrability,interface,interface,9529,"Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9603,Integrability,interface,interface,9603,"interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9728,Integrability,interface,interface,9728,"urns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9802,Integrability,interface,interface,9802,"copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:9928,Integrability,interface,interface,9928,"oundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10002,Integrability,interface,interface,10002,"s the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10171,Integrability,interface,interface,10171,"on copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10297,Integrability,interface,interface,10297,"pe in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more effic",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10586,Integrability,interface,interface,10586,"cription copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Spe",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10668,Integrability,interface,interface,10668,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10790,Integrability,interface,interface,10790,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10872,Integrability,interface,interface,10872,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10956,Integrability,interface,interface,10956,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11040,Integrability,interface,interface,11040,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11149,Integrability,interface,interface,11149,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11349,Integrability,interface,interface,11349,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11440,Integrability,interface,interface,11440,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:11609,Integrability,interface,interface,11609,"ce index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:485,Modifiability,extend,extends,485,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:685,Modifiability,inherit,inherited,685,". PolygonROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolygonROI. java.lang.Object; qupath.lib.roi.PolygonROI. All Implemented Interfaces:; Serializable, ROI. public class PolygonROI; extends Object; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3434,Modifiability,inherit,inherited,3434," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3563,Modifiability,inherit,inherited,3563,"; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Specified by:; ge",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:2034,Performance,cache,caches,2034," list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:10495,Performance,cache,caches,10495,"ect. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:3508,Security,hash,hashCode,3508,"turns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. int; nVertices(). Get the total number of vertices in the polygon. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. nVertices; public int nVertices(); Get the total number of vertices in the polygon. Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolygonROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:1514,Availability,avail,available,1514,"Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelH",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9790,Availability,avail,available,9790,"le x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3337,Deployability,update,updatePlane,3337,"dth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8409,Deployability,update,updatePlane,8409,"; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8433,Deployability,update,updatePlane,8433,"; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8620,Deployability,update,updatePlane,8620,"ht); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in inte",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:11204,Energy Efficiency,efficient,efficient,11204," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:676,Integrability,interface,interfaces,676,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:702,Integrability,interface,interface,702,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:727,Integrability,interface,interfaces,727,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3589,Integrability,interface,interface,3589,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3614,Integrability,interface,interfaces,3614,"ing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; ge",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3717,Integrability,interface,interface,3717,"hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3860,Integrability,interface,interface,3860,"s an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHe",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4045,Integrability,interface,interface,4045,"int(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4230,Integrability,interface,interface,4230,"I. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined fo",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4319,Integrability,interface,interface,4319,"ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4431,Integrability,interface,interface,4431,"gePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4520,Integrability,interface,interface,4520," notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4632,Integrability,interface,interface,4632," scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4729,Integrability,interface,interface,4729,"rface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4821,Integrability,interface,interface,4821,"e"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:4920,Integrability,interface,interface,4920," getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The orig",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5014,Integrability,interface,interface,5014," box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal tr",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5113,Integrability,interface,interface,5113,"; The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5430,Integrability,interface,interface,5430,"X in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5540,Integrability,interface,interface,5540,"coordinate for the top left of the ROI bounding box. Specified by:; getBoundsY in interface ROI; Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5742,Integrability,interface,interface,5742," ROI; Returns the width of the ROI bounding box. Specified by:; getBoundsWidth in interface ROI; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5847,Integrability,interface,interface,5847,"; Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Specified by:; getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:5963,Integrability,interface,interface,5963,"getBoundsHeight in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Speci",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6119,Integrability,interface,interface,6119,"pied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale valu",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6335,Integrability,interface,interface,6335,"ains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double)",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6520,Integrability,interface,interface,6520,"; Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6630,Integrability,interface,interface,6630,"ds being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHei",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:6841,Integrability,interface,interface,6841,"; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7014,Integrability,interface,interface,7014,"; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copie",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7398,Integrability,interface,interface,7398,"h(double, double). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in inter",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7503,Integrability,interface,interface,7503," copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Cre",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7682,Integrability,interface,interface,7682,"h - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7795,Integrability,interface,interface,7795,"escription copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI con",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:7959,Integrability,interface,interface,7959," unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8074,Integrability,interface,interface,8074,"ue; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public Im",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8158,Integrability,interface,interface,8158,"x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8384,Integrability,interface,interface,8384,"ion copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8488,Integrability,interface,interface,8488,"; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8635,Integrability,interface,interface,8635,"ht); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in inte",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8783,Integrability,interface,interface,8783,"; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI re",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:8997,Integrability,interface,interface,8997,"uish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9121,Integrability,interface,interface,9121,"); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; p",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9250,Integrability,interface,interface,9250,"at PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9324,Integrability,interface,interface,9324,"ely be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface RO",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9449,Integrability,interface,interface,9449,"ePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line se",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9523,Integrability,interface,interface,9523," ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interf",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9649,Integrability,interface,interface,9649," Parameters:; plane - the new plane to use; Returns:. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an are",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9723,Integrability,interface,interface,9723,"le x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9892,Integrability,interface,interface,9892,"ere ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10018,Integrability,interface,interface,10018,"meters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Ge",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10307,Integrability,interface,interface,10307,"cription copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10389,Integrability,interface,interface,10389,"is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10511,Integrability,interface,interface,10511," copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10593,Integrability,interface,interface,10593," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10677,Integrability,interface,interface,10677," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10761,Integrability,interface,interface,10761," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10870,Integrability,interface,interface,10870," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10963,Integrability,interface,interface,10963," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:11062,Integrability,interface,interface,11062," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:11262,Integrability,interface,interface,11262," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:11353,Integrability,interface,interface,11353," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:11522,Integrability,interface,interface,11522," point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:489,Modifiability,extend,extends,489,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:687,Modifiability,inherit,inherited,687,". PolylineROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class PolylineROI. java.lang.Object; qupath.lib.roi.PolylineROI. All Implemented Interfaces:; Serializable, ROI. public class PolylineROI; extends Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. doubl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3445,Modifiability,inherit,inherited,3445,"caledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3574,Modifiability,inherit,inherited,3574,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:2112,Performance,cache,caches,2112," the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:10216,Performance,cache,caches,10216,"ect. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:3519,Security,hash,hashCode,3519," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Method Details. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getCentroidX; public double getCentroidX(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidX in interface ROI; Returns:. getCentroidY; public double getCentroidY(); The centroid for a Polyline here is represented by the centroid of its bounding box. Specified by:; getCentroidY in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Specified by:; getBoundsX in interface ROI; Returns:. getBoundsY; public double getBoundsY(); Description copied from i",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/PolylineROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:1673,Availability,avail,available,1673,"ry. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the rectangle is defined by its bounding box). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Re",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9600,Availability,avail,available,9600,"nding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3407,Deployability,update,updatePlane,3407,"dth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6943,Deployability,update,updatePlane,6943,"awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCe",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6967,Deployability,update,updatePlane,6967,"awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCe",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7154,Deployability,update,updatePlane,7154,"ect. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6651,Energy Efficiency,efficient,efficient,6651,"he vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:675,Integrability,interface,interfaces,675,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:701,Integrability,interface,interface,701,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:726,Integrability,interface,interfaces,726,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3659,Integrability,interface,interface,3659,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); D",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3684,Integrability,interface,interfaces,3684,"ing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3914,Integrability,interface,interface,3914," if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4128,Integrability,interface,interface,4128," ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4242,Integrability,interface,interface,4242,"uble originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplica",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4385,Integrability,interface,interface,4385,"ersion of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4546,Integrability,interface,interface,4546,"ang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public Lis",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4679,Integrability,interface,interface,4679,"face qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4792,Integrability,interface,interface,4792,"2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that co",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:4999,Integrability,interface,interface,4999,"s.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5109,Integrability,interface,interface,5109,"erface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5291,Integrability,interface,interface,5291,"ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); D",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5493,Integrability,interface,interface,5493,"ed by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal transla",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5592,Integrability,interface,interface,5592,"c double getScaledArea(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get scaled area of the ROI, for use with calibrated pixel sizes. Specified by:; getScaledArea in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getArea(). getScaledLength; public double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default impleme",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5909,Integrability,interface,interface,5909,"ublic double getScaledLength(double pixelWidth,; double pixelHeight); Description copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; g",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:5993,Integrability,interface,interface,5993,"cription copied from interface: ROI; Get the scaled length, for use with calibrated pixel sizes. Specified by:; getScaledLength in interface ROI; Parameters:; pixelWidth - ; pixelHeight - ; Returns:; See Also:. ROI.getLength(). duplicate; @Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6219,Integrability,interface,interface,6219,"@Deprecated; public ROI duplicate(); Deprecated.; Description copied from interface: ROI; Create a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plan",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6324,Integrability,interface,interface,6324,"te a duplicate of the ROI.; ; This method is deprecated, since ROIs are (or are moving towards being) immutable... making it pointless to duplicate them. Specified by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; do",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6440,Integrability,interface,interface,6440,"ed by:; duplicate in interface ROI; Returns:. getAllPoints; public List<Point2> getAllPoints(); Description copied from interface: ROI; Get a list of points representing the vertices of the ROI.; ; This is only really well-defined for ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6709,Integrability,interface,interface,6709,"or ROIs where a single set of vertices represents the shape completely; ; the expected output for a ROI that contains holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwar",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6803,Integrability,interface,interface,6803,"holes or disconnected regions is (currently) undefined. Specified by:; getAllPoints in interface ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:6918,Integrability,interface,interface,6918,"ace ROI; Returns:. getShape; public Shape getShape(); Description copied from interface: ROI; Returns a java.awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied fr",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7022,Integrability,interface,interface,7022,"awt.Shape representing this ROI, if possible.; ; Note that PointROI throws an UnsupportedOperationException as it cannot ; adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCe",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7169,Integrability,interface,interface,7169,"ect. Specified by:; getShape in interface ROI; Returns:. translate; public ROI translate(double dx,; double dy); Description copied from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7351,Integrability,interface,interface,7351,"from interface: ROI; Create a translated version of this ROI. The original ROI is unchanged. Specified by:; translate in interface ROI; Parameters:; dx - horizontal translation; dy - vertical translation; Returns:. getConvexHull; public ROI getConvexHull(); Default implementation using JTS. Subclasses may replace this with a more efficient implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7524,Integrability,interface,interface,7524," implementation. Specified by:; getConvexHull in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:7918,Integrability,interface,interface,7918," in interface ROI; Returns:. updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Descript",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8059,Integrability,interface,interface,8059,"defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8233,Integrability,interface,interface,8233,"rns:. scale; public ROI scale(double scaleX,; double scaleY,; double originX,; double originY); Description copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-sta",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8322,Integrability,interface,interface,8322,"cription copied from interface: ROI; Create a scaled version of this ROI. Coordinates are multiplied by the given ; scaling factors, while the original ROI is unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied fro",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8479,Integrability,interface,interface,8479,"s unchanged. Specified by:; scale in interface ROI; Parameters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8644,Integrability,interface,interface,8644,"racted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8787,Integrability,interface,interface,8787,"added back afterwards; Returns:; See Also:. ROI.scale(double, double). getCentroidX; public double getCentroidX(); Description copied from interface: ROI; Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toSt",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:8931,Integrability,interface,interface,8931," the x coordinate for the ROI centroid. Returns:. getCentroidY; public double getCentroidY(); Description copied from interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not encl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9060,Integrability,interface,interface,9060,"rom interface: ROI; Returns the y coordinate for the ROI centroid. Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9134,Integrability,interface,interface,9134,":. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. getBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specifie",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9259,Integrability,interface,interface,9259,"etBoundsX; public double getBoundsX(); Description copied from interface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9333,Integrability,interface,interface,9333,"rface: ROI; Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; public double getBoundsY(); Description copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9459,Integrability,interface,interface,9459,"ription copied from interface: ROI; Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a o",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9533,Integrability,interface,interface,9533,"nding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9702,Integrability,interface,interface,9702," Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9858,Integrability,interface,interface,9858,"c ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI l",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:9980,Integrability,interface,interface,9980,"ns the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10062,Integrability,interface,interface,10062,"terface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLeng",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10146,Integrability,interface,interface,10146,"ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getS",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10230,Integrability,interface,interface,10230,"fied by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the soli",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10339,Integrability,interface,interface,10339,"rface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10432,Integrability,interface,interface,10432,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10531,Integrability,interface,interface,10531,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10614,Integrability,interface,interface,10614,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10719,Integrability,interface,interface,10719,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:10852,Integrability,interface,interface,10852,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:11068,Integrability,interface,interface,11068,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:11207,Integrability,interface,interface,11207,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:11376,Integrability,interface,interface,11376,"t relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Returns:. getArea; public double getArea(); Description copied from interface: ROI; Get the area of this ROI. For lines and points this returns 0. Specified by:; getArea in interface ROI; Returns:; See Also:. ROI.getScaledArea(double, double). getLength; public double getLength(); Description copied from interface: ROI; Get ROI length.; This is defined as; ; perimeter in the case of area ROIs; total length of line segments in the case of line or polyline ROIs; 0 in the case of point ROIs. Specified by:; getLength in interface ROI; Returns:; See Also:. ROI.getScaledLength(double, double). getSolidity; public double getSolidity(); Description copied from interface: ROI; Calculate the solidity, defined as ROI area / convex hull area.; Returns Double.NaN if the ROI does not represent an area. Specified by:; getSolidity in interface ROI; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:493,Modifiability,extend,extends,493,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:686,Modifiability,inherit,inherited,686,". RectangleROI (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RectangleROI. java.lang.Object; qupath.lib.roi.RectangleROI. All Implemented Interfaces:; Serializable, ROI. public class RectangleROI; extends Object; implements Serializable; ROI representing a square or rectangle (unrotated). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Field Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3515,Modifiability,inherit,inherited,3515,"caledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3644,Modifiability,inherit,inherited,3644,"Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; public double getScaledArea(double pixelWidth,; double pixelHeight); D",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html:3589,Security,hash,hashCode,3589," length, for use with calibrated pixel sizes. Shape; getShape(). Returns a java.awt.Shape representing this ROI, if possible. double; getSolidity(). Calculate the solidity, defined as ROI area / convex hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). True if the bounding box has zero area. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. String; toString();  ; ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.roi.interfaces.ROI; scale. Field Details. x; protected double x. y; protected double y. x2; protected double x2. y2; protected double y2. Method Details. contains; public boolean contains(double x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getRoiName; public String getRoiName(); Description copied from interface: ROI; Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Specified by:; getRoiName in interface ROI; Returns:. getNumPoints; public int getNumPoints(); Returns 4 (since the rectangle is defined by its bounding box). Specified by:; getNumPoints in interface ROI; Returns:. getScaledArea; publi",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RectangleROI.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RectangleROI.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:2034,Availability,avail,available,2034,"ht be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:5582,Availability,avail,available,5582," ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest ha",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6389,Availability,error,error,6389,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:2539,Deployability,update,updated,2539,"er and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public stat",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:2778,Deployability,update,update,2778,"be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void se",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3211,Deployability,update,updateTranslation,3211,"le(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns tr",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:4450,Deployability,update,updateTranslation,4450," public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslation; public ROI updateTranslation(double x,; double y,; ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:4480,Deployability,update,updateTranslation,4480," public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslation; public ROI updateTranslation(double x,; double y,; ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6115,Deployability,update,updated,6115,"erwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6871,Deployability,update,update,6871,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:433,Modifiability,extend,extends,433,". RoiEditor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RoiEditor. java.lang.Object; qupath.lib.roi.RoiEditor. public class RoiEditor; extends Object; Helper class for interactively modifying existing ROIs.; ; Modification of ROIs has been made intentionally quite awkward to help ensure they are fairly consistent; (i.e. limited mutability), but this can be a bit infuriating when the user wishes to make annotations interactively.; ; Also, currently PathObjects have their ROIs set at creation time - adding further annoyance to the lack of easy ROI editability.; ; RoiEditors provide GUIs with a mechanism for controlled ROI manipulation, when the natural alternative ; (creating new ROIs) might be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3384,Modifiability,inherit,inherited,3384,"boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, reques",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:1819,Safety,avoid,avoid,1819,"s have their ROIs set at creation time - adding further annoyance to the lack of easy ROI editability.; ; RoiEditors provide GUIs with a mechanism for controlled ROI manipulation, when the natural alternative ; (creating new ROIs) might be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:5426,Safety,avoid,avoid,5426," Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslation; public ROI updateTranslation(double x,; double y,; ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6986,Safety,avoid,avoid,6986,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:3458,Security,hash,hashCode,3458,"hrough this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI translation currently in progress. boolean; startTranslation(double x,; double y,; boolean snapToPixel). Returns true if the current ROI is translatable, and at the end of this call the translation has started. ROI; updateTranslation(double x,; double y,; ImageRegion constrainRegion). Update a ROI by translation, optionally constraining its movement within a specified boundary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createInstance; public static RoiEditor createInstance(); Create a new RoiEditor. Returns:. setROI; public void setROI(ROI roi); Set the active ROI, stopping any ROI translation currently in progress. Parameters:; roi - . setROI; public void setROI(ROI roi,; boolean stopTranslating); Set the active ROI, optionally stopping any ROI translation currently in progress. Parameters:; roi - ; stopTranslating - if true, then any ROI currently being translated will have its translation completed.; Normally this should be true, but it may be false if the new ROI being set is part of the same translation event. startTranslation; public boolean startTranslation(double x,; double y,; boolean snapToPixel); Returns true if the current ROI is translatable, and at the end of this call the translation has started. Parameters:; x - ; y - ; snapToPixel - if true, request that translations snap to pixel coordinates; Returns:. updateTranslati",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:6395,Testability,log,logged,6395,"through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest handle; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. setActiveHandlePosition; public ROI setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown); If a handle has been grabbed, update its displacement. Parameters:; x - ; y - ; minDisplacement - if > 0, smaller movements will be discarded to avoid unnecessary work.; shiftDown - determined from a MouseEvent, this may optionally be used to control how the handle is modified ; (e.g. to enforce a square bounding box for a rectangle or ellipse).; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiEditor.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:413,Modifiability,extend,extends,413,". ROIs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ROIs. java.lang.Object; qupath.lib.roi.ROIs. public class ROIs; extends Object; This class consists exclusively of static methods that operate on or return regions of interest (ROIs).; ; These methods should be used rather than constructors for individual ROI types. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ROIs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI; createAreaROI(Shape shape,; ImagePlane plane). Create an area ROI representing a 2D shape. static ROI; createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create an ellipse ROI defined by its bounding box. static ROI; createEmptyROI(). Create an 'empty' ROI with no length or area. static ROI; createLineROI(double x,; double y,; double x2,; double y2,; ImagePlane plane). Create a line ROI with start and end coordinates. static ROI; createLineROI(double x,; double y,; ImagePlane plane). Create a ROI representing a line with zero length. static ROI; createPointsROI(double[] x,; double[] y,; ImagePlane plane). Create a points ROI from an array of x and y coordinates. static ROI; createPointsROI(double x,; double y,; ImagePlane plane). Create a points ROI containing a single point. static ROI; createPointsROI(List<? extends Point2> points,; ImagePlane plane). Create a points ROI from a list of points. static ROI; createPointsROI(ImagePlane plane). Create an empty points ROI. static ROI; createPolygonROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolygonROI; crea",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:1683,Modifiability,extend,extends,1683,"; Description; ROIs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ROI; createAreaROI(Shape shape,; ImagePlane plane). Create an area ROI representing a 2D shape. static ROI; createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create an ellipse ROI defined by its bounding box. static ROI; createEmptyROI(). Create an 'empty' ROI with no length or area. static ROI; createLineROI(double x,; double y,; double x2,; double y2,; ImagePlane plane). Create a line ROI with start and end coordinates. static ROI; createLineROI(double x,; double y,; ImagePlane plane). Create a ROI representing a line with zero length. static ROI; createPointsROI(double[] x,; double[] y,; ImagePlane plane). Create a points ROI from an array of x and y coordinates. static ROI; createPointsROI(double x,; double y,; ImagePlane plane). Create a points ROI containing a single point. static ROI; createPointsROI(List<? extends Point2> points,; ImagePlane plane). Create a points ROI from a list of points. static ROI; createPointsROI(ImagePlane plane). Create an empty points ROI. static ROI; createPolygonROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolygonROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:2912,Modifiability,inherit,inherited,2912,"reate a polygon ROI from an array of x and y coordinates. static PolygonROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:4704,Modifiability,extend,extends,4704,"OI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,; double x2,; double y2,; ImagePlane plane); Create a line ROI with start and end coordinates. Parameters:; x - ; y - ; x2 - ; y2 - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,; ImagePlane plane); Create a ROI representing a line with zero length. Parameters:; x - ; y - ; plane - ; Returns:. createPointsROI; public static ROI createPointsROI(ImagePlane plane); Create an empty points ROI. Parameters:; plane - ; Returns:. createPointsROI; public static ROI createPointsROI(double x,; double y,; ImagePlane plane); Create a points ROI containing a single point. Parameters:; x - ; y - ; plane - ; Returns:. createPointsROI; public static ROI createPointsROI(List<? extends Point2> points,; ImagePlane plane); Create a points ROI from a list of points. Parameters:; points - ; plane - ; Returns:. createPointsROI; public static ROI createPointsROI(double[] x,; double[] y,; ImagePlane plane); Create a points ROI from an array of x and y coordinates. Parameters:; x - ; y - ; plane - ; Returns:. createPolygonROI; public static PolygonROI createPolygonROI(List<Point2> points,; ImagePlane plane); Create a closed polygon ROI from a list of points. Parameters:; points - ; plane - ; Returns:. createPolygonROI; public static ROI createPolygonROI(double[] x,; double[] y,; ImagePlane plane); Create a polygon ROI from an array of x and y coordinates. Parameters:; x - ; y - ; plane - ; Returns:. createPolygonROI; public static PolygonROI createPolygonROI(double x,; double y,; ImagePlane plane); Create an empty, closed polygon ROI consisting of a single point. Parameters:; x - ; y - ; plane - ; Returns:. createPolylineROI; public static PolylineROI createPolylineROI(List<Point2",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html:2986,Security,hash,hashCode,2986,"ROI; createPolygonROI(double x,; double y,; ImagePlane plane). Create an empty, closed polygon ROI consisting of a single point. static PolygonROI; createPolygonROI(List<Point2> points,; ImagePlane plane). Create a closed polygon ROI from a list of points. static ROI; createPolylineROI(double[] x,; double[] y,; ImagePlane plane). Create a polygon ROI from an array of x and y coordinates. static PolylineROI; createPolylineROI(double x,; double y,; ImagePlane plane). Create an empty polyline ROI consisting of a single point. static PolylineROI; createPolylineROI(List<Point2> points,; ImagePlane plane). Create a polyline ROI from a list of points. static ROI; createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane). Create a rectangle ROI defined by its bounding box. static ROI; createRectangleROI(ImageRegion region). Create a rectangle ROI that matches an ImageRegion. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ROIs; public ROIs(). Method Details. createEmptyROI; public static ROI createEmptyROI(); Create an 'empty' ROI with no length or area.; ; The only guarantee is that it will return isEmpty() == true. Returns:. createRectangleROI; public static ROI createRectangleROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create a rectangle ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createRectangleROI; public static ROI createRectangleROI(ImageRegion region); Create a rectangle ROI that matches an ImageRegion. Parameters:; region - ; Returns:. createEllipseROI; public static ROI createEllipseROI(double x,; double y,; double width,; double height,; ImagePlane plane); Create an ellipse ROI defined by its bounding box. Parameters:; x - ; y - ; width - ; height - ; plane - ; Returns:. createLineROI; public static ROI createLineROI(double x,; double y,",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ROIs.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ROIs.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:764,Integrability,interface,interfaces,764,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:662,Modifiability,extend,extends,662,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:775,Modifiability,inherit,inherited,775,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:828,Modifiability,extend,extends,828,". RoiTools.CombineOp (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.roi; Enum Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1384,Modifiability,inherit,inherited,1384,"m Class RoiTools.CombineOp. java.lang.Object; java.lang.Enum<RoiTools.CombineOp>; qupath.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this cl",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1547,Modifiability,inherit,inherited,1547,"parable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html:1495,Security,hash,hashCode,1495,"path.lib.roi.RoiTools.CombineOp. All Implemented Interfaces:; Serializable, Comparable<RoiTools.CombineOp>, Constable. Enclosing class:; RoiTools. public static enum RoiTools.CombineOp; extends Enum<RoiTools.CombineOp>; Methods of combining two ROIs. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; ADD. Add ROIs (union). INTERSECT. Calculate intersection (overlap) between ROIs. SUBTRACT. Subtract from first ROI. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiTools.CombineOp; valueOf(String name). Returns the enum constant of this class with the specified name. static RoiTools.CombineOp[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. ADD; public static final RoiTools.CombineOp ADD; Add ROIs (union). SUBTRACT; public static final RoiTools.CombineOp SUBTRACT; Subtract from first ROI. INTERSECT; public static final RoiTools.CombineOp INTERSECT; Calculate intersection (overlap) between ROIs. Method Details. values; public static RoiTools.CombineOp[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static RoiTools.CombineOp valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - th",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.CombineOp.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1717,Availability,mask,mask,1717," Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs.",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1872,Availability,mask,mask,1872,"Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1931,Availability,mask,mask,1931," area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2102,Availability,mask,mask,2102,"ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDist",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2153,Availability,mask,mask,2153,"on<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distan",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2308,Availability,mask,mask,2308,"ts that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. static double; getCentroidDistance(",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2356,Availability,mask,mask,2356,"c Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2569,Availability,mask,mask,2569,"lap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. st",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17061,Availability,mask,mask,17061,"e ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to cre",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17249,Availability,mask,mask,17249,"e ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to cre",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17275,Availability,mask,mask,17275,"list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17545,Availability,mask,mask,17545,"list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17601,Availability,mask,mask,17601,"list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17746,Availability,mask,mask,17746,".; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17950,Availability,mask,mask,17950,".; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17976,Availability,mask,mask,17976,"eight, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentExce",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18318,Availability,mask,mask,18318,"eight, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentExce",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18374,Availability,mask,mask,18374,"eight, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentExce",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18511,Availability,mask,mask,18511,"Exception - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18699,Availability,mask,mask,18699,"Exception - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18816,Availability,mask,mask,18816,"ing the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19089,Availability,mask,mask,19089,"ing the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19225,Availability,mask,mask,19225,"ing the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the R",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19439,Availability,mask,mask,19439,"IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19685,Availability,mask,mask,19685,"IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19756,Availability,mask,mask,19756,"te; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double). areaContains; public static boolean areaContains(ROI pathROI,; double x,; double y); Returns true if pathROI is an area that contains x & y somewhere within it. Parameters:; pathROI - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:20149,Availability,mask,mask,20149,"te; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double). areaContains; public static boolean areaContains(ROI pathROI,; double x,; double y); Returns true if pathROI is an area that contains x & y somewhere within it. Parameters:; pathROI - ;",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:20519,Availability,mask,mask,20519,"a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double). areaContains; public static boolean areaContains(ROI pathROI,; double x,; double y); Returns true if pathROI is an area that contains x & y somewhere within it. Parameters:; pathROI - ; x - ; y - ; Returns:. isShapeROI; public static boolean isShapeROI(ROI roi); Returns true if the ROI is not null and is not a point ROI. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:20655,Availability,mask,mask,20655,"a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double). areaContains; public static boolean areaContains(ROI pathROI,; double x,; double y); Returns true if pathROI is an area that contains x & y somewhere within it. Parameters:; pathROI - ; x - ; y - ; Returns:. isShapeROI; public static boolean isShapeROI(ROI roi); Returns true if the ROI is not null and is not a point ROI. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:10597,Deployability,update,updated,10597,"-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outside parent. fillHoles; public static ROI fillHoles(ROI roi); Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. Parameters:; roi - ; Returns:. removeSmallPieces; public static ROI removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels); Remove small fragments and fill small holes of an area ROI. Parameters:; roi - the ROI to refine; minAreaPixels - the minimum size of a fragment to retain; minHoleAreaPixels - the minimum size of a hole to retain, or -1 if all holes should be retained; Returns:; an updated ROI - which may be empty if the modifications caused the ROI to disappear; See Also:. GeometryTools.refineAreas(Geometry, double, double). getCircularity; public static double getCircularity(ROI roi); Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2).; Non-area ROIs return Double.NaN.; ; This ranges between 0 (for a line) and 1 (for a circle). Note that the pixel (i.e. not scaled) areas and perimeters are used. Parameters:; roi - the ROI to measure; Returns:; a circularity value, between 0 (a line) and 1 (a perfect circle). getCircularity; public static double getCircularity(ROI roi,; double pixelWidth,; double pixelHeight); Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2).; Non-area ROIs return Double.NaN.; ; This ranges between 0 (for a line) and 1 (for a circle). This version optionally allows non-square pixels t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:15639,Energy Efficiency,efficient,efficient,15639,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:429,Modifiability,extend,extends,429,". RoiTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RoiTools. java.lang.Object; qupath.lib.roi.RoiTools. public class RoiTools; extends Object; A collection of static methods for working with ROIs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RoiTools.CombineOp. Methods of combining two ROIs. Constructor Summary; Constructors. Constructor; Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randoml",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1157,Modifiability,extend,extends,1157,"Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class RoiTools. java.lang.Object; qupath.lib.roi.RoiTools. public class RoiTools; extends Object; A collection of static methods for working with ROIs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RoiTools.CombineOp. Methods of combining two ROIs. Constructor Summary; Constructors. Constructor; Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandom",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1399,Modifiability,extend,extends,1399," static methods for working with ROIs. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; RoiTools.CombineOp. Methods of combining two ROIs. Constructor Summary; Constructors. Constructor; Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:4191,Modifiability,extend,extends,4191,"two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. static double; getCircularity(ROI roi). Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). static double; getCircularity(ROI roi,; double pixelWidth,; double pixelHeight). Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). static Shape; getShape(ROI roi). Get a Shape object representing a ROI. static ROI; getShapeROI(Area area,; ImagePlane plane). Create a ROI from an Shape. static ROI; getShapeROI(Shape shape,; ImagePlane plane,; double flatness). Create a ROI from an Shape with a specified 'flatness'. static ROI; intersection(Collection<? extends ROI> rois). Create intersection of multiple ROIs from a collection. static ROI; intersection(ROI... rois). Create intersection of multiple ROIs. static boolean; intersectsRegion(ROI roi,; ImageRegion region). Test whether a ROI and an ImageRegion intersect. static boolean; isShapeROI(ROI roi). Returns true if the ROI is not null and is not a point ROI. static List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of RO",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5124,Modifiability,extend,extends,5124," an Shape with a specified 'flatness'. static ROI; intersection(Collection<? extends ROI> rois). Create intersection of multiple ROIs from a collection. static ROI; intersection(ROI... rois). Create intersection of multiple ROIs. static boolean; intersectsRegion(ROI roi,; ImageRegion region). Test whether a ROI and an ImageRegion intersect. static boolean; isShapeROI(ROI roi). Returns true if the ROI is not null and is not a point ROI. static List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collec",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5562,Modifiability,extend,extends,5562,"tatic List<ROI>; makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI). Make fixed-size rectangular tile ROIs for a specified area. static ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. ar",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5702,Modifiability,inherit,inherited,5702,"c ROI; removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fa",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:6121,Modifiability,extend,extends,6121,"ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Collection<? extends ROI> rois); Create intersection of multiple ROIs from a collection.; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(ROI.",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:6791,Modifiability,extend,extends,6791,"yAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Collection<? extends ROI> rois); Create intersection of multiple ROIs from a collection.; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(ROI... rois); Create intersection of multiple ROIs.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. difference; public static ROI difference(ROI roi1,; ROI roi2); Compute the difference between two ROIs.; This is equivalent to calling subtract(ROI, ROI...) to subtract roi2 from roi1. Parameters:; roi1 - the main ROI; roi2 - the ROI to subtract; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. symDifference; public static ROI ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:8426,Modifiability,extend,extends,8426,"fference; public static ROI difference(ROI roi1,; ROI roi2); Compute the difference between two ROIs.; This is equivalent to calling subtract(ROI, ROI...) to subtract roi2 from roi1. Parameters:; roi1 - the main ROI; roi2 - the ROI to subtract; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. symDifference; public static ROI symDifference(ROI roi1,; ROI roi2); Compute the symmetric difference between two ROIs (XOR). Parameters:; roi1 - the first ROI; roi2 - the second ROI; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9646,Modifiability,extend,extends,9646," the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outside parent. fillHoles; public static ROI fillHoles(ROI roi); Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. Parameters:; roi - ; Returns:. removeSmallPieces; public static ROI removeSmallPieces(ROI roi,; double minAreaPixels,; double minHoleAreaPixels); Remove small fragments and fill small holes of an area ROI. Parameters:; roi - the ROI to refine; minAreaPixels - the minimum size of a fragment to retain; minHoleAreaPixels - the minimum size of a hole to retain, or -1 if all holes should be retained; Returns:; an updated ROI - which may be empty if the modifications caused the ROI t",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:14940,Modifiability,extend,extends,14940," throws IllegalArgumentException; Get a Shape object representing a ROI.; Previously this did more work; now it only calls ROI.getShape(). Parameters:; roi - ; Returns:; Throws:; IllegalArgumentException - if the ROI is a Point ROI, which cannot be converted to a java.awtshape. getArea; public static Area getArea(ROI roi); Get an Area object representing a ROI. Parameters:; roi - ; Returns:. makeTiles; public static List<ROI> makeTiles(ROI roi,; int tileWidth,; int tileHeight,; boolean trimToROI); Make fixed-size rectangular tile ROIs for a specified area. Parameters:; roi - area to be tiled; tileWidth - requested tile width, in pixels; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI,",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9045,Performance,perform,performed,9045,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:16217,Performance,perform,performed,16217,"aps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and heigh",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:15721,Safety,avoid,avoid,15721,"els; tileHeight - requested tile height, in pixels; trimToROI - if true, trim tiles at the ROI boundary according to the ROI shape, otherwise retain full tiles that may only partially overlap; Returns:. computeTiledROIs; public static Collection<? extends ROI> computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap); Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps.; ; The purpose of this is to create useful tiles whenever the exact tile size may not be essential, and overlaps may be required.; Tiles at the parentROI boundary will be trimmed to fit inside. If the parentROI is smaller, it is returned as is. Parameters:; parentROI - main ROI to be tiled; sizePreferred - the preferred size; in general tiles should have this size; sizeMax - the maximum allowed size; occasionally it is more efficient to have a tile larger than the preferred size towards a ROI boundary to avoid creating very small tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array return",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:5776,Security,hash,hashCode,5776,"AreaPixels). Remove small fragments and fill small holes of an area ROI. static PolygonROI[][]; splitAreaToPolygons(Area area,; int c,; int z,; int t). Split Area into PolygonROIs for the exterior and the holes. static List<ROI>; splitROI(ROI roi). Split a multi-part ROI into separate pieces. static ROI; subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract). Subtract a collection of ROIs from another ROI. static ROI; subtract(ROI roiMain,; ROI... roisToSubtract). Subtract one or more ROIs from another ROI. static ROI; symDifference(ROI roi1,; ROI roi2). Compute the symmetric difference between two ROIs (XOR). static ROI; transformROI(ROI roi,; AffineTransform transform). Apply an affine transform to a ROI, returning the result. static ROI; union(Collection<? extends ROI> rois). Create union of multiple ROIs from a collection. static ROI; union(ROI... rois). Create union of multiple ROIs. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. RoiTools; public RoiTools(). Method Details. combineROIs; public static ROI combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op); Combine two shape ROIs together. Parameters:; shape1 - ; shape2 - ; op - ; Returns:. union; public static ROI union(Collection<? extends ROI> rois); Create union of multiple ROIs from a collection.; This assumes that ROIs fall on the same plane, if not an IllegalArgumentException ; will be thrown. Similarly, ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:. union; public static ROI union(ROI... rois); Create union of multiple ROIs. ; ROIs must be of a similar type (e.g. area, point) or an exception will be thrown by Java Topology Suite. Parameters:; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersection; public static ROI intersection(Colle",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:9037,Testability,test,test,9037,"subtract; public static ROI subtract(ROI roiMain,; ROI... roisToSubtract); Subtract one or more ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. subtract; public static ROI subtract(ROI roiMain,; Collection<? extends ROI> roisToSubtract); Subtract a collection of ROIs from another ROI. Parameters:; roiMain - the main ROI, defining the positive area; roisToSubtract - the ROIs to remove from roiMain; Returns:; Throws:; IllegalArgumentException - if the ROIs do not fall in the same plane. intersectsRegion; public static boolean intersectsRegion(ROI roi,; ImageRegion region); Test whether a ROI and an ImageRegion intersect.; ; This returns false quickly if the ROI and region do not share the same z-slice or timepoint,; or the ROI's bounding box does not intersect the region.; Otherwise, a more expensive geometry test is performed to check for intersection. Parameters:; roi - ; region - ; Returns:; true if the ROI and the region intersect, false otherwise. transformROI; public static ROI transformROI(ROI roi,; AffineTransform transform); Apply an affine transform to a ROI, returning the result. Parameters:; roi - the ROI to transform; transform - the affine transform to apply; if null or the identity transform, the original ROI is returned unchanged; Returns:; the transformed ROI, or the original if no (non-identity) transform is specified. clipToROI; public static List<ROI> clipToROI(ROI parent,; Collection<? extends ROI> rois); Intersect a collection of ROIs with a single parent ROI, returning all results that are valid.; Where possible, ROIs are returned unchanged. Parameters:; parent - the parent ROI, used to define the clip boundary; rois - a collection of ROIs that should be intersected with parent; Returns:; list of intersected ROIs; this may be shorter than rois if some lie completely outs",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:16787,Testability,log,logical,16787,"mall tiles unnecessarily; fixedSize - if true, the tile size is enforced so that complete tiles have the same size; overlap - optional requested overlap between tiles; Returns:; See Also:. makeTiles(ROI, int, int, boolean). buffer; public static ROI buffer(ROI roi,; double distance); Buffer the specified ROI, dilating (or eroding) by the specified distance. Parameters:; roi - the ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageReg",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/RoiTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:457,Modifiability,extend,extends,457,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1759,Modifiability,inherit,inherited,1759,"nkhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.c",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:643,Performance,perform,performance,643,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1833,Security,hash,hashCode,1833,"peSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:492,Usability,simpl,simplifying,492,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:972,Usability,simpl,simplifyPath,972,". ShapeSimplifier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public s",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1035,Usability,simpl,simplified,1035,"r.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitude",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1137,Usability,simpl,simplifyPolygon,1137," Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visval",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1210,Usability,simpl,simplified,1210,"ed | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed po",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1309,Usability,simpl,simplifyPolygonPoints,1309," qupath.lib.roi; Class ShapeSimplifier. java.lang.Object; qupath.lib.roi.ShapeSimplifier. public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/reso",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1389,Usability,simpl,simplified,1389," public class ShapeSimplifier; extends Object; Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1487,Usability,simpl,simplifyShape,1487,"es, such removing polygon points while retaining the a similar overall ; shape at a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static P",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1552,Usability,simpl,simplified,1552,"t a coarser level.; ; This can help manage storage and performance requirements when working with large numbers of ROIs,; especially in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1700,Usability,simpl,simple,1700," in terms of repainting speed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ShapeSimplifier();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Path2D; simplifyPath(Path2D path,; double altitudeThreshold). Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:1970,Usability,simpl,simplifyPolygonPoints,1970,"ing method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See referenc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2012,Usability,simpl,simplifyPolygonPoints,2012,"ing method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See referenc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2092,Usability,simpl,simplified,2092,"ing method based on Visvalingam's Algorithm. static PolygonROI; simplifyPolygon(PolygonROI polygon,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static void; simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold). Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See referenc",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2382,Usability,simpl,simplify,2382,"mplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2419,Usability,simpl,simplify,2419,"dinates) using method based on Visvalingam's Algorithm. static ROI; simplifyShape(ROI shapeROI,; double altitudeThreshold). Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visval",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2476,Usability,simpl,simplifyPolygon,2476," coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simpli",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2518,Usability,simpl,simplifyPolygon,2518," coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simpli",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2591,Usability,simpl,simplified,2591," coordinates) using method based on Visvalingam's Algorithm. static List<Point2>; smoothPoints(List<Point2> points). Apply a simple 3-point moving average to a list of points. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simpli",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2771,Usability,simpl,simplify,2771,"java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2808,Usability,simpl,simplify,2808," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2876,Usability,simpl,simplifyShape,2876," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2909,Usability,simpl,simplifyShape,2909," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:2974,Usability,simpl,simplified,2974," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3152,Usability,simpl,simplify,3152," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3189,Usability,simpl,simplify,3189," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3258,Usability,simpl,simplifyPath,3258," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3293,Usability,simpl,simplifyPath,3293," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3356,Usability,simpl,simplified,3356," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3533,Usability,simpl,simplify,3533," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3570,Usability,simpl,simplify,3570," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html:3719,Usability,simpl,simple,3719," equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ShapeSimplifier; public ShapeSimplifier(). Method Details. simplifyPolygonPoints; public static void simplifyPolygonPoints(List<Point2> points,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; The input is a list of points (the vertices) belonging to a closed polygon.; This list is modified in place.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; points - ; altitudeThreshold - . simplifyPolygon; public static PolygonROI simplifyPolygon(PolygonROI polygon,; double altitudeThreshold); Create a simplified polygon (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; polygon - ; altitudeThreshold - ; Returns:. simplifyShape; public static ROI simplifyShape(ROI shapeROI,; double altitudeThreshold); Create a simplified shape (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; shapeROI - ; altitudeThreshold - ; Returns:. simplifyPath; public static Path2D simplifyPath(Path2D path,; double altitudeThreshold); Create a simplified path (fewer coordinates) using method based on Visvalingam's Algorithm.; ; See references:; https://hydra.hull.ac.uk/resources/hull:8338; https://www.jasondavies.com/simplify/; http://bost.ocks.org/mike/simplify/. Parameters:; path - ; altitudeThreshold - ; Returns:. smoothPoints; public static List<Point2> smoothPoints(List<Point2> points); Apply a simple 3-point moving average to a list of points. Parameters:; points - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/roi/ShapeSimplifier.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/ShapeSimplifier.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:767,Integrability,message,messages,767,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1160,Integrability,message,messages,1160,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:457,Modifiability,extend,extends,457,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:817,Modifiability,inherit,inherited,817,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:891,Security,hash,hashCode,891,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:700,Testability,log,logger,700,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:783,Testability,log,log,783,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1093,Testability,log,logger,1093,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1176,Testability,log,log,1176,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1215,Testability,log,logger,1215,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1228,Testability,log,logger,1228,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1262,Testability,log,logger,1262,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html:1295,Testability,log,logging,1295,". LoggingTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class LoggingTools. java.lang.Object; qupath.lib.scripting.LoggingTools. public class LoggingTools; extends Object. Constructor Summary; Constructors. Constructor; Description; LoggingTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Writer; createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level). Create a Writer that passes messages to the log at a specified level. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LoggingTools; public LoggingTools(). Method Details. createLogWriter; public static Writer createLogWriter(org.slf4j.Logger logger,; org.slf4j.event.Level level); Create a Writer that passes messages to the log at a specified level. Parameters:; logger - the logger to use; if null, a default logger will be used; level - the logging level; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/LoggingTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/LoggingTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21604,Availability,avail,available,21604,"Get the ROI for the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:23398,Availability,avail,available,23398,"ath. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). static boolean; makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject). Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static boolean; makeInverseAnnotation(PathObject pathObject). Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static String; makePathInProject(String... more). Build a file or directory path relative to the current project, and ensure that it exists. static Integer; makeRGB(int r,; int g,; int b). Make a packed int representation of an RGB color. static double; measurement(PathObject pathObject,; String measurementName). Extract the specified measurement from a PathObject. static boolean; mergeAnnotations(Collection<PathObject> annotations). Merge annotations for the current hierarchy. static boolean; mergeAnnotations(PathObjectHierarchy hierarchy,; Collection<PathObject> annotations). Merge the specified annotations to create a ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:23665,Availability,avail,available,23665,"otation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). static boolean; makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject). Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static boolean; makeInverseAnnotation(PathObject pathObject). Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static String; makePathInProject(String... more). Build a file or directory path relative to the current project, and ensure that it exists. static Integer; makeRGB(int r,; int g,; int b). Make a packed int representation of an RGB color. static double; measurement(PathObject pathObject,; String measurementName). Extract the specified measurement from a PathObject. static boolean; mergeAnnotations(Collection<PathObject> annotations). Merge annotations for the current hierarchy. static boolean; mergeAnnotations(PathObjectHierarchy hierarchy,; Collection<PathObject> annotations). Merge the specified annotations to create a new annotation containing the union of their ROIs. static boolean; mergePointsForAllClasses(). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching po",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:51687,Availability,avail,available,51687,":. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently, this means only PROJECT_BASE_DIR. Parameters:; path - ; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available. buildFilePath; public static String buildFilePath(String first,; String... more); throws IllegalArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; .",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:52209,Availability,avail,available,52209,"getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently, this means only PROJECT_BASE_DIR. Parameters:; path - ; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available. buildFilePath; public static String buildFilePath(String first,; String... more); throws IllegalArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; . If you want to additionally create the directory, see makePathInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); makeFileInProject(String...). makePathInProject; public static String makePathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and e",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:52846,Availability,avail,available,52846,"lArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; . If you want to additionally create the directory, see makePathInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); makeFileInProject(String...). makePathInProject; public static String makePathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentExcepti",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:53593,Availability,avail,available,53593,"stem.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; . If you want to additionally create the directory, see makePathInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); makeFileInProject(String...). makePathInProject; public static String makePathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:54664,Availability,avail,available,54664,"if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object, which may or may not refer to a file or directory that exists; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); buildPathInProject(String...). mkdirs; public static boolean mkdirs(String path); Ensure directories exist for the specified path, calling file.mkdirs() if not. Parameters:; path - the directory path; Returns:; true if a directory was created, false otherwise. fileExists; public static boolean fileExists(String path); Query if a file exists. Parameters:; path - full file path; Returns:; true if the file exists, false otherwise. isDirectory; public static boolean isDirectory(String path); Query if a file path corresponds to a directory. Parameters:; path - full file path; Returns:; true if the file exists and is a directory, false otherwise. getProjectEntry; public static ProjectImageEntry<BufferedImage> getProjectEntry(); Get the project entry for the currently-open image within the current project, ; or null if no project/image",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:56368,Availability,avail,available,56368,"xists and is a directory, false otherwise. getProjectEntry; public static ProjectImageEntry<BufferedImage> getProjectEntry(); Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. Returns:. getProjectEntryMetadataValue; public static String getProjectEntryMetadataValue(String key); Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). Parameters:; key - ; Returns:. getCurrentHierarchy; public static PathObjectHierarchy getCurrentHierarchy(); Get the PathObjectHierarchy of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentServer; public static ImageServer<?> getCurrentServer(); Get the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageName; public static String getCurrentImageName(); Get the name of the current image.; ; This first checks the name associated with getProjectEntry(), if available.; If no name is found (e.g. because no project is in use, then the name is extracted ; from the metadata of getCurrentServer().; If this is also missing, then null is returned. Returns:; Since:; v0.4.0; See Also:. getCurrentImageNameWithoutExtension(). getCurrentImageNameWithoutExtension; public static String getCurrentImageNameWithoutExtension(); Get the name of the current image, removing any file extension.; Equivalent to; ; var name = GeneralTools.getNameWithoutExtension(getCurrentName());; . Returns:; Since:; v0.4.0; See Also:. getCurrentImageName(). getSelectedObjects; public static Collection<PathObject> getSelectedObjects(); Get the selected objects within the current PathObjectHierarchy.; ; Note: this implementation returns the selected objects directly. The returned collection ; may not be modifiable. Returns:; See Also:. getCurrentHierarchy(). getSelectedObject; public static PathObject getSelectedObject(); Get the primary selected obje",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59908,Availability,avail,available,59908,"veObject(PathObject pathObject,; boolean keepChildren); Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:62546,Availability,avail,available,62546,"Measurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData<?> imageData,; String... names); Set the channel names for the specified ImageData.; It is not essential to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; names - . setChannelColors; public static void setChannelColors(Integer... colors); Set the channel colors for the current ImageData. Parameters:; colors - ; See Also:. setChannelColors(ImageData, Integer...); setChannelNames(ImageData, String...). setChannelColors; public static void setChannelColors(ImageData<?> imageData,; Integer... colors); Set the channel colors for the specified ImageData.; It is not essential to pass names for all",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:70856,Availability,avail,available,70856," and height of the current image data, on the default plane (z-slice, time point). Parameters:; setSelected - if true, select the object that was created after it is added to the hierarchy. createSelectAllObject; @Deprecated; public static void createSelectAllObject(boolean setSelected,; int z,; int t); Deprecated.; v0.4.0 use createFullImageAnnotation(boolean, int, int) instead. Create an annotation for the entire width and height of the current image data, on the default plane (z-slice, time point). Parameters:; setSelected - if true, select the object that was created after it is added to the hierarchy; z - z-slice index for the annotation; t - timepoint index for the annotation. createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(boolean setSelected); Create annotation around the full image for the current image, on all z-slices and timepoints. Parameters:; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0; See Also:. createAllFullImageAnnotations(ImageData, boolean). createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected); Create annotation around the full image for the specified image, on all z-slices and timepoints. Parameters:; imageData - the image data; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:71386,Availability,avail,available,71386,"s:; setSelected - if true, select the object that was created after it is added to the hierarchy; z - z-slice index for the annotation; t - timepoint index for the annotation. createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(boolean setSelected); Create annotation around the full image for the current image, on all z-slices and timepoints. Parameters:; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0; See Also:. createAllFullImageAnnotations(ImageData, boolean). createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected); Create annotation around the full image for the specified image, on all z-slices and timepoints. Parameters:; imageData - the image data; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:71787,Availability,avail,available,71787,"et the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0; See Also:. createAllFullImageAnnotations(ImageData, boolean). createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected); Create annotation around the full image for the specified image, on all z-slices and timepoints. Parameters:; imageData - the image data; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageDat",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:72362,Availability,avail,available,72362,"ons to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annot",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:72927,Availability,avail,available,72927,":. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. buildServer; @Deprecated; public static <T> ImageServer<T> buildServer(String path,; Class<T> cls,; String... args); throws IOException; Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. Build an ImageServer ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:73494,Availability,avail,available,73494,"as available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. buildServer; @Deprecated; public static <T> ImageServer<T> buildServer(String path,; Class<T> cls,; String... args); throws IOException; Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. Build an ImageServer with a specified class. Parameters:; path - image path (usually a file path or URI); cls - generic type for the server (usually BufferedImage); args - optional arguments; Returns:; an ImageServer, if one could be build from the supplied arguments; Throws:; IOException - if unable to build the server; See Also:. ImageServers.buildServer(URI, String...). buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build an ImageServer with the class BufferedImage. Parameters:; p",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:93616,Availability,error,error,93616," void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; option - ; additionalOptions - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; options - ; Throws:; IOException. importObjectsFromFile; public static boolean importObjectsFromFile(String path); throws FileNotFoundException,; IllegalArgumentException,; IOException,; ClassNotFoundException; Import all PathObjects from the given file. ; IllegalArgumentException is thrown if the file is not compatible. ; FileNotFoundException is thrown if the file is not found. ; IOException is thrown if an error occurs while reading the file. ; ClassNotFoundException should never occur naturally (except through a change in the code). Parameters:; path - ; Returns:; success; Throws:; FileNotFoundException; IllegalArgumentException; ClassNotFoundException; IOException. deselectAll; public static void deselectAll(); Clear the selection for the current hierarchy, so that no objects of any kind are selected. deselectAll; public static void deselectAll(PathObjectHierarchy hierarchy); Clear the selection, so that no objects of any kind are selected. Parameters:; hierarchy - . getPathClass; public static PathClass getPathClass(String name); Get a PathClass with the specified name. Parameters:; name - ; Returns:. getPathClass; public static PathClass getPathClass(String name,; Integer rgb); Get a PathClass with the specified name and color.; ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned inste",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:128409,Availability,avail,available,128409," will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; annotations - ; Returns:; true if changes are made to the hierarchy, false otherwise. mergeSelectedAnnotations; public static boolean mergeSelectedAnnotations(PathObjectHierarchy hierarchy); Merge the currently-selected annotations to create a new annotation containing the union of their ROIs.; ; Note:; ; The existing annotations will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; Returns:. makeInverseAnnotation; public static boolean makeInverseAnnotation(PathObject pathObject); Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject); Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; imageData - the imageData for which an inverted annotation should be created; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(); Make an inverse annotation using the current ImageData and its",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:128891,Availability,avail,available,128891,"elected annotations to create a new annotation containing the union of their ROIs.; ; Note:; ; The existing annotations will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; Returns:. makeInverseAnnotation; public static boolean makeInverseAnnotation(PathObject pathObject); Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject); Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; imageData - the imageData for which an inverted annotation should be created; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(); Make an inverse annotation using the current ImageData and its current selected objects. Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData); Make an inverse annotation using the specified ImageData and current selected objects. Parameters:; imageData - the imageData for which an inverted annotation should be created; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. ma",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132687,Availability,avail,available,132687,"ile paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:133291,Availability,avail,available,133291,"yMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar a",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143556,Availability,avail,available,143556,"onding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != nul",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144461,Availability,avail,available,144461,"e line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecti",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13125,Deployability,release,releases,13125,"Annotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measureme",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13842,Deployability,release,releases,13842," of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the sig",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:17131,Deployability,update,update,17131,"ted objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; fireHierarchyUpdate(). Trigger an update for the current hierarchy. static void; fireHierarchyUpdate(PathObjectHierarchy hierarchy). Trigger an update for the specified hierarchy. static Collection<PathObject>; getAllObjects(). Get all objects in the current hierarchy, including the root object. static Collection<PathObject>; getAllObjects(boolean includeRootObject). Get all objects in the current hierarchy. static Collection<PathObject>; getAnnotationObjects(). Get a list of the current annotation objects. static PathClass; getBasePathClass(PathObject pathObject). Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. static Collection<PathObject>; getCellObjects(). Get a list of the current cell objects. static Integer; getColorRGB(int... v). Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static PathObjectHierarchy; getCurrentHierar",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:17241,Deployability,update,update,17241,"sonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; fireHierarchyUpdate(). Trigger an update for the current hierarchy. static void; fireHierarchyUpdate(PathObjectHierarchy hierarchy). Trigger an update for the specified hierarchy. static Collection<PathObject>; getAllObjects(). Get all objects in the current hierarchy, including the root object. static Collection<PathObject>; getAllObjects(boolean includeRootObject). Get all objects in the current hierarchy. static Collection<PathObject>; getAnnotationObjects(). Get a list of the current annotation objects. static PathClass; getBasePathClass(PathObject pathObject). Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. static Collection<PathObject>; getCellObjects(). Get a list of the current cell objects. static Integer; getColorRGB(int... v). Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static PathObjectHierarchy; getCurrentHierarchy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageDa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48729,Deployability,update,update,48729,"ing scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:49186,Deployability,update,update,49186,"batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). Create a new packed-int representation of an RGB color.; . Parameters:; v - A value between 0 and 255. If a single value is give, the result will be; a shade of gray (RGB all with that value). Otherwise, 3 or 4 values may be given to generate ; either an RGB or RGBA color. Note: values are expected in order RGBA, but Java's packed ints are really ARGB.; Returns:. makeRGB; public static Integer makeRGB(int r,; int g,; int b); Ma",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:61856,Deployability,update,update,61856,"ent PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:62399,Deployability,update,update,62399," imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData<?> imageData,; String... names); Set the channel names for the specified ImageData.; It is not essential to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; names - . setChannelColors; public static void setChannelColors(Integer... colors); Set the channel colors for the current ImageData. Parameters:; colors - ; See Also:. setChannelColors(ImageData, Integer...); setChannelNames(ImageData, String...). setChannelColors; pu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96752,Deployability,update,update,96752,"ibute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detection",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96792,Deployability,update,update,96792,"ibute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detection",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97148,Deployability,update,update,97148,"ls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hie",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97188,Deployability,update,update,97188,"ls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hie",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108067,Deployability,release,releases,108067," a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ign",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109579,Deployability,release,releases,109579,"osest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all d",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132879,Deployability,update,update,132879," the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:133548,Deployability,update,update,133548,"d upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static voi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:50230,Energy Efficiency,green,green,50230," modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). Create a new packed-int representation of an RGB color.; . Parameters:; v - A value between 0 and 255. If a single value is give, the result will be; a shade of gray (RGB all with that value). Otherwise, 3 or 4 values may be given to generate ; either an RGB or RGBA color. Note: values are expected in order RGBA, but Java's packed ints are really ARGB.; Returns:. makeRGB; public static Integer makeRGB(int r,; int g,; int b); Make a packed int representation of an RGB color.; Alpha defaults to 255.; Red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; r - ; g - ; b - ; Returns:. makeARGB; public static Integer makeARGB(int a,; int r,; int g,; int b); Make a packed int representation of an ARGB color.; Alpha, red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; a - ; r - ; g - ; b - ; Returns:. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise,",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:50499,Energy Efficiency,green,green,50499,"ns). Parameters:; hierarchy - . getColorRGB; @Deprecated; public static Integer getColorRGB(int... v); Deprecated.; Use instead makeRGB(int, int, int) or makeARGB(int, int, int, int). Create a new packed-int representation of an RGB color.; . Parameters:; v - A value between 0 and 255. If a single value is give, the result will be; a shade of gray (RGB all with that value). Otherwise, 3 or 4 values may be given to generate ; either an RGB or RGBA color. Note: values are expected in order RGBA, but Java's packed ints are really ARGB.; Returns:. makeRGB; public static Integer makeRGB(int r,; int g,; int b); Make a packed int representation of an RGB color.; Alpha defaults to 255.; Red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; r - ; g - ; b - ; Returns:. makeARGB; public static Integer makeARGB(int a,; int r,; int g,; int b); Make a packed int representation of an ARGB color.; Alpha, red, green and blue values should be in the range 0-255; if they are not, they will be clipped. Parameters:; a - ; r - ; g - ; b - ; Returns:. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:53984,Energy Efficiency,reduce,reduce,53984,". more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object, which may or may not refer to a file or directory that exists; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); buildPathInProject(String...). mkdirs; public static boolean mkdirs(String path); Ensure directories exist for the specified path, calling file.mkdirs() if not. Parameters:; path - the directory path; Returns:; true if a directory was created, false otherwise. fileExists; public",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:47131,Integrability,interface,interface,47131," the version is not known. Constructor Details. QP; public QP(). Method Details. describe; public static String describe(Object o); List the fields and methods of a specified object. Parameters:; o - ; Returns:. describe; public static String describe(Class<?> cls); List the fields and methods of a specified class. Parameters:; cls - ; Returns:. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. setDefaultProject; public static void setDefaultProject(Project<BufferedImage> project); Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current project in the user interface, when running interactively. Parameters:; project - . setDefaultImageData; public static void setDefaultImageData(ImageData<BufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage()",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:47600,Integrability,interface,interface,47600,"eful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. setDefaultProject; public static void setDefaultProject(Project<BufferedImage> project); Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current project in the user interface, when running interactively. Parameters:; project - . setDefaultImageData; public static void setDefaultImageData(ImageData<BufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:78703,Integrability,depend,depending,78703,"solveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - ; transform - ; Since:; v0.4.0. resetTMAMetadata; public static void resetTMAMetadata(boolean includeMeasurements); Remove all TMA metadata from the current TMA grid. Parameters:; includeMeasurements - remove measurements in addition to textual metadata. resetTMAMetadata; public static void resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements); Remove all TMA metadata from the TMA grid of the specified hierarchy. Parameters:; hierarchy - ; includeMeasurements - remove measurements in addition to textual metadata. relabelTMAGrid; public static boolean relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel a TMA grid. This will only be effective if enough labels are supplied for the full grid - otherwise no changes will be made.; ; For a TMA core at column c and row r, the label format will be 'Hc-Vr' or 'Hc-Vr', where H is the horizontal label and V the vertical label, ; depending upon the status of the 'rowFirst' flag.; ; An examples of label would be 'A-1', 'A-2', 'B-1', 'B-2' etc. Parameters:; hierarchy - The hierarchy containing the TMA grid to be relabelled.; labelsHorizontal - A String containing labels for each TMA column, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); labelsVertical - A String containing labels for each TMA row, separated by spaces, or a numeric or alphabetic range (e.g. 1-10, or A-G); rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; Returns:; true if there were sufficient horizontal and vertical labels to label the entire grid, false otherwise. relabelTMAGrid; public static boolean relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst); Relabel the current TMA grid. See relabelTMAGrid(PathObjectHierarchy, String, String, boolean). Parameters:; labelsHorizontal - ; labelsVer",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101063,Integrability,depend,depending,101063,"d PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101541,Integrability,depend,depending,101541,"ntensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102041,Integrability,depend,depending,102041,"sholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Nega",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102493,Integrability,depend,depending,102493," to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; pub",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102949,Integrability,depend,depending,102949,"archy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103357,Integrability,depend,depending,103357,"d class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity class",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103750,Integrability,depend,depending,103750," thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104119,Integrability,depend,depending,104119,"ionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pat",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143529,Integrability,depend,depends,143529,"onding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != nul",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144434,Integrability,depend,depends,144434,"e line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecti",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:449,Modifiability,extend,extends,449,". QP (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class QP. java.lang.Object; qupath.lib.scripting.QP. Direct Known Subclasses:; QPEx. public class QP; extends Object; Collection of static methods that are useful for scripting.; ; Prior to running a script, the ImageData should be set so that the script can make use of it.; ; A different ImageData may be stored for different threads.; ; Note: This design may change in the future, to enable a non-static class to encapsulate ; the context for a running script. The limited ability to subclass a class containing static methods ; makes this design a bit problematic, while its package location means it cannot have access to GUI features ; (which it shouldn't have, because of the need to run headless... but sometimes the GUI is needed, e.g. to ; export images with markup). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageData.ImageType; BRIGHTFIELD_H_DAB. Brightfield image type with hematoxylin and DAB staining. static final ImageData.ImageType; BRIGHTFIELD_H_E. Brightfield image type with hematoxylin and eosin staining. static final ImageData.ImageType; BRIGHTFIELD_OTHER. Brightfield image type. static final ImageData.ImageType; FLUORESCENCE. Fluorescence image type. static final ImageData.ImageType; OTHER. Any other image type (neither brightfield nor fluorescence). static final String; PROJECT_BASE_DIR. Placeholder for the path to the current project. static final Version; VERSION. The current QuPath version, parsed according to semantic versioning. Constructor Summary; Constructors. Constructor; Description; QP();  . Method Summary. All MethodsStatic MethodsConcrete MethodsD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:2968,Modifiability,extend,extends,2968,"ll MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; addObject(PathObject pathObject). Add the specified object to the current PathObjectHierarchy. static void; addObjects(Collection<PathObject> pathObjects). Add the specified collection of objects to the current PathObjectHierarchy. static void; addObjects(PathObject[] pathObjects). Add the specified array of objects to the current PathObjectHierarchy. static void; addPixelClassifierMeasurements(String classifierName,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addShapeMeasurements(String... features). Add the specified shape measurements to the current selected objects of the current image. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures). Add shape measurements to the specified objects. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements to the specified objects. static String; buildFilePath(String first,; String... more). Build a file path from multiple components. static String; buildPathInProject(String... more). Build a file or directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:3171,Modifiability,extend,extends,3171,"archy. static void; addObjects(Collection<PathObject> pathObjects). Add the specified collection of objects to the current PathObjectHierarchy. static void; addObjects(PathObject[] pathObjects). Add the specified array of objects to the current PathObjectHierarchy. static void; addPixelClassifierMeasurements(String classifierName,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID). Add measurements from pixel classification to the selected objects. static void; addShapeMeasurements(String... features). Add the specified shape measurements to the current selected objects of the current image. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures). Add shape measurements to the specified objects. static void; addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements to the specified objects. static String; buildFilePath(String first,; String... more). Build a file path from multiple components. static String; buildPathInProject(String... more). Build a file or directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified ve",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5146,Modifiability,extend,extends,5146," is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6351,Modifiability,extend,extends,6351,"tic void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6565,Modifiability,extend,extends,6565,"ts from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear th",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:9491,Modifiability,extend,extends,9491,"e). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hierarchy to the specified image plane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClass",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:9744,Modifiability,extend,extends,9744,"nt. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hierarchy to the specified image plane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:10018,Modifiability,extend,extends,10018,"ane. static List<PathObject>; createAllFullImageAnnotations(boolean setSelected). Create annotation around the full image for the current image, on all z-slices and timepoints. static List<PathObject>; createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected). Create annotation around the full image for the specified image, on all z-slices and timepoints. static void; createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the current image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create det",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:15679,Modifiability,extend,extends,15679,"t to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options). Export specified objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export the selected objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; St",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:15877,Modifiability,extend,extends,15877,"e for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options). Export specified objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export the selected objects to an output file as GeoJSON. static void; exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export the selected objects to an output file as GeoJSON. static boolean; fileExists(String path). Query if a file exists. static void; findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map for the current image. static void; findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static void; findDensityMapHotspots(Imag",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21167,Modifiability,extend,extends,21167,"Value(String key). Get the metadata value from the current project entry for the specified key, ; or null if no such metadata value exists (or no project entry is open). static PathObject; getSelectedObject(). Get the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getSelectedObjects(). Get the selected objects within the current PathObjectHierarchy. static ROI; getSelectedROI(). Get the ROI for the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26319,Modifiability,extend,extends,26319,"cified path, calling file.mkdirs() if not. static int; nObjects(). Get a count of the total number of objects in the current hierarchy. static boolean; refreshDuplicateIDs(). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static boolean; refreshDuplicateIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static void; refreshIDs(). Refresh all object IDs for the current hierarchy. static void; refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; remove",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26527,Modifiability,extend,extends,26527,"t IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static boolean; refreshDuplicateIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. static void; refreshIDs(). Refresh all object IDs for the current hierarchy. static void; refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; removeObjectsOutsideImage(). Remove objects that are entirely outside the current image. static boolean; removeObjectsOutsideImage(boolean ignoreIntersecting). Remove objects that are entirely or pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:26896,Modifiability,extend,extends,26896," refreshIDs(PathObjectHierarchy hierarchy). Refresh all object IDs for the current hierarchy. static boolean; relabelTMAGrid(String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel the current TMA grid. static boolean; relabelTMAGrid(PathObjectHierarchy hierarchy,; String labelsHorizontal,; String labelsVertical,; boolean rowFirst). Relabel a TMA grid. static void; removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the current image data. static void; removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames). Remove measurements from objects of a specific class for the specified hierarchy. static void; removeObject(PathObject pathObject,; boolean keepChildren). Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren). Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static void; removeObjects(PathObject[] pathObjects,; boolean keepChildren). Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. static boolean; removeObjectsOutsideImage(). Remove objects that are entirely outside the current image. static boolean; removeObjectsOutsideImage(boolean ignoreIntersecting). Remove objects that are entirely or partially outside the current image. static boolean; removeObjectsOutsideImage(ImageData<?> imageData). Remove objects that are entirely or outside the specified image. static boolean; removeObjectsOutsideImage(ImageData<?> imageData,; boolean ignoreIntersecting). Remove objects that are entirely or partially outside the specified image. static boolean; removeOrClipObjectsOutsideImage(). Remove o",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29247,Modifiability,extend,extends,29247,"nside the image. static void; replaceClassification(String originalClassName,; String newClassName). Apply a new classification to all objects in the current hierarchy with a specified classification. static void; replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasureme",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29431,Modifiability,extend,extends,29431,"with a specified classification. static void; replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA meta",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31148,Modifiability,plugin,plugin,31148," current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double sca",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31265,Modifiability,plugin,plugin,31265,"TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects i",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31427,Modifiability,plugin,plugin,31427,"e specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31571,Modifiability,plugin,plugin,31571,"atic void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to conta",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31717,Modifiability,plugin,plugin,31717,"ationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHier",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:31897,Modifiability,plugin,plugin,31897," current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to the specified ImageData. static boolean; runPlugin(String className,; String args). Run the specified plugin on the current ImageData. static boolean; runPlugin(String className,; Map<String,?> args). Run the specified plugin on the current ImageData, using a map for arguments. static boolean; runPlugin(String className,; ImageData<?> imageData,; String args). Run the specified plugin on the specified ImageData. static boolean; runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args). Run the specified plugin on the specified ImageData, using a map for arguments. static boolean; runPlugin(Map<String,?> args,; String className). Run the specified plugin on the current ImageData, with Groovy keyword argument support. static boolean; runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData). Run the specified plugin on the specified ImageData, with Groovy keyword argument support. static void; scaleAllObjects(double scaleFactor). Resize the ROIs of all objects in the current object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33253,Modifiability,extend,extends,33253,"ctAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; s",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33420,Modifiability,extend,extends,33420,"ified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<?",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:34277,Modifiability,extend,extends,34277,"ect> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClassification(String... pathClassNames). Select objects for the current hierarchy that have one of the specified classifications. static void; selectObjectsByClassification(PathObjectHierarchy hierarchy,; String... pathClassNames). Select objects for the specified hierarchy that have one of the specified classifications. static void; selectObjectsByMeasurement(ImageData<?> imageData,; String command). Deprecated. static void; selectObjectsByPathClass(PathClass... pathClasses). Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPathClass(PathObjectHierarchy hierarchy,; PathClass... pathClasses). Select objects for the specified hierarch",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:34431,Modifiability,extend,extends,34431,"(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more objects to be selected within the current hierarchy. static void; selectObjectsByClass(Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Set objects that are a subclass of a specified class. static void; selectObjectsByClassification(String... pathClassNames). Select objects for the current hierarchy that have one of the specified classifications. static void; selectObjectsByClassification(PathObjectHierarchy hierarchy,; String... pathClassNames). Select objects for the specified hierarchy that have one of the specified classifications. static void; selectObjectsByMeasurement(ImageData<?> imageData,; String command). Deprecated. static void; selectObjectsByPathClass(PathClass... pathClasses). Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPathClass(PathObjectHierarchy hierarchy,; PathClass... pathClasses). Select objects for the specified hierarchy that have one of the specified PathClass classifications assigned. static void; selectObjectsByPlane(int z,; int t). Selected objects in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38921,Modifiability,extend,extends,38921,"feredImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixe",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39144,Modifiability,extend,extends,39144,"oject, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static bo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39368,Modifiability,extend,extends,39368,"ssifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static boolean; setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for an ImageServer to have the required pixel sizes and z",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:42707,Modifiability,extend,extends,42707,"; then remove the lines from the object hierarchy. static boolean; splitSelectedAnnotationAreasByLines(double thickness,; boolean removeLines). Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. static boolean; splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy). Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. static boolean; splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines). Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. static boolean; splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines). Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines. static void; transformAllObjects(AffineTransform transform). Apply an affine transform to all selected objects in the current hierarchy. static void; transformAllObjects(PathObjectHierarchy hierarchy,; AffineTransform transform). Apply an affine transform to all selected objects in the specified hierarchy. static void; transformSelectedObjects(AffineTransform transform). Apply an affine transform to all objects in the current hierarchy, retaining parent-child relationships between objects. static void; transformSelectedObjects(PathObjectHierarchy hierarchy,; AffineTransform transform). Apply an affine transform to all objects in the specified hierarchy, retaining parent-child relationships between objects. static void;",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:45009,Modifiability,inherit,inherited,45009,"(String densityMapName,; String path). Write the output of applying a density map to the current image image. static void; writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path). Write the output of applying a density map to an image. static void; writeImage(BufferedImage img,; String path). Write an image to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Write a full image to the specified path. static void; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write an image region image to the specified path. static void; writePredictionImage(String classifierName,; String path). Write the output of applying a pixel classifier to the current image image. static void; writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path). Write the output of applying a pixel classifier to an image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image type. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image type. OTHER; public static final ImageData.ImageType OTHER; Any other image type (neither brightfield nor fluorescence). PROJECT_BASE_DIR; public static final String PROJECT_BASE_DIR; Placeholder for the path to the current project.; May be used as follows:; ; var path = buildFilePath(PROJECT_BASE_DIR, 'subdir', 'name.txt'); . See Also:. Constant Field Values. VERSION; public static final Version VERS",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59585,Modifiability,extend,extends,59585,"ion<PathObject> pathObjects); Add the specified collection of objects to the current PathObjectHierarchy.; ; This will trigger a hierarchy changed event. Parameters:; pathObjects - . removeObject; public static void removeObject(PathObject pathObject,; boolean keepChildren); Remove the specified object from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60162,Modifiability,extend,extends,60162,"an keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60508,Modifiability,extend,extends,60508,".nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:61401,Modifiability,extend,extends,61401,"o:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibrat",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:62146,Modifiability,extend,extends,62146," features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData<?> imageData,; String... names); Set the channel names for the specified ImageData.; It is not essential to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; names - . setCh",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64574,Modifiability,plugin,plugin,64574,"to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; colors - ; See Also:. setChannelNames(ImageData, String...). setChannels; public static void setChannels(ImageChannel... channels); Set the channels for the current ImageData. Parameters:; channels - ; See Also:. setChannels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments;",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64665,Modifiability,plugin,plugin,64665," - ; See Also:. setChannelNames(ImageData, String...). setChannels; public static void setChannels(ImageChannel... channels); Set the channels for the current ImageData. Parameters:; channels - ; See Also:. setChannels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageDa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64710,Modifiability,plugin,plugin,64710," - ; See Also:. setChannelNames(ImageData, String...). setChannels; public static void setChannels(ImageChannel... channels); Set the channels for the current ImageData. Parameters:; channels - ; See Also:. setChannels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageDa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:64970,Modifiability,plugin,plugin,64970,"Channels(ImageData, ImageChannel...). setChannels; public static void setChannels(ImageData<?> imageData,; ImageChannel... channels); Set the channels for the specified ImageData.; Note that number of channels provided must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65063,Modifiability,plugin,plugin,65063,"ded must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65110,Modifiability,plugin,plugin,65110,"ded must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65173,Modifiability,plugin,plugin,65173,"ded must match the number of channels of the current image.; ; Also, currently it is not possible to set channels for RGB images - attempting to do so ; will throw an IllegalArgumentException. Parameters:; imageData - ; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65381,Modifiability,plugin,plugin,65381,"; channels - ; See Also:. setChannelNames(ImageData, String...); setChannelColors(ImageData, Integer...). runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first arg",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65499,Modifiability,plugin,plugin,65499,",; String args); throws InterruptedException; Run the specified plugin on the current ImageData. Parameters:; className - the full Java class name for the plugin; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCel",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65775,Modifiability,plugin,plugin,65775," JSON-encoded map); Returns:; Throws:; InterruptedException; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the ful",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65895,Modifiability,plugin,plugin,65895,"edException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws Inter",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:65942,Modifiability,plugin,plugin,65942,"edException; Run the specified plugin on the specified ImageData. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - any arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws Inter",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66177,Modifiability,plugin,plugin,66177," arguments required by the plugin (usually a JSON-encoded map); Returns:; Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the current ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argume",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66754,Modifiability,plugin,plugin,66754,"tedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66974,Modifiability,plugin,plugin,66974,"which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Co",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67564,Modifiability,plugin,plugin,67564,"age: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects. Returns:; Since:; v0.4.0; See Also:. getCurrentHierarchy(). getCellObjects; public static Collection<PathObject> getCellObjects(); Get a list of the current cell objects. Returns:; See Also:. getCurrentHierarchy()",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:81322,Modifiability,extend,extends,81322," true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units; See Also:. PathObjectTools.addTMAGrid(ImageData, String, String, boolean, double). createTMAGrid; public static void createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated); Create a new regular TMAGrid and set it as active on the hierarchy for the current image.; ; For the label string format, see see PathObjectTools.parseTMALabelString(String). Parameters:; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units; See Also:. PathObjectTools.addTMAGrid(ImageData, String, String, boolean, double). resetClassifications; public static void resetClassifications(Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the current hierarchy. Parameters:; cls - . refreshIDs; public static void refreshIDs(); Refresh all object IDs for the current hierarchy. Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false o",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:82469,Modifiability,extend,extends,82469,"tatic void refreshIDs(); Refresh all object IDs for the current hierarchy. Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current h",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:85495,Modifiability,extend,extends,85495,"e (0-based index); t - timepoint (0-based index); Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(ImagePlane plane); Selected objects in the current hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; plane - ; Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(PathObjectHierarchy hierarchy,; ImagePlane plane); Selected objects in the specified hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; hierarchy - ; plane - ; Since:; v0.4.0. selectObjects; public static void selectObjects(Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects); Set all objects in a collection to be selected, without any being chosen as the main object. Parameters:; pathObjects - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection); Set all objects in a collection to be selected, including a specified main selected object. Parameters:; pathObjects - ; mainSelection - . selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:85712,Modifiability,extend,extends,85712,"in the current hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; plane - ; Since:; v0.4.0; See Also:. selectObjectsByPlane(PathObjectHierarchy, ImagePlane). selectObjectsByPlane; public static void selectObjectsByPlane(PathObjectHierarchy hierarchy,; ImagePlane plane); Selected objects in the specified hierarchy occurring on the specified plane (z-slice and timepoint). Parameters:; hierarchy - ; plane - ; Since:; v0.4.0. selectObjects; public static void selectObjects(Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects); Set all objects in a collection to be selected, without any being chosen as the main object. Parameters:; pathObjects - . selectObjects; public static void selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection); Set all objects in a collection to be selected, including a specified main selected object. Parameters:; pathObjects - ; mainSelection - . selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - ; Returns:. selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the specified hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:86907,Modifiability,extend,extends,86907," selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Set one or more objects to be selected within the specified hierarchy. Parameters:; hierarchy - ; pathObjects - . selectObjects; public static void selectObjects(PathObject... pathObjects); Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - ; Returns:. selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - . selectObjectsByClass; public static void selectObjectsByClass(Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathClass...) and selectObjectsByClassification(String...). Parameters:; cls - . selectObjectsByClass; public static void selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathObjectHierarchy, PathClass...) and selectObjectsByClassification(PathObjectHierarchy, String...). Parameters:; hierarchy - ; cls - . selectAnnotations; public static void selectAnnotations(PathObjectHierarchy hierarchy); Select all annotation objects in the specified hierarchy. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy); Select all TMA core objects in the specified hierarchy, excluding missing cores. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectH",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:87220,Modifiability,extend,extends,87220,"; Set one or more objects to be selected within the current hierarchy. Parameters:; pathObjects - . getObjects; public static List<PathObject> getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Get a list of all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - ; Returns:. selectObjects; public static void selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate); Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. Parameters:; hierarchy - ; predicate - . selectObjectsByClass; public static void selectObjectsByClass(Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathClass...) and selectObjectsByClassification(String...). Parameters:; cls - . selectObjectsByClass; public static void selectObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathObjectHierarchy, PathClass...) and selectObjectsByClassification(PathObjectHierarchy, String...). Parameters:; hierarchy - ; cls - . selectAnnotations; public static void selectAnnotations(PathObjectHierarchy hierarchy); Select all annotation objects in the specified hierarchy. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy); Select all TMA core objects in the specified hierarchy, excluding missing cores. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy,; boolean includeMissing); Select all TMA core objects in the specified hierarchy, optionally including missing cores. Parameters:; hierarchy - ; includeMissing - . selectDetections; public static void selectDetections(PathObjectHierarchy hierarchy); Select all detection object",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:92660,Modifiability,extend,extends,92660,"SON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportAllObjectsToGeoJson; public static void exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export all objects (excluding root object) to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; option - ; additionalOptions - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; options - ; Throws:; IOException. importObjectsFromFile; public static boolean importObjectsFromFile(String path); throws FileNotFoundException,; IllegalArgumentException,; IOException,; ClassNotFoundException; Import all PathObjects from the given file. ; IllegalArgumentException is thrown if the file is not compatible. ; FileNotFoundException is thrown if the file is not found. ; IOException is thrown if an error occurs while reading the file. ; C",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:93001,Modifiability,extend,extends,93001," ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; String option,; String... additionalOptions); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; option - ; additionalOptions - ; Throws:; IOException. exportSelectedObjectsToGeoJson; public static void exportSelectedObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export the selected objects to an output file as GeoJSON. Parameters:; path - ; options - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; option - ; additionalOptions - ; Throws:; IOException. exportObjectsToGeoJson; public static void exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOptions... options); throws IOException; Export specified objects to an output file as GeoJSON. Parameters:; pathObjects - ; path - ; options - ; Throws:; IOException. importObjectsFromFile; public static boolean importObjectsFromFile(String path); throws FileNotFoundException,; IllegalArgumentException,; IOException,; ClassNotFoundException; Import all PathObjects from the given file. ; IllegalArgumentException is thrown if the file is not compatible. ; FileNotFoundException is thrown if the file is not found. ; IOException is thrown if an error occurs while reading the file. ; ClassNotFoundException should never occur naturally (except through a change in the code). Parameters:; path - ; Returns:; success; Throws:; FileNotFoundException; IllegalArgumentException; ClassNotFoundException; IOException. deselectAll; public static void deselectAll(); Clear the selection for the current hierarchy, so that no ob",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96047,Modifiability,extend,extends,96047,"rived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive""). Parameters:; baseClass - ; name - ; Returns:. getDerivedPathClass; public static PathClass getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb); Get a PathClass with the specified name, derived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive"", getColorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Cl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96323,Modifiability,extend,extends,96323,"rivedPathClass(PathClass baseClass,; String name,; Integer rgb); Get a PathClass with the specified name, derived from another PathClass.; ; An example would be a 'positive' class derived from a 'Tumor' class, e.g.; getDerivedPathClass(getPathClass(""Tumor""), ""Positive"", getColorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98481,Modifiability,extend,extends,98481,"clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98713,Modifiability,extend,extends,98713,"chy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:100808,Modifiability,extend,extends,100808,":; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101752,Modifiability,extend,extends,101752,"IntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String me",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102220,Modifiability,extend,extends,102220,"tatic void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity cla",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:114690,Modifiability,extend,extends,114690,"ects with a specified original classification in the provided hierarchy. Parameters:; hierarchy - the hierarchy containing the objects; originalClass - the original classification; newClass - the new classification. replaceClassification; public static void replaceClassification(Collection<PathObject> pathObjects,; PathClass originalClass,; PathClass newClass); Apply a new classification to all objects with a specified original classification in an object collection. Parameters:; pathObjects - ; originalClass - ; newClass - . resolveHierarchy; public static void resolveHierarchy(); Resolve the location of annotations in the current hierarchy by setting parent/child relationships. resolveHierarchy; public static void resolveHierarchy(PathObjectHierarchy hierarchy); Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. Parameters:; hierarchy - . insertObjects; public static void insertObjects(Collection<? extends PathObject> pathObjects); Insert objects into the hierarchy, resolving their location and setting parent/child relationships. Parameters:; pathObjects - . insertObjects; public static void insertObjects(PathObject pathObject); Insert object into the hierarchy, resolving its location and setting parent/child relationships. Parameters:; pathObject - . mergePointsForAllClasses; public static boolean mergePointsForAllClasses(); Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching points and removing the (previously-separated) annotations. Returns:; true if changes are made to the hierarchy, false otherwise. mergePointsForSelectedObjectClasses; public static boolean mergePointsForSelectedObjectClasses(); Merge point annotations sharing the same PathClass and ImagePlane for the current hierarchy, ; creating multi-point annotations for all matching points and removing the (previously-separated) annotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:121726,Modifiability,extend,extends,121726,"ierarchy hierarchy,; double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(); Duplicate the selected annotations in the current hierarchy. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136226,Modifiability,extend,extends,136226,"ts will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137008,Modifiability,extend,extends,137008," will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObj",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137876,Modifiability,extend,extends,137876,"tatic void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21653,Performance,load,loadDensityMap,21653,"athObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current sel",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21762,Performance,load,loadImageData,21762,"ic List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21865,Performance,load,loadObjectClassifier,21865,"nt hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21982,Performance,load,loadPixelClassifier,21982,"ecified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtractin",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48192,Performance,load,loadImageData,48192,"ufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-stan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48259,Performance,load,loadImageData,48259,"ufferedImage> imageData); Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. there has been no project set for the calling thread via setBatchProjectAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-stan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:48510,Performance,load,loading,48510,"ctAndImage(Project, ImageData)).; ; The intended use is for QuPath to set this to be the current image data in the user interface, when running interactively.; This is not necessarily always the image that is 'current' when running scripts, e.g. when batch processing. Parameters:; imageData - . setBatchProjectAndImage; public static void setBatchProjectAndImage(Project<BufferedImage> project,; ImageData<BufferedImage> imageData); Set the Project and ImageData to use for batch processing for the current thread. Parameters:; project - ; imageData - . resetBatchProjectAndImage; public static void resetBatchProjectAndImage(); Reset the Project and ImageData used for batch processing for the current thread. loadImageData; @Deprecated; public static ImageData<BufferedImage> loadImageData(String path,; boolean setBatchData); throws IOException; Deprecated.; Load ImageData from a file. Parameters:; path - path to the file containing ImageData.; setBatchData - if true, the setBatchImageData(ImageData) will be called if the loading is successful.; Returns:; Throws:; IOException; See Also:. setBatchImageData(qupath.lib.images.ImageData<java.awt.image.BufferedImage>). fireHierarchyUpdate; public static void fireHierarchyUpdate(); Trigger an update for the current hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (e.g. adding/removing measurements, setting classifications). fireHierarchyUpdate; public static void fireHierarchyUpdate(PathObjectHierarchy hierarchy); Trigger an update for the specified hierarchy.; ; This should be called after any (non-standard) modifications are made to the hierarchy ; to ensure that all listeners are notified (including for any GUI).; ; It is common to call it at the end of any script that does any direct modification of objects ; (",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:106134,Performance,load,loadPixelClassifier,106134,"lic static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output of applying a pixel classifier to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; classifier - pixel classifier; path - output file path; Throws:; IOException. writePredictionImage; public static void writePredictionImage(String classifierName,; String path); throws IOException; Write the output of applying a pixel classifier to the current image image. Parameters:; classifierName - name of the classifier, see loadPixelClassifier(String); path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path); throws IOException; Write the output of applying a density map to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; densityMap - the density map; path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:106902,Performance,load,loadDensityMap,106902,"c static void writePredictionImage(String classifierName,; String path); throws IOException; Write the output of applying a pixel classifier to the current image image. Parameters:; classifierName - name of the classifier, see loadPixelClassifier(String); path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path); throws IOException; Write the output of applying a density map to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; densityMap - the density map; path - output file path; Throws:; IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boole",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:116984,Performance,perform,performing,116984,"iding lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(double thickness,; boolean removeLines); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split annot",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:118494,Performance,perform,performing,118494,"rchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitAllAnnotationAreasByLines; public static boolean splitAllAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extrac",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:119886,Performance,perform,performing,119886,"ed from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; bool",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:121434,Performance,perform,performing,121434,"jects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByLines(Collection). splitSelectedAnnotationAreasByLines; public static boolean splitSelectedAnnotationAreasByLines(PathObjectHierarchy hierarchy,; double thickness,; boolean removeLines); Split selected annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:122475,Performance,perform,performing,122475," a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). splitSpecifiedAreasByLines; public static boolean splitSpecifiedAreasByLines(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects,; double thickness,; boolean removeLines); Split the specified objects with area ROIs using dividing lines extracted from specified objects with line ROIs,; with an optional line thickness and optionally removing the dividing lines.; ; The new objects will be added to the hierarchy, not inserted.; It may therefore be necessary to fall resolveHierarchy(PathObjectHierarchy) afterwards. Parameters:; hierarchy - the object hierarchy to use; pathObjects - the objects to split; usually annotations, but they may be any object except for TMA cores; thickness - the thickness of the line; if greater than zero, the line will be buffered with a radius of; half this value; removeLines - optionally remove the lines after performing the splitting; Returns:; true if changes were made, false otherwise; Since:; v0.5.0; See Also:. PathObjectTools.splitAreasByBufferedLines(Collection, double). duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(); Duplicate the selected annotations in the current hierarchy. Returns:; true if changes are made to the hierarchy, false otherwise. duplicateSelectedAnnotations; public static boolean duplicateSelectedAnnotations(PathObjectHierarchy hierarchy); Duplicate the selected annotations in the specified hierarchy. Parameters:; hierarchy - ; Returns:; true if changes are made to the hierarchy, false otherwise; Since:; v0.4.0. copySelectedObjectsToPlane; public static boolean copySelectedObjectsToPlane(int z,; int t); Copy the selected objects in the current hierarchy to the specified z-slice and timepoint.; This copies only the ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:130698,Performance,load,load,130698,"d; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects); Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root).; ; In an inverted annotation can be created, it is added to the hierarchy and set as selected. Parameters:; imageData - the image containing the annotation; pathObjects - the annotation to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. runObjectClassifier; public static void runObjectClassifier(String... names); throws IllegalArgumentException; Apply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131250,Performance,load,load,131250,"ining the annotation; pathObjects - the annotation to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. runObjectClassifier; public static void runObjectClassifier(String... names); throws IllegalArgumentException; Apply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131409,Performance,load,loadObjectClassifier,131409,"ply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131477,Performance,load,loadObjectClassifier,131477,"ply an object classifier to the current ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131713,Performance,load,load,131713," or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. runObjectClassifier; public static void runObjectClassifier(ImageData imageData,; String... names); throws IllegalArgumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within th",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:131953,Performance,load,loadDensityMap,131953,"gumentException; Apply an object classifier to the specified ImageData.; This method throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132013,Performance,load,loadDensityMap,132013,"throws an IllegalArgumentException if the classifier cannot be found. Parameters:; imageData - ; names - the name of the classifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int sea",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132231,Performance,load,load,132231,"sifier within the current project, or file path to a classifier to load from disk.; If more than one name is provided, a composite classifier is created.; Throws:; IllegalArgumentException - if the classifier cannot be found. loadObjectClassifier; public static ObjectClassifier<BufferedImage> loadObjectClassifier(String... names); throws IllegalArgumentException; Load an object classifier for a project or file path. Parameters:; names - the names of the classifier within the current project, or file paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:133983,Performance,load,loadDensityMap,133983,"h is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:134817,Performance,load,loadDensityMap,134817,"ring); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly -",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136498,Performance,load,load,136498,"eters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creatin",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:136783,Performance,load,loadDensityMap,136783,"inimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137347,Performance,load,load,137347,"ityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the ann",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:137632,Performance,load,loadDensityMap,137632,"e annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image for which the density map should be generated; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static Pixel",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138440,Performance,load,loadDensityMap,138440,"sName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementI",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138614,Performance,load,loadPixelClassifier,138614,"createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138665,Performance,load,loadPixelClassifier,138665,"createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138891,Performance,load,load,138891,"lder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:139303,Performance,load,loadPixelClassifier,139303,"otations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:140311,Performance,load,loadPixelClassifier,140311,"tring). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selecte",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:141690,Performance,load,loadPixelClassifier,141690,"e image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classif",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4420,Safety,detect,detections,4420,"directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4448,Safety,predict,prediction,4448,"directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4493,Safety,detect,detection,4493,"directory path relative to the current project, but do not make ; any changes on the file system. static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4617,Safety,detect,detections,4617,"n the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4645,Safety,predict,prediction,4645,"n the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:4690,Safety,detect,detection,4690,"n the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. static ImageServer<BufferedImage>; buildServer(String path,; String... args). Build an ImageServer with the class BufferedImage. static ImageServer<BufferedImage>; buildServer(URI uri,; String... args). Build an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5892,Safety,detect,detections,5892,"athObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasur",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6037,Safety,detect,detections,6037," the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRoot",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6089,Safety,detect,detections,6089," the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRoot",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6149,Safety,detect,detection,6149,"s). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarch",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6275,Safety,detect,detections,6275,"e measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:10794,Safety,detect,detection,10794,"from a density map for the specified image. static void; createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static PathObject; createFullImageAnnotation(boolean setSelected). Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(boolean setSelected,; int z,; int t). Create an annotation around the full image for the current image, on the specified z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected). Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t). Create an annotation around the f",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:11029,Safety,detect,detection,11029,"PixelClassifierTools.CreateObjectOptions... options). Create annotations from a density map for the specified image. static void; createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create annotation objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static void; createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options). Create detection objects based upon the output of a pixel classifier, applied to selected objects. static PathObject; createFullImageAnnotation(boolean setSelected). Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(boolean setSelected,; int z,; int t). Create an annotation around the full image for the current image, on the specified z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected). Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. static PathObject; createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t). Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. static void; createSelectAllObject(boolean setSelected). Deprecated.; v0.4.0 use createFullImageAnnotation(boolean) instead. static void; createSelectAllObject(",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13030,Safety,detect,detectionCentroidDistances,13030,"tatic void; createSelectAllObject(boolean setSelected,; int z,; int t). Deprecated.; v0.4.0 use createFullImageAnnotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13148,Safety,detect,detectionCentroidDistances,13148,"Annotation(boolean, int, int) instead. static void; createTMAGrid(String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measureme",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13198,Safety,detect,detectionCentroidDistances,13198,"ing hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13280,Safety,detect,detection,13280,"ierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest anno",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13322,Safety,detect,detection,13322,"ierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest anno",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13404,Safety,detect,detection,13404,"ierarchy for the current image. static void; createTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest anno",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13471,Safety,detect,detectionCentroidDistances,13471,"terCalibrated). Create a new regular TMAGrid and set it as active on the hierarchy for an image. static String; describe(Class<?> cls). List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistance",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13578,Safety,detect,detection,13578,"List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each val",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13620,Safety,detect,detection,13620,"List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each val",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13702,Safety,detect,detection,13702,"List the fields and methods of a specified class. static String; describe(Object o). List the fields and methods of a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each val",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13743,Safety,detect,detectionToAnnotationDistances,13743,"f a specified object. static void; deselectAll(). Clear the selection for the current hierarchy, so that no objects of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. s",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13865,Safety,detect,detectionToAnnotationDistances,13865," of any kind are selected. static void; deselectAll(PathObjectHierarchy hierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the sig",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:13919,Safety,detect,detectionToAnnotationDistances,13919,"ierarchy). Clear the selection, so that no objects of any kind are selected. static void; detectionCentroidDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotatio",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14005,Safety,detect,detection,14005,"ed only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnno",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14130,Safety,detect,detection,14130,"ed only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). static void; detectionCentroidDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnno",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14197,Safety,detect,detectionToAnnotationDistances,14197,"an splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Dup",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14308,Safety,detect,detection,14308,"cation and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String...",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14433,Safety,detect,detection,14433,"cation and add ; the result to the detection measurement list for the current ImageData. static void; detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String...",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14474,Safety,detect,detectionToAnnotationDistancesSigned,14474,"ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14573,Safety,detect,detection,14573,"id, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; e",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14698,Safety,detect,detection,14698,"id, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistances(). Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; e",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14765,Safety,detect,detectionToAnnotationDistancesSigned,14765,"ly for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). static void; detectionToAnnotationDistances(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to a",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:14889,Safety,detect,detection,14889,"ces(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOp",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:15014,Safety,detect,detection,15014,"ces(boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static void; detectionToAnnotationDistancesSigned(boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. static void; detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames). Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. static boolean; duplicateSelectedAnnotations(). Duplicate the selected annotations in the current hierarchy. static boolean; duplicateSelectedAnnotations(PathObjectHierarchy hierarchy). Duplicate the selected annotations in the specified hierarchy. static void; exportAllObjectsToGeoJson(String path,; String option,; String... additionalOptions). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportAllObjectsToGeoJson(String path,; PathIO.GeoJsonExportOptions... options). Export all objects (excluding root object) to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; String option,; String... additionalOptions). Export specified objects to an output file as GeoJSON. static void; exportObjectsToGeoJson(Collection<? extends PathObject> pathObjects,; String path,; PathIO.GeoJsonExportOp",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19063,Safety,detect,detection,19063," are likely to be useful for scripting. static PathObjectHierarchy; getCurrentHierarchy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image w",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29617,Safety,detect,detection,29617,"l classification in an object collection. static void; replaceClassification(PathClass originalClass,; PathClass newClass). Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(Path",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:29751,Safety,detect,detections,29751,". Apply a new classification to all objects in the current hierarchy with a specified original classification. static void; replaceClassification(PathObjectHierarchy hierarchy,; PathClass originalClass,; PathClass newClass). Apply a new classification to all objects with a specified original classification in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relation",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:30050,Safety,detect,detections,30050,"ication in the provided hierarchy. static void; resetBatchProjectAndImage(). Reset the Project and ImageData used for batch processing for the current thread. static void; resetClassifications(Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the current hierarchy. static void; resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Reset the PathClass for all objects of the specified type in the specified hierarchy. static void; resetDetectionClassifications(). Reset the PathClass for all detection objects in the current hierarchy. static void; resetIntensityClassifications(). Reset the intensity classifications for all detections in the current hierarchy. static void; resetIntensityClassifications(Collection<PathObject> pathObjects). Reset the intensity classifications for all specified objects. static void; resetIntensityClassifications(PathObjectHierarchy hierarchy). Reset the intensity classifications for all detections in the specified hierarchy. static void; resetSelection(). Clear the selected objects for the current PathObjectHierarchy. static void; resetTMAMetadata(boolean includeMeasurements). Remove all TMA metadata from the current TMA grid. static void; resetTMAMetadata(PathObjectHierarchy hierarchy,; boolean includeMeasurements). Remove all TMA metadata from the TMA grid of the specified hierarchy. static void; resolveHierarchy(). Resolve the location of annotations in the current hierarchy by setting parent/child relationships. static void; resolveHierarchy(PathObjectHierarchy hierarchy). Resolve the location of annotations in the specified hierarchy by setting parent/child relationships. static String; resolvePath(String path). Resolve a path, replacing any placeholders. static void; runObjectClassifier(String... names). Apply an object classifier to the current ImageData. static void; runObjectClassifier(ImageData imageData,; String... names). Apply an object classifier to t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33050,Safety,detect,detection,33050," object hierarchy. static void; scaleAllObjects(PathObjectHierarchy hierarchy,; double scaleFactor). Resize the ROIs of all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:33167,Safety,detect,detection,33167,"f all objects in the specified object hierarchy. static void; selectAllObjects(). Select all objects in the current hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy). Select all objects in the specified hierarchy, excluding the root object. static void; selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject). Set selected objects to contain all objects. static void; selectAnnotations(). Select all annotation objects in the current hierarchy. static void; selectAnnotations(PathObjectHierarchy hierarchy). Select all annotation objects in the specified hierarchy. static void; selectCells(). Select all cell objects in the current hierarchy. static void; selectCells(PathObjectHierarchy hierarchy). Select all cell objects in the specified hierarchy. static void; selectDetections(). Select all detection objects in the current hierarchy. static void; selectDetections(PathObjectHierarchy hierarchy). Select all detection objects in the specified hierarchy. static void; selectObjects(Collection<? extends PathObject> pathObjects). Set all objects in a collection to be selected, without any being chosen as the main object. static void; selectObjects(Collection<? extends PathObject> pathObjects,; PathObject mainSelection). Set all objects in a collection to be selected, including a specified main selected object. static void; selectObjects(Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the current hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Set selected objects to contain (only) all objects in the specified hierarchy according to a specified predicate. static void; selectObjects(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Set one or more objects to be selected within the specified hierarchy. static void; selectObjects(PathObject... pathObjects). Set one or more ob",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38373,Safety,detect,detections,38373,"ageData. static void; setChannelNames(ImageData<?> imageData,; String... names). Set the channel names for the specified ImageData. static void; setChannels(ImageData<?> imageData,; ImageChannel... channels). Set the channels for the specified ImageData. static void; setChannels(ImageChannel... channels). Set the channels for the current ImageData. static boolean; setColorDeconvolutionStains(String arg). Set the color deconvolution stains for hte current image data using a (JSON) String representation. static void; setDefaultImageData(ImageData<BufferedImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? exte",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:38578,Safety,detect,detections,38578,"). Set the channels for the specified ImageData. static void; setChannels(ImageChannel... channels). Set the channels for the current ImageData. static boolean; setColorDeconvolutionStains(String arg). Set the color deconvolution stains for hte current image data using a (JSON) String representation. static void; setDefaultImageData(ImageData<BufferedImage> imageData). Set the default image data, which will be returned by getCurrentImageData() if it would otherwise return null ; (i.e. static void; setDefaultProject(Project<BufferedImage> project). Set the default project, which will be returned by getProject() if it would otherwise return null ; (i.e. static void; setDetectionIntensityClassifications(String measurementName,; double... thresholds). Set the intensity classifications for detections in the current hierarchy. static void; setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set the intensity classifications for detections in the specified hierarchy. static boolean; setImageType(String typeName). Set the image type for the current image data, using a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassification",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:39719,Safety,detect,detection,39719,"a String to represent the enum ImageData.ImageType. static boolean; setImageType(ImageData.ImageType type). Set the image type for the current image data. static void; setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the current hierarchy. static void; setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds). Set the intensity classifications for the specified objects. static void; setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds). Set the intensity classifications for objects of the specified class in the specified hierarchy. static void; setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Set intensity classifications for all selected (detection) objects in the specified hierarchy. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Set the metadata for the current ImageData to have the required pixel sizes. static boolean; setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. static boolean; setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons). Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. static boolean; setSelectedObject(PathObject pathObject). Set the selected object for the current PathObjectHierarchy. static boolean; splitAllAnnotationAreasByLines(). Split annotation objects with area ROIs using dividing lines extracted from annotations objects with line ROIs,; then remove the lines from the object hierarchy. static boolean; split",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60801,Safety,detect,detection,60801,"Objects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66486,Safety,detect,detect,66486,"e for the plugin; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parame",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:66549,Safety,detect,detectionImage,66549,"ows:; InterruptedException; Since:; v0.4.0; See Also:. getCurrentImageData(). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; Map<String,?> args); throws InterruptedException; Run the specified plugin on the specified ImageData, using a map for arguments. Parameters:; className - the full Java class name for the plugin; imageData - the ImageData to which the plugin should be applied; args - the arguments; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className); throws InterruptedException; Run the specified plugin on the current ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Jav",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67285,Safety,detect,detect,67285,"rts keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject>",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:67359,Safety,detect,detectionImage,67359,"ent to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; Returns:; Throws:; InterruptedException; Since:; v0.4.0. runPlugin; public static boolean runPlugin(Map<String,?> args,; String className,; ImageData<?> imageData); throws InterruptedException; Run the specified plugin on the specified ImageData, with Groovy keyword argument support.; ; This reason is that this Groovy supports keyword arguments, but only if a Map is the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:68174,Safety,detect,detection,68174,"s the first argument to a method.; This therefore makes it possible to change only non-default arguments with a call like this:; ; runPlugin('qupath.imagej.detect.cells.WatershedCellDetection', imageData, cellExpansionMicrons: 3, detectionImage: ""DAPI"", threshold: 1.0); ; It is not even essential to provide the required className in the first position. Parameters:; args - the arguments; className - the full Java class name for the plugin; imageData - ; Returns:; Throws:; InterruptedException; Since:; v0.4.0. getTMACoreList; public static List<TMACoreObject> getTMACoreList(); Get the list of TMA core objects for the current hierarchy. Returns:; the list of TMACoreObjects, or an empty list if there is no TMA grid present.; See Also:. getCurrentHierarchy(). getAnnotationObjects; public static Collection<PathObject> getAnnotationObjects(); Get a list of the current annotation objects. Returns:; See Also:. getCurrentHierarchy(). getDetectionObjects; public static Collection<PathObject> getDetectionObjects(); Get a list of the current detection objects. Returns:; See Also:. getCurrentHierarchy(). getTileObjects; public static Collection<PathObject> getTileObjects(); Get a list of the current tile objects. Returns:; Since:; v0.4.0; See Also:. getCurrentHierarchy(). getCellObjects; public static Collection<PathObject> getCellObjects(); Get a list of the current cell objects. Returns:; See Also:. getCurrentHierarchy(). getAllObjects; public static Collection<PathObject> getAllObjects(boolean includeRootObject); Get all objects in the current hierarchy. Parameters:; includeRootObject - ; Returns:; See Also:. getCurrentHierarchy(). getAllObjects; public static Collection<PathObject> getAllObjects(); Get all objects in the current hierarchy, including the root object. Returns:; See Also:. getCurrentHierarchy(); getAllObjects(boolean). setImageType; public static boolean setImageType(String typeName); Set the image type for the current image data, using a String to represent the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:82727,Safety,detect,detection,82727,"re are no duplicates,; retaining the original IDs where possible. Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. refreshIDs; public static void refreshIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy. Parameters:; hierarchy - the object hierarchy; Since:; v0.4.0. refreshDuplicateIDs; public static boolean refreshDuplicateIDs(PathObjectHierarchy hierarchy); Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. Parameters:; hierarchy - the object hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the curren",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:88192,Safety,detect,detection,88192,"ObjectsByClass(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Set objects that are a subclass of a specified class.; Not to be confused with selectObjectsByPathClass(PathObjectHierarchy, PathClass...) and selectObjectsByClassification(PathObjectHierarchy, String...). Parameters:; hierarchy - ; cls - . selectAnnotations; public static void selectAnnotations(PathObjectHierarchy hierarchy); Select all annotation objects in the specified hierarchy. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy); Select all TMA core objects in the specified hierarchy, excluding missing cores. Parameters:; hierarchy - . selectTMACores; public static void selectTMACores(PathObjectHierarchy hierarchy,; boolean includeMissing); Select all TMA core objects in the specified hierarchy, optionally including missing cores. Parameters:; hierarchy - ; includeMissing - . selectDetections; public static void selectDetections(PathObjectHierarchy hierarchy); Select all detection objects in the specified hierarchy. Parameters:; hierarchy - . selectCells; public static void selectCells(PathObjectHierarchy hierarchy); Select all cell objects in the specified hierarchy. Parameters:; hierarchy - . selectAnnotations; public static void selectAnnotations(); Select all annotation objects in the current hierarchy. selectTMACores; public static void selectTMACores(); Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores; public static void selectTMACores(boolean includeMissing); Select all TMA core objects in the current hierarchy, optionally including missing cores. Parameters:; includeMissing - . selectDetections; public static void selectDetections(); Select all detection objects in the current hierarchy. selectCells; public static void selectCells(); Select all cell objects in the current hierarchy. selectTiles; public static void selectTiles(PathObjectHierarchy hierarchy); Select all tile o",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:88932,Safety,detect,detection,88932," hierarchy,; boolean includeMissing); Select all TMA core objects in the specified hierarchy, optionally including missing cores. Parameters:; hierarchy - ; includeMissing - . selectDetections; public static void selectDetections(PathObjectHierarchy hierarchy); Select all detection objects in the specified hierarchy. Parameters:; hierarchy - . selectCells; public static void selectCells(PathObjectHierarchy hierarchy); Select all cell objects in the specified hierarchy. Parameters:; hierarchy - . selectAnnotations; public static void selectAnnotations(); Select all annotation objects in the current hierarchy. selectTMACores; public static void selectTMACores(); Select all TMA core objects in the current hierarchy, excluding missing cores. selectTMACores; public static void selectTMACores(boolean includeMissing); Select all TMA core objects in the current hierarchy, optionally including missing cores. Parameters:; includeMissing - . selectDetections; public static void selectDetections(); Select all detection objects in the current hierarchy. selectCells; public static void selectCells(); Select all cell objects in the current hierarchy. selectTiles; public static void selectTiles(PathObjectHierarchy hierarchy); Select all tile objects in the specified hierarchy. Parameters:; hierarchy - . selectTiles; public static void selectTiles(); Select all tile objects in the current hierarchy. selectObjectsByClassification; public static void selectObjectsByClassification(String... pathClassNames); Select objects for the current hierarchy that have one of the specified classifications. Parameters:; pathClassNames - one or more classification names, which may be converted to a PathClass with getPathClass(String). selectObjectsByPathClass; public static void selectObjectsByPathClass(PathClass... pathClasses); Select objects for the current hierarchy that have one of the specified PathClass classifications assigned. Parameters:; pathClasses - one or more classifications; See Also",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97793,Safety,detect,detections,97793,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97845,Safety,detect,detections,97845,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97998,Safety,detect,detections,97998,"PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement l",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98972,Safety,detect,detections,98972,"tionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathCl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:101384,Safety,detect,detection,101384," public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; double... thresholds); Set the intensity classifications for the specified objects. Parameters:; pathObjects - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassificationsForSelected; public static void setIntensityClassificationsForSelected(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set intensity classifications for all selected (detection) objects in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the curren",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:102800,Safety,detect,detections,102800,"entName,; double... thresholds); Set the intensity classifications for objects of the specified class in the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setIntensityClassifications; public static void setIntensityClassifications(Class<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be cl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:103224,Safety,detect,detections,103224,"s<? extends PathObject> cls,; String measurementName,; double... thresholds); Set the intensity classifications for objects of the specified class in the current hierarchy. Parameters:; cls - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds); Set the intensity classifications for detections in the specified hierarchy. Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setDetectionIntensityClassifications; public static void setDetectionIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for detections in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(String measurementName,; double... thresholds); Set the intensity classifications for cells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. re",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104683,Safety,detect,detections,104683,"ells in the current hierarchy. Parameters:; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. setCellIntensityClassifications; public static void setCellIntensityClassifications(PathObjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). writeImageRegion; public static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:104980,Safety,detect,detections,104980,"bjectHierarchy hierarchy,; String measurementName,; double... thresholds). Parameters:; hierarchy - ; measurementName - measurement to threshold; thresholds - either 1 or 3 thresholds, depending upon whether objects should be classified as Positive/Negative or Negative/1+/2+/3+. resetIntensityClassifications; public static void resetIntensityClassifications(Collection<PathObject> pathObjects); Reset the intensity classifications for all specified objects.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; pathObjects - . resetIntensityClassifications; public static void resetIntensityClassifications(PathObjectHierarchy hierarchy); Reset the intensity classifications for all detections in the specified hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). Parameters:; hierarchy - . resetIntensityClassifications; public static void resetIntensityClassifications(); Reset the intensity classifications for all detections in the current hierarchy.; ; This means setting the classification to the result of getNonIntensityAncestorPathClass(pathObject). writeImageRegion; public static void writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path); throws IOException; Write an image region image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; request - ; path - ; Throws:; IOException. writePredictionImage; public static void writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path); throws IOException; Write the output of applying a pixel classifier to an image. The writer will be determined based on the file extension. Parameters:; imageData - image to which the classifier should be applied; classifier - pixel classifier; path - output file path; Throws:; IOException. writePredictionImage; public static void writePredicti",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107486,Safety,detect,detectionCentroidDistances,107486," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107533,Safety,detect,detectionCentroidDistances,107533," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107640,Safety,detect,detection,107640," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107682,Safety,detect,detection,107682," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107764,Safety,detect,detection,107764," IOException. writeDensityMapImage; public static void writeDensityMapImage(String densityMapName,; String path); throws IOException; Write the output of applying a density map to the current image image. Parameters:; densityMapName - name of the density map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107864,Safety,detect,detectionCentroidDistances,107864,"nsity map, see loadDensityMap(String); path - output file path; Throws:; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; publ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107912,Safety,detect,detectionCentroidDistances,107912,"Exception. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:107972,Safety,detect,detectionCentroidDistances,107972,"Exception. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path); throws IOException; Write a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108090,Safety,detect,detectionCentroidDistances,108090," a full image to the specified path. The writer will be determined based on the file extension. Parameters:; server - ; path - ; Throws:; IOException. writeImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ign",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108156,Safety,detect,detection,108156,"eImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108198,Safety,detect,detection,108198,"eImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108280,Safety,detect,detection,108280,"eImage; public static void writeImage(BufferedImage img,; String path); throws IOException; Write an image to the specified path. The writer will be determined based on the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:;",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108391,Safety,detect,detectionCentroidDistances,108391,"the file extension. Parameters:; img - ; path - ; Throws:; IOException. detectionCentroidDistances; public static void detectionCentroidDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean).",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108439,Safety,detect,detectionCentroidDistances,108439,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108486,Safety,detect,detectionCentroidDistances,108486,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108568,Safety,detect,detection,108568,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108610,Safety,detect,detection,108610,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108692,Safety,detect,detection,108692,"n splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108804,Safety,detect,detectionCentroidDistances,108804,"ssNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; @Deprecated; public static void detectionCentroidDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108852,Safety,detect,detectionToAnnotationDistances,108852,"ated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:108903,Safety,detect,detectionToAnnotationDistances,108903,"ated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109014,Safety,detect,detection,109014,"ated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109139,Safety,detect,detection,109139,"ated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionCentroidDistances(boolean). Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distan",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109306,Safety,detect,detectionToAnnotationDistances,109306,"ames. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109358,Safety,detect,detectionToAnnotationDistancesSigned,109358,"ames. See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionCentroidDistances; public static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109416,Safety,detect,detectionToAnnotationDistances,109416,"lic static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public st",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109480,Safety,detect,detectionToAnnotationDistances,109480,"lic static void detectionCentroidDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public st",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109602,Safety,detect,detectionToAnnotationDistances,109602,"osest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all d",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109672,Safety,detect,detection,109672,"itClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109797,Safety,detect,detection,109797,"itClassNames - ; See Also:. DistanceTools.detectionCentroidDistances(ImageData, boolean). detectionToAnnotationDistances; public static void detectionToAnnotationDistances(ImageData<?> imageData,; boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109883,Safety,detect,detectionToAnnotationDistances,109883," to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:109934,Safety,detect,detectionToAnnotationDistances,109934," to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110020,Safety,detect,detection,110020," to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110145,Safety,detect,detection,110145," to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the distance is zero. Parameters:; imageData - ; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(Ima",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110324,Safety,detect,detectionToAnnotationDistances,110324,"tationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110376,Safety,detect,detectionToAnnotationDistancesSigned,110376,"tationDistancesSigned(ImageData, boolean). detectionToAnnotationDistances; @Deprecated; public static void detectionToAnnotationDistances(); Deprecated.; retained only for compatibility of v0.2.0 milestone releases; use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110423,Safety,detect,detectionToAnnotationDistancesSigned,110423,"use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotati",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110480,Safety,detect,detectionToAnnotationDistancesSigned,110480,"use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotati",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110604,Safety,detect,detection,110604,"use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotati",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110729,Safety,detect,detection,110729,"use instead #detectionToAnnotationDistances(boolean). Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData - without splitting class names. detectionToAnnotationDistances; public static void detectionToAnnotationDistances(boolean splitClassNames); Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotati",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:110948,Safety,detect,detectionToAnnotationDistancesSigned,110948," distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111006,Safety,detect,detectionToAnnotationDistances,111006," distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111058,Safety,detect,detectionToAnnotationDistancesSigned,111058,"side an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHe",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111115,Safety,detect,detectionToAnnotationDistancesSigned,111115,"side an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHe",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111214,Safety,detect,detection,111214,"side an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHe",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111339,Safety,detect,detection,111339,"side an annotation, the distance is zero. Parameters:; splitClassNames - ; See Also:. DistanceTools.detectionToAnnotationDistances(ImageData, boolean); detectionToAnnotationDistancesSigned(boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(ImageData<?> imageData,; boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHe",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111570,Safety,detect,detectionToAnnotationDistancesSigned,111570,"t centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for the current ImageData to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWid",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:111628,Safety,detect,detectionToAnnotationDistances,111628,"t centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; imageData - ; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(ImageData, boolean). detectionToAnnotationDistancesSigned; public static void detectionToAnnotationDistancesSigned(boolean splitClassNames); Compute the signed distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData.; If the centroid falls inside an annotation, the negative distance to the annotation boundary is used. Parameters:; splitClassNames - ; Since:; v0.4.0; See Also:. DistanceTools.detectionToAnnotationDistancesSigned(ImageData, boolean); detectionToAnnotationDistances(boolean). setPixelSizeMicrons; public static boolean setPixelSizeMicrons(ImageData<?> imageData,; Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for an ImageServer to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; imageData - ; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons,; Number zSpacingMicrons); Set the metadata for the current ImageData to have the required pixel sizes and z-spacing.; ; Returns true if changes were made, false otherwise. Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; zSpacingMicrons - ; Returns:; true if the size was set, false otherwise. setPixelSizeMicrons; public static boolean setPixelSizeMicrons(Number pixelWid",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:134202,Safety,avoid,avoid,134202,"h is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; public static void findDensityMapHotspots(String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map for the current image. Parameters:; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:135036,Safety,avoid,avoid,135036,"ring); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; String densityMapName,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMapName - name of the density map builder, see loadDensityMap(String); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly -",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:135859,Safety,avoid,avoid,135859,"); channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. findDensityMapHotspots; public static void findDensityMapHotspots(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; int channel,; int numHotspots,; double minCounts,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; imageData - the image data; densityMap - builder to generate a density map; channel - channel number (usually 0); numHotspots - the maximum number of hotspots to generate within each selected object; minCounts - the minimum value in the 'counts' channel; this is used to avoid generating hotspots in areas with few objects; deleteExisting - if true, similar annotations will be deleted from the image; peaksOnly - if true, hotspots will only be generated at intensity peaks in the density map; Throws:; IOException. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(String densityMapName,; Map<Integer,? extends Number> thresholds,; String pathClassName,; String... options); throws IOException; Create annotations from a density map for the current image. Parameters:; densityMapName - the name of the density map within the current project, or file path to a density map to load from disk; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjec",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:139828,Safety,detect,detection,139828," current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel classifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the mini",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:140546,Safety,detect,detection,140546,"assifier; measurementID - . createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createDetectionsFromPixelClassifier; public static void createDetectionsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create detection objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(String classifierName,; double minArea,; double minHoleArea,; String... options); throws IllegalArgumentException,; IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifierName - the name of the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142474,Safety,detect,detections,142474,"ted regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; i",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142502,Safety,predict,prediction,142502,"ted regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; i",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142547,Safety,detect,detection,142547,"ted regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; i",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142599,Safety,detect,detections,142599,"ated; Throws:; IOException; IllegalArgumentException; See Also:. loadPixelClassifier(String). createAnnotationsFromPixelClassifier; public static void createAnnotationsFromPixelClassifier(PixelClassifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION !=",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142820,Safety,detect,detections,142820,"sifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version infor",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142848,Safety,predict,prediction,142848,"sifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version infor",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142893,Safety,detect,detection,142893,"sifier classifier,; double minArea,; double minHoleArea,; String... options); throws IOException; Create annotation objects based upon the output of a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version infor",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:142945,Safety,detect,detections,142945,"a pixel classifier, applied to selected objects.; If no objects are selected, objects are created across the entire image. Parameters:; classifier - the pixel classifier; minArea - the minimum area of connected regions to retain; minHoleArea - the minimum area of connected 'hole' regions to retain; options - additional options to control how objects are created; Throws:; IOException. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String m",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143571,Safety,avoid,avoid,143571," are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - las",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144476,Safety,avoid,avoid,144476," successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecting objects too; Returns:; true if objects were removed, false otherwise; Sin",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:964,Security,access,access,964,". QP (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class QP. java.lang.Object; qupath.lib.scripting.QP. Direct Known Subclasses:; QPEx. public class QP; extends Object; Collection of static methods that are useful for scripting.; ; Prior to running a script, the ImageData should be set so that the script can make use of it.; ; A different ImageData may be stored for different threads.; ; Note: This design may change in the future, to enable a non-static class to encapsulate ; the context for a running script. The limited ability to subclass a class containing static methods ; makes this design a bit problematic, while its package location means it cannot have access to GUI features ; (which it shouldn't have, because of the need to run headless... but sometimes the GUI is needed, e.g. to ; export images with markup). Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageData.ImageType; BRIGHTFIELD_H_DAB. Brightfield image type with hematoxylin and DAB staining. static final ImageData.ImageType; BRIGHTFIELD_H_E. Brightfield image type with hematoxylin and eosin staining. static final ImageData.ImageType; BRIGHTFIELD_OTHER. Brightfield image type. static final ImageData.ImageType; FLUORESCENCE. Fluorescence image type. static final ImageData.ImageType; OTHER. Any other image type (neither brightfield nor fluorescence). static final String; PROJECT_BASE_DIR. Placeholder for the path to the current project. static final Version; VERSION. The current QuPath version, parsed according to semantic versioning. Constructor Summary; Constructors. Constructor; Description; QP();  . Method Summary. All MethodsStatic MethodsConcrete MethodsD",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:45083,Security,hash,hashCode,45083,"nsity map to the current image image. static void; writeDensityMapImage(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; String path). Write the output of applying a density map to an image. static void; writeImage(BufferedImage img,; String path). Write an image to the specified path. static void; writeImage(ImageServer<BufferedImage> server,; String path). Write a full image to the specified path. static void; writeImageRegion(ImageServer<BufferedImage> server,; RegionRequest request,; String path). Write an image region image to the specified path. static void; writePredictionImage(String classifierName,; String path). Write the output of applying a pixel classifier to the current image image. static void; writePredictionImage(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; String path). Write the output of applying a pixel classifier to an image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. BRIGHTFIELD_H_DAB; public static final ImageData.ImageType BRIGHTFIELD_H_DAB; Brightfield image type with hematoxylin and DAB staining. BRIGHTFIELD_H_E; public static final ImageData.ImageType BRIGHTFIELD_H_E; Brightfield image type with hematoxylin and eosin staining. BRIGHTFIELD_OTHER; public static final ImageData.ImageType BRIGHTFIELD_OTHER; Brightfield image type. FLUORESCENCE; public static final ImageData.ImageType FLUORESCENCE; Fluorescence image type. OTHER; public static final ImageData.ImageType OTHER; Any other image type (neither brightfield nor fluorescence). PROJECT_BASE_DIR; public static final String PROJECT_BASE_DIR; Placeholder for the path to the current project.; May be used as follows:; ; var path = buildFilePath(PROJECT_BASE_DIR, 'subdir', 'name.txt'); . See Also:. Constant Field Values. VERSION; public static final Version VERSION; The current QuPath version, parsed according to semantic versioning",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:19128,Testability,log,logger,19128,"archy(). Get the PathObjectHierarchy of the current ImageData. static ImageData<BufferedImage>; getCurrentImageData(). Get the path to the current ImageData. static String; getCurrentImageName(). Get the name of the current image. static String; getCurrentImageNameWithoutExtension(). Get the name of the current image, removing any file extension. static ImageServer<?>; getCurrentServer(). Get the ImageServer of the current ImageData. static String; getCurrentServerPath(). Get the path to the ImageServer of the current ImageData. static PathClass; getDerivedPathClass(PathClass baseClass,; String name). Get a PathClass with the specified name, derived from another PathClass. static PathClass; getDerivedPathClass(PathClass baseClass,; String name,; Integer rgb). Get a PathClass with the specified name, derived from another PathClass. static Collection<PathObject>; getDetectionObjects(). Get a list of the current detection objects. static org.slf4j.Logger; getLogger(). Get the logger associated with this class. static PathClass; getNonIntensityAncestorPathClass(PathObject pathObject). Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. static List<PathObject>; getObjects(Predicate<PathObject> predicate). Get a list of all objects in the current hierarchy according to a specified predicate. static List<PathObject>; getObjects(PathObjectHierarchy hierarchy,; Predicate<PathObject> predicate). Get a list of all objects in the specified hierarchy according to a specified predicate. static PathClass; getPathClass(String name). Get a PathClass with the specified name. static PathClass; getPathClass(String name,; Integer rgb). Get a PathClass with the specified name and color. static Project<BufferedImage>; getProject(). Get the current project. static ProjectImageEntry<BufferedImage>; getProjectEntry(). Get the project entry for the currently-open image within the current project, ; or null if no project/image is open. static String; g",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:138569,Testability,log,logger,138569," creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. createAnnotationsFromDensityMap; public static void createAnnotationsFromDensityMap(ImageData<BufferedImage> imageData,; DensityMaps.DensityMapBuilder densityMap,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Create annotations from a density map for the specified image. Parameters:; imageData - image to which the density map corresponds; densityMap - the density map to use; thresholds - map between channels to threshold (zero-based index) and thresholds to apply; pathClassName - name of the classification for the annotations that will be created; options - additional options when creating the annotations; Throws:; IOException; See Also:. loadDensityMap(String); PixelClassifierTools.CreateObjectOptions. getLogger; public static org.slf4j.Logger getLogger(); Get the logger associated with this class. Returns:. loadPixelClassifier; public static PixelClassifier loadPixelClassifier(String name); throws IllegalArgumentException; Load a pixel classifier for a project or file path. Parameters:; name - the name of the classifier within the current project, or file path to a classifier to load from disk.; Returns:; the requested PixelClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(String classifierName,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifierName - the pixel classifier name; measurementID - ; See Also:. loadPixelClassifier(String). addPixelClassifierMeasurements; public static void addPixelClassifierMeasurements(PixelClassifier classifier,; String measurementID); Add measurements from pixel classification to the selected objects. Parameters:; classifier - the pixel cl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143389,Testability,test,test,143389,"entroid(PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this success",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143786,Testability,test,test,143786,"lassifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is n",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144751,Testability,test,test,144751,"mpatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecting objects too; Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(ImageData<?> imageData); Remove objects",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5006,Usability,clear,clearAllObjects,5006,"an ImageServer with the class BufferedImage. static void; checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear t",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5088,Usability,clear,clear,5088,"checkMinVersion(String version). Check whether the current QuPath version is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5122,Usability,clear,clearAllObjects,5122," is ≥ the specified version. static void; checkVersionRange(String minVersion,; String maxVersion). Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5235,Usability,clear,clearAnnotationMeasurements,5235,"k whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. static void; classifyDetectionsByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clea",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5353,Usability,clear,clearAnnotationMeasurements,5353,"sByCentroid(String classifierName). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls).",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5490,Usability,clear,clearAnnotations,5490," detection centroid using a PixelClassifier. static void; classifyDetectionsByCentroid(PixelClassifier classifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!).",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5595,Usability,clear,clearCellMeasurements,5595,"ifier). Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5701,Usability,clear,clearCellMeasurements,5701,"elClassifier. static void; classifySelected(String pathClassName). Set the classification of the selected objects in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5826,Usability,clear,clearDetectionMeasurements,5826," in the current hierarchy. static void; classifySelected(PathObjectHierarchy hierarchy,; String pathClassName). Set the classification of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for spec",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:5942,Usability,clear,clearDetectionMeasurements,5942,"ion of the selected objects. static void; clearAllObjects(). Remove all the objects in the current PathObjectHierarchy, and clear the selection. static void; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6115,Usability,clear,clearDetections,6115,"oid; clearAllObjects(Class<? extends PathObject> cls). Remove all the objects of a specified Java class. static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. s",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6218,Usability,clear,clearMeasurements,6218," static void; clearAnnotationMeasurements(). Clear the measurement lists for all annotations in the current hierarchy. static void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the ro",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6325,Usability,clear,clearMeasurements,6325,"tic void; clearAnnotationMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all annotations in a hierarchy. static void; clearAnnotations(). Remove all the annotation objects from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; c",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6507,Usability,clear,clearMeasurements,6507,"ts from the current PathObjectHierarchy. static void; clearCellMeasurements(). Clear the measurement lists for all cells in the current hierarchy. static void; clearCellMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear th",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6711,Usability,clear,clearMeasurements,6711,"archy). Clear the measurement lists for all cells in a hierarchy. static void; clearDetectionMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTM",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:6881,Usability,clear,clearMeasurements,6881,"n the current hierarchy. static void; clearDetectionMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7042,Usability,clear,clearRootMeasurements,7042," in a hierarchy (including sub-classes of detections). static void; clearDetections(). Remove all the detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the cur",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7129,Usability,clear,clearRootMeasurements,7129," detection objects from the current PathObjectHierarchy. static void; clearMeasurements(). Clear the measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the sele",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7245,Usability,clear,clearSelectedObjects,7245,"measurement lists for all detections in the current hierarchy. static void; clearMeasurements(Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; cop",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7343,Usability,clear,clearSelectedObjects,7343,"s PathObject> cls). Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7509,Usability,clear,clearTileMeasurements,7509,"asurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7615,Usability,clear,clearTileMeasurements,7615,"a specific class in a hierarchy (subclasses are not included!). static void; clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7740,Usability,clear,clearTMACoreMeasurements,7740,"hy hierarchy,; Collection<PathObject> pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedOb",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7860,Usability,clear,clearTMACoreMeasurements,7860,"clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects). Clear the measurement lists for specified objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:7999,Usability,clear,clearTMAGrid,7999,"d objects within a hierarchy. static void; clearRootMeasurements(). Clear the measurement lists for the root object. static void; clearRootMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for the root object. static void; clearSelectedObjects(). Clear selected objects, but keep child (descendant) objects. static void; clearSelectedObjects(boolean keepChildren). Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. static void; clearTileMeasurements(). Clear the measurement lists for all tiles in the current hierarchy. static void; clearTileMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all tiles in a hierarchy. static void; clearTMACoreMeasurements(). Clear the measurement lists for all TMA core objects in the current hierarchy. static void; clearTMACoreMeasurements(PathObjectHierarchy hierarchy). Clear the measurement lists for all TMA core objects in a hierarchy. static void; clearTMAGrid(). Remove the TMA grid from the current PathObjectHierarchy. static boolean; copySelectedAnnotationsToPlane(int z,; int t). Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedAnnotationsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected annotations in the specified hierarchy to the specified image plane. static boolean; copySelectedAnnotationsToPlane(ImagePlane plane). Copy the selected annotations in the current hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(int z,; int t). Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. static boolean; copySelectedObjectsToPlane(PathObjectHierarchy hierarchy,; ImagePlane plane). Copy the selected objects in the specified hierarchy to the specified image plane. static boolean; copySelectedObjectsToPlane(ImagePlane plane). Copy the selected objects in the current hie",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:54027,Usability,usab,usable,54027,". more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object, which may or may not refer to a file or directory that exists; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); buildPathInProject(String...). mkdirs; public static boolean mkdirs(String path); Ensure directories exist for the specified path, calling file.mkdirs() if not. Parameters:; path - the directory path; Returns:; true if a directory was created, false otherwise. fileExists; public",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59929,Usability,clear,clearAllObjects,59929,"onally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:59965,Usability,clear,clearAllObjects,59965,"onally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60047,Usability,clear,clear,60047,"onally keeping or removing descendant objects. Parameters:; pathObject - ; keepChildren - . removeObjects; public static void removeObjects(PathObject[] pathObjects,; boolean keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current Pa",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60102,Usability,clear,clearAllObjects,60102,"an keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60138,Usability,clear,clearAllObjects,60138,"an keepChildren); Remove the specified array of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . nObjects; public static int nObjects(); Get a count of the total number of objects in the current hierarchy. Returns:; See Also:. PathObjectHierarchy.nObjects(). removeObjects; public static void removeObjects(Collection<? extends PathObject> pathObjects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurement",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60549,Usability,clear,clearAnnotations,60549,"ects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60586,Usability,clear,clearAnnotations,60586,"ects,; boolean keepChildren); Remove the specified collection of objects from the current PathObjectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60712,Usability,clear,clearAllObjects,60712,"ectHierarchy, ; optionally keeping or removing descendant objects. Parameters:; pathObjects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a dis",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60731,Usability,clear,clearDetections,60731,"Objects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60767,Usability,clear,clearDetections,60767,"Objects - ; keepChildren - . isTMADearrayed; public static boolean isTMADearrayed(); Returns true if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60891,Usability,clear,clearAllObjects,60891,"ue if TMA cores are available. Returns:. clearAllObjects; public static void clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; path",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60910,Usability,clear,clearTMAGrid,60910,"id clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to a",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:60943,Usability,clear,clearTMAGrid,60943,"id clearAllObjects(); Remove all the objects in the current PathObjectHierarchy, and clear the selection. See Also:. getCurrentHierarchy(). clearAllObjects; public static void clearAllObjects(Class<? extends PathObject> cls); Remove all the objects of a specified Java class. Parameters:; cls - the class, e.g. PathAnnotationObject.class, PathDetectionObject.class, or; null if all objects should be removed.; See Also:. getCurrentHierarchy(); PathObjectHierarchy.getObjects(java.util.Collection<qupath.lib.objects.PathObject>, java.lang.Class<? extends qupath.lib.objects.PathObject>). clearAnnotations; public static void clearAnnotations(); Remove all the annotation objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearDetections; public static void clearDetections(); Remove all the detection objects from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(); clearAllObjects(). clearTMAGrid; public static void clearTMAGrid(); Remove the TMA grid from the current PathObjectHierarchy. See Also:. getCurrentHierarchy(). addShapeMeasurements; public static void addShapeMeasurements(String... features); Add the specified shape measurements to the current selected objects of the current image.; If no features are specified, all will be added. Parameters:; features - . addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; String feature,; String... additionalFeatures); Add shape measurements to the specified objects.; ; Note addShapeMeasurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to a",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83216,Usability,clear,clearSelectedObjects,83216,"t hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the curren",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83257,Usability,clear,clearSelectedObjects,83257,"t hierarchy; Returns:; true if object IDs were changed, false otherwise; Since:; v0.4.0. resetClassifications; public static void resetClassifications(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the curren",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83342,Usability,clear,clearSelectedObjects,83342,"tHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the current hierarchy, excluding the root object. Since:; v0.4.0. selectObjectsByPlane; public static void selectObjectsByPlane(int z,; int t); Selected objects in the cu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:83383,Usability,clear,clearSelectedObjects,83383,"tHierarchy hierarchy,; Class<? extends PathObject> cls); Reset the PathClass for all objects of the specified type in the specified hierarchy. Parameters:; hierarchy - ; cls - . resetDetectionClassifications; public static void resetDetectionClassifications(); Reset the PathClass for all detection objects in the current hierarchy. hasMeasurement; public static boolean hasMeasurement(PathObject pathObject,; String measurementName); Test whether a PathObject has a specified measurement in its measurement list. Parameters:; pathObject - ; measurementName - ; Returns:. measurement; public static double measurement(PathObject pathObject,; String measurementName); Extract the specified measurement from a PathObject. Parameters:; pathObject - ; measurementName - ; Returns:. clearSelectedObjects; public static void clearSelectedObjects(); Clear selected objects, but keep child (descendant) objects. clearSelectedObjects; public static void clearSelectedObjects(boolean keepChildren); Delete the selected objects from the current hierarchy, optionally keeping their child (descendant) objects. Parameters:; keepChildren - . getObjects; public static List<PathObject> getObjects(Predicate<PathObject> predicate); Get a list of all objects in the current hierarchy according to a specified predicate. Parameters:; predicate - ; Returns:. selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy,; boolean includeRootObject); Set selected objects to contain all objects. Parameters:; hierarchy - ; includeRootObject - . selectAllObjects; public static void selectAllObjects(PathObjectHierarchy hierarchy); Select all objects in the specified hierarchy, excluding the root object. Parameters:; hierarchy - ; Since:; v0.4.0. selectAllObjects; public static void selectAllObjects(); Select all objects in the current hierarchy, excluding the root object. Since:; v0.4.0. selectObjectsByPlane; public static void selectObjectsByPlane(int z,; int t); Selected objects in the cu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96516,Usability,clear,clearMeasurements,96516,"olorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeas",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96554,Usability,clear,clearMeasurements,96554,"olorRGB(255, 0, 0)); ; Note that only one instance of any PathClass can exist at any time, therefore any existing ; PathClass with the same description will always be returned instead of creating a new one.; In this case, the color attribute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeas",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96894,Usability,clear,cleared,96894,"ibute of the existing PathClass will not be changed.; Therefore the color only has an effect when a new PathClass is created. Parameters:; baseClass - ; name - ; rgb - ; Returns:. removeMeasurements; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detection",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96903,Usability,clear,clearMeasurements,96903,"; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all de",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:96941,Usability,clear,clearMeasurements,96941,"; public static void removeMeasurements(Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the current image data. Parameters:; cls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all de",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97290,Usability,clear,cleared,97290,"ls - ; measurementNames - . removeMeasurements; public static void removeMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls,; String... measurementNames); Remove measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hie",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97299,Usability,clear,clearAnnotationMeasurements,97299," measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97347,Usability,clear,clearAnnotationMeasurements,97347," measurements from objects of a specific class for the specified hierarchy. Parameters:; hierarchy - ; cls - ; measurementNames - . clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97498,Usability,clear,clearAnnotationMeasurements,97498,"athObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97546,Usability,clear,clearAnnotationMeasurements,97546,"athObjectHierarchy hierarchy,; PathObject... pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97651,Usability,clear,clearDetectionMeasurements,97651,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97698,Usability,clear,clearDetectionMeasurements,97698,"pdate, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97885,Usability,clear,clearDetectionMeasurements,97885,"PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement l",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:97932,Usability,clear,clearDetectionMeasurements,97932,"PathObjectHierarchy hierarchy,; Collection<PathObject> pathObjects); Clear the measurement lists for specified objects within a hierarchy. Parameters:; hierarchy - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement l",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98035,Usability,clear,clearTMACoreMeasurements,98035,"y - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98080,Usability,clear,clearTMACoreMeasurements,98080,"y - used to fire a hierarchy update, if specified (may be null if no update should be fired); pathObjects - collection of objects that should have their measurement lists cleared. clearAnnotationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98233,Usability,clear,clearTMACoreMeasurements,98233,"tationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the cu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98278,Usability,clear,clearTMACoreMeasurements,98278,"tationMeasurements; public static void clearAnnotationMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all annotations in a hierarchy. Parameters:; hierarchy - . clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the cu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98385,Usability,clear,clearMeasurements,98385,"clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98423,Usability,clear,clearMeasurements,98423,"clearAnnotationMeasurements; public static void clearAnnotationMeasurements(); Clear the measurement lists for all annotations in the current hierarchy. clearDetectionMeasurements; public static void clearDetectionMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarc",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98649,Usability,clear,clearMeasurements,98649,"chy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98687,Usability,clear,clearMeasurements,98687,"chy); Clear the measurement lists for all detections in a hierarchy (including sub-classes of detections). Parameters:; hierarchy - . clearDetectionMeasurements; public static void clearDetectionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98877,Usability,clear,clearMeasurements,98877,"tionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathCl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:98915,Usability,clear,clearMeasurements,98915,"tionMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearTMACoreMeasurements; public static void clearTMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathCl",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99009,Usability,clear,clearCellMeasurements,99009,"TMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99051,Usability,clear,clearCellMeasurements,99051,"TMACoreMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all TMA core objects in a hierarchy. Parameters:; hierarchy - . clearTMACoreMeasurements; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an in",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99190,Usability,clear,clearCellMeasurements,99190,"s; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the resul",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99232,Usability,clear,clearCellMeasurements,99232,"s; public static void clearTMACoreMeasurements(); Clear the measurement lists for all TMA core objects in the current hierarchy. clearMeasurements; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the resul",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99325,Usability,clear,clearTileMeasurements,99325,"s; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99367,Usability,clear,clearTileMeasurements,99367,"s; public static void clearMeasurements(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in a hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99506,Usability,clear,clearTileMeasurements,99506,"hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99548,Usability,clear,clearTileMeasurements,99548,"hierarchy (subclasses are not included!). Parameters:; hierarchy - ; cls - . clearMeasurements; public static void clearMeasurements(Class<? extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99641,Usability,clear,clearRootMeasurements,99641," extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99683,Usability,clear,clearRootMeasurements,99683," extends PathObject> cls); Clear the measurement lists for objects of a specific class in the current hierarchy (subclasses are not included!). Parameters:; cls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99813,Usability,clear,clearRootMeasurements,99813,"ls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:99855,Usability,clear,clearRootMeasurements,99855,"ls - . clearMeasurements; public static void clearMeasurements(); Clear the measurement lists for all detections in the current hierarchy. clearCellMeasurements; public static void clearCellMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all cells in a hierarchy. Parameters:; hierarchy - . clearCellMeasurements; public static void clearCellMeasurements(); Clear the measurement lists for all cells in the current hierarchy. clearTileMeasurements; public static void clearTileMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for all tiles in a hierarchy. Parameters:; hierarchy - . clearTileMeasurements; public static void clearTileMeasurements(); Clear the measurement lists for all tiles in the current hierarchy. clearRootMeasurements; public static void clearRootMeasurements(PathObjectHierarchy hierarchy); Clear the measurement lists for the root object. Parameters:; hierarchy - . clearRootMeasurements; public static void clearRootMeasurements(); Clear the measurement lists for the root object. getBasePathClass; public static PathClass getBasePathClass(PathObject pathObject); Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null.; ; This will be null if pathObject.getPathClass() == null.; ; Otherwise, it will be pathObject.getPathClass().getBaseClass() assuming the result isn't an intensity class - or null otherwise. Parameters:; pathObject - ; Returns:. getNonIntensityAncestorPathClass; public static PathClass getNonIntensityAncestorPathClass(PathObject pathObject); Get the first ancestor class of pathObject.getPathClass() that is not an intensity class (i.e. not negative, positive, 1+, 2+ or 3+).; ; This will return null if pathClass is null, or if no non-intensity classes are found. Parameters:; pathObject - ; Returns:. setIntensityClassifications; public static void setIntensityClassifications(Collection<? extends PathObject> pathObjects,; String measurementName,; dou",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/QP.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:473,Modifiability,extend,extends,473,". ScriptAttributes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptAttributes. java.lang.Object; qupath.lib.scripting.ScriptAttributes. public class ScriptAttributes; extends Object; Default attributes that can be set when running scripts.; Script implementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:1548,Modifiability,inherit,inherited,1548,"plementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current batch processing batch.; Running a single script in isolation should be seen as batch processing ; with a batch size of 1. See Also:. Constant Field Values. BATCH_INDEX; public static final String BATCH_INDEX; Index of the current run when batch processing (starting at 0). See Also:. Constant Field Values. BATCH_LAST; public static final String BATCH_LAST; Boolean flag to indicate if the current script is the last in a batch. See Also:. Constant Field Values. BATCH_SAVE; public static final String BATCH_SAVE; Boolean flag to indicate whether changes",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:693,Security,access,access,693,". ScriptAttributes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptAttributes. java.lang.Object; qupath.lib.scripting.ScriptAttributes. public class ScriptAttributes; extends Object; Default attributes that can be set when running scripts.; Script implementations should try to set these where possible using ScriptParameters.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html:1622,Security,hash,hashCode,1622,"ers.; ; The intention is that, where supported, scripts can then access the information, ; e.g. for Groovy; ; var filePath = getProperty(ScriptAttributes.FILE_PATH); . Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; ARGS. Optional string args passed to the script. static final String; BATCH_INDEX. Index of the current run when batch processing (starting at 0). static final String; BATCH_LAST. Boolean flag to indicate if the current script is the last in a batch. static final String; BATCH_SAVE. Boolean flag to indicate whether changes to the image data should automatically be saved. static final String; BATCH_SIZE. Size of the current batch processing batch. static final String; FILE_PATH. File path of the running script file. Constructor Summary; Constructors. Constructor; Description; ScriptAttributes();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. ARGS; public static final String ARGS; Optional string args passed to the script. See Also:. Constant Field Values. FILE_PATH; public static final String FILE_PATH; File path of the running script file. See Also:. Constant Field Values. BATCH_SIZE; public static final String BATCH_SIZE; Size of the current batch processing batch.; Running a single script in isolation should be seen as batch processing ; with a batch size of 1. See Also:. Constant Field Values. BATCH_INDEX; public static final String BATCH_INDEX; Index of the current run when batch processing (starting at 0). See Also:. Constant Field Values. BATCH_LAST; public static final String BATCH_LAST; Boolean flag to indicate if the current script is the last in a batch. See Also:. Constant Field Values. BATCH_SAVE; public static final String BATCH_SAVE; Boolean flag to indicate whether changes to the image data should automatically be saved. See Also:. Constant Fi",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptAttributes.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptAttributes.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:1660,Availability,error,error,1660,". Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2048,Availability,error,error,2048," pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptP",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2345,Availability,avail,available,2345,"ould save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLo",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2418,Availability,error,error,2418,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2550,Availability,error,error,2550,"on<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Re",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3185,Availability,error,error,3185," ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBat",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3349,Availability,error,error,3349," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3515,Availability,error,error,3515,"ogger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProje",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3795,Availability,error,error,3795,blic ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProject; public ScriptParameters.Builder setProject(Project<?> project); Set the current project for the script. Parameters:; project - ; Returns:. setImageData; public ScriptParameters.Builder setImageData(ImageData<?> imageData); Set the current image data for th,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:5271,Availability,avail,available,5271,"to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProject; public ScriptParameters.Builder setProject(Project<?> project); Set the current project for the script. Parameters:; project - ; Returns:. setImageData; public ScriptParameters.Builder setImageData(ImageData<?> imageData); Set the current image data for the script. Parameters:; imageData - ; Returns:. doUpdateHierarchy; public ScriptParameters.Builder doUpdateHierarchy(boolean requestUpdate); Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). Parameters:; requestUpdate - ; Returns:. useCompiled; public ScriptParameters.Builder useCompiled(boolean useCompiled); Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. Parameters:; useCompiled - ; Returns:. build; public ScriptParameters build(); throws IllegalArgumentException; Build the ScriptParameters with the current options. Returns:; Throws:; IllegalArgumentException - if neither file nor script are set. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:880,Deployability,update,update,880,. ScriptParameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters.Builder. java.lang.Object; qupath.lib.scripting.ScriptParameters.Builder. Enclosing class:; ScriptParameters. public static class ScriptParameters.Builder; extends Object; Builder class for ScriptParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.B,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:4947,Deployability,update,update,4947,"to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProject; public ScriptParameters.Builder setProject(Project<?> project); Set the current project for the script. Parameters:; project - ; Returns:. setImageData; public ScriptParameters.Builder setImageData(ImageData<?> imageData); Set the current image data for the script. Parameters:; imageData - ; Returns:. doUpdateHierarchy; public ScriptParameters.Builder doUpdateHierarchy(boolean requestUpdate); Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). Parameters:; requestUpdate - ; Returns:. useCompiled; public ScriptParameters.Builder useCompiled(boolean useCompiled); Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. Parameters:; useCompiled - ; Returns:. build; public ScriptParameters build(); throws IllegalArgumentException; Build the ScriptParameters with the current options. Returns:; Throws:; IllegalArgumentException - if neither file nor script are set. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:548,Modifiability,extend,extends,548,. ScriptParameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters.Builder. java.lang.Object; qupath.lib.scripting.ScriptParameters.Builder. Enclosing class:; ScriptParameters. public static class ScriptParameters.Builder; extends Object; Builder class for ScriptParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.B,MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2607,Modifiability,inherit,inherited,2607," setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder s",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2681,Security,hash,hashCode,2681,"ers.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2457,Testability,log,logger,2457,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2522,Testability,log,logger,2522,".Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error wr",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2591,Testability,log,logger,2591,"on<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Re",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3321,Testability,log,logger,3321," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3390,Testability,log,logger,3390," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3411,Testability,log,logger,3411,"and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(St",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3554,Testability,log,logger,3554,"ogger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProje",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:1080,Availability,avail,available,1080,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:1792,Availability,error,error,1792,"MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the locati",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:4560,Availability,error,error,4560,"ul in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5329,Availability,error,errors,5329,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5519,Availability,avail,available,5519,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:1012,Deployability,update,update,1012,"vaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5451,Deployability,update,update,5451,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5606,Deployability,update,update,5606,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3627,Energy Efficiency,adapt,adapt,3627,"ote that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefau",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3981,Energy Efficiency,adapt,adapt,3981,"his has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:473,Modifiability,extend,extends,473,". ScriptParameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.scripting; Class ScriptParameters. java.lang.Object; qupath.lib.scripting.ScriptParameters. public class ScriptParameters; extends Object; Class that stores key information that is useful for running scripts. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ScriptParameters.Builder. Builder class for ScriptParameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject().",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:2328,Modifiability,inherit,inherited,2328,"esult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that sho",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3627,Modifiability,adapt,adapt,3627,"ote that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefau",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:3981,Modifiability,adapt,adapt,3981,"his has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; public int getBatchSize(); Get the number of images being batch processed, or 1 if just a single image is being processed.; ; This is useful in combination with getBatchIndex() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchIndex(). getBatchIndex; public int getBatchIndex(); Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes.",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5245,Performance,perform,performance,5245,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5559,Safety,avoid,avoid,5559,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:2402,Security,hash,hashCode,2402,"BatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the location of the file to handle relative paths, ; if required. Returns:; See Also:. getScript(). getScript; public String getScript(); Get the text of the script.; If this has not been set explicitly, the script is read from getFile().; If there is no script and no valid file, a RuntimeException will be thrown. Returns:. getProject; public Project<?> getProject(); Get the current project that should be used with the script.; This may be null. Returns:. getImageData; public ImageData<?> getImageData(); Get the current ImageData that should be used with the script.; This may be null. Returns:. getBatchSize; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:4856,Usability,intuit,intuitive,4856," last.; ; This is useful in combination with getBatchSize() to write scripts that (for example); can adapt to whether they are the first or last to run in a batch. Returns:; See Also:. getBatchSize(). getBatchSaveResult; public Boolean getBatchSaveResult(); Get whether changes to the image data should be saved. Returns:; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5937,Usability,intuit,intuitive,5937,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:1288,Energy Efficiency,green,greenOD,1288,"Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class EstimateStainVectors. java.lang.Object; qupath.lib.analysis.algorithms.EstimateStainVectors. public class EstimateStainVectors; extends Object; Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors.; ; Aspects of the automated method take inspiration from Macenko's 2009 paper; 'A METHOD FOR NORMALIZING HISTOLOGY SLIDES FOR QUANTITATIVE ANALYSIS'; although it also differs through its use of preprocessing and parameters, as well as its selection of an actual pixel value ; rather than projecting on the identified plane. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; EstimateStainVectors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorDeconvolutionStains; estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntrie",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2882,Energy Efficiency,green,green,2882,"olean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3354,Energy Efficiency,green,green,3354,"l, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; m",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3703,Energy Efficiency,green,greenOD,3703,"meter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; maxEntries - ; Returns:. smoothImage; public static BufferedImage smoothImage(BufferedImage img); Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). Parameters:; img - ; Returns:. getModeRGB; public static int[] getModeRGB(int[] rgb); Get the mode from an array of (packed) RGB",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3937,Energy Efficiency,green,greenOD,3937,"void colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; maxEntries - ; Returns:. smoothImage; public static BufferedImage smoothImage(BufferedImage img); Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). Parameters:; img - ; Returns:. getModeRGB; public static int[] getModeRGB(int[] rgb); Get the mode from an array of (packed) RGB pixel values. Parameters:; rgb - ; Returns:; an array with 3 entries giving the Red, Green & Blue values (in order) corresponding to the mode; of each channel from the packed RGB pixel array. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:509,Modifiability,extend,extends,509,". EstimateStainVectors (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class EstimateStainVectors. java.lang.Object; qupath.lib.analysis.algorithms.EstimateStainVectors. public class EstimateStainVectors; extends Object; Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors.; ; Aspects of the automated method take inspiration from Macenko's 2009 paper; 'A METHOD FOR NORMALIZING HISTOLOGY SLIDES FOR QUANTITATIVE ANALYSIS'; although it also differs through its use of preprocessing and parameters, as well as its selection of an actual pixel value ; rather than projecting on the identified plane. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; EstimateStainVectors();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorDeconvolutionStains; estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packe",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2310,Modifiability,inherit,inherited,2310,"orDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2937,Safety,avoid,avoid,2937,"olean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:3554,Safety,avoid,avoid,3554,"l, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minStain - minimum optical density to use; maxStain - maximum optical density to use; ignorePercentage - percentage of extrema pixels to ignore; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(int[] rgbPacked,; float[] redOD,; float[] greenOD,; float[] blueOD,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Check colors only currently applies to H&E. Parameters:; rgbPacked - ; redOD - ; greenOD - ; blueOD - ; stainsOriginal - ; minStain - ; maxStain - ; ignorePercentage - ; checkColors - ; Returns:. subsample; public static int[] subsample(int[] arr,; int maxEntries); Subsample an array so that it contains no more than maxEntries.; No guarantee is made that the resulting array will contain *exactly* maxEntries,; but rather equal spacing between entries will be used.; ; If arr.length <= maxEntries, the array is returned unchanged. Parameters:; arr - ; m",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html:2384,Security,hash,hashCode,2384,",; double ignorePercentage,; boolean checkColors). Check colors only currently applies to H&E. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors). Estimate two stains from a BufferedImage, with default parameter settings. static ColorDeconvolutionStains; estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors). Estimate two stains from a BufferedImage. static int[]; getModeRGB(int[] rgb). Get the mode from an array of (packed) RGB pixel values. static BufferedImage; smoothImage(BufferedImage img). Smooth out compression artefacts by running 3x3 filter twice (roughly approximates a small Gaussian filter). static int[]; subsample(int[] arr,; int maxEntries). Subsample an array so that it contains no more than maxEntries. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. EstimateStainVectors; public EstimateStainVectors(). Method Details. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; boolean checkColors); Estimate two stains from a BufferedImage, with default parameter settings. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; checkColors - if true, avoid colors far from H&E; Returns:. estimateStains; public static ColorDeconvolutionStains estimateStains(BufferedImage img,; ColorDeconvolutionStains stainsOriginal,; double minStain,; double maxStain,; double ignorePercentage,; boolean checkColors); Estimate two stains from a BufferedImage. Parameters:; img - original RGB image; stainsOriginal - original stains, including the background (white) values for red, green and blue and stain names; minSt",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/EstimateStainVectors.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1099,Availability,mask,mask,1099,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1553,Availability,mask,mask,1553,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:537,Modifiability,extend,extends,537,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1120,Modifiability,inherit,inherited,1120,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:675,Performance,optimiz,optimizations,675,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1194,Security,hash,hashCode,1194,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html:787,Integrability,interface,interfaces,787,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html:885,Usability,simpl,simple,885,". qupath.lib.analysis.algorithms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.algorithms. package qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; EstimateStainVectors. Code for estimating stain vectors automatically from an image, or to launch an editor for visually/interactively modifying stain vectors. MorphologicalReconstruction. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. Watershed. Implementation of 2D watershed transform. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:465,Modifiability,extend,extends,465,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:1131,Modifiability,inherit,inherited,1131," Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:554,Performance,optimiz,optimizations,554,". Watershed (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html:1205,Security,hash,hashCode,1205,"ld; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class Watershed. java.lang.Object; qupath.lib.analysis.algorithms.Watershed. public class Watershed; extends Object; Implementation of 2D watershed transform.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Watershed();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8). Apply a 2D watershed transform. static void; doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8). Apply a 2D watershed transform, constraining region growing using an intensity threshold. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Watershed; public Watershed(). Method Details. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; boolean conn8); Apply a 2D watershed transform. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. doWatershed; public static void doWatershed(SimpleImage ip,; SimpleModifiableImage ipLabels,; double minThreshold,; boolean conn8); Apply a 2D watershed transform, constraining region growing using an intensity threshold. Parameters:; ip - image containing intensity information; ipLabels - image containing starting labels; these will be modified; minThreshold - minimum threshold; labels will not expand into pixels with values below the threshold; conn8 - true if 8-connectivity should be used; alternative is 4-connectivity. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/Watershed.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:501,Modifiability,extend,extends,501,". CoocurranceMatrices (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class CoocurranceMatrices. java.lang.Object; qupath.lib.analysis.features.CoocurranceMatrices. public class CoocurranceMatrices; extends Object; Data structure to hold cooccurrence matrices for computation of Haralick features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j);",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:1544,Modifiability,inherit,inherited,1544," matrices for computation of Haralick features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Retu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html:1618,Security,hash,hashCode,1618,"Constructor Summary; Constructors. Constructor; Description; CoocurranceMatrices(int n). Initialize coocurrence matrices. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; computeFeatures(). Compute features. HaralickFeatures; getMaxFeatures(). Compute maximum features from all four rotations. HaralickFeatures; getMeanFeatures(). Compute averaged features over all four rotations. HaralickFeatures; getMinFeatures(). Compute minimum features from all four rotations. void; put0(int i,; int j). Record coocurrence for a (binned) value pair without rotation. void; put135(int i,; int j). Record coocurrence for a (binned) value pair with 135 degree rotation. void; put45(int i,; int j). Record coocurrence for a (binned) value pair with 45 degree rotation. void; put90(int i,; int j). Record coocurrence for a (binned) value pair with 90 degree rotation. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CoocurranceMatrices; public CoocurranceMatrices(int n); Initialize coocurrence matrices. Parameters:; n - number of bins. Method Details. put0; public void put0(int i,; int j); Record coocurrence for a (binned) value pair without rotation. Parameters:; i - ; j - . put45; public void put45(int i,; int j); Record coocurrence for a (binned) value pair with 45 degree rotation. Parameters:; i - ; j - . put90; public void put90(int i,; int j); Record coocurrence for a (binned) value pair with 90 degree rotation. Parameters:; i - ; j - . put135; public void put135(int i,; int j); Record coocurrence for a (binned) value pair with 135 degree rotation. Parameters:; i - ; j - . computeFeatures; public void computeFeatures(); Compute features. getMeanFeatures; public HaralickFeatures getMeanFeatures(); Compute averaged features over all four rotations. Returns:. getMinFeatures; public HaralickFeatures getMinFeatures(); Compute ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/CoocurranceMatrices.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1003,Availability,mask,masking,1003,". HaralickFeatureComputer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1720,Availability,mask,masking,1720," Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation betwe",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1776,Availability,mask,mask,1776,"cription; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:2392,Availability,mask,mask,2392,"cription; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1040,Deployability,update,updateCooccurrenceMatrices,1040,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static Coocurrance",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:2048,Deployability,update,updateCooccurrenceMatrices,2048,"cription; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:2110,Deployability,update,updateCooccurrenceMatrices,2110,"cription; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:517,Modifiability,extend,extends,517,". HaralickFeatureComputer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1270,Modifiability,inherit,inherited,1270," | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing C",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1344,Security,hash,hashCode,1344,"th.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matric",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html:489,Modifiability,extend,extends,489,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html:925,Modifiability,inherit,inherited,925,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html:999,Security,hash,hashCode,999,". HaralickFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatures. java.lang.Object; qupath.lib.analysis.features.HaralickFeatures. public class HaralickFeatures; extends Object; Helper class for computing Haralick features given a cooccurrence matrix. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getFeature(int n). Get the value of the specified feature. String; getFeatureName(int n). Get the name of the specified feature. int; nFeatures(). Total number of Haralick features. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class Object. getFeatureName; public String getFeatureName(int n); Get the name of the specified feature. Parameters:; n - ; Returns:. nFeatures; public int nFeatures(); Total number of Haralick features. Returns:. getFeature; public double getFeature(int n); Get the value of the specified feature. Parameters:; n - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:501,Modifiability,extend,extends,501,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:928,Modifiability,inherit,inherited,928,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:1002,Security,hash,hashCode,1002,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:525,Testability,test,test,525,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html:1380,Testability,test,testing,1380,". LocalBinaryPatterns (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class LocalBinaryPatterns. java.lang.Object; qupath.lib.analysis.features.LocalBinaryPatterns. public class LocalBinaryPatterns; extends Object; Initial test implementation of Local Binary Patterns. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LocalBinaryPatterns();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static double[]; computeLocalBinaryPatterns16(SimpleImage img,; double radius). Compute local binary pattern descriptor for a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LocalBinaryPatterns; public LocalBinaryPatterns(). Method Details. computeLocalBinaryPatterns16; public static double[] computeLocalBinaryPatterns16(SimpleImage img,; double radius); Compute local binary pattern descriptor for a SimpleImage.; ; Note: This method is experimental and requires further testing (or possible removal). Parameters:; img - ; radius - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/LocalBinaryPatterns.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:881,Integrability,interface,interfaces,881,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:778,Modifiability,extend,extends,778,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:892,Modifiability,inherit,inherited,892,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:945,Modifiability,extend,extends,945,". ObjectMeasurements.Compartments (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Compartments. java.lang.Object; java.lang.Enum<ObjectMeasurements.Compartments>; qupath.lib.analysis.features.ObjectMeasurements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell regi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1557,Modifiability,inherit,inherited,1557,"surements.Compartments. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1720,Modifiability,inherit,inherited,1720,"blic static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html:1668,Security,hash,hashCode,1668,"Measurements.Compartments>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Compartments; extends Enum<ObjectMeasurements.Compartments>; Cell compartments. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; CELL. Full cell region. CYTOPLASM. Full cell region, with nucleus removed. MEMBRANE. Cell boundary, with interior removed. NUCLEUS. Nucleus only. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Compartments; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Compartments[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. NUCLEUS; public static final ObjectMeasurements.Compartments NUCLEUS; Nucleus only. CYTOPLASM; public static final ObjectMeasurements.Compartments CYTOPLASM; Full cell region, with nucleus removed. CELL; public static final ObjectMeasurements.Compartments CELL; Full cell region. MEMBRANE; public static final ObjectMeasurements.Compartments MEMBRANE; Cell boundary, with interior removed. Method Details. values; public static ObjectMeasurements.Compartments[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Compartments valueOf(String name); Returns the enum constant of this class with the specified name.; The string must",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Compartments.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1279,Availability,down,downsample,1279,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add sh",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:2553,Availability,avail,available,2553," static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels o",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3127,Availability,avail,available,3127,"Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ig",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3304,Availability,down,downsample,3304,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3900,Availability,down,downsample,3900,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:626,Deployability,release,release,626,". ObjectMeasurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3890,Deployability,update,updated,3890,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3729,Energy Efficiency,efficient,efficiently,3729,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:497,Modifiability,extend,extends,497,". ObjectMeasurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:603,Modifiability,refactor,refactored,603,". ObjectMeasurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1525,Modifiability,extend,extends,1525,"rate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1849,Modifiability,inherit,inherited,1849,"ted intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measur",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:2668,Modifiability,extend,extends,2668,"ects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in t",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1923,Security,hash,hashCode,1923,"es. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:896,Integrability,interface,interfaces,896,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:778,Modifiability,extend,extends,778,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:907,Modifiability,inherit,inherited,907,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:960,Modifiability,extend,extends,960,". ObjectMeasurements.Measurements (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.Measurements. java.lang.Object; java.lang.Enum<ObjectMeasurements.Measurements>; qupath.lib.analysis.features.ObjectMeasurements.Measurements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1572,Modifiability,inherit,inherited,1572,"rements. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.Measurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum cl",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1735,Modifiability,inherit,inherited,1735,"m ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measurements valueOf(String name); Returns the enum constant of this class with the ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html:1683,Security,hash,hashCode,1683,"asurements>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.Measurements; extends Enum<ObjectMeasurements.Measurements>; Requested intensity measurements. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; MAX. Maximum value. MEAN. Arithmetic mean. MEDIAN. Median value. MIN. Minimum value. STD_DEV. Standard deviation value. VARIANCE. Variance value. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMeasurements.Measurements; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.Measurements[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. MEAN; public static final ObjectMeasurements.Measurements MEAN; Arithmetic mean. MEDIAN; public static final ObjectMeasurements.Measurements MEDIAN; Median value. MIN; public static final ObjectMeasurements.Measurements MIN; Minimum value. MAX; public static final ObjectMeasurements.Measurements MAX; Maximum value. STD_DEV; public static final ObjectMeasurements.Measurements STD_DEV; Standard deviation value. VARIANCE; public static final ObjectMeasurements.Measurements VARIANCE; Variance value. Method Details. values; public static ObjectMeasurements.Measurements[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.Measu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.Measurements.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:2468,Availability,avail,available,2468,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements.ShapeFeatures NUCLEUS_CELL_RATIO; Nucleus/cell area ratio (only relevant to cell objects). Method Details. values; public static ObjectMeasurements.ShapeFeatures[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.ShapeFeatures valueOf(String name); Returns the enum constant of this class with the specified name.; The string must m",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:925,Integrability,interface,interfaces,925,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:784,Modifiability,extend,extends,784,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:936,Modifiability,inherit,inherited,936,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:989,Modifiability,extend,extends,989,". ObjectMeasurements.ShapeFeatures (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.features; Enum Class ObjectMeasurements.ShapeFeatures. java.lang.Object; java.lang.Enum<ObjectMeasurements.ShapeFeatures>; qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. All Implemented Interfaces:; Serializable, Comparable<ObjectMeasurements.ShapeFeatures>, Constable. Enclosing class:; ObjectMeasurements. public static enum ObjectMeasurements.ShapeFeatures; extends Enum<ObjectMeasurements.ShapeFeatures>; Standard measurements that may be computed from shapes. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:1882,Modifiability,inherit,inherited,1882,"sted Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETE",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:2035,Modifiability,inherit,inherited,2035,"s. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements.ShapeFeatures NUCLEUS_CELL_RATIO; Nucleus/cell area ratio (only relevant ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:1993,Security,hash,hashCode,1993,"um; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; AREA. Area of the shape. CIRCULARITY. Circularity. LENGTH. Length of the shape; for area geometries, this provides the perimeter. MAX_DIAMETER. Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER. Minimum diameter. NUCLEUS_CELL_RATIO. Nucleus/cell area ratio (only relevant to cell objects). SOLIDITY. Ratio of the area to the convex area. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:783,Integrability,interface,interfaces,783,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:1285,Testability,test,test,1285,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html:881,Usability,simpl,simple,881,. qupath.lib.analysis.features (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.features. package qupath.lib.analysis.features. Classes to help with calculating features. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesClassesEnum Classes. Class; Description; CoocurranceMatrices. Data structure to hold cooccurrence matrices for computation of Haralick features. HaralickFeatureComputer. Static methods for computing Haralick texture features. HaralickFeatures. Helper class for computing Haralick features given a cooccurrence matrix. LocalBinaryPatterns. Initial test implementation of Local Binary Patterns. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/features/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html:468,Integrability,interface,interface,468,. ColorModels.ColorModelBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Interface ColorModels.ColorModelBuilder. Enclosing class:; ColorModels. public static interface ColorModels.ColorModelBuilder; Simple builder to create a ColorModel. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; ColorModel; build(). Build a ColorModel. Method Details. build; ColorModel build(); Build a ColorModel. Returns:. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.ColorModelBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:555,Modifiability,extend,extends,555,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:788,Modifiability,inherit,inherited,788,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:659,Safety,avoid,avoid,659,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html:862,Security,hash,hashCode,862,". ColorModels.DisplayBand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels.DisplayBand. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels.DisplayBand. Enclosing class:; ColorModels. public static class ColorModels.DisplayBand; extends Object; Helper class to the display of a single channel (band) in a ColorModel.; This exists to avoid passing a plethora of parameters to ColorModels.createColorModelBuilder(DisplayBand, DisplayBand). Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.DisplayBand.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html:669,Integrability,interface,interface,669,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html:469,Modifiability,extend,extends,469,". ColorModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class ColorModels. java.lang.Object; qupath.lib.analysis.heatmaps.ColorModels. public class ColorModels; extends Object; Helper class for creating a JSON-serializable way to generate a ColorModel. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColo",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html:1719,Modifiability,inherit,inherited,1719,"to create a ColorModel. static class ; ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refe",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html:1793,Security,hash,hashCode,1793,"lass to the display of a single channel (band) in a ColorModel. Constructor Summary; Constructors. Constructor; Description; ColorModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.DisplayBand; createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay,; double gamma). Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). static ColorModels.ColorModelBuilder; createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel). Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorModels; public ColorModels(). Method Details. createColorModelBuilder; public static ColorModels.ColorModelBuilder createColorModelBuilder(ColorModels.DisplayBand mainChannel,; ColorModels.DisplayBand alphaChannel); Create a ColorModels.ColorModelBuilder with a main channel and an optional alpha channel. Parameters:; mainChannel - the main channel to display (colormap will be used); alphaChannel - an optional alpha channel (colormap will be ignored); Returns:; the ColorModels.ColorModelBuilder. createBand; public static ColorModels.DisplayBand createBand(String colorMapName,; int band,; double minDisplay,; double maxDisplay); Create a ColorModels.DisplayBand to define the colormap associated with an image band (channel). Parameters:; colorMapName - name of the ColorMaps.ColorMap; band - image band (the BufferedImage term - QuPath often refers to this as a channel); minDisplay - value associated with the first e",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/ColorModels.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:4994,Availability,error,errors,4994," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:579,Modifiability,extend,extends,579,". DensityMaps.DensityMapBuilder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps.DensityMapBuilder. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapBuilder; extends Object; Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapBuilder; addDensities(String name,; PathObjectPredicates.PathObjectPredicate filter). Add a filter for computing densities. PixelClassifier; buildClassifier(ImageData<BufferedImage> imageData). Build a PixelClassifier for a density map using the current parameters and the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2001,Modifiability,inherit,inherited,2001,"ild a PixelClassifier for a density map using the current parameters and the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public De",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2664,Performance,perform,performance,2664,"e(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredicates.PathObjectPredicate filter); Add a filter for computing densities.; This is added on top of the filter specified in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilde",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:4981,Safety,avoid,avoid,4981," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:2075,Security,hash,hashCode,2075," the specified ImageData. DensityMaps.DensityMapParameters; buildParameters(). Build a DensityMaps.DensityMapParameters object containing the main density map parameters. ImageServer<BufferedImage>; buildServer(ImageData<BufferedImage> imageData). Build an ImageServer representing this density map. DensityMaps.DensityMapBuilder; colorModel(ColorModels.ColorModelBuilder colorModelBuilder). Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData). DensityMaps.DensityMapBuilder; pixelSize(PixelCalibration requestedPixelSize). Requested pixel size to determine the resolution of the density map, in calibrated units. DensityMaps.DensityMapBuilder; radius(double radius). The radius of the filter used to calculate densities. DensityMaps.DensityMapBuilder; type(DensityMaps.DensityMapType type). The type of the density map, which determines any associated normalization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. pixelSize; public DensityMaps.DensityMapBuilder pixelSize(PixelCalibration requestedPixelSize); Requested pixel size to determine the resolution of the density map, in calibrated units.; ; If this is not specified, an ImageData should be provided to buildClassifier(ImageData) ; and used to determine a suitable pixel size based upon the radius value and the image dimensions.; ; This is recommended, since specifying a pixel size could potentially result in creating maps ; that are too large or too small, causing performance or memory problems. Parameters:; requestedPixelSize - ; Returns:; this builder; See Also:. radius(double). type; public DensityMaps.DensityMapBuilder type(DensityMaps.DensityMapType type); The type of the density map, which determines any associated normalization. Parameters:; type - ; Returns:; this builder. addDensities; public DensityMaps.DensityMapBuilder addDensities(String name,; PathObjectPredica",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:591,Modifiability,extend,extends,591,". DensityMaps.DensityMapParameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps.DensityMapParameters. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:1432,Modifiability,inherit,inherited,1432,"t; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Enclosing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html:1506,Security,hash,hashCode,1506,"ing class:; DensityMaps. public static class DensityMaps.DensityMapParameters; extends Object; Class for storing parameters to build a ImageServer representing a density map. See Also:. DensityMaps.DensityMapBuilder. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; DensityMaps.DensityMapType; getDensityType(). Get the normalization type of the density map. PathObjectPredicates.PathObjectPredicate; getMainObjectFilter(). Get the primary object filter. int; getMaxHeight(). Get the maximum height of the density map. int; getMaxWidth(). Get the maximum width of the density map. PixelCalibration; getPixelSize(). Get the requested pixel size for the density map. double; getRadius(). Get the radius for the density map, in calibrated units. Map<String,PathObjectPredicates.PathObjectPredicate>; getSecondaryObjectFilters(). Get the secondary object filters. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getRadius; public double getRadius(); Get the radius for the density map, in calibrated units. Returns:. getMaxWidth; public int getMaxWidth(); Get the maximum width of the density map. Ignored if getPixelSize() is not null. Returns:. getMaxHeight; public int getMaxHeight(); Get the maximum height of the density map. Ignored if getPixelSize() is not null. Returns:. getPixelSize; public PixelCalibration getPixelSize(); Get the requested pixel size for the density map. This may be null if an appropriate resolution can be generated automatically. Returns:. getDensityType; public DensityMaps.DensityMapType getDensityType(); Get the normalization type of the density map. Returns:. getMainObjectFilter; public PathObjectPredicates.PathObjectPredicate getMainObjectFilter(); Get the primary object filter. Returns:. getSecondaryObjectFilters; public Map<String,PathObjectPredicates.PathObjectPredicate> getSecondaryObjectFilters(); ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapParameters.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:839,Integrability,interface,interfaces,839,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:741,Modifiability,extend,extends,741,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:850,Modifiability,inherit,inherited,850,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:903,Modifiability,extend,extends,903,". DensityMaps.DensityMapType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Enum Constants; Field; Method. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Enum Class DensityMaps.DensityMapType. java.lang.Object; java.lang.Enum<DensityMaps.DensityMapType>; qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. All Implemented Interfaces:; Serializable, Comparable<DensityMaps.DensityMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts i",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1632,Modifiability,inherit,inherited,1632,"tyMapType>, Constable. Enclosing class:; DensityMaps. public static enum DensityMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percenta",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1785,Modifiability,inherit,inherited,1785,"p types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to identify the Positive % cells. Method Details. values; public static Densi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html:1743,Security,hash,hashCode,1743,"yMaps.DensityMapType; extends Enum<DensityMaps.DensityMapType>; Density map types. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; GAUSSIAN. Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius. PERCENT. Maps contain at least two channels. SUM. No normalization; maps provide raw object counts in a defined radius. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static DensityMaps.DensityMapType; valueOf(String name). Returns the enum constant of this class with the specified name. static DensityMaps.DensityMapType[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. SUM; public static final DensityMaps.DensityMapType SUM; No normalization; maps provide raw object counts in a defined radius.; This is equivalent to applying a circular sum filter to object counts per pixel. GAUSSIAN; public static final DensityMaps.DensityMapType GAUSSIAN; Gaussian-weighted area normalization; maps provide weighted averaged object counts in a defined radius.; This is equivalent to applying a Gaussian filter to object counts per pixel. PERCENT; public static final DensityMaps.DensityMapType PERCENT; Maps contain at least two channels. The last channel contains the total count of objects within ; the density region.; All other channels contain the proportion of objects meeting specific criteria, expressed as a ; percentage of the corresponding total object count.; ; This is useful, for example, to ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapType.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:469,Modifiability,extend,extends,469,". DensityMaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.heatmaps; Class DensityMaps. java.lang.Object; qupath.lib.analysis.heatmaps.DensityMaps. public class DensityMaps; extends Object; Class for constructing and using density maps.; ; A density map is an ImageServer with the channel type ImageServerMetadata.ChannelType.DENSITY.; The pixel values relate to the density of objects of some kind, based upon applying one or more predicates.; ; Currently, only 2D density maps are supported.; There are several supported density map types, defined with DensityMaps.DensityMapType. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. static class ; DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. static enum ; DensityMaps.DensityMapType. Density map types. Field Summary; Fields. Modifier and Type; Field; Description; static final String; CHANNEL_ALL_OBJECTS. Channel name for the channel with all object counts (not always present). static final String; PROJECT_LOCATION. Default location to use when storing density maps in a project. Constructor Summary; Constructors. Constructor; Description; DensityMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DensityMaps.DensityMapBuilder; builder(DensityMaps.DensityMapBuilder builder). Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; buil",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:2916,Modifiability,extend,extends,2916,"der initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter). Create a new DensityMaps.DensityMapBuilder to generate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customize",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:3107,Modifiability,inherit,inherited,3107,"rate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.Densi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:5338,Modifiability,extend,extends,5338,"ilder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold one or more channels of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; thresholds - map between channel numbers and thresholds; pathClassName - name of the classification to apply to the generated annotations; options - additional options to customize how annotations are created; Returns:; true if changes were made, false otherwise; Throws:; IOException. findHotspots; public static void findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly); throws IOException; Find hotspots in a density map. Parameters:; hierarchy - hierarchy used to obtain selected objects and add h",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:2451,Performance,load,loadDensityMap,2451,"ject counts (not always present). static final String; PROJECT_LOCATION. Default location to use when storing density maps in a project. Constructor Summary; Constructors. Constructor; Description; DensityMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DensityMaps.DensityMapBuilder; builder(DensityMaps.DensityMapBuilder builder). Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. static DensityMaps.DensityMapBuilder; builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter). Create a new DensityMaps.DensityMapBuilder to generate a customized density map. static void; findHotspots(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:4315,Performance,load,loadDensityMap,4315,"for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. Parameters:; builder - the existing builder; Returns:; the new builder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:4375,Performance,load,loadDensityMap,4375," Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initialized with the same properties as an existing builder. Parameters:; builder - the existing builder; Returns:; the new builder. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(Path path); throws IOException; Load a DensityMaps.DensityMapBuilder from the specified path. Parameters:; path - ; Returns:; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options); throws IOException; Threshold a single channel of a density map to generate new annotations. Parameters:; hierarchy - hierarchy to which objects should be added; densityServer - density map; channel - channel to threshold; this is also used to determine the class name for the created annotations; threshold - threshold value; options - additional objects when creating the annotations; Returns:; true if changes were made, false otherwise; Throws:; IOException. threshold; public static boolean threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClas",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html:3181,Security,hash,hashCode,3181,"rchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; int nHotspots,; double radius,; double minCount,; PathClass hotspotClass,; boolean deleteExisting,; boolean peaksOnly). Find hotspots in a density map. static DensityMaps.DensityMapBuilder; loadDensityMap(Path path). Load a DensityMaps.DensityMapBuilder from the specified path. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; int channel,; double threshold,; PixelClassifierTools.CreateObjectOptions... options). Threshold a single channel of a density map to generate new annotations. static boolean; threshold(PathObjectHierarchy hierarchy,; ImageServer<BufferedImage> densityServer,; Map<Integer,? extends Number> thresholds,; String pathClassName,; PixelClassifierTools.CreateObjectOptions... options). Threshold one or more channels of a density map to generate new annotations. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. CHANNEL_ALL_OBJECTS; public static final String CHANNEL_ALL_OBJECTS; Channel name for the channel with all object counts (not always present). See Also:. Constant Field Values. PROJECT_LOCATION; public static final String PROJECT_LOCATION; Default location to use when storing density maps in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Constructor Details. DensityMaps; public DensityMaps(). Method Details. builder; public static DensityMaps.DensityMapBuilder builder(PathObjectPredicates.PathObjectPredicate mainObjectFilter); Create a new DensityMaps.DensityMapBuilder to generate a customized density map. Parameters:; mainObjectFilter - predicate to identify which objects will be included in the density map; Returns:; the builder. builder; public static DensityMaps.DensityMapBuilder builder(DensityMaps.DensityMapBuilder builder); Create a new DensityMaps.DensityMapBuilder initia",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html:783,Integrability,interface,interfaces,783,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html:881,Usability,simpl,simple,881,. qupath.lib.analysis.heatmaps (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.heatmaps. package qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; ColorModels. Helper class for creating a JSON-serializable way to generate a ColorModel. ColorModels.ColorModelBuilder. Simple builder to create a ColorModel. ColorModels.DisplayBand. Helper class to the display of a single channel (band) in a ColorModel. DensityMaps. Class for constructing and using density maps. DensityMaps.DensityMapBuilder. Builder for an ImageServer representing a density map or for DensityMaps.DensityMapParameters. DensityMaps.DensityMapParameters. Class for storing parameters to build a ImageServer representing a density map. DensityMaps.DensityMapType. Density map types. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:586,Modifiability,extend,extends,586,". ContourTracing.ChannelThreshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing.ChannelThreshold. java.lang.Object; qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Enclosing class:; ContourTracing. public static class ContourTracing.ChannelThreshold; extends Object; Helper class defining global thresholds to apply to a single image channel. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:1810,Modifiability,inherit,inherited,1810,"tatic ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Paramete",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:1884,Security,hash,hashCode,1884,"a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:887,Usability,simpl,simple,887,". ContourTracing.ChannelThreshold (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing.ChannelThreshold. java.lang.Object; qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Enclosing class:; ContourTracing. public static class ContourTracing.ChannelThreshold; extends Object; Helper class defining global thresholds to apply to a single image channel. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ContourTracing.ChannelThreshold; create(int channel). Create a simple channel threshold. static ContourTracing.ChannelThreshold; create(int channel,; double minThreshold,; double maxThreshold). Create a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html:2031,Usability,simpl,simple,2031,"eate a threshold to select values between a minimum and maximum (inclusive). static ContourTracing.ChannelThreshold; createAbove(int channel,; double minThreshold). Create a threshold to select values greater than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createBelow(int channel,; double maxThreshold). Create a threshold to select values less than or equal to a specified threshold. static ContourTracing.ChannelThreshold; createExactly(int channel,; double threshold). Create a threshold to select values that are exactly equal to a specified threshold. int; getChannel(). Get the channel to threshold. double; getMaxThreshold(). Get the maximum threshold value. double; getMinThreshold(). Get the minimum threshold value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. create; public static ContourTracing.ChannelThreshold create(int channel); Create a simple channel threshold. This contains no intensity values (min/max thresholds are infinity) ; but it is useful for thresholding classification images. In this case, the channel refers to the classification ; label. Parameters:; channel - ; Returns:. create; public static ContourTracing.ChannelThreshold create(int channel,; double minThreshold,; double maxThreshold); Create a threshold to select values between a minimum and maximum (inclusive). Parameters:; channel - channel to threshold; minThreshold - minimum value (inclusive); maxThreshold - maximum value (inclusive); Returns:. createAbove; public static ContourTracing.ChannelThreshold createAbove(int channel,; double minThreshold); Create a threshold to select values greater than or equal to a specified threshold. Parameters:; channel - the channel to threshold; minThreshold - the minimum threshold to apply; Returns:. createBelow; public static ContourTracing.ChannelThreshold createBelow(int channel,; double maxThreshol",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.ChannelThreshold.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6587,Availability,error,error,6587,"eServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of obje",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7056,Availability,error,error,7056,"nalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7587,Availability,error,error,7587,"ows:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:8113,Availability,error,error,8113,"es. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:8590,Availability,error,error,8590,"s generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToObjects; public static List<PathObject> labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If n",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:9124,Availability,error,error,9124,"eption - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToObjects; public static List<PathObject> labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:9756,Availability,error,error,9756,"ons(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToObjects; public static List<PathObject> labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get the information back to the full-resolution image later. Parameters:; name - file name; width - labeled image width, used to calculate the downsample if required; use -1 to ignore this; height - labeled image height, used to calculate the downsample if required; use -1 to ignore this; Returns:; a RegionRequest that may be used to transform ROIs. createObjects; public static List<PathObject> createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from one band of a raster containing integer labe",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:10228,Availability,down,downsample,10228,"r); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get the information back to the full-resolution image later. Parameters:; name - file name; width - labeled image width, used to calculate the downsample if required; use -1 to ignore this; height - labeled image height, used to calculate the downsample if required; use -1 to ignore this; Returns:; a RegionRequest that may be used to transform ROIs. createObjects; public static List<PathObject> createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from one band of a raster containing integer labels. Parameters:; raster - the raster containing integer label values; band - the band of interest (usually 0); region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createObjects; public static List<PathObject> createObjects(SimpleImage image,; Region",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:10328,Availability,down,downsample,10328,"r); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get the information back to the full-resolution image later. Parameters:; name - file name; width - labeled image width, used to calculate the downsample if required; use -1 to ignore this; height - labeled image height, used to calculate the downsample if required; use -1 to ignore this; Returns:; a RegionRequest that may be used to transform ROIs. createObjects; public static List<PathObject> createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from one band of a raster containing integer labels. Parameters:; raster - the raster containing integer label values; band - the band of interest (usually 0); region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createObjects; public static List<PathObject> createObjects(SimpleImage image,; Region",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:477,Modifiability,extend,extends,477,". ContourTracing (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class ContourTracing. java.lang.Object; qupath.lib.analysis.images.ContourTracing. public class ContourTracing; extends Object; Class to convert labelled images to Geometry objects, ROIs and PathObjects. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. Constructor Summary; Constructors. Constructor; Description; ContourTracing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<PathObject>; createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects from a labelled image. static List<PathObject>; createCells(Raster raster,; int bandNuclei,; int bandCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from two bands of a raster representing a labelled image. static List<PathObject>; createCells(SimpleImage imageNuclei,; SimpleImage imageCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from a pair of labelled images. static List<PathObject>; createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects from a labelled image. static BiFunction<ROI,Number,PathObject>; createNumberedObjectFunction(Function<ROI,PathObject> creator). Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. static BiFunction<ROI,Number,PathObject>; createObjectFunctio",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:5930,Modifiability,inherit,inherited,5930,"ei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects w",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:1672,Safety,detect,detection,1672,"tourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. Constructor Summary; Constructors. Constructor; Description; ContourTracing();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<PathObject>; createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects from a labelled image. static List<PathObject>; createCells(Raster raster,; int bandNuclei,; int bandCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from two bands of a raster representing a labelled image. static List<PathObject>; createCells(SimpleImage imageNuclei,; SimpleImage imageCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects from a pair of labelled images. static List<PathObject>; createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects from a labelled image. static BiFunction<ROI,Number,PathObject>; createNumberedObjectFunction(Function<ROI,PathObject> creator). Create a (bi)function to generate an object from a ROI and a number, setting the name of the object to match the number. static BiFunction<ROI,Number,PathObject>; createObjectFunction(Function<ROI,PathObject> creator,; BiConsumer<PathObject,Number> numberer). Create a (bi)function to generate an object from a ROI and a number. static List<PathObject>; createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from one band of a raster containing integer labels. static List<PathObject>; createObjects(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects from a labelled image. static Map<Number,ROI>; createROIs(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:4511,Safety,detect,detection,4511,"edROI(SimpleImage image,; double minThresholdInclusive,; double maxThresholdInclusive,; RegionRequest request). Create a traced ROI from a SimpleImage. static SimpleImage; extractBand(Raster raster,; int band). Extract a band from a a raster as a SimpleImage. static List<PathObject>; labelsToAnnotations(Path path,; RegionRequest request). Convert a labeled image to annotation objects. static List<PathObject>; labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to annotation objects, determining the region from the filename if possible. static List<PathObject>; labelsToCells(Path path,; RegionRequest request). Convert a 2-channel labeled image to cell objects. static List<PathObject>; labelsToCells(Collection<Path> paths,; boolean mergeByLabel). Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. static List<PathObject>; labelsToDetections(Path path,; RegionRequest request). Convert a labeled image to detection objects. static List<PathObject>; labelsToDetections(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to detection objects, determining the region from the filename if possible. static List<PathObject>; labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator). Convert a labeled image to objects. static boolean; maybeCellLabels(Raster raster,; int bandNuclei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeom",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:4648,Safety,detect,detection,4648,"eImage; extractBand(Raster raster,; int band). Extract a band from a a raster as a SimpleImage. static List<PathObject>; labelsToAnnotations(Path path,; RegionRequest request). Convert a labeled image to annotation objects. static List<PathObject>; labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to annotation objects, determining the region from the filename if possible. static List<PathObject>; labelsToCells(Path path,; RegionRequest request). Convert a 2-channel labeled image to cell objects. static List<PathObject>; labelsToCells(Collection<Path> paths,; boolean mergeByLabel). Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. static List<PathObject>; labelsToDetections(Path path,; RegionRequest request). Convert a labeled image to detection objects. static List<PathObject>; labelsToDetections(Collection<Path> paths,; boolean mergeByLabel). Convert labeled images to detection objects, determining the region from the filename if possible. static List<PathObject>; labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator). Convert a labeled image to objects. static boolean; maybeCellLabels(Raster raster,; int bandNuclei,; int bandCells,; int minLabel). Check whether a raster could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geomet",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6303,Safety,detect,detection,6303," providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Par",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7235,Safety,detect,detection,7235,"tatic List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:12016,Safety,detect,detection,12016,"ted; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createObjects; public static List<PathObject> createObjects(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createDetections; public static List<PathObject> createDetections(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel); Create detection objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; a list of all created objects. createAnnotations; public static List<PathObject> createAnnotations(SimpleImage image,; RegionRequest region,; int minLabel,; int maxLabel); Create annotation objects from a labelled image. Parameters:; image - the labelled image; region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; Returns:; a list of all created objects. cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6004,Security,hash,hashCode,6004," to generate cell objects, by providing a nucleus and corresponding cell labels. static boolean; maybeCellLabels(SimpleImage imageNuclei,; SimpleImage imageCells,; int minLabel). Check whether two images could be used to generate cell objects, by providing a nucleus and corresponding cell labels. static RegionRequest; parseRegion(String name,; int width,; int height). Attempt to parse a RegionRequest corresponding to an image region from the file name. static Map<Integer,Geometry>; traceGeometries(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the l",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:394,Integrability,interface,interfaces,394,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1197,Integrability,interface,interface,1197,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1365,Integrability,interface,interface,1365,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1211,Security,access,accessing,1211,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:1404,Security,access,access,1404,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html:877,Usability,simpl,simple,877,". qupath.lib.analysis.images (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.images. package qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.stats. Calculate simple statistics from arrays. All Classes and InterfacesInterfacesClasses. Class; Description; ContourTracing. Class to convert labelled images to Geometry objects, ROIs and PathObjects. ContourTracing.ChannelThreshold. Helper class defining global thresholds to apply to a single image channel. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleModifiableImage. A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html:488,Integrability,interface,interface,488,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html:521,Integrability,interface,interface,521,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html:535,Security,access,accessing,535,". SimpleImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleImage. All Known Subinterfaces:; SimpleModifiableImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleImage; A minimal interface for accessing pixel values in a single-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; int; getHeight(). Get the image height. float; getValue(int x,; int y). Get the value of a single pixel as a float. int; getWidth(). Get the image width. Method Details. getValue; float getValue(int x,; int y); Get the value of a single pixel as a float. Parameters:; x - x-coordinate of the pixel; y - y-coordinate of the pixel; Returns:. getWidth; int getWidth(); Get the image width. Returns:. getHeight; int getHeight(); Get the image height. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:469,Modifiability,extend,extends,469,". SimpleImages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of p",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:1133,Modifiability,inherit,inherited,1133,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html:1207,Security,hash,hashCode,1207,"d on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Class SimpleImages. java.lang.Object; qupath.lib.analysis.images.SimpleImages. public class SimpleImages; extends Object; Create SimpleImage instances for basic pixel processing. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleImages();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static SimpleModifiableImage; createFloatImage(float[] data,; int width,; int height). Create a SimpleImage backed by an existing float array of pixels. static SimpleModifiableImage; createFloatImage(int width,; int height). Create a SimpleImage backed by a float array of pixels. static float[]; getPixels(SimpleImage image,; boolean direct). Get the pixel values for the image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SimpleImages; public SimpleImages(). Method Details. getPixels; public static float[] getPixels(SimpleImage image,; boolean direct); Get the pixel values for the image. Parameters:; image - ; direct - if true, return the direct pixel buffer if possible. The caller should not modify this.; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(float[] data,; int width,; int height); Create a SimpleImage backed by an existing float array of pixels.; ; Pixels are stored in row-major order. Parameters:; data - ; width - ; height - ; Returns:. createFloatImage; public static SimpleModifiableImage createFloatImage(int width,; int height); Create a SimpleImage backed by a float array of pixels. Parameters:; width - ; height - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleImages.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleImages.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:494,Integrability,interface,interface,494,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:558,Integrability,interface,interface,558,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:993,Integrability,interface,interface,993,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:527,Modifiability,extend,extends,527,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:978,Modifiability,inherit,inherited,978,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html:597,Security,access,access,597,". SimpleModifiableImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.images; Interface SimpleModifiableImage. All Superinterfaces:; SimpleImage. All Known Implementing Classes:; PixelImageIJ. public interface SimpleModifiableImage; extends SimpleImage; A minimal interface to define a means to provide access to pixel values from a 2D, 1-channel image. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; float[]; getArray(boolean direct). Request the pixel array representing all the pixels in this image, returned row-wise. void; setValue(int x,; int y,; float val). Set the value of a single pixel. Methods inherited from interface qupath.lib.analysis.images.SimpleImage; getHeight, getValue, getWidth. Method Details. setValue; void setValue(int x,; int y,; float val); Set the value of a single pixel. Parameters:; x - x-coordinate of the pixel to set; y - y-coordinate of the pixel to set; val - new pixel value. getArray; float[] getArray(boolean direct); Request the pixel array representing all the pixels in this image, returned row-wise. Parameters:; direct - if true, the internal array will be returned if possible; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/SimpleModifiableImage.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html:461,Integrability,interface,interface,461,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html:506,Integrability,wrap,wrapper,506,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html:832,Integrability,wrap,wrapper,832,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html:1201,Integrability,wrap,wrapper,1201,". ArrayWrappers.ArrayWrapper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Interface ArrayWrappers.ArrayWrapper. Enclosing class:; ArrayWrappers. public static interface ArrayWrappers.ArrayWrapper; Simple wrapper for an array or list, enabling values to be returned as doubles. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDouble(int ind). Extract one entry from the array, converting to double as necessary. boolean; isIntegerWrapper(). Returns true if the array wrapper only supports integer values. int; size(). Number of entries in the array. Method Details. size; int size(); Number of entries in the array. Returns:. getDouble; double getDouble(int ind); Extract one entry from the array, converting to double as necessary. Parameters:; ind - ; Returns:. isIntegerWrapper; boolean isIntegerWrapper(); Returns true if the array wrapper only supports integer values. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.ArrayWrapper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:494,Integrability,wrap,wrappers,494,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:664,Integrability,interface,interface,664,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:711,Integrability,wrap,wrapper,711,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1048,Integrability,wrap,wrapper,1048,"kip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles.",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1201,Integrability,wrap,wrapper,1201,"ethod. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a w",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1335,Integrability,wrap,wrapper,1335,"tats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrapp",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1478,Integrability,wrap,wrapper,1478,"rs for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1623,Integrability,wrap,wrapper,1623,"escription; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byt",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2008,Integrability,wrap,wrapper,2008,"ayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2223,Integrability,wrap,wrapper,2223,"rapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535);. Parameters:; array - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2417,Integrability,wrap,wrapper,2417,"rapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535);. Parameters:; array - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2629,Integrability,wrap,wrapper,2629,"rapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535);. Parameters:; array - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2900,Integrability,wrap,wrapper,2900,"rapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535);. Parameters:; array - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:471,Modifiability,extend,extends,471,". ArrayWrappers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Cr",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1687,Modifiability,inherit,inherited,1687,"Wrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1094,Safety,predict,predictably,1094,"kip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class ArrayWrappers. java.lang.Object; qupath.lib.analysis.stats.ArrayWrappers. public class ArrayWrappers; extends Object; Simple wrappers for primitive arrays that returns values as doubles. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static interface ; ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles.",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:2054,Safety,predict,predictably,2054,"ayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Returns:. makeUnsignedShortArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedShortArrayWrapper(short[] array); Create a wrapper for a short array, returning values as doubles.; ; Shorts are treated as unsigned 16-bit values (0-65535",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html:1761,Security,hash,hashCode,1761,"rned as doubles. Constructor Summary; Constructors. Constructor; Description; ArrayWrappers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ArrayWrappers.ArrayWrapper; makeDoubleArrayWrapper(double[] array). Create a wrapper for a double array, returning values (predictably) as doubles. static ArrayWrappers.ArrayWrapper; makeFloatArrayWrapper(float[] array). Create a wrapper for a float array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeIntArrayWrapper(int[] array). Create a wrapper for an int array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedByteArrayWrapper(byte[] array). Create a wrapper for a byte array, returning values as doubles. static ArrayWrappers.ArrayWrapper; makeUnsignedShortArrayWrapper(short[] array). Create a wrapper for a short array, returning values as doubles. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ArrayWrappers; public ArrayWrappers(). Method Details. makeDoubleArrayWrapper; public static ArrayWrappers.ArrayWrapper makeDoubleArrayWrapper(double[] array); Create a wrapper for a double array, returning values (predictably) as doubles. Parameters:; array - ; Returns:. makeFloatArrayWrapper; public static ArrayWrappers.ArrayWrapper makeFloatArrayWrapper(float[] array); Create a wrapper for a float array, returning values as doubles. Parameters:; array - ; Returns:. makeIntArrayWrapper; public static ArrayWrappers.ArrayWrapper makeIntArrayWrapper(int[] array); Create a wrapper for an int array, returning values as doubles. Parameters:; array - ; Returns:. makeUnsignedByteArrayWrapper; public static ArrayWrappers.ArrayWrapper makeUnsignedByteArrayWrapper(byte[] array); Create a wrapper for a byte array, returning values as doubles.; ; Bytes are treated as unsigned 8-bit values (0-255);. Parameters:; array - ; Retur",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/ArrayWrappers.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:9493,Integrability,depend,depend,9493,"istogrammed. Returns:. getSum; public double getSum(); Get the sum of all the values being histogrammed. Returns:. nValues; public long nValues(); Number of values represented in the histogram (i.e. the length of the input array). Returns:. nMissingValues; public long nMissingValues(); Number of NaNs in the input array. Returns:. getBinIndexForValue; public int getBinIndexForValue(double value,; double binWidth); Get the index of the bin that should contain the specified value. ; This assumes that all bins have the same width (binWidth). Parameters:; value - ; binWidth - ; Returns:; bin index; See Also:. getBinIndexForValue(double). getMaxCount; public long getMaxCount(); Get the highest count found for any bin. Returns:; getMaxNormalizedCount(). getMaxNormalizedCount; public double getMaxNormalizedCount(); Get the highest count found for any bin, divided by the total counts across the entire histogram. Returns:; getMaxCount(). nBins; public int nBins(); Total number of histogram bins. Returns:. getCountSum; public long getCountSum(); Sum of all histogram counts. Returns:. toString; public String toString(). Overrides:; toString in class Object. getMeasurementValues; public static double[] getMeasurementValues(Collection<PathObject> pathObjects,; String measurementName); Extract a specific measurement for each PathObject in a collection, storing the result in an array.; ; The order of entries in the array will depend upon the iteration order of the collection (usually a list). Parameters:; pathObjects - ; measurementName - ; Returns:; See Also:. makeMeasurementHistogram(Collection, String, int). makeMeasurementHistogram; public static Histogram makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins); Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. Parameters:; pathObjects - ; measurementName - ; nBins - ; Returns:; See Also:. getMeasurementValues(Collection, String). ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:455,Modifiability,extend,extends,455,". Histogram (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class Histogram. java.lang.Object; qupath.lib.analysis.stats.Histogram. public class Histogram; extends Object; Class for storing histogram data & basic statistics.; ; TODO: Document int check - if all values are integers, the bin size cannot be < 1. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Histogram(double[] values,; int nBins). Create histogram from a double array, using a specified number of bins and the data min/max as the min/max edges. Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Histogram(float[] values,; int nBins). Create histogram from a float array, using a specified number of bins and the data min/max as the min/max edges. Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Histogram(int[] valuesArray,; int nBins,; double minEdge,; double maxEdge). Create a histogram from an array of values, optionally specifying the minimum & maximum values to include. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; getBinIndexForValue(double value,; double binWidth). Get the index of the bin that should contain the specified value. double; getBinLeftEdge(int ind). Get the lower edge for a specified bin. double; getBinRightEdge(int ind). Get the upper edge for a specified bin. double; getBinWidth(int ind). Get the width of a bin, which ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:3882,Modifiability,inherit,inherited,3882,"ch PathObject in a collection, storing the result in an array. double; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; v",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html:3956,Security,hash,hashCode,3956,"le; getMinValue(). Get the minimum of all the values being histogrammed. double; getNormalizedCountsForBin(int ind). Get the normalized histogram count for the specified bin. double; getStdDev(). Get the standard deviation of all the values being histogrammed. double; getSum(). Get the sum of all the values being histogrammed. double; getVariance(). Get the variance of all the values being histogrammed. boolean; isInteger(). Check if the histogram has been generated from integer values only. static Histogram; makeMeasurementHistogram(Collection<PathObject> pathObjects,; String measurementName,; int nBins). Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. int; nBins(). Total number of histogram bins. long; nMissingValues(). Number of NaNs in the input array. long; nValues(). Number of values represented in the histogram (i.e. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Histogram; public Histogram(double[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be computed; nBins - number of histogram bins (will be number of edges - 1); minEdge - the minimum (edge) value to include in the histogram, or Double.NaN (to use the data minimum); maxEdge - the maximum (edge) value to include in the histogram, or Double.NaN (to use the data maximum). Histogram; public Histogram(float[] valuesArray,; int nBins,; double minEdge,; double maxEdge); Create a histogram from an array of values, optionally specifying the minimum & maximum values to include.; NaNs will be ignored from the histogram. Parameters:; valuesArray - the data values from which the histogram should be com",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/Histogram.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/Histogram.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:919,Integrability,interface,interfaces,919,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:1067,Integrability,wrap,wrappers,1067,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:1164,Integrability,wrap,wrapper,1164,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html:394,Usability,simpl,simple,394,". qupath.lib.analysis.stats (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats. package qupath.lib.analysis.stats. Calculate simple statistics from arrays. Related Packages. Package; Description; qupath.lib.analysis. Classes to aid with analysis. qupath.lib.analysis.stats.survival. Helper classes for survival analysis. qupath.lib.analysis.algorithms. Classes and static methods adding reusable processing and analysis functionality. qupath.lib.analysis.features. Classes to help with calculating features. qupath.lib.analysis.heatmaps. Classes and static methods associated with generating and querying heatmaps. qupath.lib.analysis.images. Helper interfaces and methods to write pixel processing algorithms. All Classes and InterfacesInterfacesClasses. Class; Description; ArrayWrappers. Simple wrappers for primitive arrays that returns values as doubles. ArrayWrappers.ArrayWrapper. Simple wrapper for an array or list, enabling values to be returned as doubles. Histogram. Class for storing histogram data & basic statistics. RunningStatistics. Helper class for computing basic statistics from values as they are added. StatisticsHelper. Static methods for computing statistics from images, with or without a corresponding labeled image. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:658,Availability,mask,masked,658,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:3187,Availability,avail,available,3187,"ded. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. getMin; public double getMin(); Get the minimum non-NaN value added. Returns:; the minimum value, or NaN if no values are available. getMax; public double getMax(); Get the maximum non-NaN value added. Returns:; the maximum value, or NaN if no values are available. getRange; public double getRange(); Get the range, i.e. maximum - minimum values. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:3320,Availability,avail,available,3320,"ded. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. getMin; public double getMin(); Get the minimum non-NaN value added. Returns:; the minimum value, or NaN if no values are available. getMax; public double getMax(); Get the maximum non-NaN value added. Returns:; the maximum value, or NaN if no values are available. getRange; public double getRange(); Get the range, i.e. maximum - minimum values. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:487,Modifiability,extend,extends,487,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:1991,Modifiability,inherit,inherited,1991,"difier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the sta",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:2065,Security,hash,hashCode,2065,"ructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. ge",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:912,Testability,log,logged,912,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1681,Deployability,update,updateRunningStatistics,1681,"Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RunningStatistics; computeRunningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics compu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:2241,Deployability,update,updateRunningStatistics,2241,"reateRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList); Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size().; ; The statistics for pixels in img corresponding to integer value label in imgLabels ; are stored within statsList.get(label-1). Parameters:; img - ; imgLabels - ; statsList - . getQuartiles; public static double[] getQuartiles(d",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:2285,Deployability,update,updateRunningStatistics,2285,"reateRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList); Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size().; ; The statistics for pixels in img corresponding to integer value label in imgLabels ; are stored within statsList.get(label-1). Parameters:; img - ; imgLabels - ; statsList - . getQuartiles; public static double[] getQuartiles(d",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:483,Modifiability,extend,extends,483,". StatisticsHelper (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class StatisticsHelper. java.lang.Object; qupath.lib.analysis.stats.StatisticsHelper. public class StatisticsHelper; extends Object; Static methods for computing statistics from images, with or without a corresponding labeled image. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; StatisticsHelper();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RunningStatistics; computeRunningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper;",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1832,Modifiability,inherit,inherited,1832,"unningStatistics(double[] values). Create a RunningStatistics object using all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; val",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html:1906,Security,hash,hashCode,1906,"ng all the values from a specified array. static RunningStatistics; computeRunningStatistics(SimpleImage img). Compute running statistics using all pixels from a SimpleImage. static void; computeRunningStatistics(SimpleImage img,; SimpleImage imgLabels,; List<RunningStatistics> statsList). Calculate RunningStatistics for each label > 0 in an image, up to a maximum of statsList.size(). static List<RunningStatistics>; createRunningStatisticsList(int n). Create a list of n (empty) RunningStatistics objects. static double[]; getQuartiles(double[] scores). Determine thresholds for dividing an array of double values into quartiles. static double[]; getTertiles(double[] scores). Determine thresholds for dividing an array of double values into tertiles. static void; updateRunningStatistics(RunningStatistics stats,; SimpleImage img). Add all pixels from a SimpleImage to an existing RunningStatistics object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. StatisticsHelper; public StatisticsHelper(). Method Details. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(SimpleImage img); Compute running statistics using all pixels from a SimpleImage. Parameters:; img - ; Returns:. updateRunningStatistics; public static void updateRunningStatistics(RunningStatistics stats,; SimpleImage img); Add all pixels from a SimpleImage to an existing RunningStatistics object. Parameters:; stats - ; img - . createRunningStatisticsList; public static List<RunningStatistics> createRunningStatisticsList(int n); Create a list of n (empty) RunningStatistics objects. Parameters:; n - ; Returns:. computeRunningStatistics; public static RunningStatistics computeRunningStatistics(double[] values); Create a RunningStatistics object using all the values from a specified array. Parameters:; values - ; Returns:. computeRunningStatistics; public static void computeRu",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/StatisticsHelper.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:497,Modifiability,extend,extends,497,". KaplanMeierData (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData. public class KaplanMeierData; extends Object; Structure used to store data related to generating Kaplan-Meier survival curves. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. Constructor Summary; Constructors. Constructor; Description; KaplanMeierData(String name). Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events). Create a new KaplanMeierData object with the specified display name and events. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; KaplanMeierData; addEvent(double time,; boolean censored). Insert a new event. KaplanMeierData; addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing t",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:2343,Modifiability,inherit,inherited,2343,"ta.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object with the specified display name. Parameters:; name - . KaplanMeierData; public KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events); Create a new KaplanMeierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getNam",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:1574,Safety,risk,risk,1574,"survival curves. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. Constructor Summary; Constructors. Constructor; Description; KaplanMeierData(String name). Create a new KaplanMeierData object with the specified display name. KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events). Create a new KaplanMeierData object with the specified display name and events. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; KaplanMeierData; addEvent(double time,; boolean censored). Insert a new event. KaplanMeierData; addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events). Add a collection of events. double[]; getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object wi",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:4154,Safety,risk,risk,4154,"ierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getName(); Get the name of this data, generally used for display. Returns:. isEmpty; public boolean isEmpty(); Returns true if there are no events included. Returns:. getEvents; public List<KaplanMeierData.KaplanMeierEvent> getEvents(); Get an unmodifiable list of all events. Returns:. getAllTimes; public double[] getAllTimes(); Retrieve a sorted array containing all times where 'something happened' (observed or censored). Returns:; See Also:. getStatistic(). getStatistic; public double[] getStatistic(); Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). Returns:; See Also:. getAllTimes(). getMaxTime; public double getMaxTime(); Get the time of the last event, or -1 if there are no events. Returns:. getAtRisk; public int getAtRisk(double t); Get the number at risk at a specified time. This includes events that occur precisely at the time specified. Parameters:; t - ; Returns:. getEventsAtTime; public int getEventsAtTime(double t); Get the number of events at a specified time (exactly). Parameters:; t - ; Returns:. nEvents; public int nEvents(); Get the number of events, either observed or censored. Returns:. nObserved; public int nObserved(); Get the number of observed (not censored) events. Returns:. nCensored; public int nCensored(); Get the number of censored events. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html:2417,Security,hash,hashCode,2417," getAllTimes(). Retrieve a sorted array containing all times where 'something happened' (observed or censored). int; getAtRisk(double t). Get the number at risk at a specified time. List<KaplanMeierData.KaplanMeierEvent>; getEvents(). Get an unmodifiable list of all events. int; getEventsAtTime(double t). Get the number of events at a specified time (exactly). double; getMaxTime(). Get the time of the last event, or -1 if there are no events. String; getName(). Get the name of this data, generally used for display. double[]; getStatistic(). Retrieve a sorted array containing the value corresponding to a time from getAllTimes(). boolean; isEmpty(). Returns true if there are no events included. int; nCensored(). Get the number of censored events. int; nEvents(). Get the number of events, either observed or censored. int; nObserved(). Get the number of observed (not censored) events. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. KaplanMeierData; public KaplanMeierData(String name); Create a new KaplanMeierData object with the specified display name. Parameters:; name - . KaplanMeierData; public KaplanMeierData(String name,; Collection<KaplanMeierData.KaplanMeierEvent> events); Create a new KaplanMeierData object with the specified display name and events. Parameters:; name - ; events - . Method Details. addEvents; public KaplanMeierData addEvents(Collection<KaplanMeierData.KaplanMeierEvent> events); Add a collection of events. Parameters:; events - ; Returns:. addEvent; public KaplanMeierData addEvent(double time,; boolean censored); Insert a new event. Parameters:; time - the time of the event (units are not specified, but should be consistent for all events added); censored - if true the event is censored, if false the event is observed.; Returns:. getName; public String getName(); Get the name of this data, generally used for display. Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:1628,Integrability,interface,interface,1628,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:682,Modifiability,extend,extends,682,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:1164,Modifiability,inherit,inherited,1164,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html:1238,Security,hash,hashCode,1238,". KaplanMeierData.KaplanMeierEvent (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class KaplanMeierData.KaplanMeierEvent. java.lang.Object; qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. All Implemented Interfaces:; Comparable<KaplanMeierData.KaplanMeierEvent>. Enclosing class:; KaplanMeierData. public static class KaplanMeierData.KaplanMeierEvent; extends Object; implements Comparable<KaplanMeierData.KaplanMeierEvent>; Simple class to store event time and censored flag. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(KaplanMeierData.KaplanMeierEvent event);  ; double; getTimeToEvent(). Get the stored time to event (units are unspecified). boolean; isCensored(). Returns true if the event should be considered right-censored. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getTimeToEvent; public double getTimeToEvent(); Get the stored time to event (units are unspecified). Returns:. isCensored; public boolean isCensored(); Returns true if the event should be considered right-censored. Returns:. compareTo; public int compareTo(KaplanMeierData.KaplanMeierEvent event). Specified by:; compareTo in interface Comparable<KaplanMeierData.KaplanMeierEvent>. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/KaplanMeierData.KaplanMeierEvent.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:481,Modifiability,extend,extends,481,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1074,Modifiability,inherit,inherited,1074,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1148,Security,hash,hashCode,1148,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:521,Testability,log,log-rank,521,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:530,Testability,test,test,530,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:727,Testability,log,log,727,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:736,Testability,test,test,736,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1051,Testability,log,log-rank,1051,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1060,Testability,test,test,1060,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1434,Testability,log,log-rank,1434,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html:1443,Testability,test,test,1443,". LogRankTest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest. public class LogRankTest; extends Object; Helper class to apply a log-rank test. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. Constructor Summary; Constructors. Constructor; Description; LogRankTest();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static LogRankTest.LogRankResult; computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2). Compare KaplanMeier objects using log-rank test. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogRankTest; public LogRankTest(). Method Details. computeLogRankTest; public static LogRankTest.LogRankResult computeLogRankTest(KaplanMeierData km1,; KaplanMeierData km2); Compare KaplanMeier objects using log-rank test. Parameters:; km1 - ; km2 - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:575,Modifiability,extend,extends,575,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1300,Modifiability,inherit,inherited,1300,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:824,Safety,hazard,hazard,824,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:906,Safety,hazard,hazard,906,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1008,Safety,hazard,hazard,1008,"est.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval.",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1194,Safety,hazard,hazard,1194,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1573,Safety,hazard,hazard,1573,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1849,Safety,hazard,hazard,1849,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1978,Safety,hazard,hazard,1978,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:2127,Safety,hazard,hazard,2127,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1374,Security,hash,hashCode,1374,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:639,Testability,log,log,639,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:648,Testability,test,test,648,". LogRankTest.LogRankResult (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1162,Testability,log,log-rank,1162,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1171,Testability,test,test,1171,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1541,Testability,log,log-rank,1541,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html:1550,Testability,test,test,1550,"mmary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats.survival; Class LogRankTest.LogRankResult. java.lang.Object; qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Enclosing class:; LogRankTest. public static class LogRankTest.LogRankResult; extends Object; Simple structure used to manage the result of a log rank test. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getHazardRatio(). Get the calculated hazard ratio. double; getHazardRatioLowerConfidence(). Get the lower bound of the hazard ratio confidence interval. double; getHazardRatioUpperConfidence(). Get the upper bound of the hazard ratio confidence interval. double; getPValue(). Get the calculated p-value. String; getResultString(). Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. boolean; isValid(). Returns true if the p-value is not NaN. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getResultString; public String getResultString(); Returns a presentable representation of the log-rank test result, including hazard ratio and confidence interval. Returns:. isValid; public boolean isValid(); Returns true if the p-value is not NaN. Returns:. getPValue; public double getPValue(); Get the calculated p-value. Returns:. getHazardRatio; public double getHazardRatio(); Get the calculated hazard ratio. Returns:. getHazardRatioLowerConfidence; public double getHazardRatioLowerConfidence(); Get the lower bound of the hazard ratio confidence interval. Returns:. getHazardRatioUpperConfidence; public double getHazardRatioUpperConfidence(); Get the upper bound of the hazard ratio confidence interval. Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/LogRankTest.LogRankResult.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:807,Testability,log,log-rank,807,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:816,Testability,test,test,816,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:897,Testability,log,log,897,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:906,Testability,test,test,906,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html:526,Usability,simpl,simple,526,. qupath.lib.analysis.stats.survival (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.analysis.stats.survival. package qupath.lib.analysis.stats.survival. Helper classes for survival analysis. Related Packages. Package; Description; qupath.lib.analysis.stats. Calculate simple statistics from arrays. Classes. Class; Description; KaplanMeierData. Structure used to store data related to generating Kaplan-Meier survival curves. KaplanMeierData.KaplanMeierEvent. Simple class to store event time and censored flag. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. ,MatchSource.WIKI,javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/survival/package-summary.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:557,Integrability,depend,dependencies,557,". AffineTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AffineTransforms. java.lang.Object; qupath.lib.awt.common.AffineTransforms. public class AffineTransforms; extends Object; Helper class for working with affine transforms.; ; QuPath's core dependencies have two affine transform implementations: AffineTransform from Java itself ; and AffineTransformation from Java Topology Suite.; Inconveniently, both are initialized from flattened double arrays using a different ordering (assuming ; columns-first or rows-first) - so it is easy to make mistakes.; ; QuPath primarily uses AffineTransform from Java.; This class exists to make creating a transform more explicit, and facilitate conversion when needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AffineTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AffineTransform; from2D(double[][] mat). Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. static AffineTransform; fromColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static Affin",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:475,Modifiability,extend,extends,475,". AffineTransforms (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AffineTransforms. java.lang.Object; qupath.lib.awt.common.AffineTransforms. public class AffineTransforms; extends Object; Helper class for working with affine transforms.; ; QuPath's core dependencies have two affine transform implementations: AffineTransform from Java itself ; and AffineTransformation from Java Topology Suite.; Inconveniently, both are initialized from flattened double arrays using a different ordering (assuming ; columns-first or rows-first) - so it is easy to make mistakes.; ; QuPath primarily uses AffineTransform from Java.; This class exists to make creating a transform more explicit, and facilitate conversion when needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; AffineTransforms();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static AffineTransform; from2D(double[][] mat). Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. static AffineTransform; fromColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static Affin",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:2404,Modifiability,inherit,inherited,2404,"mColumns(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed t",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html:2478,Security,hash,hashCode,2478,"ith 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. static AffineTransform; fromJTS(AffineTransformation transform). Create a Java affine transform from a Java Topology Suite representation. static AffineTransform; fromRows(double... mat). Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. static AffineTransform; fromScale(double scale). Create an affine transform representing scaling, using the same scale for x and y. static AffineTransform; fromScale(double scaleX,; double scaleY). Create an affine transform representing scaling, optionally using a different scale for x and y. static AffineTransform; identity(). Create an affine transform representing the identity transform. static AffineTransformation; toJTS(AffineTransform transform). Create a Java Topology Suite affine transformation from a Java affine transform. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. AffineTransforms; public AffineTransforms(). Method Details. from2D; public static AffineTransform from2D(double[][] mat); throws IllegalArgumentException; Create an affine transform from a 2x3 double array, or 3x3 if the last ; row has the values [0, 0, 1] only. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong shape. fromRows; public static AffineTransform fromRows(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 1, 2], [3, 4, 5]]. Parameters:; mat - ; Returns:; Throws:; IllegalArgumentException - if the input has the wrong length. fromColumns; public static AffineTransform fromColumns(double... mat); throws IllegalArgumentException; Create an affine transform from a flat matrix with 6 elements, assumed to be in the order ; [[0, 2, 4], [1, 3, 5]]. Parameters:; mat - ; Returns",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AffineTransforms.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AffineTransforms.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:449,Modifiability,extend,extends,449,". AwtTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class AwtTools. java.lang.Object; qupath.lib.awt.common.AwtTools. public final class AwtTools; extends Object; A collection of static methods useful when working with AWT shapes and ImageRegions. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AwtTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:1575,Modifiability,inherit,inherited,1575,"mmary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBound",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AwtTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html:1649,Security,hash,hashCode,1649,"hod; Description; static Rectangle; getBounds(ImageRegion region). Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ImageRegion region,; Rectangle rect). Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. static Rectangle; getBounds(ROI roi). Create a Rectangle corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi). Create a Rectangle2D corresponding to bounding box of a ROI. static Rectangle2D; getBounds2D(ROI roi,; Rectangle2D rect). Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI. static ImageRegion; getImageRegion(Rectangle rectangle,; int z,; int t). Create an ImageRegion corresponding to a specified Rectangle bounding box. static ImageRegion; getImageRegion(Shape shape,; int z,; int t). Create an ImageRegion corresponding to a the bounding box of a Shape. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getBounds; public static Rectangle getBounds(ImageRegion region); Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. Parameters:; region - ; Returns:. getBounds; public static Rectangle getBounds(ImageRegion region,; Rectangle rect); Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion.; ; If no Rectangle is provided, a new one will be created. Parameters:; region - ; rect - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi); Create a Rectangle2D corresponding to bounding box of a ROI. Parameters:; roi - ; Returns:. getBounds2D; public static Rectangle2D getBounds2D(ROI roi,; Rectangle2D rect); Set the bounds of an existing Rectangle2D to the x,y,width,height of a ROI.; ; If no Rectangle2D is provided, a new one will be created. Parameters:; roi - ; rect - ; Returns:. getBounds; public static Rectangle getBounds(ROI roi); Create a Rectangle corres",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/AwtTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/AwtTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:908,Availability,mask,mask,908,". BufferedImageTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaste",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:1146,Availability,mask,mask,1146,"ackage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2286,Availability,down,downsample,2286,"er,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImag",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2347,Availability,mask,mask,2347,"nds) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if n",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2516,Availability,mask,mask,2516,"rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType)",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2599,Availability,down,downsample,2599,"hannels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8b",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2627,Availability,mask,mask,2627," argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represen",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2731,Availability,down,downsample,2731,"ong[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImag",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2757,Availability,mask,mask,2757,"] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpo",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2924,Availability,down,downsample,2924,"or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear int",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2985,Availability,mask,mask,2985,"ong[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. st",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4393,Availability,mask,mask,4393,"edImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for ma",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4527,Availability,mask,mask,4527," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4572,Availability,mask,mask,4572," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4598,Availability,mask,mask,4598," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4630,Availability,mask,mask,4630," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4690,Availability,down,downsample,4690," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4801,Availability,down,downsample,4801," have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4827,Availability,mask,mask,4827," have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4897,Availability,down,downsample,4897,"tValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5055,Availability,down,downsample,5055," Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ;",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5116,Availability,mask,mask,5116," Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ;",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5250,Availability,mask,mask,5250,"t,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrig",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5295,Availability,mask,mask,5295,"t,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrig",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5321,Availability,mask,mask,5321,"t,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrig",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5404,Availability,mask,mask,5404,"t,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrig",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5488,Availability,mask,mask,5488," 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5495,Availability,down,downsample,5495,"mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static B",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5508,Availability,down,downsample,5508,"mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static B",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5553,Availability,mask,mask,5553,"mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static B",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5674,Availability,down,downsample,5674,"igin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5702,Availability,mask,mask,5702,"igin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5776,Availability,down,downsample,5776,"ROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5942,Availability,down,downsample,5942,"turns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same r",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6003,Availability,mask,mask,6003,"turns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same r",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6137,Availability,mask,mask,6137,"ill be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new)",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6182,Availability,mask,mask,6182,"ill be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new)",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6212,Availability,mask,mask,6212,"ill be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new)",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6295,Availability,mask,mask,6295,"ill be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new)",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6379,Availability,mask,mask,6379," x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Imag",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6386,Availability,down,downsample,6386," - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6399,Availability,down,downsample,6399," - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6444,Availability,mask,mask,6444," - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10386,Availability,mask,mask,10386,"olation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle de",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10447,Availability,mask,mask,10447,"olation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle de",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11319,Availability,mask,mask,11319,"a type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11380,Availability,mask,mask,11380,"a type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11528,Availability,mask,mask,11528,"mputeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHi",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11633,Availability,mask,masked,11633,"ogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; Writab",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:12329,Availability,mask,mask,12329,"th 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can g",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:12390,Availability,mask,mask,12390,"th 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can g",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13099,Availability,mask,mask,13099,"m if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(W",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13160,Availability,mask,mask,13160,"m if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(W",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13307,Availability,mask,mask,13307,"k - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaste",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13412,Availability,mask,masked,13412,"e skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the n",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13788,Availability,mask,mask,13788,"ate a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with va",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14024,Availability,mask,mask,14024,"l if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to re",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14085,Availability,mask,mask,14085,"l if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to re",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14480,Availability,mask,mask,14480,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14742,Availability,mask,mask,14742,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14803,Availability,mask,mask,14803,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14950,Availability,mask,mask,14950,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:15055,Availability,mask,masked,15055,"tional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster). ",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10483,Deployability,update,updated,10483,"olation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle de",MatchSource.WIKI,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,qupath,qupath,v0.5.1,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html
